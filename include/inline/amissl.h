#ifndef _INLINE_AMISSL_H
#define _INLINE_AMISSL_H

#ifndef CLIB_AMISSL_PROTOS_H
#define CLIB_AMISSL_PROTOS_H
#endif

#ifndef  EXEC_TYPES_H
#include <exec/types.h>
#endif
#ifndef  AMISSL_AMISSL_H
#include <amissl/amissl.h>
#endif

#ifndef AMISSL_BASE_NAME
#define AMISSL_BASE_NAME AmiSSLBase
#endif

#define InitAmiSSLA(tagList) ({ \
  struct TagItem * _InitAmiSSLA_tagList = (tagList); \
  ({ \
  register char * _InitAmiSSLA__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((long (*)(char * __asm("a6"), struct TagItem * __asm("a0"))) \
  (_InitAmiSSLA__bn - 36))(_InitAmiSSLA__bn, _InitAmiSSLA_tagList); \
});})

#ifndef NO_INLINE_STDARG
static __inline__ long ___InitAmiSSL(struct Library * AmiSSLBase, Tag tagList, ...)
{
  return InitAmiSSLA((struct TagItem *) &tagList);
}

#define InitAmiSSL(tags...) ___InitAmiSSL(AMISSL_BASE_NAME, tags)
#endif

#define CleanupAmiSSLA(tagList) ({ \
  struct TagItem * _CleanupAmiSSLA_tagList = (tagList); \
  ({ \
  register char * _CleanupAmiSSLA__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((long (*)(char * __asm("a6"), struct TagItem * __asm("a0"))) \
  (_CleanupAmiSSLA__bn - 42))(_CleanupAmiSSLA__bn, _CleanupAmiSSLA_tagList); \
});})

#ifndef NO_INLINE_STDARG
static __inline__ long ___CleanupAmiSSL(struct Library * AmiSSLBase, Tag tagList, ...)
{
  return CleanupAmiSSLA((struct TagItem *) &tagList);
}

#define CleanupAmiSSL(tags...) ___CleanupAmiSSL(AMISSL_BASE_NAME, tags)
#endif

#define IsCipherAvailable(cipher) ({ \
  long _IsCipherAvailable_cipher = (cipher); \
  ({ \
  register char * _IsCipherAvailable__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((long (*)(char * __asm("a6"), long __asm("d0"))) \
  (_IsCipherAvailable__bn - 48))(_IsCipherAvailable__bn, _IsCipherAvailable_cipher); \
});})

#define ASN1_TYPE_new() ({ \
  register char * _ASN1_TYPE_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((ASN1_TYPE * (*)(char * __asm("a6"))) \
  (_ASN1_TYPE_new__bn - 102))(_ASN1_TYPE_new__bn); \
})

#define ASN1_TYPE_free(a) ({ \
  ASN1_TYPE * _ASN1_TYPE_free_a = (a); \
  ({ \
  register char * _ASN1_TYPE_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), ASN1_TYPE * __asm("a0"))) \
  (_ASN1_TYPE_free__bn - 108))(_ASN1_TYPE_free__bn, _ASN1_TYPE_free_a); \
});})

#define d2i_ASN1_TYPE(a, in, len) ({ \
  ASN1_TYPE ** _d2i_ASN1_TYPE_a = (a); \
  unsigned char ** _d2i_ASN1_TYPE_in = (in); \
  long _d2i_ASN1_TYPE_len = (len); \
  ({ \
  register char * _d2i_ASN1_TYPE__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((ASN1_TYPE * (*)(char * __asm("a6"), ASN1_TYPE ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_ASN1_TYPE__bn - 114))(_d2i_ASN1_TYPE__bn, _d2i_ASN1_TYPE_a, _d2i_ASN1_TYPE_in, _d2i_ASN1_TYPE_len); \
});})

#define i2d_ASN1_TYPE(a, out) ({ \
  ASN1_TYPE * _i2d_ASN1_TYPE_a = (a); \
  unsigned char ** _i2d_ASN1_TYPE_out = (out); \
  ({ \
  register char * _i2d_ASN1_TYPE__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), ASN1_TYPE * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_ASN1_TYPE__bn - 120))(_i2d_ASN1_TYPE__bn, _i2d_ASN1_TYPE_a, _i2d_ASN1_TYPE_out); \
});})

#define ASN1_ANY_it() ({ \
  register char * _ASN1_ANY_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_ASN1_ANY_it__bn - 126))(_ASN1_ANY_it__bn); \
})

#define ASN1_TYPE_get(a) ({ \
  ASN1_TYPE * _ASN1_TYPE_get_a = (a); \
  ({ \
  register char * _ASN1_TYPE_get__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), ASN1_TYPE * __asm("a0"))) \
  (_ASN1_TYPE_get__bn - 132))(_ASN1_TYPE_get__bn, _ASN1_TYPE_get_a); \
});})

#define ASN1_TYPE_set(a, type, value) ({ \
  ASN1_TYPE * _ASN1_TYPE_set_a = (a); \
  LONG _ASN1_TYPE_set_type = (type); \
  void * _ASN1_TYPE_set_value = (value); \
  ({ \
  register char * _ASN1_TYPE_set__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), ASN1_TYPE * __asm("a0"), LONG __asm("d0"), void * __asm("a1"))) \
  (_ASN1_TYPE_set__bn - 138))(_ASN1_TYPE_set__bn, _ASN1_TYPE_set_a, _ASN1_TYPE_set_type, _ASN1_TYPE_set_value); \
});})

#define ASN1_OBJECT_new() ({ \
  register char * _ASN1_OBJECT_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((ASN1_OBJECT * (*)(char * __asm("a6"))) \
  (_ASN1_OBJECT_new__bn - 144))(_ASN1_OBJECT_new__bn); \
})

#define ASN1_OBJECT_free(a) ({ \
  ASN1_OBJECT * _ASN1_OBJECT_free_a = (a); \
  ({ \
  register char * _ASN1_OBJECT_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), ASN1_OBJECT * __asm("a0"))) \
  (_ASN1_OBJECT_free__bn - 150))(_ASN1_OBJECT_free__bn, _ASN1_OBJECT_free_a); \
});})

#define i2d_ASN1_OBJECT(a, pp) ({ \
  ASN1_OBJECT * _i2d_ASN1_OBJECT_a = (a); \
  unsigned char ** _i2d_ASN1_OBJECT_pp = (pp); \
  ({ \
  register char * _i2d_ASN1_OBJECT__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), ASN1_OBJECT * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_ASN1_OBJECT__bn - 156))(_i2d_ASN1_OBJECT__bn, _i2d_ASN1_OBJECT_a, _i2d_ASN1_OBJECT_pp); \
});})

#define c2i_ASN1_OBJECT(a, pp, length) ({ \
  ASN1_OBJECT ** _c2i_ASN1_OBJECT_a = (a); \
  unsigned char ** _c2i_ASN1_OBJECT_pp = (pp); \
  long _c2i_ASN1_OBJECT_length = (length); \
  ({ \
  register char * _c2i_ASN1_OBJECT__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((ASN1_OBJECT * (*)(char * __asm("a6"), ASN1_OBJECT ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_c2i_ASN1_OBJECT__bn - 162))(_c2i_ASN1_OBJECT__bn, _c2i_ASN1_OBJECT_a, _c2i_ASN1_OBJECT_pp, _c2i_ASN1_OBJECT_length); \
});})

#define d2i_ASN1_OBJECT(a, pp, length) ({ \
  ASN1_OBJECT ** _d2i_ASN1_OBJECT_a = (a); \
  unsigned char ** _d2i_ASN1_OBJECT_pp = (pp); \
  long _d2i_ASN1_OBJECT_length = (length); \
  ({ \
  register char * _d2i_ASN1_OBJECT__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((ASN1_OBJECT * (*)(char * __asm("a6"), ASN1_OBJECT ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_ASN1_OBJECT__bn - 168))(_d2i_ASN1_OBJECT__bn, _d2i_ASN1_OBJECT_a, _d2i_ASN1_OBJECT_pp, _d2i_ASN1_OBJECT_length); \
});})

#define ASN1_OBJECT_it() ({ \
  register char * _ASN1_OBJECT_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_ASN1_OBJECT_it__bn - 174))(_ASN1_OBJECT_it__bn); \
})

#define ASN1_STRING_new() ({ \
  register char * _ASN1_STRING_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((ASN1_STRING * (*)(char * __asm("a6"))) \
  (_ASN1_STRING_new__bn - 180))(_ASN1_STRING_new__bn); \
})

#define ASN1_STRING_free(a) ({ \
  ASN1_STRING * _ASN1_STRING_free_a = (a); \
  ({ \
  register char * _ASN1_STRING_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), ASN1_STRING * __asm("a0"))) \
  (_ASN1_STRING_free__bn - 186))(_ASN1_STRING_free__bn, _ASN1_STRING_free_a); \
});})

#define ASN1_STRING_dup(a) ({ \
  ASN1_STRING * _ASN1_STRING_dup_a = (a); \
  ({ \
  register char * _ASN1_STRING_dup__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((ASN1_STRING * (*)(char * __asm("a6"), ASN1_STRING * __asm("a0"))) \
  (_ASN1_STRING_dup__bn - 192))(_ASN1_STRING_dup__bn, _ASN1_STRING_dup_a); \
});})

#define ASN1_STRING_type_new(type) ({ \
  LONG _ASN1_STRING_type_new_type = (type); \
  ({ \
  register char * _ASN1_STRING_type_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((ASN1_STRING * (*)(char * __asm("a6"), LONG __asm("d0"))) \
  (_ASN1_STRING_type_new__bn - 198))(_ASN1_STRING_type_new__bn, _ASN1_STRING_type_new_type); \
});})

#define ASN1_STRING_cmp(a, b) ({ \
  ASN1_STRING * _ASN1_STRING_cmp_a = (a); \
  ASN1_STRING * _ASN1_STRING_cmp_b = (b); \
  ({ \
  register char * _ASN1_STRING_cmp__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), ASN1_STRING * __asm("a0"), ASN1_STRING * __asm("a1"))) \
  (_ASN1_STRING_cmp__bn - 204))(_ASN1_STRING_cmp__bn, _ASN1_STRING_cmp_a, _ASN1_STRING_cmp_b); \
});})

#define ASN1_STRING_set(str, data, len) ({ \
  ASN1_STRING * _ASN1_STRING_set_str = (str); \
  const void * _ASN1_STRING_set_data = (data); \
  LONG _ASN1_STRING_set_len = (len); \
  ({ \
  register char * _ASN1_STRING_set__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), ASN1_STRING * __asm("a0"), const void * __asm("a1"), LONG __asm("d0"))) \
  (_ASN1_STRING_set__bn - 210))(_ASN1_STRING_set__bn, _ASN1_STRING_set_str, _ASN1_STRING_set_data, _ASN1_STRING_set_len); \
});})

#define ASN1_STRING_length(x) ({ \
  ASN1_STRING * _ASN1_STRING_length_x = (x); \
  ({ \
  register char * _ASN1_STRING_length__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), ASN1_STRING * __asm("a0"))) \
  (_ASN1_STRING_length__bn - 216))(_ASN1_STRING_length__bn, _ASN1_STRING_length_x); \
});})

#define ASN1_STRING_length_set(x, n) ({ \
  ASN1_STRING * _ASN1_STRING_length_set_x = (x); \
  LONG _ASN1_STRING_length_set_n = (n); \
  ({ \
  register char * _ASN1_STRING_length_set__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), ASN1_STRING * __asm("a0"), LONG __asm("d0"))) \
  (_ASN1_STRING_length_set__bn - 222))(_ASN1_STRING_length_set__bn, _ASN1_STRING_length_set_x, _ASN1_STRING_length_set_n); \
});})

#define ASN1_STRING_type(x) ({ \
  ASN1_STRING * _ASN1_STRING_type_x = (x); \
  ({ \
  register char * _ASN1_STRING_type__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), ASN1_STRING * __asm("a0"))) \
  (_ASN1_STRING_type__bn - 228))(_ASN1_STRING_type__bn, _ASN1_STRING_type_x); \
});})

#define ASN1_STRING_data(x) ({ \
  ASN1_STRING * _ASN1_STRING_data_x = (x); \
  ({ \
  register char * _ASN1_STRING_data__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((unsigned char * (*)(char * __asm("a6"), ASN1_STRING * __asm("a0"))) \
  (_ASN1_STRING_data__bn - 234))(_ASN1_STRING_data__bn, _ASN1_STRING_data_x); \
});})

#define ASN1_BIT_STRING_new() ({ \
  register char * _ASN1_BIT_STRING_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((ASN1_BIT_STRING * (*)(char * __asm("a6"))) \
  (_ASN1_BIT_STRING_new__bn - 240))(_ASN1_BIT_STRING_new__bn); \
})

#define ASN1_BIT_STRING_free(a) ({ \
  ASN1_BIT_STRING * _ASN1_BIT_STRING_free_a = (a); \
  ({ \
  register char * _ASN1_BIT_STRING_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), ASN1_BIT_STRING * __asm("a0"))) \
  (_ASN1_BIT_STRING_free__bn - 246))(_ASN1_BIT_STRING_free__bn, _ASN1_BIT_STRING_free_a); \
});})

#define d2i_ASN1_BIT_STRING(a, in, len) ({ \
  ASN1_BIT_STRING ** _d2i_ASN1_BIT_STRING_a = (a); \
  unsigned char ** _d2i_ASN1_BIT_STRING_in = (in); \
  long _d2i_ASN1_BIT_STRING_len = (len); \
  ({ \
  register char * _d2i_ASN1_BIT_STRING__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((ASN1_BIT_STRING * (*)(char * __asm("a6"), ASN1_BIT_STRING ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_ASN1_BIT_STRING__bn - 252))(_d2i_ASN1_BIT_STRING__bn, _d2i_ASN1_BIT_STRING_a, _d2i_ASN1_BIT_STRING_in, _d2i_ASN1_BIT_STRING_len); \
});})

#define i2d_ASN1_BIT_STRING(a, out) ({ \
  ASN1_BIT_STRING * _i2d_ASN1_BIT_STRING_a = (a); \
  unsigned char ** _i2d_ASN1_BIT_STRING_out = (out); \
  ({ \
  register char * _i2d_ASN1_BIT_STRING__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), ASN1_BIT_STRING * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_ASN1_BIT_STRING__bn - 258))(_i2d_ASN1_BIT_STRING__bn, _i2d_ASN1_BIT_STRING_a, _i2d_ASN1_BIT_STRING_out); \
});})

#define ASN1_BIT_STRING_it() ({ \
  register char * _ASN1_BIT_STRING_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_ASN1_BIT_STRING_it__bn - 264))(_ASN1_BIT_STRING_it__bn); \
})

#define i2c_ASN1_BIT_STRING(a, pp) ({ \
  ASN1_BIT_STRING * _i2c_ASN1_BIT_STRING_a = (a); \
  unsigned char ** _i2c_ASN1_BIT_STRING_pp = (pp); \
  ({ \
  register char * _i2c_ASN1_BIT_STRING__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), ASN1_BIT_STRING * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2c_ASN1_BIT_STRING__bn - 270))(_i2c_ASN1_BIT_STRING__bn, _i2c_ASN1_BIT_STRING_a, _i2c_ASN1_BIT_STRING_pp); \
});})

#define c2i_ASN1_BIT_STRING(a, pp, length) ({ \
  ASN1_BIT_STRING ** _c2i_ASN1_BIT_STRING_a = (a); \
  unsigned char ** _c2i_ASN1_BIT_STRING_pp = (pp); \
  long _c2i_ASN1_BIT_STRING_length = (length); \
  ({ \
  register char * _c2i_ASN1_BIT_STRING__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((ASN1_BIT_STRING * (*)(char * __asm("a6"), ASN1_BIT_STRING ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_c2i_ASN1_BIT_STRING__bn - 276))(_c2i_ASN1_BIT_STRING__bn, _c2i_ASN1_BIT_STRING_a, _c2i_ASN1_BIT_STRING_pp, _c2i_ASN1_BIT_STRING_length); \
});})

#define ASN1_BIT_STRING_set(a, d, length) ({ \
  ASN1_BIT_STRING * _ASN1_BIT_STRING_set_a = (a); \
  unsigned char * _ASN1_BIT_STRING_set_d = (d); \
  LONG _ASN1_BIT_STRING_set_length = (length); \
  ({ \
  register char * _ASN1_BIT_STRING_set__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), ASN1_BIT_STRING * __asm("a0"), unsigned char * __asm("a1"), LONG __asm("d0"))) \
  (_ASN1_BIT_STRING_set__bn - 282))(_ASN1_BIT_STRING_set__bn, _ASN1_BIT_STRING_set_a, _ASN1_BIT_STRING_set_d, _ASN1_BIT_STRING_set_length); \
});})

#define ASN1_BIT_STRING_set_bit(a, n, value) ({ \
  ASN1_BIT_STRING * _ASN1_BIT_STRING_set_bit_a = (a); \
  LONG _ASN1_BIT_STRING_set_bit_n = (n); \
  LONG _ASN1_BIT_STRING_set_bit_value = (value); \
  ({ \
  register char * _ASN1_BIT_STRING_set_bit__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), ASN1_BIT_STRING * __asm("a0"), LONG __asm("d0"), LONG __asm("d1"))) \
  (_ASN1_BIT_STRING_set_bit__bn - 288))(_ASN1_BIT_STRING_set_bit__bn, _ASN1_BIT_STRING_set_bit_a, _ASN1_BIT_STRING_set_bit_n, _ASN1_BIT_STRING_set_bit_value); \
});})

#define ASN1_BIT_STRING_get_bit(a, n) ({ \
  ASN1_BIT_STRING * _ASN1_BIT_STRING_get_bit_a = (a); \
  LONG _ASN1_BIT_STRING_get_bit_n = (n); \
  ({ \
  register char * _ASN1_BIT_STRING_get_bit__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), ASN1_BIT_STRING * __asm("a0"), LONG __asm("d0"))) \
  (_ASN1_BIT_STRING_get_bit__bn - 294))(_ASN1_BIT_STRING_get_bit__bn, _ASN1_BIT_STRING_get_bit_a, _ASN1_BIT_STRING_get_bit_n); \
});})

#define ASN1_BIT_STRING_name_print(out, bs, tbl, indent) ({ \
  BIO * _ASN1_BIT_STRING_name_print_out = (out); \
  ASN1_BIT_STRING * _ASN1_BIT_STRING_name_print_bs = (bs); \
  BIT_STRING_BITNAME * _ASN1_BIT_STRING_name_print_tbl = (tbl); \
  LONG _ASN1_BIT_STRING_name_print_indent = (indent); \
  ({ \
  register char * _ASN1_BIT_STRING_name_print__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIO * __asm("a0"), ASN1_BIT_STRING * __asm("a1"), BIT_STRING_BITNAME * __asm("a2"), LONG __asm("d0"))) \
  (_ASN1_BIT_STRING_name_print__bn - 300))(_ASN1_BIT_STRING_name_print__bn, _ASN1_BIT_STRING_name_print_out, _ASN1_BIT_STRING_name_print_bs, _ASN1_BIT_STRING_name_print_tbl, _ASN1_BIT_STRING_name_print_indent); \
});})

#define ASN1_BIT_STRING_num_asc(name, tbl) ({ \
  char * _ASN1_BIT_STRING_num_asc_name = (name); \
  BIT_STRING_BITNAME * _ASN1_BIT_STRING_num_asc_tbl = (tbl); \
  ({ \
  register char * _ASN1_BIT_STRING_num_asc__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), char * __asm("a0"), BIT_STRING_BITNAME * __asm("a1"))) \
  (_ASN1_BIT_STRING_num_asc__bn - 306))(_ASN1_BIT_STRING_num_asc__bn, _ASN1_BIT_STRING_num_asc_name, _ASN1_BIT_STRING_num_asc_tbl); \
});})

#define ASN1_BIT_STRING_set_asc(bs, name, value, tbl) ({ \
  ASN1_BIT_STRING * _ASN1_BIT_STRING_set_asc_bs = (bs); \
  char * _ASN1_BIT_STRING_set_asc_name = (name); \
  LONG _ASN1_BIT_STRING_set_asc_value = (value); \
  BIT_STRING_BITNAME * _ASN1_BIT_STRING_set_asc_tbl = (tbl); \
  ({ \
  register char * _ASN1_BIT_STRING_set_asc__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), ASN1_BIT_STRING * __asm("a0"), char * __asm("a1"), LONG __asm("d0"), BIT_STRING_BITNAME * __asm("a2"))) \
  (_ASN1_BIT_STRING_set_asc__bn - 312))(_ASN1_BIT_STRING_set_asc__bn, _ASN1_BIT_STRING_set_asc_bs, _ASN1_BIT_STRING_set_asc_name, _ASN1_BIT_STRING_set_asc_value, _ASN1_BIT_STRING_set_asc_tbl); \
});})

#define i2d_ASN1_BOOLEAN(a, pp) ({ \
  LONG _i2d_ASN1_BOOLEAN_a = (a); \
  unsigned char ** _i2d_ASN1_BOOLEAN_pp = (pp); \
  ({ \
  register char * _i2d_ASN1_BOOLEAN__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), LONG __asm("d0"), unsigned char ** __asm("a0"))) \
  (_i2d_ASN1_BOOLEAN__bn - 318))(_i2d_ASN1_BOOLEAN__bn, _i2d_ASN1_BOOLEAN_a, _i2d_ASN1_BOOLEAN_pp); \
});})

#define d2i_ASN1_BOOLEAN(a, pp, length) ({ \
  int * _d2i_ASN1_BOOLEAN_a = (a); \
  unsigned char ** _d2i_ASN1_BOOLEAN_pp = (pp); \
  long _d2i_ASN1_BOOLEAN_length = (length); \
  ({ \
  register char * _d2i_ASN1_BOOLEAN__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), int * __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_ASN1_BOOLEAN__bn - 324))(_d2i_ASN1_BOOLEAN__bn, _d2i_ASN1_BOOLEAN_a, _d2i_ASN1_BOOLEAN_pp, _d2i_ASN1_BOOLEAN_length); \
});})

#define ASN1_INTEGER_new() ({ \
  register char * _ASN1_INTEGER_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((ASN1_INTEGER * (*)(char * __asm("a6"))) \
  (_ASN1_INTEGER_new__bn - 330))(_ASN1_INTEGER_new__bn); \
})

#define ASN1_INTEGER_free(a) ({ \
  ASN1_INTEGER * _ASN1_INTEGER_free_a = (a); \
  ({ \
  register char * _ASN1_INTEGER_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), ASN1_INTEGER * __asm("a0"))) \
  (_ASN1_INTEGER_free__bn - 336))(_ASN1_INTEGER_free__bn, _ASN1_INTEGER_free_a); \
});})

#define d2i_ASN1_INTEGER(a, in, len) ({ \
  ASN1_INTEGER ** _d2i_ASN1_INTEGER_a = (a); \
  unsigned char ** _d2i_ASN1_INTEGER_in = (in); \
  long _d2i_ASN1_INTEGER_len = (len); \
  ({ \
  register char * _d2i_ASN1_INTEGER__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((ASN1_INTEGER * (*)(char * __asm("a6"), ASN1_INTEGER ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_ASN1_INTEGER__bn - 342))(_d2i_ASN1_INTEGER__bn, _d2i_ASN1_INTEGER_a, _d2i_ASN1_INTEGER_in, _d2i_ASN1_INTEGER_len); \
});})

#define i2d_ASN1_INTEGER(a, out) ({ \
  ASN1_INTEGER * _i2d_ASN1_INTEGER_a = (a); \
  unsigned char ** _i2d_ASN1_INTEGER_out = (out); \
  ({ \
  register char * _i2d_ASN1_INTEGER__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), ASN1_INTEGER * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_ASN1_INTEGER__bn - 348))(_i2d_ASN1_INTEGER__bn, _i2d_ASN1_INTEGER_a, _i2d_ASN1_INTEGER_out); \
});})

#define ASN1_INTEGER_it() ({ \
  register char * _ASN1_INTEGER_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_ASN1_INTEGER_it__bn - 354))(_ASN1_INTEGER_it__bn); \
})

#define i2c_ASN1_INTEGER(a, pp) ({ \
  ASN1_INTEGER * _i2c_ASN1_INTEGER_a = (a); \
  unsigned char ** _i2c_ASN1_INTEGER_pp = (pp); \
  ({ \
  register char * _i2c_ASN1_INTEGER__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), ASN1_INTEGER * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2c_ASN1_INTEGER__bn - 360))(_i2c_ASN1_INTEGER__bn, _i2c_ASN1_INTEGER_a, _i2c_ASN1_INTEGER_pp); \
});})

#define c2i_ASN1_INTEGER(a, pp, length) ({ \
  ASN1_INTEGER ** _c2i_ASN1_INTEGER_a = (a); \
  unsigned char ** _c2i_ASN1_INTEGER_pp = (pp); \
  long _c2i_ASN1_INTEGER_length = (length); \
  ({ \
  register char * _c2i_ASN1_INTEGER__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((ASN1_INTEGER * (*)(char * __asm("a6"), ASN1_INTEGER ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_c2i_ASN1_INTEGER__bn - 366))(_c2i_ASN1_INTEGER__bn, _c2i_ASN1_INTEGER_a, _c2i_ASN1_INTEGER_pp, _c2i_ASN1_INTEGER_length); \
});})

#define d2i_ASN1_UINTEGER(a, pp, length) ({ \
  ASN1_INTEGER ** _d2i_ASN1_UINTEGER_a = (a); \
  unsigned char ** _d2i_ASN1_UINTEGER_pp = (pp); \
  long _d2i_ASN1_UINTEGER_length = (length); \
  ({ \
  register char * _d2i_ASN1_UINTEGER__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((ASN1_INTEGER * (*)(char * __asm("a6"), ASN1_INTEGER ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_ASN1_UINTEGER__bn - 372))(_d2i_ASN1_UINTEGER__bn, _d2i_ASN1_UINTEGER_a, _d2i_ASN1_UINTEGER_pp, _d2i_ASN1_UINTEGER_length); \
});})

#define ASN1_INTEGER_dup(x) ({ \
  ASN1_INTEGER * _ASN1_INTEGER_dup_x = (x); \
  ({ \
  register char * _ASN1_INTEGER_dup__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((ASN1_INTEGER * (*)(char * __asm("a6"), ASN1_INTEGER * __asm("a0"))) \
  (_ASN1_INTEGER_dup__bn - 378))(_ASN1_INTEGER_dup__bn, _ASN1_INTEGER_dup_x); \
});})

#define ASN1_INTEGER_cmp(x, y) ({ \
  ASN1_INTEGER * _ASN1_INTEGER_cmp_x = (x); \
  ASN1_INTEGER * _ASN1_INTEGER_cmp_y = (y); \
  ({ \
  register char * _ASN1_INTEGER_cmp__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), ASN1_INTEGER * __asm("a0"), ASN1_INTEGER * __asm("a1"))) \
  (_ASN1_INTEGER_cmp__bn - 384))(_ASN1_INTEGER_cmp__bn, _ASN1_INTEGER_cmp_x, _ASN1_INTEGER_cmp_y); \
});})

#define ASN1_ENUMERATED_new() ({ \
  register char * _ASN1_ENUMERATED_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((ASN1_ENUMERATED * (*)(char * __asm("a6"))) \
  (_ASN1_ENUMERATED_new__bn - 390))(_ASN1_ENUMERATED_new__bn); \
})

#define ASN1_ENUMERATED_free(a) ({ \
  ASN1_ENUMERATED * _ASN1_ENUMERATED_free_a = (a); \
  ({ \
  register char * _ASN1_ENUMERATED_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), ASN1_ENUMERATED * __asm("a0"))) \
  (_ASN1_ENUMERATED_free__bn - 396))(_ASN1_ENUMERATED_free__bn, _ASN1_ENUMERATED_free_a); \
});})

#define d2i_ASN1_ENUMERATED(a, in, len) ({ \
  ASN1_ENUMERATED ** _d2i_ASN1_ENUMERATED_a = (a); \
  unsigned char ** _d2i_ASN1_ENUMERATED_in = (in); \
  long _d2i_ASN1_ENUMERATED_len = (len); \
  ({ \
  register char * _d2i_ASN1_ENUMERATED__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((ASN1_ENUMERATED * (*)(char * __asm("a6"), ASN1_ENUMERATED ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_ASN1_ENUMERATED__bn - 402))(_d2i_ASN1_ENUMERATED__bn, _d2i_ASN1_ENUMERATED_a, _d2i_ASN1_ENUMERATED_in, _d2i_ASN1_ENUMERATED_len); \
});})

#define i2d_ASN1_ENUMERATED(a, out) ({ \
  ASN1_ENUMERATED * _i2d_ASN1_ENUMERATED_a = (a); \
  unsigned char ** _i2d_ASN1_ENUMERATED_out = (out); \
  ({ \
  register char * _i2d_ASN1_ENUMERATED__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), ASN1_ENUMERATED * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_ASN1_ENUMERATED__bn - 408))(_i2d_ASN1_ENUMERATED__bn, _i2d_ASN1_ENUMERATED_a, _i2d_ASN1_ENUMERATED_out); \
});})

#define ASN1_ENUMERATED_it() ({ \
  register char * _ASN1_ENUMERATED_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_ASN1_ENUMERATED_it__bn - 414))(_ASN1_ENUMERATED_it__bn); \
})

#define ASN1_UTCTIME_check(a) ({ \
  ASN1_UTCTIME * _ASN1_UTCTIME_check_a = (a); \
  ({ \
  register char * _ASN1_UTCTIME_check__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), ASN1_UTCTIME * __asm("a0"))) \
  (_ASN1_UTCTIME_check__bn - 420))(_ASN1_UTCTIME_check__bn, _ASN1_UTCTIME_check_a); \
});})

#define ASN1_UTCTIME_set(s, t) ({ \
  ASN1_UTCTIME * _ASN1_UTCTIME_set_s = (s); \
  time_t _ASN1_UTCTIME_set_t = (t); \
  ({ \
  register char * _ASN1_UTCTIME_set__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((ASN1_UTCTIME * (*)(char * __asm("a6"), ASN1_UTCTIME * __asm("a0"), time_t __asm("d0"))) \
  (_ASN1_UTCTIME_set__bn - 426))(_ASN1_UTCTIME_set__bn, _ASN1_UTCTIME_set_s, _ASN1_UTCTIME_set_t); \
});})

#define ASN1_UTCTIME_set_string(s, str) ({ \
  ASN1_UTCTIME * _ASN1_UTCTIME_set_string_s = (s); \
  char * _ASN1_UTCTIME_set_string_str = (str); \
  ({ \
  register char * _ASN1_UTCTIME_set_string__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), ASN1_UTCTIME * __asm("a0"), char * __asm("a1"))) \
  (_ASN1_UTCTIME_set_string__bn - 432))(_ASN1_UTCTIME_set_string__bn, _ASN1_UTCTIME_set_string_s, _ASN1_UTCTIME_set_string_str); \
});})

#define ASN1_UTCTIME_cmp_time_t(s, t) ({ \
  const ASN1_UTCTIME * _ASN1_UTCTIME_cmp_time_t_s = (s); \
  time_t _ASN1_UTCTIME_cmp_time_t_t = (t); \
  ({ \
  register char * _ASN1_UTCTIME_cmp_time_t__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const ASN1_UTCTIME * __asm("a0"), time_t __asm("d0"))) \
  (_ASN1_UTCTIME_cmp_time_t__bn - 438))(_ASN1_UTCTIME_cmp_time_t__bn, _ASN1_UTCTIME_cmp_time_t_s, _ASN1_UTCTIME_cmp_time_t_t); \
});})

#define ASN1_GENERALIZEDTIME_check(a) ({ \
  ASN1_GENERALIZEDTIME * _ASN1_GENERALIZEDTIME_check_a = (a); \
  ({ \
  register char * _ASN1_GENERALIZEDTIME_check__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), ASN1_GENERALIZEDTIME * __asm("a0"))) \
  (_ASN1_GENERALIZEDTIME_check__bn - 444))(_ASN1_GENERALIZEDTIME_check__bn, _ASN1_GENERALIZEDTIME_check_a); \
});})

#define ASN1_GENERALIZEDTIME_set(s, t) ({ \
  ASN1_GENERALIZEDTIME * _ASN1_GENERALIZEDTIME_set_s = (s); \
  time_t _ASN1_GENERALIZEDTIME_set_t = (t); \
  ({ \
  register char * _ASN1_GENERALIZEDTIME_set__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((ASN1_GENERALIZEDTIME * (*)(char * __asm("a6"), ASN1_GENERALIZEDTIME * __asm("a0"), time_t __asm("d0"))) \
  (_ASN1_GENERALIZEDTIME_set__bn - 450))(_ASN1_GENERALIZEDTIME_set__bn, _ASN1_GENERALIZEDTIME_set_s, _ASN1_GENERALIZEDTIME_set_t); \
});})

#define ASN1_GENERALIZEDTIME_set_string(s, str) ({ \
  ASN1_GENERALIZEDTIME * _ASN1_GENERALIZEDTIME_set_string_s = (s); \
  char * _ASN1_GENERALIZEDTIME_set_string_str = (str); \
  ({ \
  register char * _ASN1_GENERALIZEDTIME_set_string__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), ASN1_GENERALIZEDTIME * __asm("a0"), char * __asm("a1"))) \
  (_ASN1_GENERALIZEDTIME_set_string__bn - 456))(_ASN1_GENERALIZEDTIME_set_string__bn, _ASN1_GENERALIZEDTIME_set_string_s, _ASN1_GENERALIZEDTIME_set_string_str); \
});})

#define ASN1_OCTET_STRING_new() ({ \
  register char * _ASN1_OCTET_STRING_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((ASN1_OCTET_STRING * (*)(char * __asm("a6"))) \
  (_ASN1_OCTET_STRING_new__bn - 462))(_ASN1_OCTET_STRING_new__bn); \
})

#define ASN1_OCTET_STRING_free(a) ({ \
  ASN1_OCTET_STRING * _ASN1_OCTET_STRING_free_a = (a); \
  ({ \
  register char * _ASN1_OCTET_STRING_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), ASN1_OCTET_STRING * __asm("a0"))) \
  (_ASN1_OCTET_STRING_free__bn - 468))(_ASN1_OCTET_STRING_free__bn, _ASN1_OCTET_STRING_free_a); \
});})

#define d2i_ASN1_OCTET_STRING(a, in, len) ({ \
  ASN1_OCTET_STRING ** _d2i_ASN1_OCTET_STRING_a = (a); \
  unsigned char ** _d2i_ASN1_OCTET_STRING_in = (in); \
  long _d2i_ASN1_OCTET_STRING_len = (len); \
  ({ \
  register char * _d2i_ASN1_OCTET_STRING__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((ASN1_OCTET_STRING * (*)(char * __asm("a6"), ASN1_OCTET_STRING ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_ASN1_OCTET_STRING__bn - 474))(_d2i_ASN1_OCTET_STRING__bn, _d2i_ASN1_OCTET_STRING_a, _d2i_ASN1_OCTET_STRING_in, _d2i_ASN1_OCTET_STRING_len); \
});})

#define i2d_ASN1_OCTET_STRING(a, out) ({ \
  ASN1_OCTET_STRING * _i2d_ASN1_OCTET_STRING_a = (a); \
  unsigned char ** _i2d_ASN1_OCTET_STRING_out = (out); \
  ({ \
  register char * _i2d_ASN1_OCTET_STRING__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), ASN1_OCTET_STRING * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_ASN1_OCTET_STRING__bn - 480))(_i2d_ASN1_OCTET_STRING__bn, _i2d_ASN1_OCTET_STRING_a, _i2d_ASN1_OCTET_STRING_out); \
});})

#define ASN1_OCTET_STRING_it() ({ \
  register char * _ASN1_OCTET_STRING_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_ASN1_OCTET_STRING_it__bn - 486))(_ASN1_OCTET_STRING_it__bn); \
})

#define ASN1_OCTET_STRING_dup(a) ({ \
  ASN1_OCTET_STRING * _ASN1_OCTET_STRING_dup_a = (a); \
  ({ \
  register char * _ASN1_OCTET_STRING_dup__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((ASN1_OCTET_STRING * (*)(char * __asm("a6"), ASN1_OCTET_STRING * __asm("a0"))) \
  (_ASN1_OCTET_STRING_dup__bn - 492))(_ASN1_OCTET_STRING_dup__bn, _ASN1_OCTET_STRING_dup_a); \
});})

#define ASN1_OCTET_STRING_cmp(a, b) ({ \
  ASN1_OCTET_STRING * _ASN1_OCTET_STRING_cmp_a = (a); \
  ASN1_OCTET_STRING * _ASN1_OCTET_STRING_cmp_b = (b); \
  ({ \
  register char * _ASN1_OCTET_STRING_cmp__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), ASN1_OCTET_STRING * __asm("a0"), ASN1_OCTET_STRING * __asm("a1"))) \
  (_ASN1_OCTET_STRING_cmp__bn - 498))(_ASN1_OCTET_STRING_cmp__bn, _ASN1_OCTET_STRING_cmp_a, _ASN1_OCTET_STRING_cmp_b); \
});})

#define ASN1_OCTET_STRING_set(str, data, len) ({ \
  ASN1_OCTET_STRING * _ASN1_OCTET_STRING_set_str = (str); \
  unsigned char * _ASN1_OCTET_STRING_set_data = (data); \
  LONG _ASN1_OCTET_STRING_set_len = (len); \
  ({ \
  register char * _ASN1_OCTET_STRING_set__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), ASN1_OCTET_STRING * __asm("a0"), unsigned char * __asm("a1"), LONG __asm("d0"))) \
  (_ASN1_OCTET_STRING_set__bn - 504))(_ASN1_OCTET_STRING_set__bn, _ASN1_OCTET_STRING_set_str, _ASN1_OCTET_STRING_set_data, _ASN1_OCTET_STRING_set_len); \
});})

#define ASN1_VISIBLESTRING_new() ({ \
  register char * _ASN1_VISIBLESTRING_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((ASN1_VISIBLESTRING * (*)(char * __asm("a6"))) \
  (_ASN1_VISIBLESTRING_new__bn - 510))(_ASN1_VISIBLESTRING_new__bn); \
})

#define ASN1_VISIBLESTRING_free(a) ({ \
  ASN1_VISIBLESTRING * _ASN1_VISIBLESTRING_free_a = (a); \
  ({ \
  register char * _ASN1_VISIBLESTRING_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), ASN1_VISIBLESTRING * __asm("a0"))) \
  (_ASN1_VISIBLESTRING_free__bn - 516))(_ASN1_VISIBLESTRING_free__bn, _ASN1_VISIBLESTRING_free_a); \
});})

#define d2i_ASN1_VISIBLESTRING(a, in, len) ({ \
  ASN1_VISIBLESTRING ** _d2i_ASN1_VISIBLESTRING_a = (a); \
  unsigned char ** _d2i_ASN1_VISIBLESTRING_in = (in); \
  long _d2i_ASN1_VISIBLESTRING_len = (len); \
  ({ \
  register char * _d2i_ASN1_VISIBLESTRING__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((ASN1_VISIBLESTRING * (*)(char * __asm("a6"), ASN1_VISIBLESTRING ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_ASN1_VISIBLESTRING__bn - 522))(_d2i_ASN1_VISIBLESTRING__bn, _d2i_ASN1_VISIBLESTRING_a, _d2i_ASN1_VISIBLESTRING_in, _d2i_ASN1_VISIBLESTRING_len); \
});})

#define i2d_ASN1_VISIBLESTRING(a, out) ({ \
  ASN1_VISIBLESTRING * _i2d_ASN1_VISIBLESTRING_a = (a); \
  unsigned char ** _i2d_ASN1_VISIBLESTRING_out = (out); \
  ({ \
  register char * _i2d_ASN1_VISIBLESTRING__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), ASN1_VISIBLESTRING * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_ASN1_VISIBLESTRING__bn - 528))(_i2d_ASN1_VISIBLESTRING__bn, _i2d_ASN1_VISIBLESTRING_a, _i2d_ASN1_VISIBLESTRING_out); \
});})

#define ASN1_VISIBLESTRING_it() ({ \
  register char * _ASN1_VISIBLESTRING_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_ASN1_VISIBLESTRING_it__bn - 534))(_ASN1_VISIBLESTRING_it__bn); \
})

#define ASN1_UNIVERSALSTRING_new() ({ \
  register char * _ASN1_UNIVERSALSTRING_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((ASN1_UNIVERSALSTRING * (*)(char * __asm("a6"))) \
  (_ASN1_UNIVERSALSTRING_new__bn - 540))(_ASN1_UNIVERSALSTRING_new__bn); \
})

#define ASN1_UNIVERSALSTRING_free(a) ({ \
  ASN1_UNIVERSALSTRING * _ASN1_UNIVERSALSTRING_free_a = (a); \
  ({ \
  register char * _ASN1_UNIVERSALSTRING_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), ASN1_UNIVERSALSTRING * __asm("a0"))) \
  (_ASN1_UNIVERSALSTRING_free__bn - 546))(_ASN1_UNIVERSALSTRING_free__bn, _ASN1_UNIVERSALSTRING_free_a); \
});})

#define d2i_ASN1_UNIVERSALSTRING(a, in, len) ({ \
  ASN1_UNIVERSALSTRING ** _d2i_ASN1_UNIVERSALSTRING_a = (a); \
  unsigned char ** _d2i_ASN1_UNIVERSALSTRING_in = (in); \
  long _d2i_ASN1_UNIVERSALSTRING_len = (len); \
  ({ \
  register char * _d2i_ASN1_UNIVERSALSTRING__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((ASN1_UNIVERSALSTRING * (*)(char * __asm("a6"), ASN1_UNIVERSALSTRING ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_ASN1_UNIVERSALSTRING__bn - 552))(_d2i_ASN1_UNIVERSALSTRING__bn, _d2i_ASN1_UNIVERSALSTRING_a, _d2i_ASN1_UNIVERSALSTRING_in, _d2i_ASN1_UNIVERSALSTRING_len); \
});})

#define i2d_ASN1_UNIVERSALSTRING(a, out) ({ \
  ASN1_UNIVERSALSTRING * _i2d_ASN1_UNIVERSALSTRING_a = (a); \
  unsigned char ** _i2d_ASN1_UNIVERSALSTRING_out = (out); \
  ({ \
  register char * _i2d_ASN1_UNIVERSALSTRING__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), ASN1_UNIVERSALSTRING * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_ASN1_UNIVERSALSTRING__bn - 558))(_i2d_ASN1_UNIVERSALSTRING__bn, _i2d_ASN1_UNIVERSALSTRING_a, _i2d_ASN1_UNIVERSALSTRING_out); \
});})

#define ASN1_UNIVERSALSTRING_it() ({ \
  register char * _ASN1_UNIVERSALSTRING_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_ASN1_UNIVERSALSTRING_it__bn - 564))(_ASN1_UNIVERSALSTRING_it__bn); \
})

#define ASN1_UTF8STRING_new() ({ \
  register char * _ASN1_UTF8STRING_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((ASN1_UTF8STRING * (*)(char * __asm("a6"))) \
  (_ASN1_UTF8STRING_new__bn - 570))(_ASN1_UTF8STRING_new__bn); \
})

#define ASN1_UTF8STRING_free(a) ({ \
  ASN1_UTF8STRING * _ASN1_UTF8STRING_free_a = (a); \
  ({ \
  register char * _ASN1_UTF8STRING_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), ASN1_UTF8STRING * __asm("a0"))) \
  (_ASN1_UTF8STRING_free__bn - 576))(_ASN1_UTF8STRING_free__bn, _ASN1_UTF8STRING_free_a); \
});})

#define d2i_ASN1_UTF8STRING(a, in, len) ({ \
  ASN1_UTF8STRING ** _d2i_ASN1_UTF8STRING_a = (a); \
  unsigned char ** _d2i_ASN1_UTF8STRING_in = (in); \
  long _d2i_ASN1_UTF8STRING_len = (len); \
  ({ \
  register char * _d2i_ASN1_UTF8STRING__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((ASN1_UTF8STRING * (*)(char * __asm("a6"), ASN1_UTF8STRING ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_ASN1_UTF8STRING__bn - 582))(_d2i_ASN1_UTF8STRING__bn, _d2i_ASN1_UTF8STRING_a, _d2i_ASN1_UTF8STRING_in, _d2i_ASN1_UTF8STRING_len); \
});})

#define i2d_ASN1_UTF8STRING(a, out) ({ \
  ASN1_UTF8STRING * _i2d_ASN1_UTF8STRING_a = (a); \
  unsigned char ** _i2d_ASN1_UTF8STRING_out = (out); \
  ({ \
  register char * _i2d_ASN1_UTF8STRING__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), ASN1_UTF8STRING * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_ASN1_UTF8STRING__bn - 588))(_i2d_ASN1_UTF8STRING__bn, _i2d_ASN1_UTF8STRING_a, _i2d_ASN1_UTF8STRING_out); \
});})

#define ASN1_UTF8STRING_it() ({ \
  register char * _ASN1_UTF8STRING_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_ASN1_UTF8STRING_it__bn - 594))(_ASN1_UTF8STRING_it__bn); \
})

#define ASN1_NULL_new() ({ \
  register char * _ASN1_NULL_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((ASN1_NULL * (*)(char * __asm("a6"))) \
  (_ASN1_NULL_new__bn - 600))(_ASN1_NULL_new__bn); \
})

#define ASN1_NULL_free(a) ({ \
  ASN1_NULL * _ASN1_NULL_free_a = (a); \
  ({ \
  register char * _ASN1_NULL_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), ASN1_NULL * __asm("a0"))) \
  (_ASN1_NULL_free__bn - 606))(_ASN1_NULL_free__bn, _ASN1_NULL_free_a); \
});})

#define d2i_ASN1_NULL(a, in, len) ({ \
  ASN1_NULL ** _d2i_ASN1_NULL_a = (a); \
  unsigned char ** _d2i_ASN1_NULL_in = (in); \
  long _d2i_ASN1_NULL_len = (len); \
  ({ \
  register char * _d2i_ASN1_NULL__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((ASN1_NULL * (*)(char * __asm("a6"), ASN1_NULL ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_ASN1_NULL__bn - 612))(_d2i_ASN1_NULL__bn, _d2i_ASN1_NULL_a, _d2i_ASN1_NULL_in, _d2i_ASN1_NULL_len); \
});})

#define i2d_ASN1_NULL(a, out) ({ \
  ASN1_NULL * _i2d_ASN1_NULL_a = (a); \
  unsigned char ** _i2d_ASN1_NULL_out = (out); \
  ({ \
  register char * _i2d_ASN1_NULL__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), ASN1_NULL * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_ASN1_NULL__bn - 618))(_i2d_ASN1_NULL__bn, _i2d_ASN1_NULL_a, _i2d_ASN1_NULL_out); \
});})

#define ASN1_NULL_it() ({ \
  register char * _ASN1_NULL_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_ASN1_NULL_it__bn - 624))(_ASN1_NULL_it__bn); \
})

#define ASN1_BMPSTRING_new() ({ \
  register char * _ASN1_BMPSTRING_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((ASN1_BMPSTRING * (*)(char * __asm("a6"))) \
  (_ASN1_BMPSTRING_new__bn - 630))(_ASN1_BMPSTRING_new__bn); \
})

#define ASN1_BMPSTRING_free(a) ({ \
  ASN1_BMPSTRING * _ASN1_BMPSTRING_free_a = (a); \
  ({ \
  register char * _ASN1_BMPSTRING_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), ASN1_BMPSTRING * __asm("a0"))) \
  (_ASN1_BMPSTRING_free__bn - 636))(_ASN1_BMPSTRING_free__bn, _ASN1_BMPSTRING_free_a); \
});})

#define d2i_ASN1_BMPSTRING(a, in, len) ({ \
  ASN1_BMPSTRING ** _d2i_ASN1_BMPSTRING_a = (a); \
  unsigned char ** _d2i_ASN1_BMPSTRING_in = (in); \
  long _d2i_ASN1_BMPSTRING_len = (len); \
  ({ \
  register char * _d2i_ASN1_BMPSTRING__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((ASN1_BMPSTRING * (*)(char * __asm("a6"), ASN1_BMPSTRING ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_ASN1_BMPSTRING__bn - 642))(_d2i_ASN1_BMPSTRING__bn, _d2i_ASN1_BMPSTRING_a, _d2i_ASN1_BMPSTRING_in, _d2i_ASN1_BMPSTRING_len); \
});})

#define i2d_ASN1_BMPSTRING(a, out) ({ \
  ASN1_BMPSTRING * _i2d_ASN1_BMPSTRING_a = (a); \
  unsigned char ** _i2d_ASN1_BMPSTRING_out = (out); \
  ({ \
  register char * _i2d_ASN1_BMPSTRING__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), ASN1_BMPSTRING * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_ASN1_BMPSTRING__bn - 648))(_i2d_ASN1_BMPSTRING__bn, _i2d_ASN1_BMPSTRING_a, _i2d_ASN1_BMPSTRING_out); \
});})

#define ASN1_BMPSTRING_it() ({ \
  register char * _ASN1_BMPSTRING_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_ASN1_BMPSTRING_it__bn - 654))(_ASN1_BMPSTRING_it__bn); \
})

#define UTF8_getc(str, len, val) ({ \
  const unsigned char * _UTF8_getc_str = (str); \
  LONG _UTF8_getc_len = (len); \
  unsigned long * _UTF8_getc_val = (val); \
  ({ \
  register char * _UTF8_getc__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const unsigned char * __asm("a0"), LONG __asm("d0"), unsigned long * __asm("a1"))) \
  (_UTF8_getc__bn - 660))(_UTF8_getc__bn, _UTF8_getc_str, _UTF8_getc_len, _UTF8_getc_val); \
});})

#define UTF8_putc(str, len, value) ({ \
  unsigned char * _UTF8_putc_str = (str); \
  LONG _UTF8_putc_len = (len); \
  unsigned long _UTF8_putc_value = (value); \
  ({ \
  register char * _UTF8_putc__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), unsigned char * __asm("a0"), LONG __asm("d0"), unsigned long __asm("d1"))) \
  (_UTF8_putc__bn - 666))(_UTF8_putc__bn, _UTF8_putc_str, _UTF8_putc_len, _UTF8_putc_value); \
});})

#define ASN1_PRINTABLE_new() ({ \
  register char * _ASN1_PRINTABLE_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((ASN1_STRING * (*)(char * __asm("a6"))) \
  (_ASN1_PRINTABLE_new__bn - 672))(_ASN1_PRINTABLE_new__bn); \
})

#define ASN1_PRINTABLE_free(a) ({ \
  ASN1_STRING * _ASN1_PRINTABLE_free_a = (a); \
  ({ \
  register char * _ASN1_PRINTABLE_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), ASN1_STRING * __asm("a0"))) \
  (_ASN1_PRINTABLE_free__bn - 678))(_ASN1_PRINTABLE_free__bn, _ASN1_PRINTABLE_free_a); \
});})

#define d2i_ASN1_PRINTABLE(a, in, len) ({ \
  ASN1_STRING ** _d2i_ASN1_PRINTABLE_a = (a); \
  unsigned char ** _d2i_ASN1_PRINTABLE_in = (in); \
  long _d2i_ASN1_PRINTABLE_len = (len); \
  ({ \
  register char * _d2i_ASN1_PRINTABLE__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((ASN1_STRING * (*)(char * __asm("a6"), ASN1_STRING ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_ASN1_PRINTABLE__bn - 684))(_d2i_ASN1_PRINTABLE__bn, _d2i_ASN1_PRINTABLE_a, _d2i_ASN1_PRINTABLE_in, _d2i_ASN1_PRINTABLE_len); \
});})

#define i2d_ASN1_PRINTABLE(a, out) ({ \
  ASN1_STRING * _i2d_ASN1_PRINTABLE_a = (a); \
  unsigned char ** _i2d_ASN1_PRINTABLE_out = (out); \
  ({ \
  register char * _i2d_ASN1_PRINTABLE__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), ASN1_STRING * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_ASN1_PRINTABLE__bn - 690))(_i2d_ASN1_PRINTABLE__bn, _i2d_ASN1_PRINTABLE_a, _i2d_ASN1_PRINTABLE_out); \
});})

#define ASN1_PRINTABLE_it() ({ \
  register char * _ASN1_PRINTABLE_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_ASN1_PRINTABLE_it__bn - 696))(_ASN1_PRINTABLE_it__bn); \
})

#define DIRECTORYSTRING_new() ({ \
  register char * _DIRECTORYSTRING_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((ASN1_STRING * (*)(char * __asm("a6"))) \
  (_DIRECTORYSTRING_new__bn - 702))(_DIRECTORYSTRING_new__bn); \
})

#define DIRECTORYSTRING_free(a) ({ \
  ASN1_STRING * _DIRECTORYSTRING_free_a = (a); \
  ({ \
  register char * _DIRECTORYSTRING_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), ASN1_STRING * __asm("a0"))) \
  (_DIRECTORYSTRING_free__bn - 708))(_DIRECTORYSTRING_free__bn, _DIRECTORYSTRING_free_a); \
});})

#define d2i_DIRECTORYSTRING(a, in, len) ({ \
  ASN1_STRING ** _d2i_DIRECTORYSTRING_a = (a); \
  unsigned char ** _d2i_DIRECTORYSTRING_in = (in); \
  long _d2i_DIRECTORYSTRING_len = (len); \
  ({ \
  register char * _d2i_DIRECTORYSTRING__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((ASN1_STRING * (*)(char * __asm("a6"), ASN1_STRING ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_DIRECTORYSTRING__bn - 714))(_d2i_DIRECTORYSTRING__bn, _d2i_DIRECTORYSTRING_a, _d2i_DIRECTORYSTRING_in, _d2i_DIRECTORYSTRING_len); \
});})

#define i2d_DIRECTORYSTRING(a, out) ({ \
  ASN1_STRING * _i2d_DIRECTORYSTRING_a = (a); \
  unsigned char ** _i2d_DIRECTORYSTRING_out = (out); \
  ({ \
  register char * _i2d_DIRECTORYSTRING__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), ASN1_STRING * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_DIRECTORYSTRING__bn - 720))(_i2d_DIRECTORYSTRING__bn, _i2d_DIRECTORYSTRING_a, _i2d_DIRECTORYSTRING_out); \
});})

#define DIRECTORYSTRING_it() ({ \
  register char * _DIRECTORYSTRING_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_DIRECTORYSTRING_it__bn - 726))(_DIRECTORYSTRING_it__bn); \
})

#define DISPLAYTEXT_new() ({ \
  register char * _DISPLAYTEXT_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((ASN1_STRING * (*)(char * __asm("a6"))) \
  (_DISPLAYTEXT_new__bn - 732))(_DISPLAYTEXT_new__bn); \
})

#define DISPLAYTEXT_free(a) ({ \
  ASN1_STRING * _DISPLAYTEXT_free_a = (a); \
  ({ \
  register char * _DISPLAYTEXT_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), ASN1_STRING * __asm("a0"))) \
  (_DISPLAYTEXT_free__bn - 738))(_DISPLAYTEXT_free__bn, _DISPLAYTEXT_free_a); \
});})

#define d2i_DISPLAYTEXT(a, in, len) ({ \
  ASN1_STRING ** _d2i_DISPLAYTEXT_a = (a); \
  unsigned char ** _d2i_DISPLAYTEXT_in = (in); \
  long _d2i_DISPLAYTEXT_len = (len); \
  ({ \
  register char * _d2i_DISPLAYTEXT__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((ASN1_STRING * (*)(char * __asm("a6"), ASN1_STRING ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_DISPLAYTEXT__bn - 744))(_d2i_DISPLAYTEXT__bn, _d2i_DISPLAYTEXT_a, _d2i_DISPLAYTEXT_in, _d2i_DISPLAYTEXT_len); \
});})

#define i2d_DISPLAYTEXT(a, out) ({ \
  ASN1_STRING * _i2d_DISPLAYTEXT_a = (a); \
  unsigned char ** _i2d_DISPLAYTEXT_out = (out); \
  ({ \
  register char * _i2d_DISPLAYTEXT__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), ASN1_STRING * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_DISPLAYTEXT__bn - 750))(_i2d_DISPLAYTEXT__bn, _i2d_DISPLAYTEXT_a, _i2d_DISPLAYTEXT_out); \
});})

#define DISPLAYTEXT_it() ({ \
  register char * _DISPLAYTEXT_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_DISPLAYTEXT_it__bn - 756))(_DISPLAYTEXT_it__bn); \
})

#define ASN1_PRINTABLESTRING_new() ({ \
  register char * _ASN1_PRINTABLESTRING_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((ASN1_PRINTABLESTRING * (*)(char * __asm("a6"))) \
  (_ASN1_PRINTABLESTRING_new__bn - 762))(_ASN1_PRINTABLESTRING_new__bn); \
})

#define ASN1_PRINTABLESTRING_free(a) ({ \
  ASN1_PRINTABLESTRING * _ASN1_PRINTABLESTRING_free_a = (a); \
  ({ \
  register char * _ASN1_PRINTABLESTRING_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), ASN1_PRINTABLESTRING * __asm("a0"))) \
  (_ASN1_PRINTABLESTRING_free__bn - 768))(_ASN1_PRINTABLESTRING_free__bn, _ASN1_PRINTABLESTRING_free_a); \
});})

#define d2i_ASN1_PRINTABLESTRING(a, in, len) ({ \
  ASN1_PRINTABLESTRING ** _d2i_ASN1_PRINTABLESTRING_a = (a); \
  unsigned char ** _d2i_ASN1_PRINTABLESTRING_in = (in); \
  long _d2i_ASN1_PRINTABLESTRING_len = (len); \
  ({ \
  register char * _d2i_ASN1_PRINTABLESTRING__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((ASN1_PRINTABLESTRING * (*)(char * __asm("a6"), ASN1_PRINTABLESTRING ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_ASN1_PRINTABLESTRING__bn - 774))(_d2i_ASN1_PRINTABLESTRING__bn, _d2i_ASN1_PRINTABLESTRING_a, _d2i_ASN1_PRINTABLESTRING_in, _d2i_ASN1_PRINTABLESTRING_len); \
});})

#define i2d_ASN1_PRINTABLESTRING(a, out) ({ \
  ASN1_PRINTABLESTRING * _i2d_ASN1_PRINTABLESTRING_a = (a); \
  unsigned char ** _i2d_ASN1_PRINTABLESTRING_out = (out); \
  ({ \
  register char * _i2d_ASN1_PRINTABLESTRING__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), ASN1_PRINTABLESTRING * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_ASN1_PRINTABLESTRING__bn - 780))(_i2d_ASN1_PRINTABLESTRING__bn, _i2d_ASN1_PRINTABLESTRING_a, _i2d_ASN1_PRINTABLESTRING_out); \
});})

#define ASN1_PRINTABLESTRING_it() ({ \
  register char * _ASN1_PRINTABLESTRING_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_ASN1_PRINTABLESTRING_it__bn - 786))(_ASN1_PRINTABLESTRING_it__bn); \
})

#define ASN1_T61STRING_new() ({ \
  register char * _ASN1_T61STRING_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((ASN1_T61STRING * (*)(char * __asm("a6"))) \
  (_ASN1_T61STRING_new__bn - 792))(_ASN1_T61STRING_new__bn); \
})

#define ASN1_T61STRING_free(a) ({ \
  ASN1_T61STRING * _ASN1_T61STRING_free_a = (a); \
  ({ \
  register char * _ASN1_T61STRING_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), ASN1_T61STRING * __asm("a0"))) \
  (_ASN1_T61STRING_free__bn - 798))(_ASN1_T61STRING_free__bn, _ASN1_T61STRING_free_a); \
});})

#define d2i_ASN1_T61STRING(a, in, len) ({ \
  ASN1_T61STRING ** _d2i_ASN1_T61STRING_a = (a); \
  unsigned char ** _d2i_ASN1_T61STRING_in = (in); \
  long _d2i_ASN1_T61STRING_len = (len); \
  ({ \
  register char * _d2i_ASN1_T61STRING__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((ASN1_T61STRING * (*)(char * __asm("a6"), ASN1_T61STRING ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_ASN1_T61STRING__bn - 804))(_d2i_ASN1_T61STRING__bn, _d2i_ASN1_T61STRING_a, _d2i_ASN1_T61STRING_in, _d2i_ASN1_T61STRING_len); \
});})

#define i2d_ASN1_T61STRING(a, out) ({ \
  ASN1_T61STRING * _i2d_ASN1_T61STRING_a = (a); \
  unsigned char ** _i2d_ASN1_T61STRING_out = (out); \
  ({ \
  register char * _i2d_ASN1_T61STRING__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), ASN1_T61STRING * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_ASN1_T61STRING__bn - 810))(_i2d_ASN1_T61STRING__bn, _i2d_ASN1_T61STRING_a, _i2d_ASN1_T61STRING_out); \
});})

#define ASN1_T61STRING_it() ({ \
  register char * _ASN1_T61STRING_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_ASN1_T61STRING_it__bn - 816))(_ASN1_T61STRING_it__bn); \
})

#define ASN1_IA5STRING_new() ({ \
  register char * _ASN1_IA5STRING_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((ASN1_IA5STRING * (*)(char * __asm("a6"))) \
  (_ASN1_IA5STRING_new__bn - 822))(_ASN1_IA5STRING_new__bn); \
})

#define ASN1_IA5STRING_free(a) ({ \
  ASN1_IA5STRING * _ASN1_IA5STRING_free_a = (a); \
  ({ \
  register char * _ASN1_IA5STRING_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), ASN1_IA5STRING * __asm("a0"))) \
  (_ASN1_IA5STRING_free__bn - 828))(_ASN1_IA5STRING_free__bn, _ASN1_IA5STRING_free_a); \
});})

#define d2i_ASN1_IA5STRING(a, in, len) ({ \
  ASN1_IA5STRING ** _d2i_ASN1_IA5STRING_a = (a); \
  unsigned char ** _d2i_ASN1_IA5STRING_in = (in); \
  long _d2i_ASN1_IA5STRING_len = (len); \
  ({ \
  register char * _d2i_ASN1_IA5STRING__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((ASN1_IA5STRING * (*)(char * __asm("a6"), ASN1_IA5STRING ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_ASN1_IA5STRING__bn - 834))(_d2i_ASN1_IA5STRING__bn, _d2i_ASN1_IA5STRING_a, _d2i_ASN1_IA5STRING_in, _d2i_ASN1_IA5STRING_len); \
});})

#define i2d_ASN1_IA5STRING(a, out) ({ \
  ASN1_IA5STRING * _i2d_ASN1_IA5STRING_a = (a); \
  unsigned char ** _i2d_ASN1_IA5STRING_out = (out); \
  ({ \
  register char * _i2d_ASN1_IA5STRING__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), ASN1_IA5STRING * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_ASN1_IA5STRING__bn - 840))(_i2d_ASN1_IA5STRING__bn, _i2d_ASN1_IA5STRING_a, _i2d_ASN1_IA5STRING_out); \
});})

#define ASN1_IA5STRING_it() ({ \
  register char * _ASN1_IA5STRING_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_ASN1_IA5STRING_it__bn - 846))(_ASN1_IA5STRING_it__bn); \
})

#define ASN1_GENERALSTRING_new() ({ \
  register char * _ASN1_GENERALSTRING_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((ASN1_GENERALSTRING * (*)(char * __asm("a6"))) \
  (_ASN1_GENERALSTRING_new__bn - 852))(_ASN1_GENERALSTRING_new__bn); \
})

#define ASN1_GENERALSTRING_free(a) ({ \
  ASN1_GENERALSTRING * _ASN1_GENERALSTRING_free_a = (a); \
  ({ \
  register char * _ASN1_GENERALSTRING_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), ASN1_GENERALSTRING * __asm("a0"))) \
  (_ASN1_GENERALSTRING_free__bn - 858))(_ASN1_GENERALSTRING_free__bn, _ASN1_GENERALSTRING_free_a); \
});})

#define d2i_ASN1_GENERALSTRING(a, in, len) ({ \
  ASN1_GENERALSTRING ** _d2i_ASN1_GENERALSTRING_a = (a); \
  unsigned char ** _d2i_ASN1_GENERALSTRING_in = (in); \
  long _d2i_ASN1_GENERALSTRING_len = (len); \
  ({ \
  register char * _d2i_ASN1_GENERALSTRING__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((ASN1_GENERALSTRING * (*)(char * __asm("a6"), ASN1_GENERALSTRING ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_ASN1_GENERALSTRING__bn - 864))(_d2i_ASN1_GENERALSTRING__bn, _d2i_ASN1_GENERALSTRING_a, _d2i_ASN1_GENERALSTRING_in, _d2i_ASN1_GENERALSTRING_len); \
});})

#define i2d_ASN1_GENERALSTRING(a, out) ({ \
  ASN1_GENERALSTRING * _i2d_ASN1_GENERALSTRING_a = (a); \
  unsigned char ** _i2d_ASN1_GENERALSTRING_out = (out); \
  ({ \
  register char * _i2d_ASN1_GENERALSTRING__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), ASN1_GENERALSTRING * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_ASN1_GENERALSTRING__bn - 870))(_i2d_ASN1_GENERALSTRING__bn, _i2d_ASN1_GENERALSTRING_a, _i2d_ASN1_GENERALSTRING_out); \
});})

#define ASN1_GENERALSTRING_it() ({ \
  register char * _ASN1_GENERALSTRING_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_ASN1_GENERALSTRING_it__bn - 876))(_ASN1_GENERALSTRING_it__bn); \
})

#define ASN1_UTCTIME_new() ({ \
  register char * _ASN1_UTCTIME_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((ASN1_UTCTIME * (*)(char * __asm("a6"))) \
  (_ASN1_UTCTIME_new__bn - 882))(_ASN1_UTCTIME_new__bn); \
})

#define ASN1_UTCTIME_free(a) ({ \
  ASN1_UTCTIME * _ASN1_UTCTIME_free_a = (a); \
  ({ \
  register char * _ASN1_UTCTIME_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), ASN1_UTCTIME * __asm("a0"))) \
  (_ASN1_UTCTIME_free__bn - 888))(_ASN1_UTCTIME_free__bn, _ASN1_UTCTIME_free_a); \
});})

#define d2i_ASN1_UTCTIME(a, in, len) ({ \
  ASN1_UTCTIME ** _d2i_ASN1_UTCTIME_a = (a); \
  unsigned char ** _d2i_ASN1_UTCTIME_in = (in); \
  long _d2i_ASN1_UTCTIME_len = (len); \
  ({ \
  register char * _d2i_ASN1_UTCTIME__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((ASN1_UTCTIME * (*)(char * __asm("a6"), ASN1_UTCTIME ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_ASN1_UTCTIME__bn - 894))(_d2i_ASN1_UTCTIME__bn, _d2i_ASN1_UTCTIME_a, _d2i_ASN1_UTCTIME_in, _d2i_ASN1_UTCTIME_len); \
});})

#define i2d_ASN1_UTCTIME(a, out) ({ \
  ASN1_UTCTIME * _i2d_ASN1_UTCTIME_a = (a); \
  unsigned char ** _i2d_ASN1_UTCTIME_out = (out); \
  ({ \
  register char * _i2d_ASN1_UTCTIME__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), ASN1_UTCTIME * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_ASN1_UTCTIME__bn - 900))(_i2d_ASN1_UTCTIME__bn, _i2d_ASN1_UTCTIME_a, _i2d_ASN1_UTCTIME_out); \
});})

#define ASN1_UTCTIME_it() ({ \
  register char * _ASN1_UTCTIME_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_ASN1_UTCTIME_it__bn - 906))(_ASN1_UTCTIME_it__bn); \
})

#define ASN1_GENERALIZEDTIME_new() ({ \
  register char * _ASN1_GENERALIZEDTIME_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((ASN1_GENERALIZEDTIME * (*)(char * __asm("a6"))) \
  (_ASN1_GENERALIZEDTIME_new__bn - 912))(_ASN1_GENERALIZEDTIME_new__bn); \
})

#define ASN1_GENERALIZEDTIME_free(a) ({ \
  ASN1_GENERALIZEDTIME * _ASN1_GENERALIZEDTIME_free_a = (a); \
  ({ \
  register char * _ASN1_GENERALIZEDTIME_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), ASN1_GENERALIZEDTIME * __asm("a0"))) \
  (_ASN1_GENERALIZEDTIME_free__bn - 918))(_ASN1_GENERALIZEDTIME_free__bn, _ASN1_GENERALIZEDTIME_free_a); \
});})

#define d2i_ASN1_GENERALIZEDTIME(a, in, len) ({ \
  ASN1_GENERALIZEDTIME ** _d2i_ASN1_GENERALIZEDTIME_a = (a); \
  unsigned char ** _d2i_ASN1_GENERALIZEDTIME_in = (in); \
  long _d2i_ASN1_GENERALIZEDTIME_len = (len); \
  ({ \
  register char * _d2i_ASN1_GENERALIZEDTIME__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((ASN1_GENERALIZEDTIME * (*)(char * __asm("a6"), ASN1_GENERALIZEDTIME ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_ASN1_GENERALIZEDTIME__bn - 924))(_d2i_ASN1_GENERALIZEDTIME__bn, _d2i_ASN1_GENERALIZEDTIME_a, _d2i_ASN1_GENERALIZEDTIME_in, _d2i_ASN1_GENERALIZEDTIME_len); \
});})

#define i2d_ASN1_GENERALIZEDTIME(a, out) ({ \
  ASN1_GENERALIZEDTIME * _i2d_ASN1_GENERALIZEDTIME_a = (a); \
  unsigned char ** _i2d_ASN1_GENERALIZEDTIME_out = (out); \
  ({ \
  register char * _i2d_ASN1_GENERALIZEDTIME__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), ASN1_GENERALIZEDTIME * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_ASN1_GENERALIZEDTIME__bn - 930))(_i2d_ASN1_GENERALIZEDTIME__bn, _i2d_ASN1_GENERALIZEDTIME_a, _i2d_ASN1_GENERALIZEDTIME_out); \
});})

#define ASN1_GENERALIZEDTIME_it() ({ \
  register char * _ASN1_GENERALIZEDTIME_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_ASN1_GENERALIZEDTIME_it__bn - 936))(_ASN1_GENERALIZEDTIME_it__bn); \
})

#define ASN1_TIME_new() ({ \
  register char * _ASN1_TIME_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((ASN1_TIME * (*)(char * __asm("a6"))) \
  (_ASN1_TIME_new__bn - 942))(_ASN1_TIME_new__bn); \
})

#define ASN1_TIME_free(a) ({ \
  ASN1_TIME * _ASN1_TIME_free_a = (a); \
  ({ \
  register char * _ASN1_TIME_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), ASN1_TIME * __asm("a0"))) \
  (_ASN1_TIME_free__bn - 948))(_ASN1_TIME_free__bn, _ASN1_TIME_free_a); \
});})

#define d2i_ASN1_TIME(a, in, len) ({ \
  ASN1_TIME ** _d2i_ASN1_TIME_a = (a); \
  unsigned char ** _d2i_ASN1_TIME_in = (in); \
  long _d2i_ASN1_TIME_len = (len); \
  ({ \
  register char * _d2i_ASN1_TIME__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((ASN1_TIME * (*)(char * __asm("a6"), ASN1_TIME ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_ASN1_TIME__bn - 954))(_d2i_ASN1_TIME__bn, _d2i_ASN1_TIME_a, _d2i_ASN1_TIME_in, _d2i_ASN1_TIME_len); \
});})

#define i2d_ASN1_TIME(a, out) ({ \
  ASN1_TIME * _i2d_ASN1_TIME_a = (a); \
  unsigned char ** _i2d_ASN1_TIME_out = (out); \
  ({ \
  register char * _i2d_ASN1_TIME__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), ASN1_TIME * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_ASN1_TIME__bn - 960))(_i2d_ASN1_TIME__bn, _i2d_ASN1_TIME_a, _i2d_ASN1_TIME_out); \
});})

#define ASN1_TIME_it() ({ \
  register char * _ASN1_TIME_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_ASN1_TIME_it__bn - 966))(_ASN1_TIME_it__bn); \
})

#define ASN1_TIME_set(s, t) ({ \
  ASN1_TIME * _ASN1_TIME_set_s = (s); \
  time_t _ASN1_TIME_set_t = (t); \
  ({ \
  register char * _ASN1_TIME_set__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((ASN1_TIME * (*)(char * __asm("a6"), ASN1_TIME * __asm("a0"), time_t __asm("d0"))) \
  (_ASN1_TIME_set__bn - 972))(_ASN1_TIME_set__bn, _ASN1_TIME_set_s, _ASN1_TIME_set_t); \
});})

#define ASN1_TIME_check(t) ({ \
  ASN1_TIME * _ASN1_TIME_check_t = (t); \
  ({ \
  register char * _ASN1_TIME_check__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), ASN1_TIME * __asm("a0"))) \
  (_ASN1_TIME_check__bn - 978))(_ASN1_TIME_check__bn, _ASN1_TIME_check_t); \
});})

#define ASN1_TIME_to_generalizedtime(t, out) ({ \
  ASN1_TIME * _ASN1_TIME_to_generalizedtime_t = (t); \
  ASN1_GENERALIZEDTIME ** _ASN1_TIME_to_generalizedtime_out = (out); \
  ({ \
  register char * _ASN1_TIME_to_generalizedtime__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((ASN1_GENERALIZEDTIME * (*)(char * __asm("a6"), ASN1_TIME * __asm("a0"), ASN1_GENERALIZEDTIME ** __asm("a1"))) \
  (_ASN1_TIME_to_generalizedtime__bn - 984))(_ASN1_TIME_to_generalizedtime__bn, _ASN1_TIME_to_generalizedtime_t, _ASN1_TIME_to_generalizedtime_out); \
});})

#define i2d_ASN1_SET(a, pp, func, ex_tag, ex_class, is_set) ({ \
  STACK * _i2d_ASN1_SET_a = (a); \
  unsigned char ** _i2d_ASN1_SET_pp = (pp); \
  int (*_i2d_ASN1_SET_func)() = (func); \
  LONG _i2d_ASN1_SET_ex_tag = (ex_tag); \
  LONG _i2d_ASN1_SET_ex_class = (ex_class); \
  LONG _i2d_ASN1_SET_is_set = (is_set); \
  ({ \
  register char * _i2d_ASN1_SET__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), STACK * __asm("a0"), unsigned char ** __asm("a1"), int (*)() __asm("a2"), LONG __asm("d0"), LONG __asm("d1"), LONG __asm("d2"))) \
  (_i2d_ASN1_SET__bn - 990))(_i2d_ASN1_SET__bn, _i2d_ASN1_SET_a, _i2d_ASN1_SET_pp, _i2d_ASN1_SET_func, _i2d_ASN1_SET_ex_tag, _i2d_ASN1_SET_ex_class, _i2d_ASN1_SET_is_set); \
});})

#define d2i_ASN1_SET(a, pp, length, func, free_func, ex_tag, ex_class) ({ \
  STACK ** _d2i_ASN1_SET_a = (a); \
  unsigned char ** _d2i_ASN1_SET_pp = (pp); \
  long _d2i_ASN1_SET_length = (length); \
  char * (*_d2i_ASN1_SET_func)() = (func); \
  void (*_d2i_ASN1_SET_free_func)(void *) = (free_func); \
  LONG _d2i_ASN1_SET_ex_tag = (ex_tag); \
  LONG _d2i_ASN1_SET_ex_class = (ex_class); \
  ({ \
  register char * _d2i_ASN1_SET__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((STACK * (*)(char * __asm("a6"), STACK ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"), char * (*)() __asm("a2"), void (*)(void *) __asm("a3"), LONG __asm("d1"), LONG __asm("d2"))) \
  (_d2i_ASN1_SET__bn - 996))(_d2i_ASN1_SET__bn, _d2i_ASN1_SET_a, _d2i_ASN1_SET_pp, _d2i_ASN1_SET_length, _d2i_ASN1_SET_func, _d2i_ASN1_SET_free_func, _d2i_ASN1_SET_ex_tag, _d2i_ASN1_SET_ex_class); \
});})

#define i2a_ASN1_INTEGER(bp, a) ({ \
  BIO * _i2a_ASN1_INTEGER_bp = (bp); \
  ASN1_INTEGER * _i2a_ASN1_INTEGER_a = (a); \
  ({ \
  register char * _i2a_ASN1_INTEGER__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIO * __asm("a0"), ASN1_INTEGER * __asm("a1"))) \
  (_i2a_ASN1_INTEGER__bn - 1002))(_i2a_ASN1_INTEGER__bn, _i2a_ASN1_INTEGER_bp, _i2a_ASN1_INTEGER_a); \
});})

#define a2i_ASN1_INTEGER(bp, bs, buf, size) ({ \
  BIO * _a2i_ASN1_INTEGER_bp = (bp); \
  ASN1_INTEGER * _a2i_ASN1_INTEGER_bs = (bs); \
  char * _a2i_ASN1_INTEGER_buf = (buf); \
  LONG _a2i_ASN1_INTEGER_size = (size); \
  ({ \
  register char * _a2i_ASN1_INTEGER__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIO * __asm("a0"), ASN1_INTEGER * __asm("a1"), char * __asm("a2"), LONG __asm("d0"))) \
  (_a2i_ASN1_INTEGER__bn - 1008))(_a2i_ASN1_INTEGER__bn, _a2i_ASN1_INTEGER_bp, _a2i_ASN1_INTEGER_bs, _a2i_ASN1_INTEGER_buf, _a2i_ASN1_INTEGER_size); \
});})

#define i2a_ASN1_ENUMERATED(bp, a) ({ \
  BIO * _i2a_ASN1_ENUMERATED_bp = (bp); \
  ASN1_ENUMERATED * _i2a_ASN1_ENUMERATED_a = (a); \
  ({ \
  register char * _i2a_ASN1_ENUMERATED__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIO * __asm("a0"), ASN1_ENUMERATED * __asm("a1"))) \
  (_i2a_ASN1_ENUMERATED__bn - 1014))(_i2a_ASN1_ENUMERATED__bn, _i2a_ASN1_ENUMERATED_bp, _i2a_ASN1_ENUMERATED_a); \
});})

#define a2i_ASN1_ENUMERATED(bp, bs, buf, size) ({ \
  BIO * _a2i_ASN1_ENUMERATED_bp = (bp); \
  ASN1_ENUMERATED * _a2i_ASN1_ENUMERATED_bs = (bs); \
  char * _a2i_ASN1_ENUMERATED_buf = (buf); \
  LONG _a2i_ASN1_ENUMERATED_size = (size); \
  ({ \
  register char * _a2i_ASN1_ENUMERATED__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIO * __asm("a0"), ASN1_ENUMERATED * __asm("a1"), char * __asm("a2"), LONG __asm("d0"))) \
  (_a2i_ASN1_ENUMERATED__bn - 1020))(_a2i_ASN1_ENUMERATED__bn, _a2i_ASN1_ENUMERATED_bp, _a2i_ASN1_ENUMERATED_bs, _a2i_ASN1_ENUMERATED_buf, _a2i_ASN1_ENUMERATED_size); \
});})

#define i2a_ASN1_OBJECT(bp, a) ({ \
  BIO * _i2a_ASN1_OBJECT_bp = (bp); \
  ASN1_OBJECT * _i2a_ASN1_OBJECT_a = (a); \
  ({ \
  register char * _i2a_ASN1_OBJECT__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIO * __asm("a0"), ASN1_OBJECT * __asm("a1"))) \
  (_i2a_ASN1_OBJECT__bn - 1026))(_i2a_ASN1_OBJECT__bn, _i2a_ASN1_OBJECT_bp, _i2a_ASN1_OBJECT_a); \
});})

#define a2i_ASN1_STRING(bp, bs, buf, size) ({ \
  BIO * _a2i_ASN1_STRING_bp = (bp); \
  ASN1_STRING * _a2i_ASN1_STRING_bs = (bs); \
  char * _a2i_ASN1_STRING_buf = (buf); \
  LONG _a2i_ASN1_STRING_size = (size); \
  ({ \
  register char * _a2i_ASN1_STRING__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIO * __asm("a0"), ASN1_STRING * __asm("a1"), char * __asm("a2"), LONG __asm("d0"))) \
  (_a2i_ASN1_STRING__bn - 1032))(_a2i_ASN1_STRING__bn, _a2i_ASN1_STRING_bp, _a2i_ASN1_STRING_bs, _a2i_ASN1_STRING_buf, _a2i_ASN1_STRING_size); \
});})

#define i2a_ASN1_STRING(bp, a, type) ({ \
  BIO * _i2a_ASN1_STRING_bp = (bp); \
  ASN1_STRING * _i2a_ASN1_STRING_a = (a); \
  LONG _i2a_ASN1_STRING_type = (type); \
  ({ \
  register char * _i2a_ASN1_STRING__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIO * __asm("a0"), ASN1_STRING * __asm("a1"), LONG __asm("d0"))) \
  (_i2a_ASN1_STRING__bn - 1038))(_i2a_ASN1_STRING__bn, _i2a_ASN1_STRING_bp, _i2a_ASN1_STRING_a, _i2a_ASN1_STRING_type); \
});})

#define i2t_ASN1_OBJECT(buf, buf_len, a) ({ \
  char * _i2t_ASN1_OBJECT_buf = (buf); \
  LONG _i2t_ASN1_OBJECT_buf_len = (buf_len); \
  ASN1_OBJECT * _i2t_ASN1_OBJECT_a = (a); \
  ({ \
  register char * _i2t_ASN1_OBJECT__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), char * __asm("a0"), LONG __asm("d0"), ASN1_OBJECT * __asm("a1"))) \
  (_i2t_ASN1_OBJECT__bn - 1044))(_i2t_ASN1_OBJECT__bn, _i2t_ASN1_OBJECT_buf, _i2t_ASN1_OBJECT_buf_len, _i2t_ASN1_OBJECT_a); \
});})

#define a2d_ASN1_OBJECT(out, olen, buf, num) ({ \
  unsigned char * _a2d_ASN1_OBJECT_out = (out); \
  LONG _a2d_ASN1_OBJECT_olen = (olen); \
  const char * _a2d_ASN1_OBJECT_buf = (buf); \
  LONG _a2d_ASN1_OBJECT_num = (num); \
  ({ \
  register char * _a2d_ASN1_OBJECT__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), unsigned char * __asm("a0"), LONG __asm("d0"), const char * __asm("a1"), LONG __asm("d1"))) \
  (_a2d_ASN1_OBJECT__bn - 1050))(_a2d_ASN1_OBJECT__bn, _a2d_ASN1_OBJECT_out, _a2d_ASN1_OBJECT_olen, _a2d_ASN1_OBJECT_buf, _a2d_ASN1_OBJECT_num); \
});})

#define ASN1_OBJECT_create(nid, data, len, sn, ln) ({ \
  LONG _ASN1_OBJECT_create_nid = (nid); \
  unsigned char * _ASN1_OBJECT_create_data = (data); \
  LONG _ASN1_OBJECT_create_len = (len); \
  const char * _ASN1_OBJECT_create_sn = (sn); \
  const char * _ASN1_OBJECT_create_ln = (ln); \
  ({ \
  register char * _ASN1_OBJECT_create__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((ASN1_OBJECT * (*)(char * __asm("a6"), LONG __asm("d0"), unsigned char * __asm("a0"), LONG __asm("d1"), const char * __asm("a1"), const char * __asm("a2"))) \
  (_ASN1_OBJECT_create__bn - 1056))(_ASN1_OBJECT_create__bn, _ASN1_OBJECT_create_nid, _ASN1_OBJECT_create_data, _ASN1_OBJECT_create_len, _ASN1_OBJECT_create_sn, _ASN1_OBJECT_create_ln); \
});})

#define ASN1_INTEGER_set(a, v) ({ \
  ASN1_INTEGER * _ASN1_INTEGER_set_a = (a); \
  long _ASN1_INTEGER_set_v = (v); \
  ({ \
  register char * _ASN1_INTEGER_set__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), ASN1_INTEGER * __asm("a0"), long __asm("d0"))) \
  (_ASN1_INTEGER_set__bn - 1062))(_ASN1_INTEGER_set__bn, _ASN1_INTEGER_set_a, _ASN1_INTEGER_set_v); \
});})

#define ASN1_INTEGER_get(a) ({ \
  ASN1_INTEGER * _ASN1_INTEGER_get_a = (a); \
  ({ \
  register char * _ASN1_INTEGER_get__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((long (*)(char * __asm("a6"), ASN1_INTEGER * __asm("a0"))) \
  (_ASN1_INTEGER_get__bn - 1068))(_ASN1_INTEGER_get__bn, _ASN1_INTEGER_get_a); \
});})

#define BN_to_ASN1_INTEGER(bn, ai) ({ \
  BIGNUM * _BN_to_ASN1_INTEGER_bn = (bn); \
  ASN1_INTEGER * _BN_to_ASN1_INTEGER_ai = (ai); \
  ({ \
  register char * _BN_to_ASN1_INTEGER__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((ASN1_INTEGER * (*)(char * __asm("a6"), BIGNUM * __asm("a0"), ASN1_INTEGER * __asm("a1"))) \
  (_BN_to_ASN1_INTEGER__bn - 1074))(_BN_to_ASN1_INTEGER__bn, _BN_to_ASN1_INTEGER_bn, _BN_to_ASN1_INTEGER_ai); \
});})

#define ASN1_INTEGER_to_BN(ai, bn) ({ \
  ASN1_INTEGER * _ASN1_INTEGER_to_BN_ai = (ai); \
  BIGNUM * _ASN1_INTEGER_to_BN_bn = (bn); \
  ({ \
  register char * _ASN1_INTEGER_to_BN__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((BIGNUM * (*)(char * __asm("a6"), ASN1_INTEGER * __asm("a0"), BIGNUM * __asm("a1"))) \
  (_ASN1_INTEGER_to_BN__bn - 1080))(_ASN1_INTEGER_to_BN__bn, _ASN1_INTEGER_to_BN_ai, _ASN1_INTEGER_to_BN_bn); \
});})

#define ASN1_ENUMERATED_set(a, v) ({ \
  ASN1_ENUMERATED * _ASN1_ENUMERATED_set_a = (a); \
  long _ASN1_ENUMERATED_set_v = (v); \
  ({ \
  register char * _ASN1_ENUMERATED_set__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), ASN1_ENUMERATED * __asm("a0"), long __asm("d0"))) \
  (_ASN1_ENUMERATED_set__bn - 1086))(_ASN1_ENUMERATED_set__bn, _ASN1_ENUMERATED_set_a, _ASN1_ENUMERATED_set_v); \
});})

#define ASN1_ENUMERATED_get(a) ({ \
  ASN1_ENUMERATED * _ASN1_ENUMERATED_get_a = (a); \
  ({ \
  register char * _ASN1_ENUMERATED_get__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((long (*)(char * __asm("a6"), ASN1_ENUMERATED * __asm("a0"))) \
  (_ASN1_ENUMERATED_get__bn - 1092))(_ASN1_ENUMERATED_get__bn, _ASN1_ENUMERATED_get_a); \
});})

#define BN_to_ASN1_ENUMERATED(bn, ai) ({ \
  BIGNUM * _BN_to_ASN1_ENUMERATED_bn = (bn); \
  ASN1_ENUMERATED * _BN_to_ASN1_ENUMERATED_ai = (ai); \
  ({ \
  register char * _BN_to_ASN1_ENUMERATED__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((ASN1_ENUMERATED * (*)(char * __asm("a6"), BIGNUM * __asm("a0"), ASN1_ENUMERATED * __asm("a1"))) \
  (_BN_to_ASN1_ENUMERATED__bn - 1098))(_BN_to_ASN1_ENUMERATED__bn, _BN_to_ASN1_ENUMERATED_bn, _BN_to_ASN1_ENUMERATED_ai); \
});})

#define ASN1_ENUMERATED_to_BN(ai, bn) ({ \
  ASN1_ENUMERATED * _ASN1_ENUMERATED_to_BN_ai = (ai); \
  BIGNUM * _ASN1_ENUMERATED_to_BN_bn = (bn); \
  ({ \
  register char * _ASN1_ENUMERATED_to_BN__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((BIGNUM * (*)(char * __asm("a6"), ASN1_ENUMERATED * __asm("a0"), BIGNUM * __asm("a1"))) \
  (_ASN1_ENUMERATED_to_BN__bn - 1104))(_ASN1_ENUMERATED_to_BN__bn, _ASN1_ENUMERATED_to_BN_ai, _ASN1_ENUMERATED_to_BN_bn); \
});})

#define ASN1_PRINTABLE_type(s, max) ({ \
  const unsigned char * _ASN1_PRINTABLE_type_s = (s); \
  LONG _ASN1_PRINTABLE_type_max = (max); \
  ({ \
  register char * _ASN1_PRINTABLE_type__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const unsigned char * __asm("a0"), LONG __asm("d0"))) \
  (_ASN1_PRINTABLE_type__bn - 1110))(_ASN1_PRINTABLE_type__bn, _ASN1_PRINTABLE_type_s, _ASN1_PRINTABLE_type_max); \
});})

#define i2d_ASN1_bytes(a, pp, tag, xclass) ({ \
  ASN1_STRING * _i2d_ASN1_bytes_a = (a); \
  unsigned char ** _i2d_ASN1_bytes_pp = (pp); \
  LONG _i2d_ASN1_bytes_tag = (tag); \
  LONG _i2d_ASN1_bytes_xclass = (xclass); \
  ({ \
  register char * _i2d_ASN1_bytes__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), ASN1_STRING * __asm("a0"), unsigned char ** __asm("a1"), LONG __asm("d0"), LONG __asm("d1"))) \
  (_i2d_ASN1_bytes__bn - 1116))(_i2d_ASN1_bytes__bn, _i2d_ASN1_bytes_a, _i2d_ASN1_bytes_pp, _i2d_ASN1_bytes_tag, _i2d_ASN1_bytes_xclass); \
});})

#define d2i_ASN1_bytes(a, pp, length, Ptag, Pclass) ({ \
  ASN1_STRING ** _d2i_ASN1_bytes_a = (a); \
  unsigned char ** _d2i_ASN1_bytes_pp = (pp); \
  long _d2i_ASN1_bytes_length = (length); \
  LONG _d2i_ASN1_bytes_Ptag = (Ptag); \
  LONG _d2i_ASN1_bytes_Pclass = (Pclass); \
  ({ \
  register char * _d2i_ASN1_bytes__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((ASN1_STRING * (*)(char * __asm("a6"), ASN1_STRING ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"), LONG __asm("d1"), LONG __asm("d2"))) \
  (_d2i_ASN1_bytes__bn - 1122))(_d2i_ASN1_bytes__bn, _d2i_ASN1_bytes_a, _d2i_ASN1_bytes_pp, _d2i_ASN1_bytes_length, _d2i_ASN1_bytes_Ptag, _d2i_ASN1_bytes_Pclass); \
});})

#define ASN1_tag2bit(tag) ({ \
  LONG _ASN1_tag2bit_tag = (tag); \
  ({ \
  register char * _ASN1_tag2bit__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((unsigned long (*)(char * __asm("a6"), LONG __asm("d0"))) \
  (_ASN1_tag2bit__bn - 1128))(_ASN1_tag2bit__bn, _ASN1_tag2bit_tag); \
});})

#define d2i_ASN1_type_bytes(a, pp, length, type) ({ \
  ASN1_STRING ** _d2i_ASN1_type_bytes_a = (a); \
  unsigned char ** _d2i_ASN1_type_bytes_pp = (pp); \
  long _d2i_ASN1_type_bytes_length = (length); \
  LONG _d2i_ASN1_type_bytes_type = (type); \
  ({ \
  register char * _d2i_ASN1_type_bytes__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((ASN1_STRING * (*)(char * __asm("a6"), ASN1_STRING ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"), LONG __asm("d1"))) \
  (_d2i_ASN1_type_bytes__bn - 1134))(_d2i_ASN1_type_bytes__bn, _d2i_ASN1_type_bytes_a, _d2i_ASN1_type_bytes_pp, _d2i_ASN1_type_bytes_length, _d2i_ASN1_type_bytes_type); \
});})

#define asn1_Finish(c) ({ \
  ASN1_CTX * _asn1_Finish_c = (c); \
  ({ \
  register char * _asn1_Finish__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), ASN1_CTX * __asm("a0"))) \
  (_asn1_Finish__bn - 1140))(_asn1_Finish__bn, _asn1_Finish_c); \
});})

#define ASN1_get_object(pp, plength, ptag, pclass, omax) ({ \
  unsigned char ** _ASN1_get_object_pp = (pp); \
  long * _ASN1_get_object_plength = (plength); \
  int * _ASN1_get_object_ptag = (ptag); \
  int * _ASN1_get_object_pclass = (pclass); \
  long _ASN1_get_object_omax = (omax); \
  ({ \
  register char * _ASN1_get_object__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), unsigned char ** __asm("a0"), long * __asm("a1"), int * __asm("a2"), int * __asm("a3"), long __asm("d0"))) \
  (_ASN1_get_object__bn - 1146))(_ASN1_get_object__bn, _ASN1_get_object_pp, _ASN1_get_object_plength, _ASN1_get_object_ptag, _ASN1_get_object_pclass, _ASN1_get_object_omax); \
});})

#define ASN1_check_infinite_end(p, len) ({ \
  unsigned char ** _ASN1_check_infinite_end_p = (p); \
  long _ASN1_check_infinite_end_len = (len); \
  ({ \
  register char * _ASN1_check_infinite_end__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), unsigned char ** __asm("a0"), long __asm("d0"))) \
  (_ASN1_check_infinite_end__bn - 1152))(_ASN1_check_infinite_end__bn, _ASN1_check_infinite_end_p, _ASN1_check_infinite_end_len); \
});})

#define ASN1_put_object(pp, constructed, length, tag, xclass) ({ \
  unsigned char ** _ASN1_put_object_pp = (pp); \
  LONG _ASN1_put_object_constructed = (constructed); \
  LONG _ASN1_put_object_length = (length); \
  LONG _ASN1_put_object_tag = (tag); \
  LONG _ASN1_put_object_xclass = (xclass); \
  ({ \
  register char * _ASN1_put_object__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), unsigned char ** __asm("a0"), LONG __asm("d0"), LONG __asm("d1"), LONG __asm("d2"), LONG __asm("d3"))) \
  (_ASN1_put_object__bn - 1158))(_ASN1_put_object__bn, _ASN1_put_object_pp, _ASN1_put_object_constructed, _ASN1_put_object_length, _ASN1_put_object_tag, _ASN1_put_object_xclass); \
});})

#define ASN1_object_size(constructed, length, tag) ({ \
  LONG _ASN1_object_size_constructed = (constructed); \
  LONG _ASN1_object_size_length = (length); \
  LONG _ASN1_object_size_tag = (tag); \
  ({ \
  register char * _ASN1_object_size__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), LONG __asm("d0"), LONG __asm("d1"), LONG __asm("d2"))) \
  (_ASN1_object_size__bn - 1164))(_ASN1_object_size__bn, _ASN1_object_size_constructed, _ASN1_object_size_length, _ASN1_object_size_tag); \
});})

#define ASN1_dup(i2d, d2i, x) ({ \
  int (*_ASN1_dup_i2d)() = (i2d); \
  char * (*_ASN1_dup_d2i)() = (d2i); \
  char * _ASN1_dup_x = (x); \
  ({ \
  register char * _ASN1_dup__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((char * (*)(char * __asm("a6"), int (*)() __asm("a0"), char * (*)() __asm("a1"), char * __asm("a2"))) \
  (_ASN1_dup__bn - 1170))(_ASN1_dup__bn, _ASN1_dup_i2d, _ASN1_dup_d2i, _ASN1_dup_x); \
});})

#define ASN1_item_dup(it, x) ({ \
  const ASN1_ITEM * _ASN1_item_dup_it = (it); \
  void * _ASN1_item_dup_x = (x); \
  ({ \
  register char * _ASN1_item_dup__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void * (*)(char * __asm("a6"), const ASN1_ITEM * __asm("a0"), void * __asm("a1"))) \
  (_ASN1_item_dup__bn - 1176))(_ASN1_item_dup__bn, _ASN1_item_dup_it, _ASN1_item_dup_x); \
});})

#define ASN1_STRING_to_UTF8(out, in) ({ \
  unsigned char ** _ASN1_STRING_to_UTF8_out = (out); \
  ASN1_STRING * _ASN1_STRING_to_UTF8_in = (in); \
  ({ \
  register char * _ASN1_STRING_to_UTF8__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), unsigned char ** __asm("a0"), ASN1_STRING * __asm("a1"))) \
  (_ASN1_STRING_to_UTF8__bn - 1182))(_ASN1_STRING_to_UTF8__bn, _ASN1_STRING_to_UTF8_out, _ASN1_STRING_to_UTF8_in); \
});})

#define ASN1_d2i_bio(xnew, d2i, bp, x) ({ \
  char * (*_ASN1_d2i_bio_xnew)() = (xnew); \
  char * (*_ASN1_d2i_bio_d2i)() = (d2i); \
  BIO * _ASN1_d2i_bio_bp = (bp); \
  unsigned char ** _ASN1_d2i_bio_x = (x); \
  ({ \
  register char * _ASN1_d2i_bio__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((char * (*)(char * __asm("a6"), char * (*)() __asm("a0"), char * (*)() __asm("a1"), BIO * __asm("a2"), unsigned char ** __asm("a3"))) \
  (_ASN1_d2i_bio__bn - 1188))(_ASN1_d2i_bio__bn, _ASN1_d2i_bio_xnew, _ASN1_d2i_bio_d2i, _ASN1_d2i_bio_bp, _ASN1_d2i_bio_x); \
});})

#define ASN1_item_d2i_bio(it, in, x) ({ \
  const ASN1_ITEM * _ASN1_item_d2i_bio_it = (it); \
  BIO * _ASN1_item_d2i_bio_in = (in); \
  void * _ASN1_item_d2i_bio_x = (x); \
  ({ \
  register char * _ASN1_item_d2i_bio__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void * (*)(char * __asm("a6"), const ASN1_ITEM * __asm("a0"), BIO * __asm("a1"), void * __asm("a2"))) \
  (_ASN1_item_d2i_bio__bn - 1194))(_ASN1_item_d2i_bio__bn, _ASN1_item_d2i_bio_it, _ASN1_item_d2i_bio_in, _ASN1_item_d2i_bio_x); \
});})

#define ASN1_i2d_bio(i2d, out, x) ({ \
  int (*_ASN1_i2d_bio_i2d)() = (i2d); \
  BIO * _ASN1_i2d_bio_out = (out); \
  unsigned char * _ASN1_i2d_bio_x = (x); \
  ({ \
  register char * _ASN1_i2d_bio__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), int (*)() __asm("a0"), BIO * __asm("a1"), unsigned char * __asm("a2"))) \
  (_ASN1_i2d_bio__bn - 1200))(_ASN1_i2d_bio__bn, _ASN1_i2d_bio_i2d, _ASN1_i2d_bio_out, _ASN1_i2d_bio_x); \
});})

#define ASN1_item_i2d_bio(it, out, x) ({ \
  const ASN1_ITEM * _ASN1_item_i2d_bio_it = (it); \
  BIO * _ASN1_item_i2d_bio_out = (out); \
  void * _ASN1_item_i2d_bio_x = (x); \
  ({ \
  register char * _ASN1_item_i2d_bio__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const ASN1_ITEM * __asm("a0"), BIO * __asm("a1"), void * __asm("a2"))) \
  (_ASN1_item_i2d_bio__bn - 1206))(_ASN1_item_i2d_bio__bn, _ASN1_item_i2d_bio_it, _ASN1_item_i2d_bio_out, _ASN1_item_i2d_bio_x); \
});})

#define ASN1_UTCTIME_print(fp, a) ({ \
  BIO * _ASN1_UTCTIME_print_fp = (fp); \
  ASN1_UTCTIME * _ASN1_UTCTIME_print_a = (a); \
  ({ \
  register char * _ASN1_UTCTIME_print__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIO * __asm("a0"), ASN1_UTCTIME * __asm("a1"))) \
  (_ASN1_UTCTIME_print__bn - 1212))(_ASN1_UTCTIME_print__bn, _ASN1_UTCTIME_print_fp, _ASN1_UTCTIME_print_a); \
});})

#define ASN1_GENERALIZEDTIME_print(fp, a) ({ \
  BIO * _ASN1_GENERALIZEDTIME_print_fp = (fp); \
  ASN1_GENERALIZEDTIME * _ASN1_GENERALIZEDTIME_print_a = (a); \
  ({ \
  register char * _ASN1_GENERALIZEDTIME_print__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIO * __asm("a0"), ASN1_GENERALIZEDTIME * __asm("a1"))) \
  (_ASN1_GENERALIZEDTIME_print__bn - 1218))(_ASN1_GENERALIZEDTIME_print__bn, _ASN1_GENERALIZEDTIME_print_fp, _ASN1_GENERALIZEDTIME_print_a); \
});})

#define ASN1_TIME_print(fp, a) ({ \
  BIO * _ASN1_TIME_print_fp = (fp); \
  ASN1_TIME * _ASN1_TIME_print_a = (a); \
  ({ \
  register char * _ASN1_TIME_print__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIO * __asm("a0"), ASN1_TIME * __asm("a1"))) \
  (_ASN1_TIME_print__bn - 1224))(_ASN1_TIME_print__bn, _ASN1_TIME_print_fp, _ASN1_TIME_print_a); \
});})

#define ASN1_STRING_print(bp, v) ({ \
  BIO * _ASN1_STRING_print_bp = (bp); \
  ASN1_STRING * _ASN1_STRING_print_v = (v); \
  ({ \
  register char * _ASN1_STRING_print__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIO * __asm("a0"), ASN1_STRING * __asm("a1"))) \
  (_ASN1_STRING_print__bn - 1230))(_ASN1_STRING_print__bn, _ASN1_STRING_print_bp, _ASN1_STRING_print_v); \
});})

#define ASN1_STRING_print_ex(out, str, flags) ({ \
  BIO * _ASN1_STRING_print_ex_out = (out); \
  ASN1_STRING * _ASN1_STRING_print_ex_str = (str); \
  unsigned long _ASN1_STRING_print_ex_flags = (flags); \
  ({ \
  register char * _ASN1_STRING_print_ex__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIO * __asm("a0"), ASN1_STRING * __asm("a1"), unsigned long __asm("d0"))) \
  (_ASN1_STRING_print_ex__bn - 1236))(_ASN1_STRING_print_ex__bn, _ASN1_STRING_print_ex_out, _ASN1_STRING_print_ex_str, _ASN1_STRING_print_ex_flags); \
});})

#define ASN1_parse(bp, pp, len, indent) ({ \
  BIO * _ASN1_parse_bp = (bp); \
  unsigned char * _ASN1_parse_pp = (pp); \
  long _ASN1_parse_len = (len); \
  LONG _ASN1_parse_indent = (indent); \
  ({ \
  register char * _ASN1_parse__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIO * __asm("a0"), unsigned char * __asm("a1"), long __asm("d0"), LONG __asm("d1"))) \
  (_ASN1_parse__bn - 1242))(_ASN1_parse__bn, _ASN1_parse_bp, _ASN1_parse_pp, _ASN1_parse_len, _ASN1_parse_indent); \
});})

#define ASN1_parse_dump(bp, pp, len, indent, dump) ({ \
  BIO * _ASN1_parse_dump_bp = (bp); \
  unsigned char * _ASN1_parse_dump_pp = (pp); \
  long _ASN1_parse_dump_len = (len); \
  LONG _ASN1_parse_dump_indent = (indent); \
  LONG _ASN1_parse_dump_dump = (dump); \
  ({ \
  register char * _ASN1_parse_dump__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIO * __asm("a0"), unsigned char * __asm("a1"), long __asm("d0"), LONG __asm("d1"), LONG __asm("d2"))) \
  (_ASN1_parse_dump__bn - 1248))(_ASN1_parse_dump__bn, _ASN1_parse_dump_bp, _ASN1_parse_dump_pp, _ASN1_parse_dump_len, _ASN1_parse_dump_indent, _ASN1_parse_dump_dump); \
});})

#define ASN1_tag2str(tag) ({ \
  LONG _ASN1_tag2str_tag = (tag); \
  ({ \
  register char * _ASN1_tag2str__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const char * (*)(char * __asm("a6"), LONG __asm("d0"))) \
  (_ASN1_tag2str__bn - 1254))(_ASN1_tag2str__bn, _ASN1_tag2str_tag); \
});})

#define i2d_ASN1_HEADER(a, pp) ({ \
  ASN1_HEADER * _i2d_ASN1_HEADER_a = (a); \
  unsigned char ** _i2d_ASN1_HEADER_pp = (pp); \
  ({ \
  register char * _i2d_ASN1_HEADER__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), ASN1_HEADER * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_ASN1_HEADER__bn - 1260))(_i2d_ASN1_HEADER__bn, _i2d_ASN1_HEADER_a, _i2d_ASN1_HEADER_pp); \
});})

#define d2i_ASN1_HEADER(a, pp, length) ({ \
  ASN1_HEADER ** _d2i_ASN1_HEADER_a = (a); \
  unsigned char ** _d2i_ASN1_HEADER_pp = (pp); \
  long _d2i_ASN1_HEADER_length = (length); \
  ({ \
  register char * _d2i_ASN1_HEADER__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((ASN1_HEADER * (*)(char * __asm("a6"), ASN1_HEADER ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_ASN1_HEADER__bn - 1266))(_d2i_ASN1_HEADER__bn, _d2i_ASN1_HEADER_a, _d2i_ASN1_HEADER_pp, _d2i_ASN1_HEADER_length); \
});})

#define ASN1_HEADER_new() ({ \
  register char * _ASN1_HEADER_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((ASN1_HEADER * (*)(char * __asm("a6"))) \
  (_ASN1_HEADER_new__bn - 1272))(_ASN1_HEADER_new__bn); \
})

#define ASN1_HEADER_free(a) ({ \
  ASN1_HEADER * _ASN1_HEADER_free_a = (a); \
  ({ \
  register char * _ASN1_HEADER_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), ASN1_HEADER * __asm("a0"))) \
  (_ASN1_HEADER_free__bn - 1278))(_ASN1_HEADER_free__bn, _ASN1_HEADER_free_a); \
});})

#define ASN1_UNIVERSALSTRING_to_string(s) ({ \
  ASN1_UNIVERSALSTRING * _ASN1_UNIVERSALSTRING_to_string_s = (s); \
  ({ \
  register char * _ASN1_UNIVERSALSTRING_to_string__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), ASN1_UNIVERSALSTRING * __asm("a0"))) \
  (_ASN1_UNIVERSALSTRING_to_string__bn - 1284))(_ASN1_UNIVERSALSTRING_to_string__bn, _ASN1_UNIVERSALSTRING_to_string_s); \
});})

#define X509_asn1_meth() ({ \
  register char * _X509_asn1_meth__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((ASN1_METHOD * (*)(char * __asm("a6"))) \
  (_X509_asn1_meth__bn - 1290))(_X509_asn1_meth__bn); \
})

#define RSAPrivateKey_asn1_meth() ({ \
  register char * _RSAPrivateKey_asn1_meth__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((ASN1_METHOD * (*)(char * __asm("a6"))) \
  (_RSAPrivateKey_asn1_meth__bn - 1296))(_RSAPrivateKey_asn1_meth__bn); \
})

#define ASN1_IA5STRING_asn1_meth() ({ \
  register char * _ASN1_IA5STRING_asn1_meth__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((ASN1_METHOD * (*)(char * __asm("a6"))) \
  (_ASN1_IA5STRING_asn1_meth__bn - 1302))(_ASN1_IA5STRING_asn1_meth__bn); \
})

#define ASN1_BIT_STRING_asn1_meth() ({ \
  register char * _ASN1_BIT_STRING_asn1_meth__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((ASN1_METHOD * (*)(char * __asm("a6"))) \
  (_ASN1_BIT_STRING_asn1_meth__bn - 1308))(_ASN1_BIT_STRING_asn1_meth__bn); \
})

#define ASN1_TYPE_set_octetstring(a, data, len) ({ \
  ASN1_TYPE * _ASN1_TYPE_set_octetstring_a = (a); \
  unsigned char * _ASN1_TYPE_set_octetstring_data = (data); \
  LONG _ASN1_TYPE_set_octetstring_len = (len); \
  ({ \
  register char * _ASN1_TYPE_set_octetstring__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), ASN1_TYPE * __asm("a0"), unsigned char * __asm("a1"), LONG __asm("d0"))) \
  (_ASN1_TYPE_set_octetstring__bn - 1314))(_ASN1_TYPE_set_octetstring__bn, _ASN1_TYPE_set_octetstring_a, _ASN1_TYPE_set_octetstring_data, _ASN1_TYPE_set_octetstring_len); \
});})

#define ASN1_TYPE_get_octetstring(a, data, max_len) ({ \
  ASN1_TYPE * _ASN1_TYPE_get_octetstring_a = (a); \
  unsigned char * _ASN1_TYPE_get_octetstring_data = (data); \
  LONG _ASN1_TYPE_get_octetstring_max_len = (max_len); \
  ({ \
  register char * _ASN1_TYPE_get_octetstring__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), ASN1_TYPE * __asm("a0"), unsigned char * __asm("a1"), LONG __asm("d0"))) \
  (_ASN1_TYPE_get_octetstring__bn - 1320))(_ASN1_TYPE_get_octetstring__bn, _ASN1_TYPE_get_octetstring_a, _ASN1_TYPE_get_octetstring_data, _ASN1_TYPE_get_octetstring_max_len); \
});})

#define ASN1_TYPE_set_int_octetstring(a, num, data, len) ({ \
  ASN1_TYPE * _ASN1_TYPE_set_int_octetstring_a = (a); \
  long _ASN1_TYPE_set_int_octetstring_num = (num); \
  unsigned char * _ASN1_TYPE_set_int_octetstring_data = (data); \
  LONG _ASN1_TYPE_set_int_octetstring_len = (len); \
  ({ \
  register char * _ASN1_TYPE_set_int_octetstring__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), ASN1_TYPE * __asm("a0"), long __asm("d0"), unsigned char * __asm("a1"), LONG __asm("d1"))) \
  (_ASN1_TYPE_set_int_octetstring__bn - 1326))(_ASN1_TYPE_set_int_octetstring__bn, _ASN1_TYPE_set_int_octetstring_a, _ASN1_TYPE_set_int_octetstring_num, _ASN1_TYPE_set_int_octetstring_data, _ASN1_TYPE_set_int_octetstring_len); \
});})

#define ASN1_TYPE_get_int_octetstring(a, num, data, max_len) ({ \
  ASN1_TYPE * _ASN1_TYPE_get_int_octetstring_a = (a); \
  long * _ASN1_TYPE_get_int_octetstring_num = (num); \
  unsigned char * _ASN1_TYPE_get_int_octetstring_data = (data); \
  LONG _ASN1_TYPE_get_int_octetstring_max_len = (max_len); \
  ({ \
  register char * _ASN1_TYPE_get_int_octetstring__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), ASN1_TYPE * __asm("a0"), long * __asm("a1"), unsigned char * __asm("a2"), LONG __asm("d0"))) \
  (_ASN1_TYPE_get_int_octetstring__bn - 1332))(_ASN1_TYPE_get_int_octetstring__bn, _ASN1_TYPE_get_int_octetstring_a, _ASN1_TYPE_get_int_octetstring_num, _ASN1_TYPE_get_int_octetstring_data, _ASN1_TYPE_get_int_octetstring_max_len); \
});})

#define ASN1_seq_unpack(buf, len, d2i, free_func) ({ \
  unsigned char * _ASN1_seq_unpack_buf = (buf); \
  LONG _ASN1_seq_unpack_len = (len); \
  char * (*_ASN1_seq_unpack_d2i)() = (d2i); \
  void (*_ASN1_seq_unpack_free_func)(void *) = (free_func); \
  ({ \
  register char * _ASN1_seq_unpack__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((STACK * (*)(char * __asm("a6"), unsigned char * __asm("a0"), LONG __asm("d0"), char * (*)() __asm("a1"), void (*)(void *) __asm("a2"))) \
  (_ASN1_seq_unpack__bn - 1338))(_ASN1_seq_unpack__bn, _ASN1_seq_unpack_buf, _ASN1_seq_unpack_len, _ASN1_seq_unpack_d2i, _ASN1_seq_unpack_free_func); \
});})

#define ASN1_seq_pack(safes, i2d, buf, len) ({ \
  STACK * _ASN1_seq_pack_safes = (safes); \
  int (*_ASN1_seq_pack_i2d)() = (i2d); \
  unsigned char ** _ASN1_seq_pack_buf = (buf); \
  int * _ASN1_seq_pack_len = (len); \
  ({ \
  register char * _ASN1_seq_pack__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((unsigned char * (*)(char * __asm("a6"), STACK * __asm("a0"), int (*)() __asm("a1"), unsigned char ** __asm("a2"), int * __asm("a3"))) \
  (_ASN1_seq_pack__bn - 1344))(_ASN1_seq_pack__bn, _ASN1_seq_pack_safes, _ASN1_seq_pack_i2d, _ASN1_seq_pack_buf, _ASN1_seq_pack_len); \
});})

#define ASN1_unpack_string(oct, d2i) ({ \
  ASN1_STRING * _ASN1_unpack_string_oct = (oct); \
  char * (*_ASN1_unpack_string_d2i)() = (d2i); \
  ({ \
  register char * _ASN1_unpack_string__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void * (*)(char * __asm("a6"), ASN1_STRING * __asm("a0"), char * (*)() __asm("a1"))) \
  (_ASN1_unpack_string__bn - 1350))(_ASN1_unpack_string__bn, _ASN1_unpack_string_oct, _ASN1_unpack_string_d2i); \
});})

#define ASN1_item_unpack(oct, it) ({ \
  ASN1_STRING * _ASN1_item_unpack_oct = (oct); \
  const ASN1_ITEM * _ASN1_item_unpack_it = (it); \
  ({ \
  register char * _ASN1_item_unpack__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void * (*)(char * __asm("a6"), ASN1_STRING * __asm("a0"), const ASN1_ITEM * __asm("a1"))) \
  (_ASN1_item_unpack__bn - 1356))(_ASN1_item_unpack__bn, _ASN1_item_unpack_oct, _ASN1_item_unpack_it); \
});})

#define ASN1_pack_string(obj, i2d, oct) ({ \
  void * _ASN1_pack_string_obj = (obj); \
  int (*_ASN1_pack_string_i2d)() = (i2d); \
  ASN1_OCTET_STRING ** _ASN1_pack_string_oct = (oct); \
  ({ \
  register char * _ASN1_pack_string__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((ASN1_STRING * (*)(char * __asm("a6"), void * __asm("a0"), int (*)() __asm("a1"), ASN1_OCTET_STRING ** __asm("a2"))) \
  (_ASN1_pack_string__bn - 1362))(_ASN1_pack_string__bn, _ASN1_pack_string_obj, _ASN1_pack_string_i2d, _ASN1_pack_string_oct); \
});})

#define ASN1_item_pack(obj, it, oct) ({ \
  void * _ASN1_item_pack_obj = (obj); \
  const ASN1_ITEM * _ASN1_item_pack_it = (it); \
  ASN1_OCTET_STRING ** _ASN1_item_pack_oct = (oct); \
  ({ \
  register char * _ASN1_item_pack__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((ASN1_STRING * (*)(char * __asm("a6"), void * __asm("a0"), const ASN1_ITEM * __asm("a1"), ASN1_OCTET_STRING ** __asm("a2"))) \
  (_ASN1_item_pack__bn - 1368))(_ASN1_item_pack__bn, _ASN1_item_pack_obj, _ASN1_item_pack_it, _ASN1_item_pack_oct); \
});})

#define ASN1_STRING_set_default_mask(mask) ({ \
  unsigned long _ASN1_STRING_set_default_mask_mask = (mask); \
  ({ \
  register char * _ASN1_STRING_set_default_mask__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), unsigned long __asm("d0"))) \
  (_ASN1_STRING_set_default_mask__bn - 1374))(_ASN1_STRING_set_default_mask__bn, _ASN1_STRING_set_default_mask_mask); \
});})

#define ASN1_STRING_set_default_mask_asc(p) ({ \
  char * _ASN1_STRING_set_default_mask_asc_p = (p); \
  ({ \
  register char * _ASN1_STRING_set_default_mask_asc__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), char * __asm("a0"))) \
  (_ASN1_STRING_set_default_mask_asc__bn - 1380))(_ASN1_STRING_set_default_mask_asc__bn, _ASN1_STRING_set_default_mask_asc_p); \
});})

#define ASN1_STRING_get_default_mask() ({ \
  register char * _ASN1_STRING_get_default_mask__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((unsigned long (*)(char * __asm("a6"))) \
  (_ASN1_STRING_get_default_mask__bn - 1386))(_ASN1_STRING_get_default_mask__bn); \
})

#define ASN1_mbstring_copy(out, in, len, inform, mask) ({ \
  ASN1_STRING ** _ASN1_mbstring_copy_out = (out); \
  const unsigned char * _ASN1_mbstring_copy_in = (in); \
  LONG _ASN1_mbstring_copy_len = (len); \
  LONG _ASN1_mbstring_copy_inform = (inform); \
  unsigned long _ASN1_mbstring_copy_mask = (mask); \
  ({ \
  register char * _ASN1_mbstring_copy__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), ASN1_STRING ** __asm("a0"), const unsigned char * __asm("a1"), LONG __asm("d0"), LONG __asm("d1"), unsigned long __asm("d2"))) \
  (_ASN1_mbstring_copy__bn - 1392))(_ASN1_mbstring_copy__bn, _ASN1_mbstring_copy_out, _ASN1_mbstring_copy_in, _ASN1_mbstring_copy_len, _ASN1_mbstring_copy_inform, _ASN1_mbstring_copy_mask); \
});})

#define ASN1_mbstring_ncopy(out, in, len, inform, mask, minsize, maxsize) ({ \
  ASN1_STRING ** _ASN1_mbstring_ncopy_out = (out); \
  const unsigned char * _ASN1_mbstring_ncopy_in = (in); \
  LONG _ASN1_mbstring_ncopy_len = (len); \
  LONG _ASN1_mbstring_ncopy_inform = (inform); \
  unsigned long _ASN1_mbstring_ncopy_mask = (mask); \
  long _ASN1_mbstring_ncopy_minsize = (minsize); \
  long _ASN1_mbstring_ncopy_maxsize = (maxsize); \
  ({ \
  register char * _ASN1_mbstring_ncopy__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), ASN1_STRING ** __asm("a0"), const unsigned char * __asm("a1"), LONG __asm("d0"), LONG __asm("d1"), unsigned long __asm("d2"), long __asm("d3"), long __asm("d4"))) \
  (_ASN1_mbstring_ncopy__bn - 1398))(_ASN1_mbstring_ncopy__bn, _ASN1_mbstring_ncopy_out, _ASN1_mbstring_ncopy_in, _ASN1_mbstring_ncopy_len, _ASN1_mbstring_ncopy_inform, _ASN1_mbstring_ncopy_mask, _ASN1_mbstring_ncopy_minsize, _ASN1_mbstring_ncopy_maxsize); \
});})

#define ASN1_STRING_set_by_NID(out, in, inlen, inform, nid) ({ \
  ASN1_STRING ** _ASN1_STRING_set_by_NID_out = (out); \
  const unsigned char * _ASN1_STRING_set_by_NID_in = (in); \
  LONG _ASN1_STRING_set_by_NID_inlen = (inlen); \
  LONG _ASN1_STRING_set_by_NID_inform = (inform); \
  LONG _ASN1_STRING_set_by_NID_nid = (nid); \
  ({ \
  register char * _ASN1_STRING_set_by_NID__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((ASN1_STRING * (*)(char * __asm("a6"), ASN1_STRING ** __asm("a0"), const unsigned char * __asm("a1"), LONG __asm("d0"), LONG __asm("d1"), LONG __asm("d2"))) \
  (_ASN1_STRING_set_by_NID__bn - 1404))(_ASN1_STRING_set_by_NID__bn, _ASN1_STRING_set_by_NID_out, _ASN1_STRING_set_by_NID_in, _ASN1_STRING_set_by_NID_inlen, _ASN1_STRING_set_by_NID_inform, _ASN1_STRING_set_by_NID_nid); \
});})

#define ASN1_STRING_TABLE_get(nid) ({ \
  LONG _ASN1_STRING_TABLE_get_nid = (nid); \
  ({ \
  register char * _ASN1_STRING_TABLE_get__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((ASN1_STRING_TABLE * (*)(char * __asm("a6"), LONG __asm("d0"))) \
  (_ASN1_STRING_TABLE_get__bn - 1410))(_ASN1_STRING_TABLE_get__bn, _ASN1_STRING_TABLE_get_nid); \
});})

#define ASN1_STRING_TABLE_add(a, b, c, d, e) ({ \
  LONG _ASN1_STRING_TABLE_add_a = (a); \
  long _ASN1_STRING_TABLE_add_b = (b); \
  long _ASN1_STRING_TABLE_add_c = (c); \
  unsigned long _ASN1_STRING_TABLE_add_d = (d); \
  unsigned long _ASN1_STRING_TABLE_add_e = (e); \
  ({ \
  register char * _ASN1_STRING_TABLE_add__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), LONG __asm("d0"), long __asm("d1"), long __asm("d2"), unsigned long __asm("d3"), unsigned long __asm("d4"))) \
  (_ASN1_STRING_TABLE_add__bn - 1416))(_ASN1_STRING_TABLE_add__bn, _ASN1_STRING_TABLE_add_a, _ASN1_STRING_TABLE_add_b, _ASN1_STRING_TABLE_add_c, _ASN1_STRING_TABLE_add_d, _ASN1_STRING_TABLE_add_e); \
});})

#define ASN1_STRING_TABLE_cleanup() ({ \
  register char * _ASN1_STRING_TABLE_cleanup__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"))) \
  (_ASN1_STRING_TABLE_cleanup__bn - 1422))(_ASN1_STRING_TABLE_cleanup__bn); \
})

#define ASN1_item_new(it) ({ \
  const ASN1_ITEM * _ASN1_item_new_it = (it); \
  ({ \
  register char * _ASN1_item_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((ASN1_VALUE * (*)(char * __asm("a6"), const ASN1_ITEM * __asm("a0"))) \
  (_ASN1_item_new__bn - 1428))(_ASN1_item_new__bn, _ASN1_item_new_it); \
});})

#define ASN1_item_free(val, it) ({ \
  ASN1_VALUE * _ASN1_item_free_val = (val); \
  const ASN1_ITEM * _ASN1_item_free_it = (it); \
  ({ \
  register char * _ASN1_item_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), ASN1_VALUE * __asm("a0"), const ASN1_ITEM * __asm("a1"))) \
  (_ASN1_item_free__bn - 1434))(_ASN1_item_free__bn, _ASN1_item_free_val, _ASN1_item_free_it); \
});})

#define ASN1_item_d2i(val, in, len, it) ({ \
  ASN1_VALUE ** _ASN1_item_d2i_val = (val); \
  unsigned char ** _ASN1_item_d2i_in = (in); \
  long _ASN1_item_d2i_len = (len); \
  const ASN1_ITEM * _ASN1_item_d2i_it = (it); \
  ({ \
  register char * _ASN1_item_d2i__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((ASN1_VALUE * (*)(char * __asm("a6"), ASN1_VALUE ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"), const ASN1_ITEM * __asm("a2"))) \
  (_ASN1_item_d2i__bn - 1440))(_ASN1_item_d2i__bn, _ASN1_item_d2i_val, _ASN1_item_d2i_in, _ASN1_item_d2i_len, _ASN1_item_d2i_it); \
});})

#define ASN1_item_i2d(val, out, it) ({ \
  ASN1_VALUE * _ASN1_item_i2d_val = (val); \
  unsigned char ** _ASN1_item_i2d_out = (out); \
  const ASN1_ITEM * _ASN1_item_i2d_it = (it); \
  ({ \
  register char * _ASN1_item_i2d__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), ASN1_VALUE * __asm("a0"), unsigned char ** __asm("a1"), const ASN1_ITEM * __asm("a2"))) \
  (_ASN1_item_i2d__bn - 1446))(_ASN1_item_i2d__bn, _ASN1_item_i2d_val, _ASN1_item_i2d_out, _ASN1_item_i2d_it); \
});})

#define ASN1_add_oid_module() ({ \
  register char * _ASN1_add_oid_module__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"))) \
  (_ASN1_add_oid_module__bn - 1452))(_ASN1_add_oid_module__bn); \
})

#define ERR_load_ASN1_strings() ({ \
  register char * _ERR_load_ASN1_strings__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"))) \
  (_ERR_load_ASN1_strings__bn - 1458))(_ERR_load_ASN1_strings__bn); \
})

#define asn1_GetSequence(c, length) ({ \
  ASN1_CTX * _asn1_GetSequence_c = (c); \
  long * _asn1_GetSequence_length = (length); \
  ({ \
  register char * _asn1_GetSequence__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), ASN1_CTX * __asm("a0"), long * __asm("a1"))) \
  (_asn1_GetSequence__bn - 1464))(_asn1_GetSequence__bn, _asn1_GetSequence_c, _asn1_GetSequence_length); \
});})

#define asn1_add_error(address, offset) ({ \
  unsigned char * _asn1_add_error_address = (address); \
  LONG _asn1_add_error_offset = (offset); \
  ({ \
  register char * _asn1_add_error__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), unsigned char * __asm("a0"), LONG __asm("d0"))) \
  (_asn1_add_error__bn - 1470))(_asn1_add_error__bn, _asn1_add_error_address, _asn1_add_error_offset); \
});})

#define ASN1_BOOLEAN_it() ({ \
  register char * _ASN1_BOOLEAN_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_ASN1_BOOLEAN_it__bn - 1476))(_ASN1_BOOLEAN_it__bn); \
})

#define ASN1_TBOOLEAN_it() ({ \
  register char * _ASN1_TBOOLEAN_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_ASN1_TBOOLEAN_it__bn - 1482))(_ASN1_TBOOLEAN_it__bn); \
})

#define ASN1_FBOOLEAN_it() ({ \
  register char * _ASN1_FBOOLEAN_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_ASN1_FBOOLEAN_it__bn - 1488))(_ASN1_FBOOLEAN_it__bn); \
})

#define ASN1_SEQUENCE_it() ({ \
  register char * _ASN1_SEQUENCE_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_ASN1_SEQUENCE_it__bn - 1494))(_ASN1_SEQUENCE_it__bn); \
})

#define CBIGNUM_it() ({ \
  register char * _CBIGNUM_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_CBIGNUM_it__bn - 1500))(_CBIGNUM_it__bn); \
})

#define BIGNUM_it() ({ \
  register char * _BIGNUM_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_BIGNUM_it__bn - 1506))(_BIGNUM_it__bn); \
})

#define LONG_it() ({ \
  register char * _LONG_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_LONG_it__bn - 1512))(_LONG_it__bn); \
})

#define ZLONG_it() ({ \
  register char * _ZLONG_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_ZLONG_it__bn - 1518))(_ZLONG_it__bn); \
})

#define ASN1_item_ex_new(pval, it) ({ \
  ASN1_VALUE ** _ASN1_item_ex_new_pval = (pval); \
  const ASN1_ITEM * _ASN1_item_ex_new_it = (it); \
  ({ \
  register char * _ASN1_item_ex_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), ASN1_VALUE ** __asm("a0"), const ASN1_ITEM * __asm("a1"))) \
  (_ASN1_item_ex_new__bn - 1524))(_ASN1_item_ex_new__bn, _ASN1_item_ex_new_pval, _ASN1_item_ex_new_it); \
});})

#define ASN1_item_ex_free(pval, it) ({ \
  ASN1_VALUE ** _ASN1_item_ex_free_pval = (pval); \
  const ASN1_ITEM * _ASN1_item_ex_free_it = (it); \
  ({ \
  register char * _ASN1_item_ex_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), ASN1_VALUE ** __asm("a0"), const ASN1_ITEM * __asm("a1"))) \
  (_ASN1_item_ex_free__bn - 1530))(_ASN1_item_ex_free__bn, _ASN1_item_ex_free_pval, _ASN1_item_ex_free_it); \
});})

#define ASN1_template_new(pval, tt) ({ \
  ASN1_VALUE ** _ASN1_template_new_pval = (pval); \
  const ASN1_TEMPLATE * _ASN1_template_new_tt = (tt); \
  ({ \
  register char * _ASN1_template_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), ASN1_VALUE ** __asm("a0"), const ASN1_TEMPLATE * __asm("a1"))) \
  (_ASN1_template_new__bn - 1536))(_ASN1_template_new__bn, _ASN1_template_new_pval, _ASN1_template_new_tt); \
});})

#define ASN1_primitive_new(pval, it) ({ \
  ASN1_VALUE ** _ASN1_primitive_new_pval = (pval); \
  const ASN1_ITEM * _ASN1_primitive_new_it = (it); \
  ({ \
  register char * _ASN1_primitive_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), ASN1_VALUE ** __asm("a0"), const ASN1_ITEM * __asm("a1"))) \
  (_ASN1_primitive_new__bn - 1542))(_ASN1_primitive_new__bn, _ASN1_primitive_new_pval, _ASN1_primitive_new_it); \
});})

#define ASN1_template_free(pval, tt) ({ \
  ASN1_VALUE ** _ASN1_template_free_pval = (pval); \
  const ASN1_TEMPLATE * _ASN1_template_free_tt = (tt); \
  ({ \
  register char * _ASN1_template_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), ASN1_VALUE ** __asm("a0"), const ASN1_TEMPLATE * __asm("a1"))) \
  (_ASN1_template_free__bn - 1548))(_ASN1_template_free__bn, _ASN1_template_free_pval, _ASN1_template_free_tt); \
});})

#define ASN1_template_d2i(pval, in, len, tt) ({ \
  ASN1_VALUE ** _ASN1_template_d2i_pval = (pval); \
  unsigned char ** _ASN1_template_d2i_in = (in); \
  long _ASN1_template_d2i_len = (len); \
  const ASN1_TEMPLATE * _ASN1_template_d2i_tt = (tt); \
  ({ \
  register char * _ASN1_template_d2i__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), ASN1_VALUE ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"), const ASN1_TEMPLATE * __asm("a2"))) \
  (_ASN1_template_d2i__bn - 1554))(_ASN1_template_d2i__bn, _ASN1_template_d2i_pval, _ASN1_template_d2i_in, _ASN1_template_d2i_len, _ASN1_template_d2i_tt); \
});})

#define ASN1_item_ex_d2i(pval, in, len, it, tag, aclass, opt, ctx) ({ \
  ASN1_VALUE ** _ASN1_item_ex_d2i_pval = (pval); \
  unsigned char ** _ASN1_item_ex_d2i_in = (in); \
  long _ASN1_item_ex_d2i_len = (len); \
  const ASN1_ITEM * _ASN1_item_ex_d2i_it = (it); \
  LONG _ASN1_item_ex_d2i_tag = (tag); \
  LONG _ASN1_item_ex_d2i_aclass = (aclass); \
  LONG _ASN1_item_ex_d2i_opt = (opt); \
  ASN1_TLC * _ASN1_item_ex_d2i_ctx = (ctx); \
  ({ \
  register char * _ASN1_item_ex_d2i__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), ASN1_VALUE ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"), const ASN1_ITEM * __asm("a2"), LONG __asm("d1"), LONG __asm("d2"), LONG __asm("d3"), ASN1_TLC * __asm("a3"))) \
  (_ASN1_item_ex_d2i__bn - 1560))(_ASN1_item_ex_d2i__bn, _ASN1_item_ex_d2i_pval, _ASN1_item_ex_d2i_in, _ASN1_item_ex_d2i_len, _ASN1_item_ex_d2i_it, _ASN1_item_ex_d2i_tag, _ASN1_item_ex_d2i_aclass, _ASN1_item_ex_d2i_opt, _ASN1_item_ex_d2i_ctx); \
});})

#define ASN1_item_ex_i2d(pval, out, it, tag, aclass) ({ \
  ASN1_VALUE ** _ASN1_item_ex_i2d_pval = (pval); \
  unsigned char ** _ASN1_item_ex_i2d_out = (out); \
  const ASN1_ITEM * _ASN1_item_ex_i2d_it = (it); \
  LONG _ASN1_item_ex_i2d_tag = (tag); \
  LONG _ASN1_item_ex_i2d_aclass = (aclass); \
  ({ \
  register char * _ASN1_item_ex_i2d__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), ASN1_VALUE ** __asm("a0"), unsigned char ** __asm("a1"), const ASN1_ITEM * __asm("a2"), LONG __asm("d0"), LONG __asm("d1"))) \
  (_ASN1_item_ex_i2d__bn - 1566))(_ASN1_item_ex_i2d__bn, _ASN1_item_ex_i2d_pval, _ASN1_item_ex_i2d_out, _ASN1_item_ex_i2d_it, _ASN1_item_ex_i2d_tag, _ASN1_item_ex_i2d_aclass); \
});})

#define ASN1_template_i2d(pval, out, tt) ({ \
  ASN1_VALUE ** _ASN1_template_i2d_pval = (pval); \
  unsigned char ** _ASN1_template_i2d_out = (out); \
  const ASN1_TEMPLATE * _ASN1_template_i2d_tt = (tt); \
  ({ \
  register char * _ASN1_template_i2d__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), ASN1_VALUE ** __asm("a0"), unsigned char ** __asm("a1"), const ASN1_TEMPLATE * __asm("a2"))) \
  (_ASN1_template_i2d__bn - 1572))(_ASN1_template_i2d__bn, _ASN1_template_i2d_pval, _ASN1_template_i2d_out, _ASN1_template_i2d_tt); \
});})

#define ASN1_primitive_free(pval, it) ({ \
  ASN1_VALUE ** _ASN1_primitive_free_pval = (pval); \
  const ASN1_ITEM * _ASN1_primitive_free_it = (it); \
  ({ \
  register char * _ASN1_primitive_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), ASN1_VALUE ** __asm("a0"), const ASN1_ITEM * __asm("a1"))) \
  (_ASN1_primitive_free__bn - 1578))(_ASN1_primitive_free__bn, _ASN1_primitive_free_pval, _ASN1_primitive_free_it); \
});})

#define asn1_ex_i2c(pval, cont, putype, it) ({ \
  ASN1_VALUE ** _asn1_ex_i2c_pval = (pval); \
  unsigned char * _asn1_ex_i2c_cont = (cont); \
  int * _asn1_ex_i2c_putype = (putype); \
  const ASN1_ITEM * _asn1_ex_i2c_it = (it); \
  ({ \
  register char * _asn1_ex_i2c__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), ASN1_VALUE ** __asm("a0"), unsigned char * __asm("a1"), int * __asm("a2"), const ASN1_ITEM * __asm("a3"))) \
  (_asn1_ex_i2c__bn - 1584))(_asn1_ex_i2c__bn, _asn1_ex_i2c_pval, _asn1_ex_i2c_cont, _asn1_ex_i2c_putype, _asn1_ex_i2c_it); \
});})

#define asn1_ex_c2i(pval, cont, len, utype, free_cont, it) ({ \
  ASN1_VALUE ** _asn1_ex_c2i_pval = (pval); \
  unsigned char * _asn1_ex_c2i_cont = (cont); \
  LONG _asn1_ex_c2i_len = (len); \
  LONG _asn1_ex_c2i_utype = (utype); \
  char * _asn1_ex_c2i_free_cont = (free_cont); \
  const ASN1_ITEM * _asn1_ex_c2i_it = (it); \
  ({ \
  register char * _asn1_ex_c2i__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), ASN1_VALUE ** __asm("a0"), unsigned char * __asm("a1"), LONG __asm("d0"), LONG __asm("d1"), char * __asm("a2"), const ASN1_ITEM * __asm("a3"))) \
  (_asn1_ex_c2i__bn - 1590))(_asn1_ex_c2i__bn, _asn1_ex_c2i_pval, _asn1_ex_c2i_cont, _asn1_ex_c2i_len, _asn1_ex_c2i_utype, _asn1_ex_c2i_free_cont, _asn1_ex_c2i_it); \
});})

#define asn1_get_choice_selector(pval, it) ({ \
  ASN1_VALUE ** _asn1_get_choice_selector_pval = (pval); \
  const ASN1_ITEM * _asn1_get_choice_selector_it = (it); \
  ({ \
  register char * _asn1_get_choice_selector__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), ASN1_VALUE ** __asm("a0"), const ASN1_ITEM * __asm("a1"))) \
  (_asn1_get_choice_selector__bn - 1596))(_asn1_get_choice_selector__bn, _asn1_get_choice_selector_pval, _asn1_get_choice_selector_it); \
});})

#define asn1_set_choice_selector(pval, value, it) ({ \
  ASN1_VALUE ** _asn1_set_choice_selector_pval = (pval); \
  LONG _asn1_set_choice_selector_value = (value); \
  const ASN1_ITEM * _asn1_set_choice_selector_it = (it); \
  ({ \
  register char * _asn1_set_choice_selector__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), ASN1_VALUE ** __asm("a0"), LONG __asm("d0"), const ASN1_ITEM * __asm("a1"))) \
  (_asn1_set_choice_selector__bn - 1602))(_asn1_set_choice_selector__bn, _asn1_set_choice_selector_pval, _asn1_set_choice_selector_value, _asn1_set_choice_selector_it); \
});})

#define asn1_get_field_ptr(pval, tt) ({ \
  ASN1_VALUE ** _asn1_get_field_ptr_pval = (pval); \
  const ASN1_TEMPLATE * _asn1_get_field_ptr_tt = (tt); \
  ({ \
  register char * _asn1_get_field_ptr__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((ASN1_VALUE ** (*)(char * __asm("a6"), ASN1_VALUE ** __asm("a0"), const ASN1_TEMPLATE * __asm("a1"))) \
  (_asn1_get_field_ptr__bn - 1608))(_asn1_get_field_ptr__bn, _asn1_get_field_ptr_pval, _asn1_get_field_ptr_tt); \
});})

#define asn1_do_adb(pval, tt, nullerr) ({ \
  ASN1_VALUE ** _asn1_do_adb_pval = (pval); \
  const ASN1_TEMPLATE * _asn1_do_adb_tt = (tt); \
  LONG _asn1_do_adb_nullerr = (nullerr); \
  ({ \
  register char * _asn1_do_adb__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_TEMPLATE * (*)(char * __asm("a6"), ASN1_VALUE ** __asm("a0"), const ASN1_TEMPLATE * __asm("a1"), LONG __asm("d0"))) \
  (_asn1_do_adb__bn - 1614))(_asn1_do_adb__bn, _asn1_do_adb_pval, _asn1_do_adb_tt, _asn1_do_adb_nullerr); \
});})

#define asn1_do_lock(pval, op, it) ({ \
  ASN1_VALUE ** _asn1_do_lock_pval = (pval); \
  LONG _asn1_do_lock_op = (op); \
  const ASN1_ITEM * _asn1_do_lock_it = (it); \
  ({ \
  register char * _asn1_do_lock__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), ASN1_VALUE ** __asm("a0"), LONG __asm("d0"), const ASN1_ITEM * __asm("a1"))) \
  (_asn1_do_lock__bn - 1620))(_asn1_do_lock__bn, _asn1_do_lock_pval, _asn1_do_lock_op, _asn1_do_lock_it); \
});})

#define asn1_enc_init(pval, it) ({ \
  ASN1_VALUE ** _asn1_enc_init_pval = (pval); \
  const ASN1_ITEM * _asn1_enc_init_it = (it); \
  ({ \
  register char * _asn1_enc_init__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), ASN1_VALUE ** __asm("a0"), const ASN1_ITEM * __asm("a1"))) \
  (_asn1_enc_init__bn - 1626))(_asn1_enc_init__bn, _asn1_enc_init_pval, _asn1_enc_init_it); \
});})

#define asn1_enc_free(pval, it) ({ \
  ASN1_VALUE ** _asn1_enc_free_pval = (pval); \
  const ASN1_ITEM * _asn1_enc_free_it = (it); \
  ({ \
  register char * _asn1_enc_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), ASN1_VALUE ** __asm("a0"), const ASN1_ITEM * __asm("a1"))) \
  (_asn1_enc_free__bn - 1632))(_asn1_enc_free__bn, _asn1_enc_free_pval, _asn1_enc_free_it); \
});})

#define asn1_enc_restore(len, out, pval, it) ({ \
  int * _asn1_enc_restore_len = (len); \
  unsigned char ** _asn1_enc_restore_out = (out); \
  ASN1_VALUE ** _asn1_enc_restore_pval = (pval); \
  const ASN1_ITEM * _asn1_enc_restore_it = (it); \
  ({ \
  register char * _asn1_enc_restore__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), int * __asm("a0"), unsigned char ** __asm("a1"), ASN1_VALUE ** __asm("a2"), const ASN1_ITEM * __asm("a3"))) \
  (_asn1_enc_restore__bn - 1638))(_asn1_enc_restore__bn, _asn1_enc_restore_len, _asn1_enc_restore_out, _asn1_enc_restore_pval, _asn1_enc_restore_it); \
});})

#define asn1_enc_save(pval, in, inlen, it) ({ \
  ASN1_VALUE ** _asn1_enc_save_pval = (pval); \
  unsigned char * _asn1_enc_save_in = (in); \
  LONG _asn1_enc_save_inlen = (inlen); \
  const ASN1_ITEM * _asn1_enc_save_it = (it); \
  ({ \
  register char * _asn1_enc_save__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), ASN1_VALUE ** __asm("a0"), unsigned char * __asm("a1"), LONG __asm("d0"), const ASN1_ITEM * __asm("a2"))) \
  (_asn1_enc_save__bn - 1644))(_asn1_enc_save__bn, _asn1_enc_save_pval, _asn1_enc_save_in, _asn1_enc_save_inlen, _asn1_enc_save_it); \
});})

#define BIO_ctrl_pending(b) ({ \
  BIO * _BIO_ctrl_pending_b = (b); \
  ({ \
  register char * _BIO_ctrl_pending__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((size_t (*)(char * __asm("a6"), BIO * __asm("a0"))) \
  (_BIO_ctrl_pending__bn - 1650))(_BIO_ctrl_pending__bn, _BIO_ctrl_pending_b); \
});})

#define BIO_ctrl_wpending(b) ({ \
  BIO * _BIO_ctrl_wpending_b = (b); \
  ({ \
  register char * _BIO_ctrl_wpending__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((size_t (*)(char * __asm("a6"), BIO * __asm("a0"))) \
  (_BIO_ctrl_wpending__bn - 1656))(_BIO_ctrl_wpending__bn, _BIO_ctrl_wpending_b); \
});})

#define BIO_ctrl_get_write_guarantee(b) ({ \
  BIO * _BIO_ctrl_get_write_guarantee_b = (b); \
  ({ \
  register char * _BIO_ctrl_get_write_guarantee__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((size_t (*)(char * __asm("a6"), BIO * __asm("a0"))) \
  (_BIO_ctrl_get_write_guarantee__bn - 1662))(_BIO_ctrl_get_write_guarantee__bn, _BIO_ctrl_get_write_guarantee_b); \
});})

#define BIO_ctrl_get_read_request(b) ({ \
  BIO * _BIO_ctrl_get_read_request_b = (b); \
  ({ \
  register char * _BIO_ctrl_get_read_request__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((size_t (*)(char * __asm("a6"), BIO * __asm("a0"))) \
  (_BIO_ctrl_get_read_request__bn - 1668))(_BIO_ctrl_get_read_request__bn, _BIO_ctrl_get_read_request_b); \
});})

#define BIO_ctrl_reset_read_request(b) ({ \
  BIO * _BIO_ctrl_reset_read_request_b = (b); \
  ({ \
  register char * _BIO_ctrl_reset_read_request__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIO * __asm("a0"))) \
  (_BIO_ctrl_reset_read_request__bn - 1674))(_BIO_ctrl_reset_read_request__bn, _BIO_ctrl_reset_read_request_b); \
});})

#define BIO_set_ex_data(bio, idx, data) ({ \
  BIO * _BIO_set_ex_data_bio = (bio); \
  LONG _BIO_set_ex_data_idx = (idx); \
  void * _BIO_set_ex_data_data = (data); \
  ({ \
  register char * _BIO_set_ex_data__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIO * __asm("a0"), LONG __asm("d0"), void * __asm("a1"))) \
  (_BIO_set_ex_data__bn - 1680))(_BIO_set_ex_data__bn, _BIO_set_ex_data_bio, _BIO_set_ex_data_idx, _BIO_set_ex_data_data); \
});})

#define BIO_get_ex_data(bio, idx) ({ \
  BIO * _BIO_get_ex_data_bio = (bio); \
  LONG _BIO_get_ex_data_idx = (idx); \
  ({ \
  register char * _BIO_get_ex_data__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void * (*)(char * __asm("a6"), BIO * __asm("a0"), LONG __asm("d0"))) \
  (_BIO_get_ex_data__bn - 1686))(_BIO_get_ex_data__bn, _BIO_get_ex_data_bio, _BIO_get_ex_data_idx); \
});})

#define BIO_get_ex_new_index(argl, argp, new_func, dup_func, free_func) ({ \
  long _BIO_get_ex_new_index_argl = (argl); \
  void * _BIO_get_ex_new_index_argp = (argp); \
  CRYPTO_EX_new * (*_BIO_get_ex_new_index_new_func)() = (new_func); \
  CRYPTO_EX_dup * (*_BIO_get_ex_new_index_dup_func)() = (dup_func); \
  CRYPTO_EX_free * (*_BIO_get_ex_new_index_free_func)() = (free_func); \
  ({ \
  register char * _BIO_get_ex_new_index__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), long __asm("d0"), void * __asm("a0"), CRYPTO_EX_new * (*)() __asm("a1"), CRYPTO_EX_dup * (*)() __asm("a2"), CRYPTO_EX_free * (*)() __asm("a3"))) \
  (_BIO_get_ex_new_index__bn - 1692))(_BIO_get_ex_new_index__bn, _BIO_get_ex_new_index_argl, _BIO_get_ex_new_index_argp, _BIO_get_ex_new_index_new_func, _BIO_get_ex_new_index_dup_func, _BIO_get_ex_new_index_free_func); \
});})

#define BIO_number_read(bio) ({ \
  BIO * _BIO_number_read_bio = (bio); \
  ({ \
  register char * _BIO_number_read__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((unsigned long (*)(char * __asm("a6"), BIO * __asm("a0"))) \
  (_BIO_number_read__bn - 1698))(_BIO_number_read__bn, _BIO_number_read_bio); \
});})

#define BIO_number_written(bio) ({ \
  BIO * _BIO_number_written_bio = (bio); \
  ({ \
  register char * _BIO_number_written__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((unsigned long (*)(char * __asm("a6"), BIO * __asm("a0"))) \
  (_BIO_number_written__bn - 1704))(_BIO_number_written__bn, _BIO_number_written_bio); \
});})

#define BIO_s_file() ({ \
  register char * _BIO_s_file__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((BIO_METHOD * (*)(char * __asm("a6"))) \
  (_BIO_s_file__bn - 1710))(_BIO_s_file__bn); \
})

#define BIO_new_file(filename, mode) ({ \
  const char * _BIO_new_file_filename = (filename); \
  const char * _BIO_new_file_mode = (mode); \
  ({ \
  register char * _BIO_new_file__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((BIO * (*)(char * __asm("a6"), const char * __asm("a0"), const char * __asm("a1"))) \
  (_BIO_new_file__bn - 1716))(_BIO_new_file__bn, _BIO_new_file_filename, _BIO_new_file_mode); \
});})

#define BIO_new_fp_amiga(stream, close_flag) ({ \
  BPTR _BIO_new_fp_amiga_stream = (stream); \
  LONG _BIO_new_fp_amiga_close_flag = (close_flag); \
  ({ \
  register char * _BIO_new_fp_amiga__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((BIO * (*)(char * __asm("a6"), BPTR __asm("d0"), LONG __asm("d1"))) \
  (_BIO_new_fp_amiga__bn - 1722))(_BIO_new_fp_amiga__bn, _BIO_new_fp_amiga_stream, _BIO_new_fp_amiga_close_flag); \
});})

#define BIO_new(type) ({ \
  BIO_METHOD * _BIO_new_type = (type); \
  ({ \
  register char * _BIO_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((BIO * (*)(char * __asm("a6"), BIO_METHOD * __asm("a0"))) \
  (_BIO_new__bn - 1728))(_BIO_new__bn, _BIO_new_type); \
});})

#define BIO_set(a, type) ({ \
  BIO * _BIO_set_a = (a); \
  BIO_METHOD * _BIO_set_type = (type); \
  ({ \
  register char * _BIO_set__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIO * __asm("a0"), BIO_METHOD * __asm("a1"))) \
  (_BIO_set__bn - 1734))(_BIO_set__bn, _BIO_set_a, _BIO_set_type); \
});})

#define BIO_free(a) ({ \
  BIO * _BIO_free_a = (a); \
  ({ \
  register char * _BIO_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIO * __asm("a0"))) \
  (_BIO_free__bn - 1740))(_BIO_free__bn, _BIO_free_a); \
});})

#define BIO_vfree(a) ({ \
  BIO * _BIO_vfree_a = (a); \
  ({ \
  register char * _BIO_vfree__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), BIO * __asm("a0"))) \
  (_BIO_vfree__bn - 1746))(_BIO_vfree__bn, _BIO_vfree_a); \
});})

#define BIO_read(b, data, len) ({ \
  BIO * _BIO_read_b = (b); \
  void * _BIO_read_data = (data); \
  LONG _BIO_read_len = (len); \
  ({ \
  register char * _BIO_read__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIO * __asm("a0"), void * __asm("a1"), LONG __asm("d0"))) \
  (_BIO_read__bn - 1752))(_BIO_read__bn, _BIO_read_b, _BIO_read_data, _BIO_read_len); \
});})

#define BIO_gets(bp, buf, size) ({ \
  BIO * _BIO_gets_bp = (bp); \
  char * _BIO_gets_buf = (buf); \
  LONG _BIO_gets_size = (size); \
  ({ \
  register char * _BIO_gets__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIO * __asm("a0"), char * __asm("a1"), LONG __asm("d0"))) \
  (_BIO_gets__bn - 1758))(_BIO_gets__bn, _BIO_gets_bp, _BIO_gets_buf, _BIO_gets_size); \
});})

#define BIO_write(b, data, len) ({ \
  BIO * _BIO_write_b = (b); \
  const void * _BIO_write_data = (data); \
  LONG _BIO_write_len = (len); \
  ({ \
  register char * _BIO_write__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIO * __asm("a0"), const void * __asm("a1"), LONG __asm("d0"))) \
  (_BIO_write__bn - 1764))(_BIO_write__bn, _BIO_write_b, _BIO_write_data, _BIO_write_len); \
});})

#define BIO_puts(bp, buf) ({ \
  BIO * _BIO_puts_bp = (bp); \
  const char * _BIO_puts_buf = (buf); \
  ({ \
  register char * _BIO_puts__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIO * __asm("a0"), const char * __asm("a1"))) \
  (_BIO_puts__bn - 1770))(_BIO_puts__bn, _BIO_puts_bp, _BIO_puts_buf); \
});})

#define BIO_indent(b, indent, max) ({ \
  BIO * _BIO_indent_b = (b); \
  LONG _BIO_indent_indent = (indent); \
  LONG _BIO_indent_max = (max); \
  ({ \
  register char * _BIO_indent__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIO * __asm("a0"), LONG __asm("d0"), LONG __asm("d1"))) \
  (_BIO_indent__bn - 1776))(_BIO_indent__bn, _BIO_indent_b, _BIO_indent_indent, _BIO_indent_max); \
});})

#define BIO_ctrl(bp, cmd, larg, parg) ({ \
  BIO * _BIO_ctrl_bp = (bp); \
  LONG _BIO_ctrl_cmd = (cmd); \
  long _BIO_ctrl_larg = (larg); \
  void * _BIO_ctrl_parg = (parg); \
  ({ \
  register char * _BIO_ctrl__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((long (*)(char * __asm("a6"), BIO * __asm("a0"), LONG __asm("d0"), long __asm("d1"), void * __asm("a1"))) \
  (_BIO_ctrl__bn - 1782))(_BIO_ctrl__bn, _BIO_ctrl_bp, _BIO_ctrl_cmd, _BIO_ctrl_larg, _BIO_ctrl_parg); \
});})

#define BIO_callback_ctrl(b, cmd, fp) ({ \
  BIO * _BIO_callback_ctrl_b = (b); \
  LONG _BIO_callback_ctrl_cmd = (cmd); \
  void (*_BIO_callback_ctrl_fp)(struct bio_st *, int, const char *, int, long, long) = (fp); \
  ({ \
  register char * _BIO_callback_ctrl__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((long (*)(char * __asm("a6"), BIO * __asm("a0"), LONG __asm("d0"), void (*)(struct bio_st *, int, const char *, int, long, long) __asm("a1"))) \
  (_BIO_callback_ctrl__bn - 1788))(_BIO_callback_ctrl__bn, _BIO_callback_ctrl_b, _BIO_callback_ctrl_cmd, _BIO_callback_ctrl_fp); \
});})

#define BIO_ptr_ctrl(bp, cmd, larg) ({ \
  BIO * _BIO_ptr_ctrl_bp = (bp); \
  LONG _BIO_ptr_ctrl_cmd = (cmd); \
  long _BIO_ptr_ctrl_larg = (larg); \
  ({ \
  register char * _BIO_ptr_ctrl__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((char * (*)(char * __asm("a6"), BIO * __asm("a0"), LONG __asm("d0"), long __asm("d1"))) \
  (_BIO_ptr_ctrl__bn - 1794))(_BIO_ptr_ctrl__bn, _BIO_ptr_ctrl_bp, _BIO_ptr_ctrl_cmd, _BIO_ptr_ctrl_larg); \
});})

#define BIO_int_ctrl(bp, cmd, larg, iarg) ({ \
  BIO * _BIO_int_ctrl_bp = (bp); \
  LONG _BIO_int_ctrl_cmd = (cmd); \
  long _BIO_int_ctrl_larg = (larg); \
  LONG _BIO_int_ctrl_iarg = (iarg); \
  ({ \
  register char * _BIO_int_ctrl__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((long (*)(char * __asm("a6"), BIO * __asm("a0"), LONG __asm("d0"), long __asm("d1"), LONG __asm("d2"))) \
  (_BIO_int_ctrl__bn - 1800))(_BIO_int_ctrl__bn, _BIO_int_ctrl_bp, _BIO_int_ctrl_cmd, _BIO_int_ctrl_larg, _BIO_int_ctrl_iarg); \
});})

#define BIO_push(b, append) ({ \
  BIO * _BIO_push_b = (b); \
  BIO * _BIO_push_append = (append); \
  ({ \
  register char * _BIO_push__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((BIO * (*)(char * __asm("a6"), BIO * __asm("a0"), BIO * __asm("a1"))) \
  (_BIO_push__bn - 1806))(_BIO_push__bn, _BIO_push_b, _BIO_push_append); \
});})

#define BIO_pop(b) ({ \
  BIO * _BIO_pop_b = (b); \
  ({ \
  register char * _BIO_pop__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((BIO * (*)(char * __asm("a6"), BIO * __asm("a0"))) \
  (_BIO_pop__bn - 1812))(_BIO_pop__bn, _BIO_pop_b); \
});})

#define BIO_free_all(a) ({ \
  BIO * _BIO_free_all_a = (a); \
  ({ \
  register char * _BIO_free_all__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), BIO * __asm("a0"))) \
  (_BIO_free_all__bn - 1818))(_BIO_free_all__bn, _BIO_free_all_a); \
});})

#define BIO_find_type(b, bio_type) ({ \
  BIO * _BIO_find_type_b = (b); \
  LONG _BIO_find_type_bio_type = (bio_type); \
  ({ \
  register char * _BIO_find_type__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((BIO * (*)(char * __asm("a6"), BIO * __asm("a0"), LONG __asm("d0"))) \
  (_BIO_find_type__bn - 1824))(_BIO_find_type__bn, _BIO_find_type_b, _BIO_find_type_bio_type); \
});})

#define BIO_next(b) ({ \
  BIO * _BIO_next_b = (b); \
  ({ \
  register char * _BIO_next__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((BIO * (*)(char * __asm("a6"), BIO * __asm("a0"))) \
  (_BIO_next__bn - 1830))(_BIO_next__bn, _BIO_next_b); \
});})

#define BIO_get_retry_BIO(bio, reason) ({ \
  BIO * _BIO_get_retry_BIO_bio = (bio); \
  int * _BIO_get_retry_BIO_reason = (reason); \
  ({ \
  register char * _BIO_get_retry_BIO__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((BIO * (*)(char * __asm("a6"), BIO * __asm("a0"), int * __asm("a1"))) \
  (_BIO_get_retry_BIO__bn - 1836))(_BIO_get_retry_BIO__bn, _BIO_get_retry_BIO_bio, _BIO_get_retry_BIO_reason); \
});})

#define BIO_get_retry_reason(bio) ({ \
  BIO * _BIO_get_retry_reason_bio = (bio); \
  ({ \
  register char * _BIO_get_retry_reason__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIO * __asm("a0"))) \
  (_BIO_get_retry_reason__bn - 1842))(_BIO_get_retry_reason__bn, _BIO_get_retry_reason_bio); \
});})

#define BIO_dup_chain(in) ({ \
  BIO * _BIO_dup_chain_in = (in); \
  ({ \
  register char * _BIO_dup_chain__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((BIO * (*)(char * __asm("a6"), BIO * __asm("a0"))) \
  (_BIO_dup_chain__bn - 1848))(_BIO_dup_chain__bn, _BIO_dup_chain_in); \
});})

#define BIO_nread0(bio, buf) ({ \
  BIO * _BIO_nread0_bio = (bio); \
  char ** _BIO_nread0_buf = (buf); \
  ({ \
  register char * _BIO_nread0__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIO * __asm("a0"), char ** __asm("a1"))) \
  (_BIO_nread0__bn - 1854))(_BIO_nread0__bn, _BIO_nread0_bio, _BIO_nread0_buf); \
});})

#define BIO_nread(bio, buf, num) ({ \
  BIO * _BIO_nread_bio = (bio); \
  char ** _BIO_nread_buf = (buf); \
  LONG _BIO_nread_num = (num); \
  ({ \
  register char * _BIO_nread__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIO * __asm("a0"), char ** __asm("a1"), LONG __asm("d0"))) \
  (_BIO_nread__bn - 1860))(_BIO_nread__bn, _BIO_nread_bio, _BIO_nread_buf, _BIO_nread_num); \
});})

#define BIO_nwrite0(bio, buf) ({ \
  BIO * _BIO_nwrite0_bio = (bio); \
  char ** _BIO_nwrite0_buf = (buf); \
  ({ \
  register char * _BIO_nwrite0__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIO * __asm("a0"), char ** __asm("a1"))) \
  (_BIO_nwrite0__bn - 1866))(_BIO_nwrite0__bn, _BIO_nwrite0_bio, _BIO_nwrite0_buf); \
});})

#define BIO_nwrite(bio, buf, num) ({ \
  BIO * _BIO_nwrite_bio = (bio); \
  char ** _BIO_nwrite_buf = (buf); \
  LONG _BIO_nwrite_num = (num); \
  ({ \
  register char * _BIO_nwrite__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIO * __asm("a0"), char ** __asm("a1"), LONG __asm("d0"))) \
  (_BIO_nwrite__bn - 1872))(_BIO_nwrite__bn, _BIO_nwrite_bio, _BIO_nwrite_buf, _BIO_nwrite_num); \
});})

#define BIO_debug_callback(bio, cmd, argp, argi, argl, ret) ({ \
  BIO * _BIO_debug_callback_bio = (bio); \
  LONG _BIO_debug_callback_cmd = (cmd); \
  const char * _BIO_debug_callback_argp = (argp); \
  LONG _BIO_debug_callback_argi = (argi); \
  long _BIO_debug_callback_argl = (argl); \
  long _BIO_debug_callback_ret = (ret); \
  ({ \
  register char * _BIO_debug_callback__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((long (*)(char * __asm("a6"), BIO * __asm("a0"), LONG __asm("d0"), const char * __asm("a1"), LONG __asm("d1"), long __asm("d2"), long __asm("d3"))) \
  (_BIO_debug_callback__bn - 1878))(_BIO_debug_callback__bn, _BIO_debug_callback_bio, _BIO_debug_callback_cmd, _BIO_debug_callback_argp, _BIO_debug_callback_argi, _BIO_debug_callback_argl, _BIO_debug_callback_ret); \
});})

#define BIO_s_mem() ({ \
  register char * _BIO_s_mem__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((BIO_METHOD * (*)(char * __asm("a6"))) \
  (_BIO_s_mem__bn - 1884))(_BIO_s_mem__bn); \
})

#define BIO_new_mem_buf(buf, len) ({ \
  void * _BIO_new_mem_buf_buf = (buf); \
  LONG _BIO_new_mem_buf_len = (len); \
  ({ \
  register char * _BIO_new_mem_buf__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((BIO * (*)(char * __asm("a6"), void * __asm("a0"), LONG __asm("d0"))) \
  (_BIO_new_mem_buf__bn - 1890))(_BIO_new_mem_buf__bn, _BIO_new_mem_buf_buf, _BIO_new_mem_buf_len); \
});})

#define BIO_s_socket() ({ \
  register char * _BIO_s_socket__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((BIO_METHOD * (*)(char * __asm("a6"))) \
  (_BIO_s_socket__bn - 1896))(_BIO_s_socket__bn); \
})

#define BIO_s_connect() ({ \
  register char * _BIO_s_connect__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((BIO_METHOD * (*)(char * __asm("a6"))) \
  (_BIO_s_connect__bn - 1902))(_BIO_s_connect__bn); \
})

#define BIO_s_accept() ({ \
  register char * _BIO_s_accept__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((BIO_METHOD * (*)(char * __asm("a6"))) \
  (_BIO_s_accept__bn - 1908))(_BIO_s_accept__bn); \
})

#define BIO_s_fd() ({ \
  register char * _BIO_s_fd__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((BIO_METHOD * (*)(char * __asm("a6"))) \
  (_BIO_s_fd__bn - 1914))(_BIO_s_fd__bn); \
})

#define BIO_s_log() ({ \
  register char * _BIO_s_log__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((BIO_METHOD * (*)(char * __asm("a6"))) \
  (_BIO_s_log__bn - 1920))(_BIO_s_log__bn); \
})

#define BIO_s_bio() ({ \
  register char * _BIO_s_bio__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((BIO_METHOD * (*)(char * __asm("a6"))) \
  (_BIO_s_bio__bn - 1926))(_BIO_s_bio__bn); \
})

#define BIO_s_null() ({ \
  register char * _BIO_s_null__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((BIO_METHOD * (*)(char * __asm("a6"))) \
  (_BIO_s_null__bn - 1932))(_BIO_s_null__bn); \
})

#define BIO_f_null() ({ \
  register char * _BIO_f_null__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((BIO_METHOD * (*)(char * __asm("a6"))) \
  (_BIO_f_null__bn - 1938))(_BIO_f_null__bn); \
})

#define BIO_f_buffer() ({ \
  register char * _BIO_f_buffer__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((BIO_METHOD * (*)(char * __asm("a6"))) \
  (_BIO_f_buffer__bn - 1944))(_BIO_f_buffer__bn); \
})

#define BIO_f_nbio_test() ({ \
  register char * _BIO_f_nbio_test__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((BIO_METHOD * (*)(char * __asm("a6"))) \
  (_BIO_f_nbio_test__bn - 1950))(_BIO_f_nbio_test__bn); \
})

#define BIO_sock_should_retry(i) ({ \
  LONG _BIO_sock_should_retry_i = (i); \
  ({ \
  register char * _BIO_sock_should_retry__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), LONG __asm("d0"))) \
  (_BIO_sock_should_retry__bn - 1956))(_BIO_sock_should_retry__bn, _BIO_sock_should_retry_i); \
});})

#define BIO_sock_non_fatal_error(error) ({ \
  LONG _BIO_sock_non_fatal_error_error = (error); \
  ({ \
  register char * _BIO_sock_non_fatal_error__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), LONG __asm("d0"))) \
  (_BIO_sock_non_fatal_error__bn - 1962))(_BIO_sock_non_fatal_error__bn, _BIO_sock_non_fatal_error_error); \
});})

#define BIO_fd_should_retry(i) ({ \
  LONG _BIO_fd_should_retry_i = (i); \
  ({ \
  register char * _BIO_fd_should_retry__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), LONG __asm("d0"))) \
  (_BIO_fd_should_retry__bn - 1968))(_BIO_fd_should_retry__bn, _BIO_fd_should_retry_i); \
});})

#define BIO_fd_non_fatal_error(error) ({ \
  LONG _BIO_fd_non_fatal_error_error = (error); \
  ({ \
  register char * _BIO_fd_non_fatal_error__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), LONG __asm("d0"))) \
  (_BIO_fd_non_fatal_error__bn - 1974))(_BIO_fd_non_fatal_error__bn, _BIO_fd_non_fatal_error_error); \
});})

#define BIO_dump(b, bytes, len) ({ \
  BIO * _BIO_dump_b = (b); \
  const char * _BIO_dump_bytes = (bytes); \
  LONG _BIO_dump_len = (len); \
  ({ \
  register char * _BIO_dump__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIO * __asm("a0"), const char * __asm("a1"), LONG __asm("d0"))) \
  (_BIO_dump__bn - 1980))(_BIO_dump__bn, _BIO_dump_b, _BIO_dump_bytes, _BIO_dump_len); \
});})

#define BIO_dump_indent(b, bytes, len, indent) ({ \
  BIO * _BIO_dump_indent_b = (b); \
  const char * _BIO_dump_indent_bytes = (bytes); \
  LONG _BIO_dump_indent_len = (len); \
  LONG _BIO_dump_indent_indent = (indent); \
  ({ \
  register char * _BIO_dump_indent__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIO * __asm("a0"), const char * __asm("a1"), LONG __asm("d0"), LONG __asm("d1"))) \
  (_BIO_dump_indent__bn - 1986))(_BIO_dump_indent__bn, _BIO_dump_indent_b, _BIO_dump_indent_bytes, _BIO_dump_indent_len, _BIO_dump_indent_indent); \
});})

#define BIO_gethostbyname(name) ({ \
  const char * _BIO_gethostbyname_name = (name); \
  ({ \
  register char * _BIO_gethostbyname__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((struct hostent * (*)(char * __asm("a6"), const char * __asm("a0"))) \
  (_BIO_gethostbyname__bn - 1992))(_BIO_gethostbyname__bn, _BIO_gethostbyname_name); \
});})

#define BIO_sock_error(sock) ({ \
  LONG _BIO_sock_error_sock = (sock); \
  ({ \
  register char * _BIO_sock_error__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), LONG __asm("d0"))) \
  (_BIO_sock_error__bn - 1998))(_BIO_sock_error__bn, _BIO_sock_error_sock); \
});})

#define BIO_socket_ioctl(fd, type, arg) ({ \
  LONG _BIO_socket_ioctl_fd = (fd); \
  long _BIO_socket_ioctl_type = (type); \
  void * _BIO_socket_ioctl_arg = (arg); \
  ({ \
  register char * _BIO_socket_ioctl__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), LONG __asm("d0"), long __asm("d1"), void * __asm("a0"))) \
  (_BIO_socket_ioctl__bn - 2004))(_BIO_socket_ioctl__bn, _BIO_socket_ioctl_fd, _BIO_socket_ioctl_type, _BIO_socket_ioctl_arg); \
});})

#define BIO_socket_nbio(fd, mode) ({ \
  LONG _BIO_socket_nbio_fd = (fd); \
  LONG _BIO_socket_nbio_mode = (mode); \
  ({ \
  register char * _BIO_socket_nbio__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), LONG __asm("d0"), LONG __asm("d1"))) \
  (_BIO_socket_nbio__bn - 2010))(_BIO_socket_nbio__bn, _BIO_socket_nbio_fd, _BIO_socket_nbio_mode); \
});})

#define BIO_get_port(str, port_ptr) ({ \
  const char * _BIO_get_port_str = (str); \
  unsigned short * _BIO_get_port_port_ptr = (port_ptr); \
  ({ \
  register char * _BIO_get_port__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const char * __asm("a0"), unsigned short * __asm("a1"))) \
  (_BIO_get_port__bn - 2016))(_BIO_get_port__bn, _BIO_get_port_str, _BIO_get_port_port_ptr); \
});})

#define BIO_get_host_ip(str, ip) ({ \
  const char * _BIO_get_host_ip_str = (str); \
  unsigned char * _BIO_get_host_ip_ip = (ip); \
  ({ \
  register char * _BIO_get_host_ip__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const char * __asm("a0"), unsigned char * __asm("a1"))) \
  (_BIO_get_host_ip__bn - 2022))(_BIO_get_host_ip__bn, _BIO_get_host_ip_str, _BIO_get_host_ip_ip); \
});})

#define BIO_get_accept_socket(host_port, mode) ({ \
  char * _BIO_get_accept_socket_host_port = (host_port); \
  LONG _BIO_get_accept_socket_mode = (mode); \
  ({ \
  register char * _BIO_get_accept_socket__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), char * __asm("a0"), LONG __asm("d0"))) \
  (_BIO_get_accept_socket__bn - 2028))(_BIO_get_accept_socket__bn, _BIO_get_accept_socket_host_port, _BIO_get_accept_socket_mode); \
});})

#define BIO_accept(sock, ip_port) ({ \
  LONG _BIO_accept_sock = (sock); \
  char ** _BIO_accept_ip_port = (ip_port); \
  ({ \
  register char * _BIO_accept__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), LONG __asm("d0"), char ** __asm("a0"))) \
  (_BIO_accept__bn - 2034))(_BIO_accept__bn, _BIO_accept_sock, _BIO_accept_ip_port); \
});})

#define BIO_sock_init() ({ \
  register char * _BIO_sock_init__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"))) \
  (_BIO_sock_init__bn - 2040))(_BIO_sock_init__bn); \
})

#define BIO_sock_cleanup() ({ \
  register char * _BIO_sock_cleanup__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"))) \
  (_BIO_sock_cleanup__bn - 2046))(_BIO_sock_cleanup__bn); \
})

#define BIO_set_tcp_ndelay(sock, turn_on) ({ \
  LONG _BIO_set_tcp_ndelay_sock = (sock); \
  LONG _BIO_set_tcp_ndelay_turn_on = (turn_on); \
  ({ \
  register char * _BIO_set_tcp_ndelay__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), LONG __asm("d0"), LONG __asm("d1"))) \
  (_BIO_set_tcp_ndelay__bn - 2052))(_BIO_set_tcp_ndelay__bn, _BIO_set_tcp_ndelay_sock, _BIO_set_tcp_ndelay_turn_on); \
});})

#define BIO_new_socket(sock, close_flag) ({ \
  LONG _BIO_new_socket_sock = (sock); \
  LONG _BIO_new_socket_close_flag = (close_flag); \
  ({ \
  register char * _BIO_new_socket__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((BIO * (*)(char * __asm("a6"), LONG __asm("d0"), LONG __asm("d1"))) \
  (_BIO_new_socket__bn - 2058))(_BIO_new_socket__bn, _BIO_new_socket_sock, _BIO_new_socket_close_flag); \
});})

#define BIO_new_fd(fd, close_flag) ({ \
  LONG _BIO_new_fd_fd = (fd); \
  LONG _BIO_new_fd_close_flag = (close_flag); \
  ({ \
  register char * _BIO_new_fd__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((BIO * (*)(char * __asm("a6"), LONG __asm("d0"), LONG __asm("d1"))) \
  (_BIO_new_fd__bn - 2064))(_BIO_new_fd__bn, _BIO_new_fd_fd, _BIO_new_fd_close_flag); \
});})

#define BIO_new_connect(host_port) ({ \
  char * _BIO_new_connect_host_port = (host_port); \
  ({ \
  register char * _BIO_new_connect__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((BIO * (*)(char * __asm("a6"), char * __asm("a0"))) \
  (_BIO_new_connect__bn - 2070))(_BIO_new_connect__bn, _BIO_new_connect_host_port); \
});})

#define BIO_new_accept(host_port) ({ \
  char * _BIO_new_accept_host_port = (host_port); \
  ({ \
  register char * _BIO_new_accept__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((BIO * (*)(char * __asm("a6"), char * __asm("a0"))) \
  (_BIO_new_accept__bn - 2076))(_BIO_new_accept__bn, _BIO_new_accept_host_port); \
});})

#define BIO_new_bio_pair(bio1, writebuf1, bio2, writebuf2) ({ \
  BIO ** _BIO_new_bio_pair_bio1 = (bio1); \
  ULONG _BIO_new_bio_pair_writebuf1 = (writebuf1); \
  BIO ** _BIO_new_bio_pair_bio2 = (bio2); \
  ULONG _BIO_new_bio_pair_writebuf2 = (writebuf2); \
  ({ \
  register char * _BIO_new_bio_pair__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIO ** __asm("a0"), ULONG __asm("d0"), BIO ** __asm("a1"), ULONG __asm("d1"))) \
  (_BIO_new_bio_pair__bn - 2082))(_BIO_new_bio_pair__bn, _BIO_new_bio_pair_bio1, _BIO_new_bio_pair_writebuf1, _BIO_new_bio_pair_bio2, _BIO_new_bio_pair_writebuf2); \
});})

#define BIO_copy_next_retry(b) ({ \
  BIO * _BIO_copy_next_retry_b = (b); \
  ({ \
  register char * _BIO_copy_next_retry__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), BIO * __asm("a0"))) \
  (_BIO_copy_next_retry__bn - 2088))(_BIO_copy_next_retry__bn, _BIO_copy_next_retry_b); \
});})

#define BIO_vprintf(bio, format, args) ({ \
  BIO * _BIO_vprintf_bio = (bio); \
  const char * _BIO_vprintf_format = (format); \
  long * _BIO_vprintf_args = (args); \
  ({ \
  register char * _BIO_vprintf__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIO * __asm("a0"), const char * __asm("a1"), long * __asm("d0"))) \
  (_BIO_vprintf__bn - 2094))(_BIO_vprintf__bn, _BIO_vprintf_bio, _BIO_vprintf_format, _BIO_vprintf_args); \
});})

#ifndef NO_INLINE_STDARG
static __inline__ int ___BIO_printf(struct Library * AmiSSLBase, BIO * bio, const char * format, ...)
{
  return BIO_vprintf(bio, format, (long *)(&format + 1));
}

#define BIO_printf(bio, format...) ___BIO_printf(AMISSL_BASE_NAME, bio, format)
#endif

#define BIO_vsnprintf(buf, n, format, args) ({ \
  char * _BIO_vsnprintf_buf = (buf); \
  ULONG _BIO_vsnprintf_n = (n); \
  const char * _BIO_vsnprintf_format = (format); \
  long * _BIO_vsnprintf_args = (args); \
  ({ \
  register char * _BIO_vsnprintf__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), char * __asm("a0"), ULONG __asm("d0"), const char * __asm("a1"), long * __asm("d1"))) \
  (_BIO_vsnprintf__bn - 2100))(_BIO_vsnprintf__bn, _BIO_vsnprintf_buf, _BIO_vsnprintf_n, _BIO_vsnprintf_format, _BIO_vsnprintf_args); \
});})

#ifndef NO_INLINE_STDARG
static __inline__ int ___BIO_snprintf(struct Library * AmiSSLBase, char * buf, ULONG n, const char * format, ...)
{
  return BIO_vsnprintf(buf, n, format, (long *)(&format + 1));
}

#define BIO_snprintf(buf, n, format...) ___BIO_snprintf(AMISSL_BASE_NAME, buf, n, format)
#endif

#define ERR_load_BIO_strings() ({ \
  register char * _ERR_load_BIO_strings__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"))) \
  (_ERR_load_BIO_strings__bn - 2106))(_ERR_load_BIO_strings__bn); \
})

#define BN_value_one() ({ \
  register char * _BN_value_one__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const BIGNUM * (*)(char * __asm("a6"))) \
  (_BN_value_one__bn - 2112))(_BN_value_one__bn); \
})

#define BN_options() ({ \
  register char * _BN_options__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((char * (*)(char * __asm("a6"))) \
  (_BN_options__bn - 2118))(_BN_options__bn); \
})

#define BN_CTX_new() ({ \
  register char * _BN_CTX_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((BN_CTX * (*)(char * __asm("a6"))) \
  (_BN_CTX_new__bn - 2124))(_BN_CTX_new__bn); \
})

#define BN_CTX_init(c) ({ \
  BN_CTX * _BN_CTX_init_c = (c); \
  ({ \
  register char * _BN_CTX_init__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), BN_CTX * __asm("a0"))) \
  (_BN_CTX_init__bn - 2130))(_BN_CTX_init__bn, _BN_CTX_init_c); \
});})

#define BN_CTX_free(c) ({ \
  BN_CTX * _BN_CTX_free_c = (c); \
  ({ \
  register char * _BN_CTX_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), BN_CTX * __asm("a0"))) \
  (_BN_CTX_free__bn - 2136))(_BN_CTX_free__bn, _BN_CTX_free_c); \
});})

#define BN_CTX_start(ctx) ({ \
  BN_CTX * _BN_CTX_start_ctx = (ctx); \
  ({ \
  register char * _BN_CTX_start__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), BN_CTX * __asm("a0"))) \
  (_BN_CTX_start__bn - 2142))(_BN_CTX_start__bn, _BN_CTX_start_ctx); \
});})

#define BN_CTX_get(ctx) ({ \
  BN_CTX * _BN_CTX_get_ctx = (ctx); \
  ({ \
  register char * _BN_CTX_get__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((BIGNUM * (*)(char * __asm("a6"), BN_CTX * __asm("a0"))) \
  (_BN_CTX_get__bn - 2148))(_BN_CTX_get__bn, _BN_CTX_get_ctx); \
});})

#define BN_CTX_end(ctx) ({ \
  BN_CTX * _BN_CTX_end_ctx = (ctx); \
  ({ \
  register char * _BN_CTX_end__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), BN_CTX * __asm("a0"))) \
  (_BN_CTX_end__bn - 2154))(_BN_CTX_end__bn, _BN_CTX_end_ctx); \
});})

#define BN_rand(rnd, bits, top, bottom) ({ \
  BIGNUM * _BN_rand_rnd = (rnd); \
  LONG _BN_rand_bits = (bits); \
  LONG _BN_rand_top = (top); \
  LONG _BN_rand_bottom = (bottom); \
  ({ \
  register char * _BN_rand__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIGNUM * __asm("a0"), LONG __asm("d0"), LONG __asm("d1"), LONG __asm("d2"))) \
  (_BN_rand__bn - 2160))(_BN_rand__bn, _BN_rand_rnd, _BN_rand_bits, _BN_rand_top, _BN_rand_bottom); \
});})

#define BN_pseudo_rand(rnd, bits, top, bottom) ({ \
  BIGNUM * _BN_pseudo_rand_rnd = (rnd); \
  LONG _BN_pseudo_rand_bits = (bits); \
  LONG _BN_pseudo_rand_top = (top); \
  LONG _BN_pseudo_rand_bottom = (bottom); \
  ({ \
  register char * _BN_pseudo_rand__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIGNUM * __asm("a0"), LONG __asm("d0"), LONG __asm("d1"), LONG __asm("d2"))) \
  (_BN_pseudo_rand__bn - 2166))(_BN_pseudo_rand__bn, _BN_pseudo_rand_rnd, _BN_pseudo_rand_bits, _BN_pseudo_rand_top, _BN_pseudo_rand_bottom); \
});})

#define BN_rand_range(rnd, range) ({ \
  BIGNUM * _BN_rand_range_rnd = (rnd); \
  BIGNUM * _BN_rand_range_range = (range); \
  ({ \
  register char * _BN_rand_range__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIGNUM * __asm("a0"), BIGNUM * __asm("a1"))) \
  (_BN_rand_range__bn - 2172))(_BN_rand_range__bn, _BN_rand_range_rnd, _BN_rand_range_range); \
});})

#define BN_pseudo_rand_range(rnd, range) ({ \
  BIGNUM * _BN_pseudo_rand_range_rnd = (rnd); \
  BIGNUM * _BN_pseudo_rand_range_range = (range); \
  ({ \
  register char * _BN_pseudo_rand_range__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIGNUM * __asm("a0"), BIGNUM * __asm("a1"))) \
  (_BN_pseudo_rand_range__bn - 2178))(_BN_pseudo_rand_range__bn, _BN_pseudo_rand_range_rnd, _BN_pseudo_rand_range_range); \
});})

#define BN_num_bits(a) ({ \
  const BIGNUM * _BN_num_bits_a = (a); \
  ({ \
  register char * _BN_num_bits__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const BIGNUM * __asm("a0"))) \
  (_BN_num_bits__bn - 2184))(_BN_num_bits__bn, _BN_num_bits_a); \
});})

#define BN_num_bits_word(a) ({ \
  BN_ULONG _BN_num_bits_word_a = (a); \
  ({ \
  register char * _BN_num_bits_word__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BN_ULONG __asm("d0"))) \
  (_BN_num_bits_word__bn - 2190))(_BN_num_bits_word__bn, _BN_num_bits_word_a); \
});})

#define BN_new() ({ \
  register char * _BN_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((BIGNUM * (*)(char * __asm("a6"))) \
  (_BN_new__bn - 2196))(_BN_new__bn); \
})

#define BN_init(a) ({ \
  BIGNUM * _BN_init_a = (a); \
  ({ \
  register char * _BN_init__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), BIGNUM * __asm("a0"))) \
  (_BN_init__bn - 2202))(_BN_init__bn, _BN_init_a); \
});})

#define BN_clear_free(a) ({ \
  BIGNUM * _BN_clear_free_a = (a); \
  ({ \
  register char * _BN_clear_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), BIGNUM * __asm("a0"))) \
  (_BN_clear_free__bn - 2208))(_BN_clear_free__bn, _BN_clear_free_a); \
});})

#define BN_copy(a, b) ({ \
  BIGNUM * _BN_copy_a = (a); \
  const BIGNUM * _BN_copy_b = (b); \
  ({ \
  register char * _BN_copy__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((BIGNUM * (*)(char * __asm("a6"), BIGNUM * __asm("a0"), const BIGNUM * __asm("a1"))) \
  (_BN_copy__bn - 2214))(_BN_copy__bn, _BN_copy_a, _BN_copy_b); \
});})

#define BN_swap(a, b) ({ \
  BIGNUM * _BN_swap_a = (a); \
  BIGNUM * _BN_swap_b = (b); \
  ({ \
  register char * _BN_swap__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), BIGNUM * __asm("a0"), BIGNUM * __asm("a1"))) \
  (_BN_swap__bn - 2220))(_BN_swap__bn, _BN_swap_a, _BN_swap_b); \
});})

#define BN_bin2bn(s, len, ret) ({ \
  const unsigned char * _BN_bin2bn_s = (s); \
  LONG _BN_bin2bn_len = (len); \
  BIGNUM * _BN_bin2bn_ret = (ret); \
  ({ \
  register char * _BN_bin2bn__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((BIGNUM * (*)(char * __asm("a6"), const unsigned char * __asm("a0"), LONG __asm("d0"), BIGNUM * __asm("a1"))) \
  (_BN_bin2bn__bn - 2226))(_BN_bin2bn__bn, _BN_bin2bn_s, _BN_bin2bn_len, _BN_bin2bn_ret); \
});})

#define BN_bn2bin(a, to) ({ \
  const BIGNUM * _BN_bn2bin_a = (a); \
  unsigned char * _BN_bn2bin_to = (to); \
  ({ \
  register char * _BN_bn2bin__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const BIGNUM * __asm("a0"), unsigned char * __asm("a1"))) \
  (_BN_bn2bin__bn - 2232))(_BN_bn2bin__bn, _BN_bn2bin_a, _BN_bn2bin_to); \
});})

#define BN_mpi2bn(s, len, ret) ({ \
  const unsigned char * _BN_mpi2bn_s = (s); \
  LONG _BN_mpi2bn_len = (len); \
  BIGNUM * _BN_mpi2bn_ret = (ret); \
  ({ \
  register char * _BN_mpi2bn__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((BIGNUM * (*)(char * __asm("a6"), const unsigned char * __asm("a0"), LONG __asm("d0"), BIGNUM * __asm("a1"))) \
  (_BN_mpi2bn__bn - 2238))(_BN_mpi2bn__bn, _BN_mpi2bn_s, _BN_mpi2bn_len, _BN_mpi2bn_ret); \
});})

#define BN_bn2mpi(a, to) ({ \
  const BIGNUM * _BN_bn2mpi_a = (a); \
  unsigned char * _BN_bn2mpi_to = (to); \
  ({ \
  register char * _BN_bn2mpi__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const BIGNUM * __asm("a0"), unsigned char * __asm("a1"))) \
  (_BN_bn2mpi__bn - 2244))(_BN_bn2mpi__bn, _BN_bn2mpi_a, _BN_bn2mpi_to); \
});})

#define BN_sub(r, a, b) ({ \
  BIGNUM * _BN_sub_r = (r); \
  const BIGNUM * _BN_sub_a = (a); \
  const BIGNUM * _BN_sub_b = (b); \
  ({ \
  register char * _BN_sub__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIGNUM * __asm("a0"), const BIGNUM * __asm("a1"), const BIGNUM * __asm("a2"))) \
  (_BN_sub__bn - 2250))(_BN_sub__bn, _BN_sub_r, _BN_sub_a, _BN_sub_b); \
});})

#define BN_usub(r, a, b) ({ \
  BIGNUM * _BN_usub_r = (r); \
  const BIGNUM * _BN_usub_a = (a); \
  const BIGNUM * _BN_usub_b = (b); \
  ({ \
  register char * _BN_usub__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIGNUM * __asm("a0"), const BIGNUM * __asm("a1"), const BIGNUM * __asm("a2"))) \
  (_BN_usub__bn - 2256))(_BN_usub__bn, _BN_usub_r, _BN_usub_a, _BN_usub_b); \
});})

#define BN_uadd(r, a, b) ({ \
  BIGNUM * _BN_uadd_r = (r); \
  const BIGNUM * _BN_uadd_a = (a); \
  const BIGNUM * _BN_uadd_b = (b); \
  ({ \
  register char * _BN_uadd__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIGNUM * __asm("a0"), const BIGNUM * __asm("a1"), const BIGNUM * __asm("a2"))) \
  (_BN_uadd__bn - 2262))(_BN_uadd__bn, _BN_uadd_r, _BN_uadd_a, _BN_uadd_b); \
});})

#define BN_add(r, a, b) ({ \
  BIGNUM * _BN_add_r = (r); \
  const BIGNUM * _BN_add_a = (a); \
  const BIGNUM * _BN_add_b = (b); \
  ({ \
  register char * _BN_add__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIGNUM * __asm("a0"), const BIGNUM * __asm("a1"), const BIGNUM * __asm("a2"))) \
  (_BN_add__bn - 2268))(_BN_add__bn, _BN_add_r, _BN_add_a, _BN_add_b); \
});})

#define BN_mul(r, a, b, ctx) ({ \
  BIGNUM * _BN_mul_r = (r); \
  const BIGNUM * _BN_mul_a = (a); \
  const BIGNUM * _BN_mul_b = (b); \
  BN_CTX * _BN_mul_ctx = (ctx); \
  ({ \
  register char * _BN_mul__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIGNUM * __asm("a0"), const BIGNUM * __asm("a1"), const BIGNUM * __asm("a2"), BN_CTX * __asm("a3"))) \
  (_BN_mul__bn - 2274))(_BN_mul__bn, _BN_mul_r, _BN_mul_a, _BN_mul_b, _BN_mul_ctx); \
});})

#define BN_sqr(r, a, ctx) ({ \
  BIGNUM * _BN_sqr_r = (r); \
  const BIGNUM * _BN_sqr_a = (a); \
  BN_CTX * _BN_sqr_ctx = (ctx); \
  ({ \
  register char * _BN_sqr__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIGNUM * __asm("a0"), const BIGNUM * __asm("a1"), BN_CTX * __asm("a2"))) \
  (_BN_sqr__bn - 2280))(_BN_sqr__bn, _BN_sqr_r, _BN_sqr_a, _BN_sqr_ctx); \
});})

#define BN_div(dv, rem, m, d, ctx) ({ \
  BIGNUM * _BN_div_dv = (dv); \
  BIGNUM * _BN_div_rem = (rem); \
  const BIGNUM * _BN_div_m = (m); \
  const BIGNUM * _BN_div_d = (d); \
  BN_CTX * _BN_div_ctx = (ctx); \
  ({ \
  register char * _BN_div__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIGNUM * __asm("a0"), BIGNUM * __asm("a1"), const BIGNUM * __asm("a2"), const BIGNUM * __asm("a3"), BN_CTX * __asm("d0"))) \
  (_BN_div__bn - 2286))(_BN_div__bn, _BN_div_dv, _BN_div_rem, _BN_div_m, _BN_div_d, _BN_div_ctx); \
});})

#define BN_nnmod(r, m, d, ctx) ({ \
  BIGNUM * _BN_nnmod_r = (r); \
  const BIGNUM * _BN_nnmod_m = (m); \
  const BIGNUM * _BN_nnmod_d = (d); \
  BN_CTX * _BN_nnmod_ctx = (ctx); \
  ({ \
  register char * _BN_nnmod__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIGNUM * __asm("a0"), const BIGNUM * __asm("a1"), const BIGNUM * __asm("a2"), BN_CTX * __asm("a3"))) \
  (_BN_nnmod__bn - 2292))(_BN_nnmod__bn, _BN_nnmod_r, _BN_nnmod_m, _BN_nnmod_d, _BN_nnmod_ctx); \
});})

#define BN_mod_add(r, a, b, m, ctx) ({ \
  BIGNUM * _BN_mod_add_r = (r); \
  const BIGNUM * _BN_mod_add_a = (a); \
  const BIGNUM * _BN_mod_add_b = (b); \
  const BIGNUM * _BN_mod_add_m = (m); \
  BN_CTX * _BN_mod_add_ctx = (ctx); \
  ({ \
  register char * _BN_mod_add__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIGNUM * __asm("a0"), const BIGNUM * __asm("a1"), const BIGNUM * __asm("a2"), const BIGNUM * __asm("a3"), BN_CTX * __asm("d0"))) \
  (_BN_mod_add__bn - 2298))(_BN_mod_add__bn, _BN_mod_add_r, _BN_mod_add_a, _BN_mod_add_b, _BN_mod_add_m, _BN_mod_add_ctx); \
});})

#define BN_mod_add_quick(r, a, b, m) ({ \
  BIGNUM * _BN_mod_add_quick_r = (r); \
  const BIGNUM * _BN_mod_add_quick_a = (a); \
  const BIGNUM * _BN_mod_add_quick_b = (b); \
  const BIGNUM * _BN_mod_add_quick_m = (m); \
  ({ \
  register char * _BN_mod_add_quick__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIGNUM * __asm("a0"), const BIGNUM * __asm("a1"), const BIGNUM * __asm("a2"), const BIGNUM * __asm("a3"))) \
  (_BN_mod_add_quick__bn - 2304))(_BN_mod_add_quick__bn, _BN_mod_add_quick_r, _BN_mod_add_quick_a, _BN_mod_add_quick_b, _BN_mod_add_quick_m); \
});})

#define BN_mod_sub(r, a, b, m, ctx) ({ \
  BIGNUM * _BN_mod_sub_r = (r); \
  const BIGNUM * _BN_mod_sub_a = (a); \
  const BIGNUM * _BN_mod_sub_b = (b); \
  const BIGNUM * _BN_mod_sub_m = (m); \
  BN_CTX * _BN_mod_sub_ctx = (ctx); \
  ({ \
  register char * _BN_mod_sub__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIGNUM * __asm("a0"), const BIGNUM * __asm("a1"), const BIGNUM * __asm("a2"), const BIGNUM * __asm("a3"), BN_CTX * __asm("d0"))) \
  (_BN_mod_sub__bn - 2310))(_BN_mod_sub__bn, _BN_mod_sub_r, _BN_mod_sub_a, _BN_mod_sub_b, _BN_mod_sub_m, _BN_mod_sub_ctx); \
});})

#define BN_mod_sub_quick(r, a, b, m) ({ \
  BIGNUM * _BN_mod_sub_quick_r = (r); \
  const BIGNUM * _BN_mod_sub_quick_a = (a); \
  const BIGNUM * _BN_mod_sub_quick_b = (b); \
  const BIGNUM * _BN_mod_sub_quick_m = (m); \
  ({ \
  register char * _BN_mod_sub_quick__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIGNUM * __asm("a0"), const BIGNUM * __asm("a1"), const BIGNUM * __asm("a2"), const BIGNUM * __asm("a3"))) \
  (_BN_mod_sub_quick__bn - 2316))(_BN_mod_sub_quick__bn, _BN_mod_sub_quick_r, _BN_mod_sub_quick_a, _BN_mod_sub_quick_b, _BN_mod_sub_quick_m); \
});})

#define BN_mod_mul(r, a, b, m, ctx) ({ \
  BIGNUM * _BN_mod_mul_r = (r); \
  const BIGNUM * _BN_mod_mul_a = (a); \
  const BIGNUM * _BN_mod_mul_b = (b); \
  const BIGNUM * _BN_mod_mul_m = (m); \
  BN_CTX * _BN_mod_mul_ctx = (ctx); \
  ({ \
  register char * _BN_mod_mul__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIGNUM * __asm("a0"), const BIGNUM * __asm("a1"), const BIGNUM * __asm("a2"), const BIGNUM * __asm("a3"), BN_CTX * __asm("d0"))) \
  (_BN_mod_mul__bn - 2322))(_BN_mod_mul__bn, _BN_mod_mul_r, _BN_mod_mul_a, _BN_mod_mul_b, _BN_mod_mul_m, _BN_mod_mul_ctx); \
});})

#define BN_mod_sqr(r, a, m, ctx) ({ \
  BIGNUM * _BN_mod_sqr_r = (r); \
  const BIGNUM * _BN_mod_sqr_a = (a); \
  const BIGNUM * _BN_mod_sqr_m = (m); \
  BN_CTX * _BN_mod_sqr_ctx = (ctx); \
  ({ \
  register char * _BN_mod_sqr__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIGNUM * __asm("a0"), const BIGNUM * __asm("a1"), const BIGNUM * __asm("a2"), BN_CTX * __asm("a3"))) \
  (_BN_mod_sqr__bn - 2328))(_BN_mod_sqr__bn, _BN_mod_sqr_r, _BN_mod_sqr_a, _BN_mod_sqr_m, _BN_mod_sqr_ctx); \
});})

#define BN_mod_lshift1(r, a, m, ctx) ({ \
  BIGNUM * _BN_mod_lshift1_r = (r); \
  const BIGNUM * _BN_mod_lshift1_a = (a); \
  const BIGNUM * _BN_mod_lshift1_m = (m); \
  BN_CTX * _BN_mod_lshift1_ctx = (ctx); \
  ({ \
  register char * _BN_mod_lshift1__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIGNUM * __asm("a0"), const BIGNUM * __asm("a1"), const BIGNUM * __asm("a2"), BN_CTX * __asm("a3"))) \
  (_BN_mod_lshift1__bn - 2334))(_BN_mod_lshift1__bn, _BN_mod_lshift1_r, _BN_mod_lshift1_a, _BN_mod_lshift1_m, _BN_mod_lshift1_ctx); \
});})

#define BN_mod_lshift1_quick(r, a, m) ({ \
  BIGNUM * _BN_mod_lshift1_quick_r = (r); \
  const BIGNUM * _BN_mod_lshift1_quick_a = (a); \
  const BIGNUM * _BN_mod_lshift1_quick_m = (m); \
  ({ \
  register char * _BN_mod_lshift1_quick__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIGNUM * __asm("a0"), const BIGNUM * __asm("a1"), const BIGNUM * __asm("a2"))) \
  (_BN_mod_lshift1_quick__bn - 2340))(_BN_mod_lshift1_quick__bn, _BN_mod_lshift1_quick_r, _BN_mod_lshift1_quick_a, _BN_mod_lshift1_quick_m); \
});})

#define BN_mod_lshift(r, a, n, m, ctx) ({ \
  BIGNUM * _BN_mod_lshift_r = (r); \
  const BIGNUM * _BN_mod_lshift_a = (a); \
  LONG _BN_mod_lshift_n = (n); \
  const BIGNUM * _BN_mod_lshift_m = (m); \
  BN_CTX * _BN_mod_lshift_ctx = (ctx); \
  ({ \
  register char * _BN_mod_lshift__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIGNUM * __asm("a0"), const BIGNUM * __asm("a1"), LONG __asm("d0"), const BIGNUM * __asm("a2"), BN_CTX * __asm("a3"))) \
  (_BN_mod_lshift__bn - 2346))(_BN_mod_lshift__bn, _BN_mod_lshift_r, _BN_mod_lshift_a, _BN_mod_lshift_n, _BN_mod_lshift_m, _BN_mod_lshift_ctx); \
});})

#define BN_mod_lshift_quick(r, a, n, m) ({ \
  BIGNUM * _BN_mod_lshift_quick_r = (r); \
  const BIGNUM * _BN_mod_lshift_quick_a = (a); \
  LONG _BN_mod_lshift_quick_n = (n); \
  const BIGNUM * _BN_mod_lshift_quick_m = (m); \
  ({ \
  register char * _BN_mod_lshift_quick__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIGNUM * __asm("a0"), const BIGNUM * __asm("a1"), LONG __asm("d0"), const BIGNUM * __asm("a2"))) \
  (_BN_mod_lshift_quick__bn - 2352))(_BN_mod_lshift_quick__bn, _BN_mod_lshift_quick_r, _BN_mod_lshift_quick_a, _BN_mod_lshift_quick_n, _BN_mod_lshift_quick_m); \
});})

#define BN_mod_word(a, w) ({ \
  const BIGNUM * _BN_mod_word_a = (a); \
  BN_ULONG _BN_mod_word_w = (w); \
  ({ \
  register char * _BN_mod_word__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((BN_ULONG (*)(char * __asm("a6"), const BIGNUM * __asm("a0"), BN_ULONG __asm("d0"))) \
  (_BN_mod_word__bn - 2358))(_BN_mod_word__bn, _BN_mod_word_a, _BN_mod_word_w); \
});})

#define BN_div_word(a, w) ({ \
  BIGNUM * _BN_div_word_a = (a); \
  BN_ULONG _BN_div_word_w = (w); \
  ({ \
  register char * _BN_div_word__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((BN_ULONG (*)(char * __asm("a6"), BIGNUM * __asm("a0"), BN_ULONG __asm("d0"))) \
  (_BN_div_word__bn - 2364))(_BN_div_word__bn, _BN_div_word_a, _BN_div_word_w); \
});})

#define BN_mul_word(a, w) ({ \
  BIGNUM * _BN_mul_word_a = (a); \
  BN_ULONG _BN_mul_word_w = (w); \
  ({ \
  register char * _BN_mul_word__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIGNUM * __asm("a0"), BN_ULONG __asm("d0"))) \
  (_BN_mul_word__bn - 2370))(_BN_mul_word__bn, _BN_mul_word_a, _BN_mul_word_w); \
});})

#define BN_add_word(a, w) ({ \
  BIGNUM * _BN_add_word_a = (a); \
  BN_ULONG _BN_add_word_w = (w); \
  ({ \
  register char * _BN_add_word__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIGNUM * __asm("a0"), BN_ULONG __asm("d0"))) \
  (_BN_add_word__bn - 2376))(_BN_add_word__bn, _BN_add_word_a, _BN_add_word_w); \
});})

#define BN_sub_word(a, w) ({ \
  BIGNUM * _BN_sub_word_a = (a); \
  BN_ULONG _BN_sub_word_w = (w); \
  ({ \
  register char * _BN_sub_word__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIGNUM * __asm("a0"), BN_ULONG __asm("d0"))) \
  (_BN_sub_word__bn - 2382))(_BN_sub_word__bn, _BN_sub_word_a, _BN_sub_word_w); \
});})

#define BN_set_word(a, w) ({ \
  BIGNUM * _BN_set_word_a = (a); \
  BN_ULONG _BN_set_word_w = (w); \
  ({ \
  register char * _BN_set_word__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIGNUM * __asm("a0"), BN_ULONG __asm("d0"))) \
  (_BN_set_word__bn - 2388))(_BN_set_word__bn, _BN_set_word_a, _BN_set_word_w); \
});})

#define BN_get_word(a) ({ \
  const BIGNUM * _BN_get_word_a = (a); \
  ({ \
  register char * _BN_get_word__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((BN_ULONG (*)(char * __asm("a6"), const BIGNUM * __asm("a0"))) \
  (_BN_get_word__bn - 2394))(_BN_get_word__bn, _BN_get_word_a); \
});})

#define BN_cmp(a, b) ({ \
  const BIGNUM * _BN_cmp_a = (a); \
  const BIGNUM * _BN_cmp_b = (b); \
  ({ \
  register char * _BN_cmp__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const BIGNUM * __asm("a0"), const BIGNUM * __asm("a1"))) \
  (_BN_cmp__bn - 2400))(_BN_cmp__bn, _BN_cmp_a, _BN_cmp_b); \
});})

#define BN_free(a) ({ \
  BIGNUM * _BN_free_a = (a); \
  ({ \
  register char * _BN_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), BIGNUM * __asm("a0"))) \
  (_BN_free__bn - 2406))(_BN_free__bn, _BN_free_a); \
});})

#define BN_is_bit_set(a, n) ({ \
  const BIGNUM * _BN_is_bit_set_a = (a); \
  LONG _BN_is_bit_set_n = (n); \
  ({ \
  register char * _BN_is_bit_set__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const BIGNUM * __asm("a0"), LONG __asm("d0"))) \
  (_BN_is_bit_set__bn - 2412))(_BN_is_bit_set__bn, _BN_is_bit_set_a, _BN_is_bit_set_n); \
});})

#define BN_lshift(r, a, n) ({ \
  BIGNUM * _BN_lshift_r = (r); \
  const BIGNUM * _BN_lshift_a = (a); \
  LONG _BN_lshift_n = (n); \
  ({ \
  register char * _BN_lshift__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIGNUM * __asm("a0"), const BIGNUM * __asm("a1"), LONG __asm("d0"))) \
  (_BN_lshift__bn - 2418))(_BN_lshift__bn, _BN_lshift_r, _BN_lshift_a, _BN_lshift_n); \
});})

#define BN_lshift1(r, a) ({ \
  BIGNUM * _BN_lshift1_r = (r); \
  const BIGNUM * _BN_lshift1_a = (a); \
  ({ \
  register char * _BN_lshift1__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIGNUM * __asm("a0"), const BIGNUM * __asm("a1"))) \
  (_BN_lshift1__bn - 2424))(_BN_lshift1__bn, _BN_lshift1_r, _BN_lshift1_a); \
});})

#define BN_exp(r, a, p, ctx) ({ \
  BIGNUM * _BN_exp_r = (r); \
  const BIGNUM * _BN_exp_a = (a); \
  const BIGNUM * _BN_exp_p = (p); \
  BN_CTX * _BN_exp_ctx = (ctx); \
  ({ \
  register char * _BN_exp__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIGNUM * __asm("a0"), const BIGNUM * __asm("a1"), const BIGNUM * __asm("a2"), BN_CTX * __asm("a3"))) \
  (_BN_exp__bn - 2430))(_BN_exp__bn, _BN_exp_r, _BN_exp_a, _BN_exp_p, _BN_exp_ctx); \
});})

#define BN_mod_exp(r, a, p, m, ctx) ({ \
  BIGNUM * _BN_mod_exp_r = (r); \
  const BIGNUM * _BN_mod_exp_a = (a); \
  const BIGNUM * _BN_mod_exp_p = (p); \
  const BIGNUM * _BN_mod_exp_m = (m); \
  BN_CTX * _BN_mod_exp_ctx = (ctx); \
  ({ \
  register char * _BN_mod_exp__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIGNUM * __asm("a0"), const BIGNUM * __asm("a1"), const BIGNUM * __asm("a2"), const BIGNUM * __asm("a3"), BN_CTX * __asm("d0"))) \
  (_BN_mod_exp__bn - 2436))(_BN_mod_exp__bn, _BN_mod_exp_r, _BN_mod_exp_a, _BN_mod_exp_p, _BN_mod_exp_m, _BN_mod_exp_ctx); \
});})

#define BN_mod_exp_mont(r, a, p, m, ctx, m_ctx) ({ \
  BIGNUM * _BN_mod_exp_mont_r = (r); \
  const BIGNUM * _BN_mod_exp_mont_a = (a); \
  const BIGNUM * _BN_mod_exp_mont_p = (p); \
  const BIGNUM * _BN_mod_exp_mont_m = (m); \
  BN_CTX * _BN_mod_exp_mont_ctx = (ctx); \
  BN_MONT_CTX * _BN_mod_exp_mont_m_ctx = (m_ctx); \
  ({ \
  register char * _BN_mod_exp_mont__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIGNUM * __asm("a0"), const BIGNUM * __asm("a1"), const BIGNUM * __asm("a2"), const BIGNUM * __asm("a3"), BN_CTX * __asm("d0"), BN_MONT_CTX * __asm("d1"))) \
  (_BN_mod_exp_mont__bn - 2442))(_BN_mod_exp_mont__bn, _BN_mod_exp_mont_r, _BN_mod_exp_mont_a, _BN_mod_exp_mont_p, _BN_mod_exp_mont_m, _BN_mod_exp_mont_ctx, _BN_mod_exp_mont_m_ctx); \
});})

#define BN_mod_exp_mont_word(r, a, p, m, ctx, m_ctx) ({ \
  BIGNUM * _BN_mod_exp_mont_word_r = (r); \
  BN_ULONG _BN_mod_exp_mont_word_a = (a); \
  const BIGNUM * _BN_mod_exp_mont_word_p = (p); \
  const BIGNUM * _BN_mod_exp_mont_word_m = (m); \
  BN_CTX * _BN_mod_exp_mont_word_ctx = (ctx); \
  BN_MONT_CTX * _BN_mod_exp_mont_word_m_ctx = (m_ctx); \
  ({ \
  register char * _BN_mod_exp_mont_word__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIGNUM * __asm("a0"), BN_ULONG __asm("d0"), const BIGNUM * __asm("a1"), const BIGNUM * __asm("a2"), BN_CTX * __asm("a3"), BN_MONT_CTX * __asm("d1"))) \
  (_BN_mod_exp_mont_word__bn - 2448))(_BN_mod_exp_mont_word__bn, _BN_mod_exp_mont_word_r, _BN_mod_exp_mont_word_a, _BN_mod_exp_mont_word_p, _BN_mod_exp_mont_word_m, _BN_mod_exp_mont_word_ctx, _BN_mod_exp_mont_word_m_ctx); \
});})

#define BN_mod_exp2_mont(r, a1, p1, a2, p2, m, ctx, m_ctx) ({ \
  BIGNUM * _BN_mod_exp2_mont_r = (r); \
  const BIGNUM * _BN_mod_exp2_mont_a1 = (a1); \
  const BIGNUM * _BN_mod_exp2_mont_p1 = (p1); \
  const BIGNUM * _BN_mod_exp2_mont_a2 = (a2); \
  const BIGNUM * _BN_mod_exp2_mont_p2 = (p2); \
  const BIGNUM * _BN_mod_exp2_mont_m = (m); \
  BN_CTX * _BN_mod_exp2_mont_ctx = (ctx); \
  BN_MONT_CTX * _BN_mod_exp2_mont_m_ctx = (m_ctx); \
  ({ \
  register char * _BN_mod_exp2_mont__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIGNUM * __asm("a0"), const BIGNUM * __asm("a1"), const BIGNUM * __asm("a2"), const BIGNUM * __asm("a3"), const BIGNUM * __asm("d0"), const BIGNUM * __asm("d1"), BN_CTX * __asm("d2"), BN_MONT_CTX * __asm("d3"))) \
  (_BN_mod_exp2_mont__bn - 2454))(_BN_mod_exp2_mont__bn, _BN_mod_exp2_mont_r, _BN_mod_exp2_mont_a1, _BN_mod_exp2_mont_p1, _BN_mod_exp2_mont_a2, _BN_mod_exp2_mont_p2, _BN_mod_exp2_mont_m, _BN_mod_exp2_mont_ctx, _BN_mod_exp2_mont_m_ctx); \
});})

#define BN_mod_exp_simple(r, a, p, m, ctx) ({ \
  BIGNUM * _BN_mod_exp_simple_r = (r); \
  const BIGNUM * _BN_mod_exp_simple_a = (a); \
  const BIGNUM * _BN_mod_exp_simple_p = (p); \
  const BIGNUM * _BN_mod_exp_simple_m = (m); \
  BN_CTX * _BN_mod_exp_simple_ctx = (ctx); \
  ({ \
  register char * _BN_mod_exp_simple__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIGNUM * __asm("a0"), const BIGNUM * __asm("a1"), const BIGNUM * __asm("a2"), const BIGNUM * __asm("a3"), BN_CTX * __asm("d0"))) \
  (_BN_mod_exp_simple__bn - 2460))(_BN_mod_exp_simple__bn, _BN_mod_exp_simple_r, _BN_mod_exp_simple_a, _BN_mod_exp_simple_p, _BN_mod_exp_simple_m, _BN_mod_exp_simple_ctx); \
});})

#define BN_mask_bits(a, n) ({ \
  BIGNUM * _BN_mask_bits_a = (a); \
  LONG _BN_mask_bits_n = (n); \
  ({ \
  register char * _BN_mask_bits__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIGNUM * __asm("a0"), LONG __asm("d0"))) \
  (_BN_mask_bits__bn - 2466))(_BN_mask_bits__bn, _BN_mask_bits_a, _BN_mask_bits_n); \
});})

#define BN_print(fp, a) ({ \
  BIO * _BN_print_fp = (fp); \
  const BIGNUM * _BN_print_a = (a); \
  ({ \
  register char * _BN_print__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIO * __asm("a0"), const BIGNUM * __asm("a1"))) \
  (_BN_print__bn - 2472))(_BN_print__bn, _BN_print_fp, _BN_print_a); \
});})

#define BN_reciprocal(r, m, len, ctx) ({ \
  BIGNUM * _BN_reciprocal_r = (r); \
  const BIGNUM * _BN_reciprocal_m = (m); \
  LONG _BN_reciprocal_len = (len); \
  BN_CTX * _BN_reciprocal_ctx = (ctx); \
  ({ \
  register char * _BN_reciprocal__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIGNUM * __asm("a0"), const BIGNUM * __asm("a1"), LONG __asm("d0"), BN_CTX * __asm("a2"))) \
  (_BN_reciprocal__bn - 2478))(_BN_reciprocal__bn, _BN_reciprocal_r, _BN_reciprocal_m, _BN_reciprocal_len, _BN_reciprocal_ctx); \
});})

#define BN_rshift(r, a, n) ({ \
  BIGNUM * _BN_rshift_r = (r); \
  const BIGNUM * _BN_rshift_a = (a); \
  LONG _BN_rshift_n = (n); \
  ({ \
  register char * _BN_rshift__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIGNUM * __asm("a0"), const BIGNUM * __asm("a1"), LONG __asm("d0"))) \
  (_BN_rshift__bn - 2484))(_BN_rshift__bn, _BN_rshift_r, _BN_rshift_a, _BN_rshift_n); \
});})

#define BN_rshift1(r, a) ({ \
  BIGNUM * _BN_rshift1_r = (r); \
  const BIGNUM * _BN_rshift1_a = (a); \
  ({ \
  register char * _BN_rshift1__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIGNUM * __asm("a0"), const BIGNUM * __asm("a1"))) \
  (_BN_rshift1__bn - 2490))(_BN_rshift1__bn, _BN_rshift1_r, _BN_rshift1_a); \
});})

#define BN_clear(a) ({ \
  BIGNUM * _BN_clear_a = (a); \
  ({ \
  register char * _BN_clear__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), BIGNUM * __asm("a0"))) \
  (_BN_clear__bn - 2496))(_BN_clear__bn, _BN_clear_a); \
});})

#define BN_dup(a) ({ \
  const BIGNUM * _BN_dup_a = (a); \
  ({ \
  register char * _BN_dup__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((BIGNUM * (*)(char * __asm("a6"), const BIGNUM * __asm("a0"))) \
  (_BN_dup__bn - 2502))(_BN_dup__bn, _BN_dup_a); \
});})

#define BN_ucmp(a, b) ({ \
  const BIGNUM * _BN_ucmp_a = (a); \
  const BIGNUM * _BN_ucmp_b = (b); \
  ({ \
  register char * _BN_ucmp__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const BIGNUM * __asm("a0"), const BIGNUM * __asm("a1"))) \
  (_BN_ucmp__bn - 2508))(_BN_ucmp__bn, _BN_ucmp_a, _BN_ucmp_b); \
});})

#define BN_set_bit(a, n) ({ \
  BIGNUM * _BN_set_bit_a = (a); \
  LONG _BN_set_bit_n = (n); \
  ({ \
  register char * _BN_set_bit__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIGNUM * __asm("a0"), LONG __asm("d0"))) \
  (_BN_set_bit__bn - 2514))(_BN_set_bit__bn, _BN_set_bit_a, _BN_set_bit_n); \
});})

#define BN_clear_bit(a, n) ({ \
  BIGNUM * _BN_clear_bit_a = (a); \
  LONG _BN_clear_bit_n = (n); \
  ({ \
  register char * _BN_clear_bit__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIGNUM * __asm("a0"), LONG __asm("d0"))) \
  (_BN_clear_bit__bn - 2520))(_BN_clear_bit__bn, _BN_clear_bit_a, _BN_clear_bit_n); \
});})

#define BN_bn2hex(a) ({ \
  const BIGNUM * _BN_bn2hex_a = (a); \
  ({ \
  register char * _BN_bn2hex__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((char * (*)(char * __asm("a6"), const BIGNUM * __asm("a0"))) \
  (_BN_bn2hex__bn - 2526))(_BN_bn2hex__bn, _BN_bn2hex_a); \
});})

#define BN_bn2dec(a) ({ \
  const BIGNUM * _BN_bn2dec_a = (a); \
  ({ \
  register char * _BN_bn2dec__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((char * (*)(char * __asm("a6"), const BIGNUM * __asm("a0"))) \
  (_BN_bn2dec__bn - 2532))(_BN_bn2dec__bn, _BN_bn2dec_a); \
});})

#define BN_hex2bn(a, str) ({ \
  BIGNUM ** _BN_hex2bn_a = (a); \
  const char * _BN_hex2bn_str = (str); \
  ({ \
  register char * _BN_hex2bn__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIGNUM ** __asm("a0"), const char * __asm("a1"))) \
  (_BN_hex2bn__bn - 2538))(_BN_hex2bn__bn, _BN_hex2bn_a, _BN_hex2bn_str); \
});})

#define BN_dec2bn(a, str) ({ \
  BIGNUM ** _BN_dec2bn_a = (a); \
  const char * _BN_dec2bn_str = (str); \
  ({ \
  register char * _BN_dec2bn__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIGNUM ** __asm("a0"), const char * __asm("a1"))) \
  (_BN_dec2bn__bn - 2544))(_BN_dec2bn__bn, _BN_dec2bn_a, _BN_dec2bn_str); \
});})

#define BN_gcd(r, a, b, ctx) ({ \
  BIGNUM * _BN_gcd_r = (r); \
  const BIGNUM * _BN_gcd_a = (a); \
  const BIGNUM * _BN_gcd_b = (b); \
  BN_CTX * _BN_gcd_ctx = (ctx); \
  ({ \
  register char * _BN_gcd__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIGNUM * __asm("a0"), const BIGNUM * __asm("a1"), const BIGNUM * __asm("a2"), BN_CTX * __asm("a3"))) \
  (_BN_gcd__bn - 2550))(_BN_gcd__bn, _BN_gcd_r, _BN_gcd_a, _BN_gcd_b, _BN_gcd_ctx); \
});})

#define BN_kronecker(a, b, ctx) ({ \
  const BIGNUM * _BN_kronecker_a = (a); \
  const BIGNUM * _BN_kronecker_b = (b); \
  BN_CTX * _BN_kronecker_ctx = (ctx); \
  ({ \
  register char * _BN_kronecker__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const BIGNUM * __asm("a0"), const BIGNUM * __asm("a1"), BN_CTX * __asm("a2"))) \
  (_BN_kronecker__bn - 2556))(_BN_kronecker__bn, _BN_kronecker_a, _BN_kronecker_b, _BN_kronecker_ctx); \
});})

#define BN_mod_inverse(ret, a, n, ctx) ({ \
  BIGNUM * _BN_mod_inverse_ret = (ret); \
  const BIGNUM * _BN_mod_inverse_a = (a); \
  const BIGNUM * _BN_mod_inverse_n = (n); \
  BN_CTX * _BN_mod_inverse_ctx = (ctx); \
  ({ \
  register char * _BN_mod_inverse__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((BIGNUM * (*)(char * __asm("a6"), BIGNUM * __asm("a0"), const BIGNUM * __asm("a1"), const BIGNUM * __asm("a2"), BN_CTX * __asm("a3"))) \
  (_BN_mod_inverse__bn - 2562))(_BN_mod_inverse__bn, _BN_mod_inverse_ret, _BN_mod_inverse_a, _BN_mod_inverse_n, _BN_mod_inverse_ctx); \
});})

#define BN_mod_sqrt(ret, a, n, ctx) ({ \
  BIGNUM * _BN_mod_sqrt_ret = (ret); \
  const BIGNUM * _BN_mod_sqrt_a = (a); \
  const BIGNUM * _BN_mod_sqrt_n = (n); \
  BN_CTX * _BN_mod_sqrt_ctx = (ctx); \
  ({ \
  register char * _BN_mod_sqrt__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((BIGNUM * (*)(char * __asm("a6"), BIGNUM * __asm("a0"), const BIGNUM * __asm("a1"), const BIGNUM * __asm("a2"), BN_CTX * __asm("a3"))) \
  (_BN_mod_sqrt__bn - 2568))(_BN_mod_sqrt__bn, _BN_mod_sqrt_ret, _BN_mod_sqrt_a, _BN_mod_sqrt_n, _BN_mod_sqrt_ctx); \
});})

#define BN_generate_prime(ret, bits, safe, add, rem, callback, cb_arg) ({ \
  BIGNUM * _BN_generate_prime_ret = (ret); \
  LONG _BN_generate_prime_bits = (bits); \
  LONG _BN_generate_prime_safe = (safe); \
  const BIGNUM * _BN_generate_prime_add = (add); \
  const BIGNUM * _BN_generate_prime_rem = (rem); \
  void (*_BN_generate_prime_callback)(int, int, void *) = (callback); \
  void * _BN_generate_prime_cb_arg = (cb_arg); \
  ({ \
  register char * _BN_generate_prime__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((BIGNUM * (*)(char * __asm("a6"), BIGNUM * __asm("a0"), LONG __asm("d0"), LONG __asm("d1"), const BIGNUM * __asm("a1"), const BIGNUM * __asm("a2"), void (*)(int, int, void *) __asm("a3"), void * __asm("d2"))) \
  (_BN_generate_prime__bn - 2574))(_BN_generate_prime__bn, _BN_generate_prime_ret, _BN_generate_prime_bits, _BN_generate_prime_safe, _BN_generate_prime_add, _BN_generate_prime_rem, _BN_generate_prime_callback, _BN_generate_prime_cb_arg); \
});})

#define BN_is_prime(p, nchecks, callback, ctx, cb_arg) ({ \
  const BIGNUM * _BN_is_prime_p = (p); \
  LONG _BN_is_prime_nchecks = (nchecks); \
  void (*_BN_is_prime_callback)(int, int, void *) = (callback); \
  BN_CTX * _BN_is_prime_ctx = (ctx); \
  void * _BN_is_prime_cb_arg = (cb_arg); \
  ({ \
  register char * _BN_is_prime__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const BIGNUM * __asm("a0"), LONG __asm("d0"), void (*)(int, int, void *) __asm("a1"), BN_CTX * __asm("a2"), void * __asm("a3"))) \
  (_BN_is_prime__bn - 2580))(_BN_is_prime__bn, _BN_is_prime_p, _BN_is_prime_nchecks, _BN_is_prime_callback, _BN_is_prime_ctx, _BN_is_prime_cb_arg); \
});})

#define BN_is_prime_fasttest(p, nchecks, callback, ctx, cb_arg, do_trial_division) ({ \
  const BIGNUM * _BN_is_prime_fasttest_p = (p); \
  LONG _BN_is_prime_fasttest_nchecks = (nchecks); \
  void (*_BN_is_prime_fasttest_callback)(int, int, void *) = (callback); \
  BN_CTX * _BN_is_prime_fasttest_ctx = (ctx); \
  void * _BN_is_prime_fasttest_cb_arg = (cb_arg); \
  LONG _BN_is_prime_fasttest_do_trial_division = (do_trial_division); \
  ({ \
  register char * _BN_is_prime_fasttest__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const BIGNUM * __asm("a0"), LONG __asm("d0"), void (*)(int, int, void *) __asm("a1"), BN_CTX * __asm("a2"), void * __asm("a3"), LONG __asm("d1"))) \
  (_BN_is_prime_fasttest__bn - 2586))(_BN_is_prime_fasttest__bn, _BN_is_prime_fasttest_p, _BN_is_prime_fasttest_nchecks, _BN_is_prime_fasttest_callback, _BN_is_prime_fasttest_ctx, _BN_is_prime_fasttest_cb_arg, _BN_is_prime_fasttest_do_trial_division); \
});})

#define BN_MONT_CTX_new() ({ \
  register char * _BN_MONT_CTX_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((BN_MONT_CTX * (*)(char * __asm("a6"))) \
  (_BN_MONT_CTX_new__bn - 2592))(_BN_MONT_CTX_new__bn); \
})

#define BN_MONT_CTX_init(ctx) ({ \
  BN_MONT_CTX * _BN_MONT_CTX_init_ctx = (ctx); \
  ({ \
  register char * _BN_MONT_CTX_init__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), BN_MONT_CTX * __asm("a0"))) \
  (_BN_MONT_CTX_init__bn - 2598))(_BN_MONT_CTX_init__bn, _BN_MONT_CTX_init_ctx); \
});})

#define BN_mod_mul_montgomery(r, a, b, mont, ctx) ({ \
  BIGNUM * _BN_mod_mul_montgomery_r = (r); \
  const BIGNUM * _BN_mod_mul_montgomery_a = (a); \
  const BIGNUM * _BN_mod_mul_montgomery_b = (b); \
  BN_MONT_CTX * _BN_mod_mul_montgomery_mont = (mont); \
  BN_CTX * _BN_mod_mul_montgomery_ctx = (ctx); \
  ({ \
  register char * _BN_mod_mul_montgomery__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIGNUM * __asm("a0"), const BIGNUM * __asm("a1"), const BIGNUM * __asm("a2"), BN_MONT_CTX * __asm("a3"), BN_CTX * __asm("d0"))) \
  (_BN_mod_mul_montgomery__bn - 2604))(_BN_mod_mul_montgomery__bn, _BN_mod_mul_montgomery_r, _BN_mod_mul_montgomery_a, _BN_mod_mul_montgomery_b, _BN_mod_mul_montgomery_mont, _BN_mod_mul_montgomery_ctx); \
});})

#define BN_from_montgomery(r, a, mont, ctx) ({ \
  BIGNUM * _BN_from_montgomery_r = (r); \
  const BIGNUM * _BN_from_montgomery_a = (a); \
  BN_MONT_CTX * _BN_from_montgomery_mont = (mont); \
  BN_CTX * _BN_from_montgomery_ctx = (ctx); \
  ({ \
  register char * _BN_from_montgomery__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIGNUM * __asm("a0"), const BIGNUM * __asm("a1"), BN_MONT_CTX * __asm("a2"), BN_CTX * __asm("a3"))) \
  (_BN_from_montgomery__bn - 2610))(_BN_from_montgomery__bn, _BN_from_montgomery_r, _BN_from_montgomery_a, _BN_from_montgomery_mont, _BN_from_montgomery_ctx); \
});})

#define BN_MONT_CTX_free(mont) ({ \
  BN_MONT_CTX * _BN_MONT_CTX_free_mont = (mont); \
  ({ \
  register char * _BN_MONT_CTX_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), BN_MONT_CTX * __asm("a0"))) \
  (_BN_MONT_CTX_free__bn - 2616))(_BN_MONT_CTX_free__bn, _BN_MONT_CTX_free_mont); \
});})

#define BN_MONT_CTX_set(mont, mod, ctx) ({ \
  BN_MONT_CTX * _BN_MONT_CTX_set_mont = (mont); \
  const BIGNUM * _BN_MONT_CTX_set_mod = (mod); \
  BN_CTX * _BN_MONT_CTX_set_ctx = (ctx); \
  ({ \
  register char * _BN_MONT_CTX_set__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BN_MONT_CTX * __asm("a0"), const BIGNUM * __asm("a1"), BN_CTX * __asm("a2"))) \
  (_BN_MONT_CTX_set__bn - 2622))(_BN_MONT_CTX_set__bn, _BN_MONT_CTX_set_mont, _BN_MONT_CTX_set_mod, _BN_MONT_CTX_set_ctx); \
});})

#define BN_MONT_CTX_copy(to, from) ({ \
  BN_MONT_CTX * _BN_MONT_CTX_copy_to = (to); \
  BN_MONT_CTX * _BN_MONT_CTX_copy_from = (from); \
  ({ \
  register char * _BN_MONT_CTX_copy__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((BN_MONT_CTX * (*)(char * __asm("a6"), BN_MONT_CTX * __asm("a0"), BN_MONT_CTX * __asm("a1"))) \
  (_BN_MONT_CTX_copy__bn - 2628))(_BN_MONT_CTX_copy__bn, _BN_MONT_CTX_copy_to, _BN_MONT_CTX_copy_from); \
});})

#define BN_BLINDING_new(A, Ai, mod) ({ \
  BIGNUM * _BN_BLINDING_new_A = (A); \
  BIGNUM * _BN_BLINDING_new_Ai = (Ai); \
  BIGNUM * _BN_BLINDING_new_mod = (mod); \
  ({ \
  register char * _BN_BLINDING_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((BN_BLINDING * (*)(char * __asm("a6"), BIGNUM * __asm("a0"), BIGNUM * __asm("a1"), BIGNUM * __asm("a2"))) \
  (_BN_BLINDING_new__bn - 2634))(_BN_BLINDING_new__bn, _BN_BLINDING_new_A, _BN_BLINDING_new_Ai, _BN_BLINDING_new_mod); \
});})

#define BN_BLINDING_free(b) ({ \
  BN_BLINDING * _BN_BLINDING_free_b = (b); \
  ({ \
  register char * _BN_BLINDING_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), BN_BLINDING * __asm("a0"))) \
  (_BN_BLINDING_free__bn - 2640))(_BN_BLINDING_free__bn, _BN_BLINDING_free_b); \
});})

#define BN_BLINDING_update(b, ctx) ({ \
  BN_BLINDING * _BN_BLINDING_update_b = (b); \
  BN_CTX * _BN_BLINDING_update_ctx = (ctx); \
  ({ \
  register char * _BN_BLINDING_update__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BN_BLINDING * __asm("a0"), BN_CTX * __asm("a1"))) \
  (_BN_BLINDING_update__bn - 2646))(_BN_BLINDING_update__bn, _BN_BLINDING_update_b, _BN_BLINDING_update_ctx); \
});})

#define BN_BLINDING_convert(n, r, ctx) ({ \
  BIGNUM * _BN_BLINDING_convert_n = (n); \
  BN_BLINDING * _BN_BLINDING_convert_r = (r); \
  BN_CTX * _BN_BLINDING_convert_ctx = (ctx); \
  ({ \
  register char * _BN_BLINDING_convert__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIGNUM * __asm("a0"), BN_BLINDING * __asm("a1"), BN_CTX * __asm("a2"))) \
  (_BN_BLINDING_convert__bn - 2652))(_BN_BLINDING_convert__bn, _BN_BLINDING_convert_n, _BN_BLINDING_convert_r, _BN_BLINDING_convert_ctx); \
});})

#define BN_BLINDING_invert(n, b, ctx) ({ \
  BIGNUM * _BN_BLINDING_invert_n = (n); \
  BN_BLINDING * _BN_BLINDING_invert_b = (b); \
  BN_CTX * _BN_BLINDING_invert_ctx = (ctx); \
  ({ \
  register char * _BN_BLINDING_invert__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIGNUM * __asm("a0"), BN_BLINDING * __asm("a1"), BN_CTX * __asm("a2"))) \
  (_BN_BLINDING_invert__bn - 2658))(_BN_BLINDING_invert__bn, _BN_BLINDING_invert_n, _BN_BLINDING_invert_b, _BN_BLINDING_invert_ctx); \
});})

#define BN_set_params(mul, high, low, mont) ({ \
  LONG _BN_set_params_mul = (mul); \
  LONG _BN_set_params_high = (high); \
  LONG _BN_set_params_low = (low); \
  LONG _BN_set_params_mont = (mont); \
  ({ \
  register char * _BN_set_params__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), LONG __asm("d0"), LONG __asm("d1"), LONG __asm("d2"), LONG __asm("d3"))) \
  (_BN_set_params__bn - 2664))(_BN_set_params__bn, _BN_set_params_mul, _BN_set_params_high, _BN_set_params_low, _BN_set_params_mont); \
});})

#define BN_get_params(which) ({ \
  LONG _BN_get_params_which = (which); \
  ({ \
  register char * _BN_get_params__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), LONG __asm("d0"))) \
  (_BN_get_params__bn - 2670))(_BN_get_params__bn, _BN_get_params_which); \
});})

#define BN_RECP_CTX_init(recp) ({ \
  BN_RECP_CTX * _BN_RECP_CTX_init_recp = (recp); \
  ({ \
  register char * _BN_RECP_CTX_init__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), BN_RECP_CTX * __asm("a0"))) \
  (_BN_RECP_CTX_init__bn - 2676))(_BN_RECP_CTX_init__bn, _BN_RECP_CTX_init_recp); \
});})

#define BN_RECP_CTX_new() ({ \
  register char * _BN_RECP_CTX_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((BN_RECP_CTX * (*)(char * __asm("a6"))) \
  (_BN_RECP_CTX_new__bn - 2682))(_BN_RECP_CTX_new__bn); \
})

#define BN_RECP_CTX_free(recp) ({ \
  BN_RECP_CTX * _BN_RECP_CTX_free_recp = (recp); \
  ({ \
  register char * _BN_RECP_CTX_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), BN_RECP_CTX * __asm("a0"))) \
  (_BN_RECP_CTX_free__bn - 2688))(_BN_RECP_CTX_free__bn, _BN_RECP_CTX_free_recp); \
});})

#define BN_RECP_CTX_set(recp, rdiv, ctx) ({ \
  BN_RECP_CTX * _BN_RECP_CTX_set_recp = (recp); \
  const BIGNUM * _BN_RECP_CTX_set_rdiv = (rdiv); \
  BN_CTX * _BN_RECP_CTX_set_ctx = (ctx); \
  ({ \
  register char * _BN_RECP_CTX_set__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BN_RECP_CTX * __asm("a0"), const BIGNUM * __asm("a1"), BN_CTX * __asm("a2"))) \
  (_BN_RECP_CTX_set__bn - 2694))(_BN_RECP_CTX_set__bn, _BN_RECP_CTX_set_recp, _BN_RECP_CTX_set_rdiv, _BN_RECP_CTX_set_ctx); \
});})

#define BN_mod_mul_reciprocal(r, x, y, recp, ctx) ({ \
  BIGNUM * _BN_mod_mul_reciprocal_r = (r); \
  const BIGNUM * _BN_mod_mul_reciprocal_x = (x); \
  const BIGNUM * _BN_mod_mul_reciprocal_y = (y); \
  BN_RECP_CTX * _BN_mod_mul_reciprocal_recp = (recp); \
  BN_CTX * _BN_mod_mul_reciprocal_ctx = (ctx); \
  ({ \
  register char * _BN_mod_mul_reciprocal__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIGNUM * __asm("a0"), const BIGNUM * __asm("a1"), const BIGNUM * __asm("a2"), BN_RECP_CTX * __asm("a3"), BN_CTX * __asm("d0"))) \
  (_BN_mod_mul_reciprocal__bn - 2700))(_BN_mod_mul_reciprocal__bn, _BN_mod_mul_reciprocal_r, _BN_mod_mul_reciprocal_x, _BN_mod_mul_reciprocal_y, _BN_mod_mul_reciprocal_recp, _BN_mod_mul_reciprocal_ctx); \
});})

#define BN_mod_exp_recp(r, a, p, m, ctx) ({ \
  BIGNUM * _BN_mod_exp_recp_r = (r); \
  const BIGNUM * _BN_mod_exp_recp_a = (a); \
  const BIGNUM * _BN_mod_exp_recp_p = (p); \
  const BIGNUM * _BN_mod_exp_recp_m = (m); \
  BN_CTX * _BN_mod_exp_recp_ctx = (ctx); \
  ({ \
  register char * _BN_mod_exp_recp__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIGNUM * __asm("a0"), const BIGNUM * __asm("a1"), const BIGNUM * __asm("a2"), const BIGNUM * __asm("a3"), BN_CTX * __asm("d0"))) \
  (_BN_mod_exp_recp__bn - 2706))(_BN_mod_exp_recp__bn, _BN_mod_exp_recp_r, _BN_mod_exp_recp_a, _BN_mod_exp_recp_p, _BN_mod_exp_recp_m, _BN_mod_exp_recp_ctx); \
});})

#define BN_div_recp(dv, rem, m, recp, ctx) ({ \
  BIGNUM * _BN_div_recp_dv = (dv); \
  BIGNUM * _BN_div_recp_rem = (rem); \
  const BIGNUM * _BN_div_recp_m = (m); \
  BN_RECP_CTX * _BN_div_recp_recp = (recp); \
  BN_CTX * _BN_div_recp_ctx = (ctx); \
  ({ \
  register char * _BN_div_recp__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIGNUM * __asm("a0"), BIGNUM * __asm("a1"), const BIGNUM * __asm("a2"), BN_RECP_CTX * __asm("a3"), BN_CTX * __asm("d0"))) \
  (_BN_div_recp__bn - 2712))(_BN_div_recp__bn, _BN_div_recp_dv, _BN_div_recp_rem, _BN_div_recp_m, _BN_div_recp_recp, _BN_div_recp_ctx); \
});})

#define bn_expand2(a, words) ({ \
  BIGNUM * _bn_expand2_a = (a); \
  LONG _bn_expand2_words = (words); \
  ({ \
  register char * _bn_expand2__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((BIGNUM * (*)(char * __asm("a6"), BIGNUM * __asm("a0"), LONG __asm("d0"))) \
  (_bn_expand2__bn - 2718))(_bn_expand2__bn, _bn_expand2_a, _bn_expand2_words); \
});})

#define bn_dup_expand(a, words) ({ \
  const BIGNUM * _bn_dup_expand_a = (a); \
  LONG _bn_dup_expand_words = (words); \
  ({ \
  register char * _bn_dup_expand__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((BIGNUM * (*)(char * __asm("a6"), const BIGNUM * __asm("a0"), LONG __asm("d0"))) \
  (_bn_dup_expand__bn - 2724))(_bn_dup_expand__bn, _bn_dup_expand_a, _bn_dup_expand_words); \
});})

#define bn_mul_add_words(rp, ap, num, w) ({ \
  BN_ULONG * _bn_mul_add_words_rp = (rp); \
  const BN_ULONG * _bn_mul_add_words_ap = (ap); \
  LONG _bn_mul_add_words_num = (num); \
  BN_ULONG _bn_mul_add_words_w = (w); \
  ({ \
  register char * _bn_mul_add_words__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((BN_ULONG (*)(char * __asm("a6"), BN_ULONG * __asm("a0"), const BN_ULONG * __asm("a1"), LONG __asm("d0"), BN_ULONG __asm("d1"))) \
  (_bn_mul_add_words__bn - 2730))(_bn_mul_add_words__bn, _bn_mul_add_words_rp, _bn_mul_add_words_ap, _bn_mul_add_words_num, _bn_mul_add_words_w); \
});})

#define bn_mul_words(rp, ap, num, w) ({ \
  BN_ULONG * _bn_mul_words_rp = (rp); \
  const BN_ULONG * _bn_mul_words_ap = (ap); \
  LONG _bn_mul_words_num = (num); \
  BN_ULONG _bn_mul_words_w = (w); \
  ({ \
  register char * _bn_mul_words__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((BN_ULONG (*)(char * __asm("a6"), BN_ULONG * __asm("a0"), const BN_ULONG * __asm("a1"), LONG __asm("d0"), BN_ULONG __asm("d1"))) \
  (_bn_mul_words__bn - 2736))(_bn_mul_words__bn, _bn_mul_words_rp, _bn_mul_words_ap, _bn_mul_words_num, _bn_mul_words_w); \
});})

#define bn_sqr_words(rp, ap, num) ({ \
  BN_ULONG * _bn_sqr_words_rp = (rp); \
  const BN_ULONG * _bn_sqr_words_ap = (ap); \
  LONG _bn_sqr_words_num = (num); \
  ({ \
  register char * _bn_sqr_words__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), BN_ULONG * __asm("a0"), const BN_ULONG * __asm("a1"), LONG __asm("d0"))) \
  (_bn_sqr_words__bn - 2742))(_bn_sqr_words__bn, _bn_sqr_words_rp, _bn_sqr_words_ap, _bn_sqr_words_num); \
});})

#define bn_div_words(h, l, d) ({ \
  BN_ULONG _bn_div_words_h = (h); \
  BN_ULONG _bn_div_words_l = (l); \
  BN_ULONG _bn_div_words_d = (d); \
  ({ \
  register char * _bn_div_words__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((BN_ULONG (*)(char * __asm("a6"), BN_ULONG __asm("d0"), BN_ULONG __asm("d1"), BN_ULONG __asm("d2"))) \
  (_bn_div_words__bn - 2748))(_bn_div_words__bn, _bn_div_words_h, _bn_div_words_l, _bn_div_words_d); \
});})

#define bn_add_words(rp, ap, bp, num) ({ \
  BN_ULONG * _bn_add_words_rp = (rp); \
  const BN_ULONG * _bn_add_words_ap = (ap); \
  const BN_ULONG * _bn_add_words_bp = (bp); \
  LONG _bn_add_words_num = (num); \
  ({ \
  register char * _bn_add_words__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((BN_ULONG (*)(char * __asm("a6"), BN_ULONG * __asm("a0"), const BN_ULONG * __asm("a1"), const BN_ULONG * __asm("a2"), LONG __asm("d0"))) \
  (_bn_add_words__bn - 2754))(_bn_add_words__bn, _bn_add_words_rp, _bn_add_words_ap, _bn_add_words_bp, _bn_add_words_num); \
});})

#define bn_sub_words(rp, ap, bp, num) ({ \
  BN_ULONG * _bn_sub_words_rp = (rp); \
  const BN_ULONG * _bn_sub_words_ap = (ap); \
  const BN_ULONG * _bn_sub_words_bp = (bp); \
  LONG _bn_sub_words_num = (num); \
  ({ \
  register char * _bn_sub_words__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((BN_ULONG (*)(char * __asm("a6"), BN_ULONG * __asm("a0"), const BN_ULONG * __asm("a1"), const BN_ULONG * __asm("a2"), LONG __asm("d0"))) \
  (_bn_sub_words__bn - 2760))(_bn_sub_words__bn, _bn_sub_words_rp, _bn_sub_words_ap, _bn_sub_words_bp, _bn_sub_words_num); \
});})

#define BN_bntest_rand(rnd, bits, top, bottom) ({ \
  BIGNUM * _BN_bntest_rand_rnd = (rnd); \
  LONG _BN_bntest_rand_bits = (bits); \
  LONG _BN_bntest_rand_top = (top); \
  LONG _BN_bntest_rand_bottom = (bottom); \
  ({ \
  register char * _BN_bntest_rand__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIGNUM * __asm("a0"), LONG __asm("d0"), LONG __asm("d1"), LONG __asm("d2"))) \
  (_BN_bntest_rand__bn - 2766))(_BN_bntest_rand__bn, _BN_bntest_rand_rnd, _BN_bntest_rand_bits, _BN_bntest_rand_top, _BN_bntest_rand_bottom); \
});})

#define ERR_load_BN_strings() ({ \
  register char * _ERR_load_BN_strings__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"))) \
  (_ERR_load_BN_strings__bn - 2772))(_ERR_load_BN_strings__bn); \
})

#define BUF_MEM_new() ({ \
  register char * _BUF_MEM_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((BUF_MEM * (*)(char * __asm("a6"))) \
  (_BUF_MEM_new__bn - 2778))(_BUF_MEM_new__bn); \
})

#define BUF_MEM_free(a) ({ \
  BUF_MEM * _BUF_MEM_free_a = (a); \
  ({ \
  register char * _BUF_MEM_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), BUF_MEM * __asm("a0"))) \
  (_BUF_MEM_free__bn - 2784))(_BUF_MEM_free__bn, _BUF_MEM_free_a); \
});})

#define BUF_MEM_grow(str, len) ({ \
  BUF_MEM * _BUF_MEM_grow_str = (str); \
  LONG _BUF_MEM_grow_len = (len); \
  ({ \
  register char * _BUF_MEM_grow__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BUF_MEM * __asm("a0"), LONG __asm("d0"))) \
  (_BUF_MEM_grow__bn - 2790))(_BUF_MEM_grow__bn, _BUF_MEM_grow_str, _BUF_MEM_grow_len); \
});})

#define BUF_MEM_grow_clean(str, len) ({ \
  BUF_MEM * _BUF_MEM_grow_clean_str = (str); \
  LONG _BUF_MEM_grow_clean_len = (len); \
  ({ \
  register char * _BUF_MEM_grow_clean__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BUF_MEM * __asm("a0"), LONG __asm("d0"))) \
  (_BUF_MEM_grow_clean__bn - 2796))(_BUF_MEM_grow_clean__bn, _BUF_MEM_grow_clean_str, _BUF_MEM_grow_clean_len); \
});})

#define BUF_strdup(str) ({ \
  const char * _BUF_strdup_str = (str); \
  ({ \
  register char * _BUF_strdup__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((char * (*)(char * __asm("a6"), const char * __asm("a0"))) \
  (_BUF_strdup__bn - 2802))(_BUF_strdup__bn, _BUF_strdup_str); \
});})

#define BUF_strlcpy(dst, src, siz) ({ \
  char * _BUF_strlcpy_dst = (dst); \
  const char * _BUF_strlcpy_src = (src); \
  ULONG _BUF_strlcpy_siz = (siz); \
  ({ \
  register char * _BUF_strlcpy__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((size_t (*)(char * __asm("a6"), char * __asm("a0"), const char * __asm("a1"), ULONG __asm("d0"))) \
  (_BUF_strlcpy__bn - 2808))(_BUF_strlcpy__bn, _BUF_strlcpy_dst, _BUF_strlcpy_src, _BUF_strlcpy_siz); \
});})

#define BUF_strlcat(dst, src, siz) ({ \
  char * _BUF_strlcat_dst = (dst); \
  const char * _BUF_strlcat_src = (src); \
  ULONG _BUF_strlcat_siz = (siz); \
  ({ \
  register char * _BUF_strlcat__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((size_t (*)(char * __asm("a6"), char * __asm("a0"), const char * __asm("a1"), ULONG __asm("d0"))) \
  (_BUF_strlcat__bn - 2814))(_BUF_strlcat__bn, _BUF_strlcat_dst, _BUF_strlcat_src, _BUF_strlcat_siz); \
});})

#define ERR_load_BUF_strings() ({ \
  register char * _ERR_load_BUF_strings__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"))) \
  (_ERR_load_BUF_strings__bn - 2820))(_ERR_load_BUF_strings__bn); \
})

#define COMP_CTX_new(meth) ({ \
  COMP_METHOD * _COMP_CTX_new_meth = (meth); \
  ({ \
  register char * _COMP_CTX_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((COMP_CTX * (*)(char * __asm("a6"), COMP_METHOD * __asm("a0"))) \
  (_COMP_CTX_new__bn - 2826))(_COMP_CTX_new__bn, _COMP_CTX_new_meth); \
});})

#define COMP_CTX_free(ctx) ({ \
  COMP_CTX * _COMP_CTX_free_ctx = (ctx); \
  ({ \
  register char * _COMP_CTX_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), COMP_CTX * __asm("a0"))) \
  (_COMP_CTX_free__bn - 2832))(_COMP_CTX_free__bn, _COMP_CTX_free_ctx); \
});})

#define COMP_compress_block(ctx, out, olen, in, ilen) ({ \
  COMP_CTX * _COMP_compress_block_ctx = (ctx); \
  unsigned char * _COMP_compress_block_out = (out); \
  LONG _COMP_compress_block_olen = (olen); \
  unsigned char * _COMP_compress_block_in = (in); \
  LONG _COMP_compress_block_ilen = (ilen); \
  ({ \
  register char * _COMP_compress_block__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), COMP_CTX * __asm("a0"), unsigned char * __asm("a1"), LONG __asm("d0"), unsigned char * __asm("a2"), LONG __asm("d1"))) \
  (_COMP_compress_block__bn - 2838))(_COMP_compress_block__bn, _COMP_compress_block_ctx, _COMP_compress_block_out, _COMP_compress_block_olen, _COMP_compress_block_in, _COMP_compress_block_ilen); \
});})

#define COMP_expand_block(ctx, out, olen, in, ilen) ({ \
  COMP_CTX * _COMP_expand_block_ctx = (ctx); \
  unsigned char * _COMP_expand_block_out = (out); \
  LONG _COMP_expand_block_olen = (olen); \
  unsigned char * _COMP_expand_block_in = (in); \
  LONG _COMP_expand_block_ilen = (ilen); \
  ({ \
  register char * _COMP_expand_block__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), COMP_CTX * __asm("a0"), unsigned char * __asm("a1"), LONG __asm("d0"), unsigned char * __asm("a2"), LONG __asm("d1"))) \
  (_COMP_expand_block__bn - 2844))(_COMP_expand_block__bn, _COMP_expand_block_ctx, _COMP_expand_block_out, _COMP_expand_block_olen, _COMP_expand_block_in, _COMP_expand_block_ilen); \
});})

#define COMP_rle() ({ \
  register char * _COMP_rle__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((COMP_METHOD * (*)(char * __asm("a6"))) \
  (_COMP_rle__bn - 2850))(_COMP_rle__bn); \
})

#define COMP_zlib() ({ \
  register char * _COMP_zlib__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((COMP_METHOD * (*)(char * __asm("a6"))) \
  (_COMP_zlib__bn - 2856))(_COMP_zlib__bn); \
})

#define ERR_load_COMP_strings() ({ \
  register char * _ERR_load_COMP_strings__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"))) \
  (_ERR_load_COMP_strings__bn - 2862))(_ERR_load_COMP_strings__bn); \
})

#define CONF_set_default_method(meth) ({ \
  CONF_METHOD * _CONF_set_default_method_meth = (meth); \
  ({ \
  register char * _CONF_set_default_method__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), CONF_METHOD * __asm("a0"))) \
  (_CONF_set_default_method__bn - 2868))(_CONF_set_default_method__bn, _CONF_set_default_method_meth); \
});})

#define CONF_set_nconf(conf, hash) ({ \
  CONF * _CONF_set_nconf_conf = (conf); \
  LHASH * _CONF_set_nconf_hash = (hash); \
  ({ \
  register char * _CONF_set_nconf__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), CONF * __asm("a0"), LHASH * __asm("a1"))) \
  (_CONF_set_nconf__bn - 2874))(_CONF_set_nconf__bn, _CONF_set_nconf_conf, _CONF_set_nconf_hash); \
});})

#define CONF_load(conf, file, eline) ({ \
  LHASH * _CONF_load_conf = (conf); \
  const char * _CONF_load_file = (file); \
  long * _CONF_load_eline = (eline); \
  ({ \
  register char * _CONF_load__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((LHASH * (*)(char * __asm("a6"), LHASH * __asm("a0"), const char * __asm("a1"), long * __asm("a2"))) \
  (_CONF_load__bn - 2880))(_CONF_load__bn, _CONF_load_conf, _CONF_load_file, _CONF_load_eline); \
});})

#define CONF_load_bio(conf, bp, eline) ({ \
  LHASH * _CONF_load_bio_conf = (conf); \
  BIO * _CONF_load_bio_bp = (bp); \
  long * _CONF_load_bio_eline = (eline); \
  ({ \
  register char * _CONF_load_bio__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((LHASH * (*)(char * __asm("a6"), LHASH * __asm("a0"), BIO * __asm("a1"), long * __asm("a2"))) \
  (_CONF_load_bio__bn - 2886))(_CONF_load_bio__bn, _CONF_load_bio_conf, _CONF_load_bio_bp, _CONF_load_bio_eline); \
});})

#define CONF_get_section(conf, section) ({ \
  LHASH * _CONF_get_section_conf = (conf); \
  const char * _CONF_get_section_section = (section); \
  ({ \
  register char * _CONF_get_section__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((STACK_OF(CONF_VALUE) * (*)(char * __asm("a6"), LHASH * __asm("a0"), const char * __asm("a1"))) \
  (_CONF_get_section__bn - 2892))(_CONF_get_section__bn, _CONF_get_section_conf, _CONF_get_section_section); \
});})

#define CONF_get_string(conf, group, name) ({ \
  LHASH * _CONF_get_string_conf = (conf); \
  const char * _CONF_get_string_group = (group); \
  const char * _CONF_get_string_name = (name); \
  ({ \
  register char * _CONF_get_string__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((char * (*)(char * __asm("a6"), LHASH * __asm("a0"), const char * __asm("a1"), const char * __asm("a2"))) \
  (_CONF_get_string__bn - 2898))(_CONF_get_string__bn, _CONF_get_string_conf, _CONF_get_string_group, _CONF_get_string_name); \
});})

#define CONF_get_number(conf, group, name) ({ \
  LHASH * _CONF_get_number_conf = (conf); \
  const char * _CONF_get_number_group = (group); \
  const char * _CONF_get_number_name = (name); \
  ({ \
  register char * _CONF_get_number__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((long (*)(char * __asm("a6"), LHASH * __asm("a0"), const char * __asm("a1"), const char * __asm("a2"))) \
  (_CONF_get_number__bn - 2904))(_CONF_get_number__bn, _CONF_get_number_conf, _CONF_get_number_group, _CONF_get_number_name); \
});})

#define CONF_free(conf) ({ \
  LHASH * _CONF_free_conf = (conf); \
  ({ \
  register char * _CONF_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), LHASH * __asm("a0"))) \
  (_CONF_free__bn - 2910))(_CONF_free__bn, _CONF_free_conf); \
});})

#define CONF_dump_bio(conf, out) ({ \
  LHASH * _CONF_dump_bio_conf = (conf); \
  BIO * _CONF_dump_bio_out = (out); \
  ({ \
  register char * _CONF_dump_bio__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), LHASH * __asm("a0"), BIO * __asm("a1"))) \
  (_CONF_dump_bio__bn - 2916))(_CONF_dump_bio__bn, _CONF_dump_bio_conf, _CONF_dump_bio_out); \
});})

#define OPENSSL_config(config_name) ({ \
  const char * _OPENSSL_config_config_name = (config_name); \
  ({ \
  register char * _OPENSSL_config__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), const char * __asm("a0"))) \
  (_OPENSSL_config__bn - 2922))(_OPENSSL_config__bn, _OPENSSL_config_config_name); \
});})

#define OPENSSL_no_config() ({ \
  register char * _OPENSSL_no_config__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"))) \
  (_OPENSSL_no_config__bn - 2928))(_OPENSSL_no_config__bn); \
})

#define NCONF_new(meth) ({ \
  CONF_METHOD * _NCONF_new_meth = (meth); \
  ({ \
  register char * _NCONF_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((CONF * (*)(char * __asm("a6"), CONF_METHOD * __asm("a0"))) \
  (_NCONF_new__bn - 2934))(_NCONF_new__bn, _NCONF_new_meth); \
});})

#define NCONF_default() ({ \
  register char * _NCONF_default__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((CONF_METHOD * (*)(char * __asm("a6"))) \
  (_NCONF_default__bn - 2940))(_NCONF_default__bn); \
})

#define NCONF_WIN32() ({ \
  register char * _NCONF_WIN32__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((CONF_METHOD * (*)(char * __asm("a6"))) \
  (_NCONF_WIN32__bn - 2946))(_NCONF_WIN32__bn); \
})

#define NCONF_free(conf) ({ \
  CONF * _NCONF_free_conf = (conf); \
  ({ \
  register char * _NCONF_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), CONF * __asm("a0"))) \
  (_NCONF_free__bn - 2952))(_NCONF_free__bn, _NCONF_free_conf); \
});})

#define NCONF_free_data(conf) ({ \
  CONF * _NCONF_free_data_conf = (conf); \
  ({ \
  register char * _NCONF_free_data__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), CONF * __asm("a0"))) \
  (_NCONF_free_data__bn - 2958))(_NCONF_free_data__bn, _NCONF_free_data_conf); \
});})

#define NCONF_load(conf, file, eline) ({ \
  CONF * _NCONF_load_conf = (conf); \
  const char * _NCONF_load_file = (file); \
  long * _NCONF_load_eline = (eline); \
  ({ \
  register char * _NCONF_load__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), CONF * __asm("a0"), const char * __asm("a1"), long * __asm("a2"))) \
  (_NCONF_load__bn - 2964))(_NCONF_load__bn, _NCONF_load_conf, _NCONF_load_file, _NCONF_load_eline); \
});})

#define NCONF_load_bio(conf, bp, eline) ({ \
  CONF * _NCONF_load_bio_conf = (conf); \
  BIO * _NCONF_load_bio_bp = (bp); \
  long * _NCONF_load_bio_eline = (eline); \
  ({ \
  register char * _NCONF_load_bio__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), CONF * __asm("a0"), BIO * __asm("a1"), long * __asm("a2"))) \
  (_NCONF_load_bio__bn - 2970))(_NCONF_load_bio__bn, _NCONF_load_bio_conf, _NCONF_load_bio_bp, _NCONF_load_bio_eline); \
});})

#define NCONF_get_section(conf, section) ({ \
  const CONF * _NCONF_get_section_conf = (conf); \
  const char * _NCONF_get_section_section = (section); \
  ({ \
  register char * _NCONF_get_section__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((STACK_OF(CONF_VALUE) * (*)(char * __asm("a6"), const CONF * __asm("a0"), const char * __asm("a1"))) \
  (_NCONF_get_section__bn - 2976))(_NCONF_get_section__bn, _NCONF_get_section_conf, _NCONF_get_section_section); \
});})

#define NCONF_get_string(conf, group, name) ({ \
  const CONF * _NCONF_get_string_conf = (conf); \
  const char * _NCONF_get_string_group = (group); \
  const char * _NCONF_get_string_name = (name); \
  ({ \
  register char * _NCONF_get_string__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((char * (*)(char * __asm("a6"), const CONF * __asm("a0"), const char * __asm("a1"), const char * __asm("a2"))) \
  (_NCONF_get_string__bn - 2982))(_NCONF_get_string__bn, _NCONF_get_string_conf, _NCONF_get_string_group, _NCONF_get_string_name); \
});})

#define NCONF_get_number_e(conf, group, name, result) ({ \
  const CONF * _NCONF_get_number_e_conf = (conf); \
  const char * _NCONF_get_number_e_group = (group); \
  const char * _NCONF_get_number_e_name = (name); \
  long * _NCONF_get_number_e_result = (result); \
  ({ \
  register char * _NCONF_get_number_e__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const CONF * __asm("a0"), const char * __asm("a1"), const char * __asm("a2"), long * __asm("a3"))) \
  (_NCONF_get_number_e__bn - 2988))(_NCONF_get_number_e__bn, _NCONF_get_number_e_conf, _NCONF_get_number_e_group, _NCONF_get_number_e_name, _NCONF_get_number_e_result); \
});})

#define NCONF_dump_bio(conf, out) ({ \
  const CONF * _NCONF_dump_bio_conf = (conf); \
  BIO * _NCONF_dump_bio_out = (out); \
  ({ \
  register char * _NCONF_dump_bio__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const CONF * __asm("a0"), BIO * __asm("a1"))) \
  (_NCONF_dump_bio__bn - 2994))(_NCONF_dump_bio__bn, _NCONF_dump_bio_conf, _NCONF_dump_bio_out); \
});})

#define CONF_modules_load(cnf, appname, flags) ({ \
  const CONF * _CONF_modules_load_cnf = (cnf); \
  const char * _CONF_modules_load_appname = (appname); \
  unsigned long _CONF_modules_load_flags = (flags); \
  ({ \
  register char * _CONF_modules_load__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const CONF * __asm("a0"), const char * __asm("a1"), unsigned long __asm("d0"))) \
  (_CONF_modules_load__bn - 3000))(_CONF_modules_load__bn, _CONF_modules_load_cnf, _CONF_modules_load_appname, _CONF_modules_load_flags); \
});})

#define CONF_modules_load_file(filename, appname, flags) ({ \
  const char * _CONF_modules_load_file_filename = (filename); \
  const char * _CONF_modules_load_file_appname = (appname); \
  unsigned long _CONF_modules_load_file_flags = (flags); \
  ({ \
  register char * _CONF_modules_load_file__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const char * __asm("a0"), const char * __asm("a1"), unsigned long __asm("d0"))) \
  (_CONF_modules_load_file__bn - 3006))(_CONF_modules_load_file__bn, _CONF_modules_load_file_filename, _CONF_modules_load_file_appname, _CONF_modules_load_file_flags); \
});})

#define CONF_modules_unload(all) ({ \
  LONG _CONF_modules_unload_all = (all); \
  ({ \
  register char * _CONF_modules_unload__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), LONG __asm("d0"))) \
  (_CONF_modules_unload__bn - 3012))(_CONF_modules_unload__bn, _CONF_modules_unload_all); \
});})

#define CONF_modules_finish() ({ \
  register char * _CONF_modules_finish__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"))) \
  (_CONF_modules_finish__bn - 3018))(_CONF_modules_finish__bn); \
})

#define CONF_modules_free() ({ \
  register char * _CONF_modules_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"))) \
  (_CONF_modules_free__bn - 3024))(_CONF_modules_free__bn); \
})

#define CONF_module_add(name, ifunc, ffunc) ({ \
  const char * _CONF_module_add_name = (name); \
  conf_init_func * (*_CONF_module_add_ifunc)() = (ifunc); \
  conf_finish_func * (*_CONF_module_add_ffunc)() = (ffunc); \
  ({ \
  register char * _CONF_module_add__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const char * __asm("a0"), conf_init_func * (*)() __asm("a1"), conf_finish_func * (*)() __asm("a2"))) \
  (_CONF_module_add__bn - 3030))(_CONF_module_add__bn, _CONF_module_add_name, _CONF_module_add_ifunc, _CONF_module_add_ffunc); \
});})

#define CONF_imodule_get_name(md) ({ \
  const CONF_IMODULE * _CONF_imodule_get_name_md = (md); \
  ({ \
  register char * _CONF_imodule_get_name__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const char * (*)(char * __asm("a6"), const CONF_IMODULE * __asm("a0"))) \
  (_CONF_imodule_get_name__bn - 3036))(_CONF_imodule_get_name__bn, _CONF_imodule_get_name_md); \
});})

#define CONF_imodule_get_value(md) ({ \
  const CONF_IMODULE * _CONF_imodule_get_value_md = (md); \
  ({ \
  register char * _CONF_imodule_get_value__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const char * (*)(char * __asm("a6"), const CONF_IMODULE * __asm("a0"))) \
  (_CONF_imodule_get_value__bn - 3042))(_CONF_imodule_get_value__bn, _CONF_imodule_get_value_md); \
});})

#define CONF_imodule_get_usr_data(md) ({ \
  const CONF_IMODULE * _CONF_imodule_get_usr_data_md = (md); \
  ({ \
  register char * _CONF_imodule_get_usr_data__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void * (*)(char * __asm("a6"), const CONF_IMODULE * __asm("a0"))) \
  (_CONF_imodule_get_usr_data__bn - 3048))(_CONF_imodule_get_usr_data__bn, _CONF_imodule_get_usr_data_md); \
});})

#define CONF_imodule_set_usr_data(md, usr_data) ({ \
  CONF_IMODULE * _CONF_imodule_set_usr_data_md = (md); \
  void * _CONF_imodule_set_usr_data_usr_data = (usr_data); \
  ({ \
  register char * _CONF_imodule_set_usr_data__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), CONF_IMODULE * __asm("a0"), void * __asm("a1"))) \
  (_CONF_imodule_set_usr_data__bn - 3054))(_CONF_imodule_set_usr_data__bn, _CONF_imodule_set_usr_data_md, _CONF_imodule_set_usr_data_usr_data); \
});})

#define CONF_imodule_get_module(md) ({ \
  const CONF_IMODULE * _CONF_imodule_get_module_md = (md); \
  ({ \
  register char * _CONF_imodule_get_module__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((CONF_MODULE * (*)(char * __asm("a6"), const CONF_IMODULE * __asm("a0"))) \
  (_CONF_imodule_get_module__bn - 3060))(_CONF_imodule_get_module__bn, _CONF_imodule_get_module_md); \
});})

#define CONF_imodule_get_flags(md) ({ \
  const CONF_IMODULE * _CONF_imodule_get_flags_md = (md); \
  ({ \
  register char * _CONF_imodule_get_flags__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((unsigned long (*)(char * __asm("a6"), const CONF_IMODULE * __asm("a0"))) \
  (_CONF_imodule_get_flags__bn - 3066))(_CONF_imodule_get_flags__bn, _CONF_imodule_get_flags_md); \
});})

#define CONF_imodule_set_flags(md, flags) ({ \
  CONF_IMODULE * _CONF_imodule_set_flags_md = (md); \
  unsigned long _CONF_imodule_set_flags_flags = (flags); \
  ({ \
  register char * _CONF_imodule_set_flags__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), CONF_IMODULE * __asm("a0"), unsigned long __asm("d0"))) \
  (_CONF_imodule_set_flags__bn - 3072))(_CONF_imodule_set_flags__bn, _CONF_imodule_set_flags_md, _CONF_imodule_set_flags_flags); \
});})

#define CONF_module_get_usr_data(pmod) ({ \
  CONF_MODULE * _CONF_module_get_usr_data_pmod = (pmod); \
  ({ \
  register char * _CONF_module_get_usr_data__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void * (*)(char * __asm("a6"), CONF_MODULE * __asm("a0"))) \
  (_CONF_module_get_usr_data__bn - 3078))(_CONF_module_get_usr_data__bn, _CONF_module_get_usr_data_pmod); \
});})

#define CONF_module_set_usr_data(pmod, usr_data) ({ \
  CONF_MODULE * _CONF_module_set_usr_data_pmod = (pmod); \
  void * _CONF_module_set_usr_data_usr_data = (usr_data); \
  ({ \
  register char * _CONF_module_set_usr_data__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), CONF_MODULE * __asm("a0"), void * __asm("a1"))) \
  (_CONF_module_set_usr_data__bn - 3084))(_CONF_module_set_usr_data__bn, _CONF_module_set_usr_data_pmod, _CONF_module_set_usr_data_usr_data); \
});})

#define CONF_get1_default_config_file() ({ \
  register char * _CONF_get1_default_config_file__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((char * (*)(char * __asm("a6"))) \
  (_CONF_get1_default_config_file__bn - 3090))(_CONF_get1_default_config_file__bn); \
})

#define CONF_parse_list(list, sep, nospc, list_cb, arg) ({ \
  const char * _CONF_parse_list_list = (list); \
  LONG _CONF_parse_list_sep = (sep); \
  LONG _CONF_parse_list_nospc = (nospc); \
  int (*_CONF_parse_list_list_cb)(const char *elem, int len, void *usr) = (list_cb); \
  void * _CONF_parse_list_arg = (arg); \
  ({ \
  register char * _CONF_parse_list__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const char * __asm("a0"), LONG __asm("d0"), LONG __asm("d1"), int (*)(const char *elem, int len, void *usr) __asm("a1"), void * __asm("a2"))) \
  (_CONF_parse_list__bn - 3096))(_CONF_parse_list__bn, _CONF_parse_list_list, _CONF_parse_list_sep, _CONF_parse_list_nospc, _CONF_parse_list_list_cb, _CONF_parse_list_arg); \
});})

#define OPENSSL_load_builtin_modules() ({ \
  register char * _OPENSSL_load_builtin_modules__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"))) \
  (_OPENSSL_load_builtin_modules__bn - 3102))(_OPENSSL_load_builtin_modules__bn); \
})

#define ERR_load_CONF_strings() ({ \
  register char * _ERR_load_CONF_strings__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"))) \
  (_ERR_load_CONF_strings__bn - 3108))(_ERR_load_CONF_strings__bn); \
})

#define _CONF_new_section(conf, section) ({ \
  CONF * __CONF_new_section_conf = (conf); \
  const char * __CONF_new_section_section = (section); \
  ({ \
  register char * __CONF_new_section__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((CONF_VALUE * (*)(char * __asm("a6"), CONF * __asm("a0"), const char * __asm("a1"))) \
  (__CONF_new_section__bn - 3114))(__CONF_new_section__bn, __CONF_new_section_conf, __CONF_new_section_section); \
});})

#define _CONF_get_section(conf, section) ({ \
  const CONF * __CONF_get_section_conf = (conf); \
  const char * __CONF_get_section_section = (section); \
  ({ \
  register char * __CONF_get_section__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((CONF_VALUE * (*)(char * __asm("a6"), const CONF * __asm("a0"), const char * __asm("a1"))) \
  (__CONF_get_section__bn - 3120))(__CONF_get_section__bn, __CONF_get_section_conf, __CONF_get_section_section); \
});})

#define _CONF_get_section_values(conf, section) ({ \
  const CONF * __CONF_get_section_values_conf = (conf); \
  const char * __CONF_get_section_values_section = (section); \
  ({ \
  register char * __CONF_get_section_values__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((STACK_OF(CONF_VALUE) * (*)(char * __asm("a6"), const CONF * __asm("a0"), const char * __asm("a1"))) \
  (__CONF_get_section_values__bn - 3126))(__CONF_get_section_values__bn, __CONF_get_section_values_conf, __CONF_get_section_values_section); \
});})

#define _CONF_add_string(conf, section, value) ({ \
  CONF * __CONF_add_string_conf = (conf); \
  CONF_VALUE * __CONF_add_string_section = (section); \
  CONF_VALUE * __CONF_add_string_value = (value); \
  ({ \
  register char * __CONF_add_string__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), CONF * __asm("a0"), CONF_VALUE * __asm("a1"), CONF_VALUE * __asm("a2"))) \
  (__CONF_add_string__bn - 3132))(__CONF_add_string__bn, __CONF_add_string_conf, __CONF_add_string_section, __CONF_add_string_value); \
});})

#define _CONF_get_string(conf, section, name) ({ \
  const CONF * __CONF_get_string_conf = (conf); \
  const char * __CONF_get_string_section = (section); \
  const char * __CONF_get_string_name = (name); \
  ({ \
  register char * __CONF_get_string__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((char * (*)(char * __asm("a6"), const CONF * __asm("a0"), const char * __asm("a1"), const char * __asm("a2"))) \
  (__CONF_get_string__bn - 3138))(__CONF_get_string__bn, __CONF_get_string_conf, __CONF_get_string_section, __CONF_get_string_name); \
});})

#define _CONF_new_data(conf) ({ \
  CONF * __CONF_new_data_conf = (conf); \
  ({ \
  register char * __CONF_new_data__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), CONF * __asm("a0"))) \
  (__CONF_new_data__bn - 3144))(__CONF_new_data__bn, __CONF_new_data_conf); \
});})

#define _CONF_free_data(conf) ({ \
  CONF * __CONF_free_data_conf = (conf); \
  ({ \
  register char * __CONF_free_data__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), CONF * __asm("a0"))) \
  (__CONF_free_data__bn - 3150))(__CONF_free_data__bn, __CONF_free_data_conf); \
});})

#define CRYPTO_mem_ctrl(mode) ({ \
  LONG _CRYPTO_mem_ctrl_mode = (mode); \
  ({ \
  register char * _CRYPTO_mem_ctrl__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), LONG __asm("d0"))) \
  (_CRYPTO_mem_ctrl__bn - 3156))(_CRYPTO_mem_ctrl__bn, _CRYPTO_mem_ctrl_mode); \
});})

#define CRYPTO_is_mem_check_on() ({ \
  register char * _CRYPTO_is_mem_check_on__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"))) \
  (_CRYPTO_is_mem_check_on__bn - 3162))(_CRYPTO_is_mem_check_on__bn); \
})

#define SSLeay_version(type) ({ \
  LONG _SSLeay_version_type = (type); \
  ({ \
  register char * _SSLeay_version__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const char * (*)(char * __asm("a6"), LONG __asm("d0"))) \
  (_SSLeay_version__bn - 3168))(_SSLeay_version__bn, _SSLeay_version_type); \
});})

#define SSLeay() ({ \
  register char * _SSLeay__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((unsigned long (*)(char * __asm("a6"))) \
  (_SSLeay__bn - 3174))(_SSLeay__bn); \
})

#define OPENSSL_issetugid() ({ \
  register char * _OPENSSL_issetugid__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"))) \
  (_OPENSSL_issetugid__bn - 3180))(_OPENSSL_issetugid__bn); \
})

#define CRYPTO_get_ex_data_implementation() ({ \
  register char * _CRYPTO_get_ex_data_implementation__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const CRYPTO_EX_DATA_IMPL * (*)(char * __asm("a6"))) \
  (_CRYPTO_get_ex_data_implementation__bn - 3186))(_CRYPTO_get_ex_data_implementation__bn); \
})

#define CRYPTO_set_ex_data_implementation(i) ({ \
  const CRYPTO_EX_DATA_IMPL * _CRYPTO_set_ex_data_implementation_i = (i); \
  ({ \
  register char * _CRYPTO_set_ex_data_implementation__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const CRYPTO_EX_DATA_IMPL * __asm("a0"))) \
  (_CRYPTO_set_ex_data_implementation__bn - 3192))(_CRYPTO_set_ex_data_implementation__bn, _CRYPTO_set_ex_data_implementation_i); \
});})

#define CRYPTO_ex_data_new_class() ({ \
  register char * _CRYPTO_ex_data_new_class__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"))) \
  (_CRYPTO_ex_data_new_class__bn - 3198))(_CRYPTO_ex_data_new_class__bn); \
})

#define CRYPTO_get_ex_new_index(class_index, argl, argp, new_func, dup_func, free_func) ({ \
  LONG _CRYPTO_get_ex_new_index_class_index = (class_index); \
  long _CRYPTO_get_ex_new_index_argl = (argl); \
  void * _CRYPTO_get_ex_new_index_argp = (argp); \
  CRYPTO_EX_new * (*_CRYPTO_get_ex_new_index_new_func)() = (new_func); \
  CRYPTO_EX_dup * (*_CRYPTO_get_ex_new_index_dup_func)() = (dup_func); \
  CRYPTO_EX_free * (*_CRYPTO_get_ex_new_index_free_func)() = (free_func); \
  ({ \
  register char * _CRYPTO_get_ex_new_index__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), LONG __asm("d0"), long __asm("d1"), void * __asm("a0"), CRYPTO_EX_new * (*)() __asm("a1"), CRYPTO_EX_dup * (*)() __asm("a2"), CRYPTO_EX_free * (*)() __asm("a3"))) \
  (_CRYPTO_get_ex_new_index__bn - 3204))(_CRYPTO_get_ex_new_index__bn, _CRYPTO_get_ex_new_index_class_index, _CRYPTO_get_ex_new_index_argl, _CRYPTO_get_ex_new_index_argp, _CRYPTO_get_ex_new_index_new_func, _CRYPTO_get_ex_new_index_dup_func, _CRYPTO_get_ex_new_index_free_func); \
});})

#define CRYPTO_new_ex_data(class_index, obj, ad) ({ \
  LONG _CRYPTO_new_ex_data_class_index = (class_index); \
  void * _CRYPTO_new_ex_data_obj = (obj); \
  CRYPTO_EX_DATA * _CRYPTO_new_ex_data_ad = (ad); \
  ({ \
  register char * _CRYPTO_new_ex_data__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), LONG __asm("d0"), void * __asm("a0"), CRYPTO_EX_DATA * __asm("a1"))) \
  (_CRYPTO_new_ex_data__bn - 3210))(_CRYPTO_new_ex_data__bn, _CRYPTO_new_ex_data_class_index, _CRYPTO_new_ex_data_obj, _CRYPTO_new_ex_data_ad); \
});})

#define CRYPTO_dup_ex_data(class_index, to, from) ({ \
  LONG _CRYPTO_dup_ex_data_class_index = (class_index); \
  CRYPTO_EX_DATA * _CRYPTO_dup_ex_data_to = (to); \
  CRYPTO_EX_DATA * _CRYPTO_dup_ex_data_from = (from); \
  ({ \
  register char * _CRYPTO_dup_ex_data__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), LONG __asm("d0"), CRYPTO_EX_DATA * __asm("a0"), CRYPTO_EX_DATA * __asm("a1"))) \
  (_CRYPTO_dup_ex_data__bn - 3216))(_CRYPTO_dup_ex_data__bn, _CRYPTO_dup_ex_data_class_index, _CRYPTO_dup_ex_data_to, _CRYPTO_dup_ex_data_from); \
});})

#define CRYPTO_free_ex_data(class_index, obj, ad) ({ \
  LONG _CRYPTO_free_ex_data_class_index = (class_index); \
  void * _CRYPTO_free_ex_data_obj = (obj); \
  CRYPTO_EX_DATA * _CRYPTO_free_ex_data_ad = (ad); \
  ({ \
  register char * _CRYPTO_free_ex_data__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), LONG __asm("d0"), void * __asm("a0"), CRYPTO_EX_DATA * __asm("a1"))) \
  (_CRYPTO_free_ex_data__bn - 3222))(_CRYPTO_free_ex_data__bn, _CRYPTO_free_ex_data_class_index, _CRYPTO_free_ex_data_obj, _CRYPTO_free_ex_data_ad); \
});})

#define CRYPTO_set_ex_data(ad, idx, val) ({ \
  CRYPTO_EX_DATA * _CRYPTO_set_ex_data_ad = (ad); \
  LONG _CRYPTO_set_ex_data_idx = (idx); \
  void * _CRYPTO_set_ex_data_val = (val); \
  ({ \
  register char * _CRYPTO_set_ex_data__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), CRYPTO_EX_DATA * __asm("a0"), LONG __asm("d0"), void * __asm("a1"))) \
  (_CRYPTO_set_ex_data__bn - 3228))(_CRYPTO_set_ex_data__bn, _CRYPTO_set_ex_data_ad, _CRYPTO_set_ex_data_idx, _CRYPTO_set_ex_data_val); \
});})

#define CRYPTO_get_ex_data(ad, idx) ({ \
  const CRYPTO_EX_DATA * _CRYPTO_get_ex_data_ad = (ad); \
  LONG _CRYPTO_get_ex_data_idx = (idx); \
  ({ \
  register char * _CRYPTO_get_ex_data__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void * (*)(char * __asm("a6"), const CRYPTO_EX_DATA * __asm("a0"), LONG __asm("d0"))) \
  (_CRYPTO_get_ex_data__bn - 3234))(_CRYPTO_get_ex_data__bn, _CRYPTO_get_ex_data_ad, _CRYPTO_get_ex_data_idx); \
});})

#define CRYPTO_cleanup_all_ex_data() ({ \
  register char * _CRYPTO_cleanup_all_ex_data__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"))) \
  (_CRYPTO_cleanup_all_ex_data__bn - 3240))(_CRYPTO_cleanup_all_ex_data__bn); \
})

#define CRYPTO_get_new_lockid(name) ({ \
  char * _CRYPTO_get_new_lockid_name = (name); \
  ({ \
  register char * _CRYPTO_get_new_lockid__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), char * __asm("a0"))) \
  (_CRYPTO_get_new_lockid__bn - 3246))(_CRYPTO_get_new_lockid__bn, _CRYPTO_get_new_lockid_name); \
});})

#define CRYPTO_num_locks() ({ \
  register char * _CRYPTO_num_locks__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"))) \
  (_CRYPTO_num_locks__bn - 3252))(_CRYPTO_num_locks__bn); \
})

#define CRYPTO_lock(mode, type, file, line) ({ \
  LONG _CRYPTO_lock_mode = (mode); \
  LONG _CRYPTO_lock_type = (type); \
  const char * _CRYPTO_lock_file = (file); \
  LONG _CRYPTO_lock_line = (line); \
  ({ \
  register char * _CRYPTO_lock__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), LONG __asm("d0"), LONG __asm("d1"), const char * __asm("a0"), LONG __asm("d2"))) \
  (_CRYPTO_lock__bn - 3258))(_CRYPTO_lock__bn, _CRYPTO_lock_mode, _CRYPTO_lock_type, _CRYPTO_lock_file, _CRYPTO_lock_line); \
});})

#define CRYPTO_set_locking_callback(func) ({ \
  void (*_CRYPTO_set_locking_callback_func)(int mode, int type, const char *file, int line) = (func); \
  ({ \
  register char * _CRYPTO_set_locking_callback__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), void (*)(int mode, int type, const char *file, int line) __asm("a0"))) \
  (_CRYPTO_set_locking_callback__bn - 3264))(_CRYPTO_set_locking_callback__bn, _CRYPTO_set_locking_callback_func); \
});})

#define CRYPTO_get_locking_callback() ({ \
  register char * _CRYPTO_get_locking_callback__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(int mode, int type, const char *file, int line) (*)(char * __asm("a6"))) \
  (_CRYPTO_get_locking_callback__bn - 3270))(_CRYPTO_get_locking_callback__bn); \
})

#define CRYPTO_set_add_lock_callback(func) ({ \
  int (*_CRYPTO_set_add_lock_callback_func)(int *num, int mount, int type, const char *file, int line) = (func); \
  ({ \
  register char * _CRYPTO_set_add_lock_callback__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), int (*)(int *num, int mount, int type, const char *file, int line) __asm("a0"))) \
  (_CRYPTO_set_add_lock_callback__bn - 3276))(_CRYPTO_set_add_lock_callback__bn, _CRYPTO_set_add_lock_callback_func); \
});})

#define CRYPTO_get_add_lock_callback() ({ \
  register char * _CRYPTO_get_add_lock_callback__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(int *num, int mount, int type, const char *file, int line) (*)(char * __asm("a6"))) \
  (_CRYPTO_get_add_lock_callback__bn - 3282))(_CRYPTO_get_add_lock_callback__bn); \
})

#define CRYPTO_set_id_callback(func) ({ \
  unsigned long (*_CRYPTO_set_id_callback_func)(void) = (func); \
  ({ \
  register char * _CRYPTO_set_id_callback__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), unsigned long (*)(void) __asm("a0"))) \
  (_CRYPTO_set_id_callback__bn - 3288))(_CRYPTO_set_id_callback__bn, _CRYPTO_set_id_callback_func); \
});})

#define CRYPTO_get_id_callback() ({ \
  register char * _CRYPTO_get_id_callback__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((unsigned long (*)(void) (*)(char * __asm("a6"))) \
  (_CRYPTO_get_id_callback__bn - 3294))(_CRYPTO_get_id_callback__bn); \
})

#define CRYPTO_thread_id() ({ \
  register char * _CRYPTO_thread_id__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((unsigned long (*)(char * __asm("a6"))) \
  (_CRYPTO_thread_id__bn - 3300))(_CRYPTO_thread_id__bn); \
})

#define CRYPTO_get_lock_name(type) ({ \
  LONG _CRYPTO_get_lock_name_type = (type); \
  ({ \
  register char * _CRYPTO_get_lock_name__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const char * (*)(char * __asm("a6"), LONG __asm("d0"))) \
  (_CRYPTO_get_lock_name__bn - 3306))(_CRYPTO_get_lock_name__bn, _CRYPTO_get_lock_name_type); \
});})

#define CRYPTO_add_lock(pointer, amount, type, file, line) ({ \
  int * _CRYPTO_add_lock_pointer = (pointer); \
  LONG _CRYPTO_add_lock_amount = (amount); \
  LONG _CRYPTO_add_lock_type = (type); \
  const char * _CRYPTO_add_lock_file = (file); \
  LONG _CRYPTO_add_lock_line = (line); \
  ({ \
  register char * _CRYPTO_add_lock__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), int * __asm("a0"), LONG __asm("d0"), LONG __asm("d1"), const char * __asm("a1"), LONG __asm("d2"))) \
  (_CRYPTO_add_lock__bn - 3312))(_CRYPTO_add_lock__bn, _CRYPTO_add_lock_pointer, _CRYPTO_add_lock_amount, _CRYPTO_add_lock_type, _CRYPTO_add_lock_file, _CRYPTO_add_lock_line); \
});})

#define CRYPTO_get_new_dynlockid() ({ \
  register char * _CRYPTO_get_new_dynlockid__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"))) \
  (_CRYPTO_get_new_dynlockid__bn - 3318))(_CRYPTO_get_new_dynlockid__bn); \
})

#define CRYPTO_destroy_dynlockid(i) ({ \
  LONG _CRYPTO_destroy_dynlockid_i = (i); \
  ({ \
  register char * _CRYPTO_destroy_dynlockid__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), LONG __asm("d0"))) \
  (_CRYPTO_destroy_dynlockid__bn - 3324))(_CRYPTO_destroy_dynlockid__bn, _CRYPTO_destroy_dynlockid_i); \
});})

#define CRYPTO_get_dynlock_value(i) ({ \
  LONG _CRYPTO_get_dynlock_value_i = (i); \
  ({ \
  register char * _CRYPTO_get_dynlock_value__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((struct CRYPTO_dynlock_value * (*)(char * __asm("a6"), LONG __asm("d0"))) \
  (_CRYPTO_get_dynlock_value__bn - 3330))(_CRYPTO_get_dynlock_value__bn, _CRYPTO_get_dynlock_value_i); \
});})

#define CRYPTO_set_dynlock_create_callback(dyn_create_function) ({ \
  struct CRYPTO_dynlock_value * (*_CRYPTO_set_dynlock_create_callback_dyn_create_function)(const char *file, int line) = (dyn_create_function); \
  ({ \
  register char * _CRYPTO_set_dynlock_create_callback__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), struct CRYPTO_dynlock_value * (*)(const char *file, int line) __asm("a0"))) \
  (_CRYPTO_set_dynlock_create_callback__bn - 3336))(_CRYPTO_set_dynlock_create_callback__bn, _CRYPTO_set_dynlock_create_callback_dyn_create_function); \
});})

#define CRYPTO_set_dynlock_lock_callback(dyn_lock_function) ({ \
  void (*_CRYPTO_set_dynlock_lock_callback_dyn_lock_function)(int mode, struct CRYPTO_dynlock_value *l, const char *file, int line) = (dyn_lock_function); \
  ({ \
  register char * _CRYPTO_set_dynlock_lock_callback__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), void (*)(int mode, struct CRYPTO_dynlock_value *l, const char *file, int line) __asm("a0"))) \
  (_CRYPTO_set_dynlock_lock_callback__bn - 3342))(_CRYPTO_set_dynlock_lock_callback__bn, _CRYPTO_set_dynlock_lock_callback_dyn_lock_function); \
});})

#define CRYPTO_set_dynlock_destroy_callback(dyn_destroy_function) ({ \
  void (*_CRYPTO_set_dynlock_destroy_callback_dyn_destroy_function)(struct CRYPTO_dynlock_value *l, const char *file, int line) = (dyn_destroy_function); \
  ({ \
  register char * _CRYPTO_set_dynlock_destroy_callback__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), void (*)(struct CRYPTO_dynlock_value *l, const char *file, int line) __asm("a0"))) \
  (_CRYPTO_set_dynlock_destroy_callback__bn - 3348))(_CRYPTO_set_dynlock_destroy_callback__bn, _CRYPTO_set_dynlock_destroy_callback_dyn_destroy_function); \
});})

#define CRYPTO_get_dynlock_create_callback() ({ \
  register char * _CRYPTO_get_dynlock_create_callback__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((struct CRYPTO_dynlock_value * (*)(const char *file, int line) (*)(char * __asm("a6"))) \
  (_CRYPTO_get_dynlock_create_callback__bn - 3354))(_CRYPTO_get_dynlock_create_callback__bn); \
})

#define CRYPTO_get_dynlock_lock_callback() ({ \
  register char * _CRYPTO_get_dynlock_lock_callback__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(int mode, struct CRYPTO_dynlock_value *l, const char *file, int line) (*)(char * __asm("a6"))) \
  (_CRYPTO_get_dynlock_lock_callback__bn - 3360))(_CRYPTO_get_dynlock_lock_callback__bn); \
})

#define CRYPTO_get_dynlock_destroy_callback() ({ \
  register char * _CRYPTO_get_dynlock_destroy_callback__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(struct CRYPTO_dynlock_value *l, const char *file, int line) (*)(char * __asm("a6"))) \
  (_CRYPTO_get_dynlock_destroy_callback__bn - 3366))(_CRYPTO_get_dynlock_destroy_callback__bn); \
})

#define CRYPTO_set_mem_functions(m, r, f) ({ \
  void * (*_CRYPTO_set_mem_functions_m)(size_t) = (m); \
  void * (*_CRYPTO_set_mem_functions_r)(void *, size_t) = (r); \
  void (*_CRYPTO_set_mem_functions_f)(void *) = (f); \
  ({ \
  register char * _CRYPTO_set_mem_functions__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), void * (*)(size_t) __asm("a0"), void * (*)(void *, size_t) __asm("a1"), void (*)(void *) __asm("a2"))) \
  (_CRYPTO_set_mem_functions__bn - 3372))(_CRYPTO_set_mem_functions__bn, _CRYPTO_set_mem_functions_m, _CRYPTO_set_mem_functions_r, _CRYPTO_set_mem_functions_f); \
});})

#define CRYPTO_set_locked_mem_functions(m, free_func) ({ \
  void * (*_CRYPTO_set_locked_mem_functions_m)(size_t) = (m); \
  void (*_CRYPTO_set_locked_mem_functions_free_func)(void *) = (free_func); \
  ({ \
  register char * _CRYPTO_set_locked_mem_functions__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), void * (*)(size_t) __asm("a0"), void (*)(void *) __asm("a1"))) \
  (_CRYPTO_set_locked_mem_functions__bn - 3378))(_CRYPTO_set_locked_mem_functions__bn, _CRYPTO_set_locked_mem_functions_m, _CRYPTO_set_locked_mem_functions_free_func); \
});})

#define CRYPTO_set_mem_ex_functions(m, r, f) ({ \
  void * (*_CRYPTO_set_mem_ex_functions_m)(size_t, const char *, int) = (m); \
  void * (*_CRYPTO_set_mem_ex_functions_r)(void *, size_t, const char *, int) = (r); \
  void (*_CRYPTO_set_mem_ex_functions_f)(void *) = (f); \
  ({ \
  register char * _CRYPTO_set_mem_ex_functions__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), void * (*)(size_t, const char *, int) __asm("a0"), void * (*)(void *, size_t, const char *, int) __asm("a1"), void (*)(void *) __asm("a2"))) \
  (_CRYPTO_set_mem_ex_functions__bn - 3384))(_CRYPTO_set_mem_ex_functions__bn, _CRYPTO_set_mem_ex_functions_m, _CRYPTO_set_mem_ex_functions_r, _CRYPTO_set_mem_ex_functions_f); \
});})

#define CRYPTO_set_locked_mem_ex_functions(m, free_func) ({ \
  void * (*_CRYPTO_set_locked_mem_ex_functions_m)(size_t, const char *, int) = (m); \
  void (*_CRYPTO_set_locked_mem_ex_functions_free_func)(void *) = (free_func); \
  ({ \
  register char * _CRYPTO_set_locked_mem_ex_functions__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), void * (*)(size_t, const char *, int) __asm("a0"), void (*)(void *) __asm("a1"))) \
  (_CRYPTO_set_locked_mem_ex_functions__bn - 3390))(_CRYPTO_set_locked_mem_ex_functions__bn, _CRYPTO_set_locked_mem_ex_functions_m, _CRYPTO_set_locked_mem_ex_functions_free_func); \
});})

#define CRYPTO_set_mem_debug_functions(m, r, f, so, go) ({ \
  void (*_CRYPTO_set_mem_debug_functions_m)(void *, int, const char *, int, int) = (m); \
  void (*_CRYPTO_set_mem_debug_functions_r)(void *, void *, int, const char *, int, int) = (r); \
  void (*_CRYPTO_set_mem_debug_functions_f)(void *, int) = (f); \
  void (*_CRYPTO_set_mem_debug_functions_so)(long) = (so); \
  long (*_CRYPTO_set_mem_debug_functions_go)(void) = (go); \
  ({ \
  register char * _CRYPTO_set_mem_debug_functions__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), void (*)(void *, int, const char *, int, int) __asm("a0"), void (*)(void *, void *, int, const char *, int, int) __asm("a1"), void (*)(void *, int) __asm("a2"), void (*)(long) __asm("a3"), long (*)(void) __asm("d0"))) \
  (_CRYPTO_set_mem_debug_functions__bn - 3396))(_CRYPTO_set_mem_debug_functions__bn, _CRYPTO_set_mem_debug_functions_m, _CRYPTO_set_mem_debug_functions_r, _CRYPTO_set_mem_debug_functions_f, _CRYPTO_set_mem_debug_functions_so, _CRYPTO_set_mem_debug_functions_go); \
});})

#define CRYPTO_get_mem_functions(m, r, f) ({ \
  void * (*_CRYPTO_get_mem_functions_m)(size_t) = (m); \
  void * (*_CRYPTO_get_mem_functions_r)(void *, size_t) = (r); \
  void (*_CRYPTO_get_mem_functions_f)(void *) = (f); \
  ({ \
  register char * _CRYPTO_get_mem_functions__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), void * (*)(size_t) __asm("a0"), void * (*)(void *, size_t) __asm("a1"), void (*)(void *) __asm("a2"))) \
  (_CRYPTO_get_mem_functions__bn - 3402))(_CRYPTO_get_mem_functions__bn, _CRYPTO_get_mem_functions_m, _CRYPTO_get_mem_functions_r, _CRYPTO_get_mem_functions_f); \
});})

#define CRYPTO_get_locked_mem_functions(m, f) ({ \
  void * (*_CRYPTO_get_locked_mem_functions_m)(size_t) = (m); \
  void (*_CRYPTO_get_locked_mem_functions_f)(void *) = (f); \
  ({ \
  register char * _CRYPTO_get_locked_mem_functions__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), void * (*)(size_t) __asm("a0"), void (*)(void *) __asm("a1"))) \
  (_CRYPTO_get_locked_mem_functions__bn - 3408))(_CRYPTO_get_locked_mem_functions__bn, _CRYPTO_get_locked_mem_functions_m, _CRYPTO_get_locked_mem_functions_f); \
});})

#define CRYPTO_get_mem_ex_functions(m, r, f) ({ \
  void * (*_CRYPTO_get_mem_ex_functions_m)(size_t, const char *, int) = (m); \
  void * (*_CRYPTO_get_mem_ex_functions_r)(void *, size_t, const char *, int) = (r); \
  void (*_CRYPTO_get_mem_ex_functions_f)(void *) = (f); \
  ({ \
  register char * _CRYPTO_get_mem_ex_functions__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), void * (*)(size_t, const char *, int) __asm("a0"), void * (*)(void *, size_t, const char *, int) __asm("a1"), void (*)(void *) __asm("a2"))) \
  (_CRYPTO_get_mem_ex_functions__bn - 3414))(_CRYPTO_get_mem_ex_functions__bn, _CRYPTO_get_mem_ex_functions_m, _CRYPTO_get_mem_ex_functions_r, _CRYPTO_get_mem_ex_functions_f); \
});})

#define CRYPTO_get_locked_mem_ex_functions(m, f) ({ \
  void * (*_CRYPTO_get_locked_mem_ex_functions_m)(size_t, const char *, int) = (m); \
  void (*_CRYPTO_get_locked_mem_ex_functions_f)(void *) = (f); \
  ({ \
  register char * _CRYPTO_get_locked_mem_ex_functions__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), void * (*)(size_t, const char *, int) __asm("a0"), void (*)(void *) __asm("a1"))) \
  (_CRYPTO_get_locked_mem_ex_functions__bn - 3420))(_CRYPTO_get_locked_mem_ex_functions__bn, _CRYPTO_get_locked_mem_ex_functions_m, _CRYPTO_get_locked_mem_ex_functions_f); \
});})

#define CRYPTO_get_mem_debug_functions(m, r, f, so, go) ({ \
  void (*_CRYPTO_get_mem_debug_functions_m)(void *, int, const char *, int, int) = (m); \
  void (*_CRYPTO_get_mem_debug_functions_r)(void *, void *, int, const char *, int, int) = (r); \
  void (*_CRYPTO_get_mem_debug_functions_f)(void *, int) = (f); \
  void (*_CRYPTO_get_mem_debug_functions_so)(long) = (so); \
  long (*_CRYPTO_get_mem_debug_functions_go)(void) = (go); \
  ({ \
  register char * _CRYPTO_get_mem_debug_functions__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), void (*)(void *, int, const char *, int, int) __asm("a0"), void (*)(void *, void *, int, const char *, int, int) __asm("a1"), void (*)(void *, int) __asm("a2"), void (*)(long) __asm("a3"), long (*)(void) __asm("d0"))) \
  (_CRYPTO_get_mem_debug_functions__bn - 3426))(_CRYPTO_get_mem_debug_functions__bn, _CRYPTO_get_mem_debug_functions_m, _CRYPTO_get_mem_debug_functions_r, _CRYPTO_get_mem_debug_functions_f, _CRYPTO_get_mem_debug_functions_so, _CRYPTO_get_mem_debug_functions_go); \
});})

#define CRYPTO_malloc_locked(num, file, line) ({ \
  LONG _CRYPTO_malloc_locked_num = (num); \
  const char * _CRYPTO_malloc_locked_file = (file); \
  LONG _CRYPTO_malloc_locked_line = (line); \
  ({ \
  register char * _CRYPTO_malloc_locked__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void * (*)(char * __asm("a6"), LONG __asm("d0"), const char * __asm("a0"), LONG __asm("d1"))) \
  (_CRYPTO_malloc_locked__bn - 3432))(_CRYPTO_malloc_locked__bn, _CRYPTO_malloc_locked_num, _CRYPTO_malloc_locked_file, _CRYPTO_malloc_locked_line); \
});})

#define CRYPTO_free_locked(a) ({ \
  void * _CRYPTO_free_locked_a = (a); \
  ({ \
  register char * _CRYPTO_free_locked__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), void * __asm("a0"))) \
  (_CRYPTO_free_locked__bn - 3438))(_CRYPTO_free_locked__bn, _CRYPTO_free_locked_a); \
});})

#define CRYPTO_malloc(num, file, line) ({ \
  LONG _CRYPTO_malloc_num = (num); \
  const char * _CRYPTO_malloc_file = (file); \
  LONG _CRYPTO_malloc_line = (line); \
  ({ \
  register char * _CRYPTO_malloc__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void * (*)(char * __asm("a6"), LONG __asm("d0"), const char * __asm("a0"), LONG __asm("d1"))) \
  (_CRYPTO_malloc__bn - 3444))(_CRYPTO_malloc__bn, _CRYPTO_malloc_num, _CRYPTO_malloc_file, _CRYPTO_malloc_line); \
});})

#define CRYPTO_free(a) ({ \
  void * _CRYPTO_free_a = (a); \
  ({ \
  register char * _CRYPTO_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), void * __asm("a0"))) \
  (_CRYPTO_free__bn - 3450))(_CRYPTO_free__bn, _CRYPTO_free_a); \
});})

#define CRYPTO_realloc(addr, num, file, line) ({ \
  void * _CRYPTO_realloc_addr = (addr); \
  LONG _CRYPTO_realloc_num = (num); \
  const char * _CRYPTO_realloc_file = (file); \
  LONG _CRYPTO_realloc_line = (line); \
  ({ \
  register char * _CRYPTO_realloc__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void * (*)(char * __asm("a6"), void * __asm("a0"), LONG __asm("d0"), const char * __asm("a1"), LONG __asm("d1"))) \
  (_CRYPTO_realloc__bn - 3456))(_CRYPTO_realloc__bn, _CRYPTO_realloc_addr, _CRYPTO_realloc_num, _CRYPTO_realloc_file, _CRYPTO_realloc_line); \
});})

#define CRYPTO_realloc_clean(addr, old_num, num, file, line) ({ \
  void * _CRYPTO_realloc_clean_addr = (addr); \
  LONG _CRYPTO_realloc_clean_old_num = (old_num); \
  LONG _CRYPTO_realloc_clean_num = (num); \
  const char * _CRYPTO_realloc_clean_file = (file); \
  LONG _CRYPTO_realloc_clean_line = (line); \
  ({ \
  register char * _CRYPTO_realloc_clean__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void * (*)(char * __asm("a6"), void * __asm("a0"), LONG __asm("d0"), LONG __asm("d1"), const char * __asm("a1"), LONG __asm("d2"))) \
  (_CRYPTO_realloc_clean__bn - 3462))(_CRYPTO_realloc_clean__bn, _CRYPTO_realloc_clean_addr, _CRYPTO_realloc_clean_old_num, _CRYPTO_realloc_clean_num, _CRYPTO_realloc_clean_file, _CRYPTO_realloc_clean_line); \
});})

#define CRYPTO_remalloc(addr, num, file, line) ({ \
  void * _CRYPTO_remalloc_addr = (addr); \
  LONG _CRYPTO_remalloc_num = (num); \
  const char * _CRYPTO_remalloc_file = (file); \
  LONG _CRYPTO_remalloc_line = (line); \
  ({ \
  register char * _CRYPTO_remalloc__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void * (*)(char * __asm("a6"), void * __asm("a0"), LONG __asm("d0"), const char * __asm("a1"), LONG __asm("d1"))) \
  (_CRYPTO_remalloc__bn - 3468))(_CRYPTO_remalloc__bn, _CRYPTO_remalloc_addr, _CRYPTO_remalloc_num, _CRYPTO_remalloc_file, _CRYPTO_remalloc_line); \
});})

#define OPENSSL_cleanse(ptr, len) ({ \
  void * _OPENSSL_cleanse_ptr = (ptr); \
  ULONG _OPENSSL_cleanse_len = (len); \
  ({ \
  register char * _OPENSSL_cleanse__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), void * __asm("a0"), ULONG __asm("d0"))) \
  (_OPENSSL_cleanse__bn - 3474))(_OPENSSL_cleanse__bn, _OPENSSL_cleanse_ptr, _OPENSSL_cleanse_len); \
});})

#define CRYPTO_set_mem_debug_options(bits) ({ \
  long _CRYPTO_set_mem_debug_options_bits = (bits); \
  ({ \
  register char * _CRYPTO_set_mem_debug_options__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), long __asm("d0"))) \
  (_CRYPTO_set_mem_debug_options__bn - 3480))(_CRYPTO_set_mem_debug_options__bn, _CRYPTO_set_mem_debug_options_bits); \
});})

#define CRYPTO_get_mem_debug_options() ({ \
  register char * _CRYPTO_get_mem_debug_options__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((long (*)(char * __asm("a6"))) \
  (_CRYPTO_get_mem_debug_options__bn - 3486))(_CRYPTO_get_mem_debug_options__bn); \
})

#define CRYPTO_push_info_(info, file, line) ({ \
  const char * _CRYPTO_push_info__info = (info); \
  const char * _CRYPTO_push_info__file = (file); \
  LONG _CRYPTO_push_info__line = (line); \
  ({ \
  register char * _CRYPTO_push_info___bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const char * __asm("a0"), const char * __asm("a1"), LONG __asm("d0"))) \
  (_CRYPTO_push_info___bn - 3492))(_CRYPTO_push_info___bn, _CRYPTO_push_info__info, _CRYPTO_push_info__file, _CRYPTO_push_info__line); \
});})

#define CRYPTO_pop_info() ({ \
  register char * _CRYPTO_pop_info__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"))) \
  (_CRYPTO_pop_info__bn - 3498))(_CRYPTO_pop_info__bn); \
})

#define CRYPTO_remove_all_info() ({ \
  register char * _CRYPTO_remove_all_info__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"))) \
  (_CRYPTO_remove_all_info__bn - 3504))(_CRYPTO_remove_all_info__bn); \
})

#define CRYPTO_dbg_malloc(addr, num, file, line, before_p) ({ \
  void * _CRYPTO_dbg_malloc_addr = (addr); \
  LONG _CRYPTO_dbg_malloc_num = (num); \
  const char * _CRYPTO_dbg_malloc_file = (file); \
  LONG _CRYPTO_dbg_malloc_line = (line); \
  LONG _CRYPTO_dbg_malloc_before_p = (before_p); \
  ({ \
  register char * _CRYPTO_dbg_malloc__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), void * __asm("a0"), LONG __asm("d0"), const char * __asm("a1"), LONG __asm("d1"), LONG __asm("d2"))) \
  (_CRYPTO_dbg_malloc__bn - 3510))(_CRYPTO_dbg_malloc__bn, _CRYPTO_dbg_malloc_addr, _CRYPTO_dbg_malloc_num, _CRYPTO_dbg_malloc_file, _CRYPTO_dbg_malloc_line, _CRYPTO_dbg_malloc_before_p); \
});})

#define CRYPTO_dbg_realloc(addr1, addr2, num, file, line, before_p) ({ \
  void * _CRYPTO_dbg_realloc_addr1 = (addr1); \
  void * _CRYPTO_dbg_realloc_addr2 = (addr2); \
  LONG _CRYPTO_dbg_realloc_num = (num); \
  const char * _CRYPTO_dbg_realloc_file = (file); \
  LONG _CRYPTO_dbg_realloc_line = (line); \
  LONG _CRYPTO_dbg_realloc_before_p = (before_p); \
  ({ \
  register char * _CRYPTO_dbg_realloc__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), void * __asm("a0"), void * __asm("a1"), LONG __asm("d0"), const char * __asm("a2"), LONG __asm("d1"), LONG __asm("d2"))) \
  (_CRYPTO_dbg_realloc__bn - 3516))(_CRYPTO_dbg_realloc__bn, _CRYPTO_dbg_realloc_addr1, _CRYPTO_dbg_realloc_addr2, _CRYPTO_dbg_realloc_num, _CRYPTO_dbg_realloc_file, _CRYPTO_dbg_realloc_line, _CRYPTO_dbg_realloc_before_p); \
});})

#define CRYPTO_dbg_free(addr, before_p) ({ \
  void * _CRYPTO_dbg_free_addr = (addr); \
  LONG _CRYPTO_dbg_free_before_p = (before_p); \
  ({ \
  register char * _CRYPTO_dbg_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), void * __asm("a0"), LONG __asm("d0"))) \
  (_CRYPTO_dbg_free__bn - 3522))(_CRYPTO_dbg_free__bn, _CRYPTO_dbg_free_addr, _CRYPTO_dbg_free_before_p); \
});})

#define CRYPTO_dbg_set_options(bits) ({ \
  long _CRYPTO_dbg_set_options_bits = (bits); \
  ({ \
  register char * _CRYPTO_dbg_set_options__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), long __asm("d0"))) \
  (_CRYPTO_dbg_set_options__bn - 3528))(_CRYPTO_dbg_set_options__bn, _CRYPTO_dbg_set_options_bits); \
});})

#define CRYPTO_dbg_get_options() ({ \
  register char * _CRYPTO_dbg_get_options__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((long (*)(char * __asm("a6"))) \
  (_CRYPTO_dbg_get_options__bn - 3534))(_CRYPTO_dbg_get_options__bn); \
})

#define CRYPTO_mem_leaks(bio) ({ \
  struct bio_st * _CRYPTO_mem_leaks_bio = (bio); \
  ({ \
  register char * _CRYPTO_mem_leaks__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), struct bio_st * __asm("a0"))) \
  (_CRYPTO_mem_leaks__bn - 3540))(_CRYPTO_mem_leaks__bn, _CRYPTO_mem_leaks_bio); \
});})

#define CRYPTO_mem_leaks_cb(cb) ({ \
  CRYPTO_MEM_LEAK_CB * (*_CRYPTO_mem_leaks_cb_cb)(unsigned long, const char *, int, int, void *) = (cb); \
  ({ \
  register char * _CRYPTO_mem_leaks_cb__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), CRYPTO_MEM_LEAK_CB * (*)(unsigned long, const char *, int, int, void *) __asm("a0"))) \
  (_CRYPTO_mem_leaks_cb__bn - 3546))(_CRYPTO_mem_leaks_cb__bn, _CRYPTO_mem_leaks_cb_cb); \
});})

#define OpenSSLDie(file, line, assertion) ({ \
  const char * _OpenSSLDie_file = (file); \
  LONG _OpenSSLDie_line = (line); \
  const char * _OpenSSLDie_assertion = (assertion); \
  ({ \
  register char * _OpenSSLDie__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), const char * __asm("a0"), LONG __asm("d0"), const char * __asm("a1"))) \
  (_OpenSSLDie__bn - 3552))(_OpenSSLDie__bn, _OpenSSLDie_file, _OpenSSLDie_line, _OpenSSLDie_assertion); \
});})

#define ERR_load_CRYPTO_strings() ({ \
  register char * _ERR_load_CRYPTO_strings__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"))) \
  (_ERR_load_CRYPTO_strings__bn - 3558))(_ERR_load_CRYPTO_strings__bn); \
})

#define DSO_new() ({ \
  register char * _DSO_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((DSO * (*)(char * __asm("a6"))) \
  (_DSO_new__bn - 3564))(_DSO_new__bn); \
})

#define DSO_new_method(method) ({ \
  DSO_METHOD * _DSO_new_method_method = (method); \
  ({ \
  register char * _DSO_new_method__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((DSO * (*)(char * __asm("a6"), DSO_METHOD * __asm("a0"))) \
  (_DSO_new_method__bn - 3570))(_DSO_new_method__bn, _DSO_new_method_method); \
});})

#define DSO_free(dso) ({ \
  DSO * _DSO_free_dso = (dso); \
  ({ \
  register char * _DSO_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), DSO * __asm("a0"))) \
  (_DSO_free__bn - 3576))(_DSO_free__bn, _DSO_free_dso); \
});})

#define DSO_flags(dso) ({ \
  DSO * _DSO_flags_dso = (dso); \
  ({ \
  register char * _DSO_flags__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), DSO * __asm("a0"))) \
  (_DSO_flags__bn - 3582))(_DSO_flags__bn, _DSO_flags_dso); \
});})

#define DSO_up_ref(dso) ({ \
  DSO * _DSO_up_ref_dso = (dso); \
  ({ \
  register char * _DSO_up_ref__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), DSO * __asm("a0"))) \
  (_DSO_up_ref__bn - 3588))(_DSO_up_ref__bn, _DSO_up_ref_dso); \
});})

#define DSO_ctrl(dso, cmd, larg, parg) ({ \
  DSO * _DSO_ctrl_dso = (dso); \
  LONG _DSO_ctrl_cmd = (cmd); \
  long _DSO_ctrl_larg = (larg); \
  void * _DSO_ctrl_parg = (parg); \
  ({ \
  register char * _DSO_ctrl__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((long (*)(char * __asm("a6"), DSO * __asm("a0"), LONG __asm("d0"), long __asm("d1"), void * __asm("a1"))) \
  (_DSO_ctrl__bn - 3594))(_DSO_ctrl__bn, _DSO_ctrl_dso, _DSO_ctrl_cmd, _DSO_ctrl_larg, _DSO_ctrl_parg); \
});})

#define DSO_set_name_converter(dso, cb, oldcb) ({ \
  DSO * _DSO_set_name_converter_dso = (dso); \
  DSO_NAME_CONVERTER_FUNC _DSO_set_name_converter_cb = (cb); \
  DSO_NAME_CONVERTER_FUNC * _DSO_set_name_converter_oldcb = (oldcb); \
  ({ \
  register char * _DSO_set_name_converter__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), DSO * __asm("a0"), DSO_NAME_CONVERTER_FUNC __asm("d0"), DSO_NAME_CONVERTER_FUNC * __asm("a1"))) \
  (_DSO_set_name_converter__bn - 3600))(_DSO_set_name_converter__bn, _DSO_set_name_converter_dso, _DSO_set_name_converter_cb, _DSO_set_name_converter_oldcb); \
});})

#define DSO_get_filename(dso) ({ \
  DSO * _DSO_get_filename_dso = (dso); \
  ({ \
  register char * _DSO_get_filename__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const char * (*)(char * __asm("a6"), DSO * __asm("a0"))) \
  (_DSO_get_filename__bn - 3606))(_DSO_get_filename__bn, _DSO_get_filename_dso); \
});})

#define DSO_set_filename(dso, filename) ({ \
  DSO * _DSO_set_filename_dso = (dso); \
  const char * _DSO_set_filename_filename = (filename); \
  ({ \
  register char * _DSO_set_filename__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), DSO * __asm("a0"), const char * __asm("a1"))) \
  (_DSO_set_filename__bn - 3612))(_DSO_set_filename__bn, _DSO_set_filename_dso, _DSO_set_filename_filename); \
});})

#define DSO_convert_filename(dso, filename) ({ \
  DSO * _DSO_convert_filename_dso = (dso); \
  const char * _DSO_convert_filename_filename = (filename); \
  ({ \
  register char * _DSO_convert_filename__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((char * (*)(char * __asm("a6"), DSO * __asm("a0"), const char * __asm("a1"))) \
  (_DSO_convert_filename__bn - 3618))(_DSO_convert_filename__bn, _DSO_convert_filename_dso, _DSO_convert_filename_filename); \
});})

#define DSO_get_loaded_filename(dso) ({ \
  DSO * _DSO_get_loaded_filename_dso = (dso); \
  ({ \
  register char * _DSO_get_loaded_filename__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const char * (*)(char * __asm("a6"), DSO * __asm("a0"))) \
  (_DSO_get_loaded_filename__bn - 3624))(_DSO_get_loaded_filename__bn, _DSO_get_loaded_filename_dso); \
});})

#define DSO_set_default_method(meth) ({ \
  DSO_METHOD * _DSO_set_default_method_meth = (meth); \
  ({ \
  register char * _DSO_set_default_method__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), DSO_METHOD * __asm("a0"))) \
  (_DSO_set_default_method__bn - 3630))(_DSO_set_default_method__bn, _DSO_set_default_method_meth); \
});})

#define DSO_get_default_method() ({ \
  register char * _DSO_get_default_method__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((DSO_METHOD * (*)(char * __asm("a6"))) \
  (_DSO_get_default_method__bn - 3636))(_DSO_get_default_method__bn); \
})

#define DSO_get_method(dso) ({ \
  DSO * _DSO_get_method_dso = (dso); \
  ({ \
  register char * _DSO_get_method__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((DSO_METHOD * (*)(char * __asm("a6"), DSO * __asm("a0"))) \
  (_DSO_get_method__bn - 3642))(_DSO_get_method__bn, _DSO_get_method_dso); \
});})

#define DSO_set_method(dso, meth) ({ \
  DSO * _DSO_set_method_dso = (dso); \
  DSO_METHOD * _DSO_set_method_meth = (meth); \
  ({ \
  register char * _DSO_set_method__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((DSO_METHOD * (*)(char * __asm("a6"), DSO * __asm("a0"), DSO_METHOD * __asm("a1"))) \
  (_DSO_set_method__bn - 3648))(_DSO_set_method__bn, _DSO_set_method_dso, _DSO_set_method_meth); \
});})

#define DSO_load(dso, filename, meth, flags) ({ \
  DSO * _DSO_load_dso = (dso); \
  const char * _DSO_load_filename = (filename); \
  DSO_METHOD * _DSO_load_meth = (meth); \
  LONG _DSO_load_flags = (flags); \
  ({ \
  register char * _DSO_load__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((DSO * (*)(char * __asm("a6"), DSO * __asm("a0"), const char * __asm("a1"), DSO_METHOD * __asm("a2"), LONG __asm("d0"))) \
  (_DSO_load__bn - 3654))(_DSO_load__bn, _DSO_load_dso, _DSO_load_filename, _DSO_load_meth, _DSO_load_flags); \
});})

#define DSO_bind_var(dso, symname) ({ \
  DSO * _DSO_bind_var_dso = (dso); \
  const char * _DSO_bind_var_symname = (symname); \
  ({ \
  register char * _DSO_bind_var__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void * (*)(char * __asm("a6"), DSO * __asm("a0"), const char * __asm("a1"))) \
  (_DSO_bind_var__bn - 3660))(_DSO_bind_var__bn, _DSO_bind_var_dso, _DSO_bind_var_symname); \
});})

#define DSO_bind_func(dso, symname) ({ \
  DSO * _DSO_bind_func_dso = (dso); \
  const char * _DSO_bind_func_symname = (symname); \
  ({ \
  register char * _DSO_bind_func__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((DSO_FUNC_TYPE (*)(char * __asm("a6"), DSO * __asm("a0"), const char * __asm("a1"))) \
  (_DSO_bind_func__bn - 3666))(_DSO_bind_func__bn, _DSO_bind_func_dso, _DSO_bind_func_symname); \
});})

#define DSO_METHOD_openssl() ({ \
  register char * _DSO_METHOD_openssl__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((DSO_METHOD * (*)(char * __asm("a6"))) \
  (_DSO_METHOD_openssl__bn - 3672))(_DSO_METHOD_openssl__bn); \
})

#define DSO_METHOD_null() ({ \
  register char * _DSO_METHOD_null__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((DSO_METHOD * (*)(char * __asm("a6"))) \
  (_DSO_METHOD_null__bn - 3678))(_DSO_METHOD_null__bn); \
})

#define DSO_METHOD_dlfcn() ({ \
  register char * _DSO_METHOD_dlfcn__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((DSO_METHOD * (*)(char * __asm("a6"))) \
  (_DSO_METHOD_dlfcn__bn - 3684))(_DSO_METHOD_dlfcn__bn); \
})

#define DSO_METHOD_dl() ({ \
  register char * _DSO_METHOD_dl__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((DSO_METHOD * (*)(char * __asm("a6"))) \
  (_DSO_METHOD_dl__bn - 3690))(_DSO_METHOD_dl__bn); \
})

#define DSO_METHOD_win32() ({ \
  register char * _DSO_METHOD_win32__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((DSO_METHOD * (*)(char * __asm("a6"))) \
  (_DSO_METHOD_win32__bn - 3696))(_DSO_METHOD_win32__bn); \
})

#define DSO_METHOD_vms() ({ \
  register char * _DSO_METHOD_vms__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((DSO_METHOD * (*)(char * __asm("a6"))) \
  (_DSO_METHOD_vms__bn - 3702))(_DSO_METHOD_vms__bn); \
})

#define ERR_load_DSO_strings() ({ \
  register char * _ERR_load_DSO_strings__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"))) \
  (_ERR_load_DSO_strings__bn - 3708))(_ERR_load_DSO_strings__bn); \
})

#define EC_GFp_simple_method() ({ \
  register char * _EC_GFp_simple_method__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const EC_METHOD * (*)(char * __asm("a6"))) \
  (_EC_GFp_simple_method__bn - 3714))(_EC_GFp_simple_method__bn); \
})

#define EC_GFp_mont_method() ({ \
  register char * _EC_GFp_mont_method__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const EC_METHOD * (*)(char * __asm("a6"))) \
  (_EC_GFp_mont_method__bn - 3720))(_EC_GFp_mont_method__bn); \
})

#define EC_GROUP_new(a) ({ \
  const EC_METHOD * _EC_GROUP_new_a = (a); \
  ({ \
  register char * _EC_GROUP_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((EC_GROUP * (*)(char * __asm("a6"), const EC_METHOD * __asm("a0"))) \
  (_EC_GROUP_new__bn - 3726))(_EC_GROUP_new__bn, _EC_GROUP_new_a); \
});})

#define EC_GROUP_free(a) ({ \
  EC_GROUP * _EC_GROUP_free_a = (a); \
  ({ \
  register char * _EC_GROUP_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), EC_GROUP * __asm("a0"))) \
  (_EC_GROUP_free__bn - 3732))(_EC_GROUP_free__bn, _EC_GROUP_free_a); \
});})

#define EC_GROUP_clear_free(a) ({ \
  EC_GROUP * _EC_GROUP_clear_free_a = (a); \
  ({ \
  register char * _EC_GROUP_clear_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), EC_GROUP * __asm("a0"))) \
  (_EC_GROUP_clear_free__bn - 3738))(_EC_GROUP_clear_free__bn, _EC_GROUP_clear_free_a); \
});})

#define EC_GROUP_copy(a, b) ({ \
  EC_GROUP * _EC_GROUP_copy_a = (a); \
  const EC_GROUP * _EC_GROUP_copy_b = (b); \
  ({ \
  register char * _EC_GROUP_copy__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), EC_GROUP * __asm("a0"), const EC_GROUP * __asm("a1"))) \
  (_EC_GROUP_copy__bn - 3744))(_EC_GROUP_copy__bn, _EC_GROUP_copy_a, _EC_GROUP_copy_b); \
});})

#define EC_GROUP_method_of(a) ({ \
  const EC_GROUP * _EC_GROUP_method_of_a = (a); \
  ({ \
  register char * _EC_GROUP_method_of__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const EC_METHOD * (*)(char * __asm("a6"), const EC_GROUP * __asm("a0"))) \
  (_EC_GROUP_method_of__bn - 3750))(_EC_GROUP_method_of__bn, _EC_GROUP_method_of_a); \
});})

#define EC_GROUP_set_curve_GFp(a1, p, a, b, a2) ({ \
  EC_GROUP * _EC_GROUP_set_curve_GFp_a1 = (a1); \
  const BIGNUM * _EC_GROUP_set_curve_GFp_p = (p); \
  const BIGNUM * _EC_GROUP_set_curve_GFp_a = (a); \
  const BIGNUM * _EC_GROUP_set_curve_GFp_b = (b); \
  BN_CTX * _EC_GROUP_set_curve_GFp_a2 = (a2); \
  ({ \
  register char * _EC_GROUP_set_curve_GFp__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), EC_GROUP * __asm("a0"), const BIGNUM * __asm("a1"), const BIGNUM * __asm("a2"), const BIGNUM * __asm("a3"), BN_CTX * __asm("d0"))) \
  (_EC_GROUP_set_curve_GFp__bn - 3756))(_EC_GROUP_set_curve_GFp__bn, _EC_GROUP_set_curve_GFp_a1, _EC_GROUP_set_curve_GFp_p, _EC_GROUP_set_curve_GFp_a, _EC_GROUP_set_curve_GFp_b, _EC_GROUP_set_curve_GFp_a2); \
});})

#define EC_GROUP_get_curve_GFp(a1, p, a, b, a2) ({ \
  const EC_GROUP * _EC_GROUP_get_curve_GFp_a1 = (a1); \
  BIGNUM * _EC_GROUP_get_curve_GFp_p = (p); \
  BIGNUM * _EC_GROUP_get_curve_GFp_a = (a); \
  BIGNUM * _EC_GROUP_get_curve_GFp_b = (b); \
  BN_CTX * _EC_GROUP_get_curve_GFp_a2 = (a2); \
  ({ \
  register char * _EC_GROUP_get_curve_GFp__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const EC_GROUP * __asm("a0"), BIGNUM * __asm("a1"), BIGNUM * __asm("a2"), BIGNUM * __asm("a3"), BN_CTX * __asm("d0"))) \
  (_EC_GROUP_get_curve_GFp__bn - 3762))(_EC_GROUP_get_curve_GFp__bn, _EC_GROUP_get_curve_GFp_a1, _EC_GROUP_get_curve_GFp_p, _EC_GROUP_get_curve_GFp_a, _EC_GROUP_get_curve_GFp_b, _EC_GROUP_get_curve_GFp_a2); \
});})

#define EC_GROUP_new_curve_GFp(p, a, b, a1) ({ \
  const BIGNUM * _EC_GROUP_new_curve_GFp_p = (p); \
  const BIGNUM * _EC_GROUP_new_curve_GFp_a = (a); \
  const BIGNUM * _EC_GROUP_new_curve_GFp_b = (b); \
  BN_CTX * _EC_GROUP_new_curve_GFp_a1 = (a1); \
  ({ \
  register char * _EC_GROUP_new_curve_GFp__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((EC_GROUP * (*)(char * __asm("a6"), const BIGNUM * __asm("a0"), const BIGNUM * __asm("a1"), const BIGNUM * __asm("a2"), BN_CTX * __asm("a3"))) \
  (_EC_GROUP_new_curve_GFp__bn - 3768))(_EC_GROUP_new_curve_GFp__bn, _EC_GROUP_new_curve_GFp_p, _EC_GROUP_new_curve_GFp_a, _EC_GROUP_new_curve_GFp_b, _EC_GROUP_new_curve_GFp_a1); \
});})

#define EC_GROUP_set_generator(a1, generator, order, cofactor) ({ \
  EC_GROUP * _EC_GROUP_set_generator_a1 = (a1); \
  const EC_POINT * _EC_GROUP_set_generator_generator = (generator); \
  const BIGNUM * _EC_GROUP_set_generator_order = (order); \
  const BIGNUM * _EC_GROUP_set_generator_cofactor = (cofactor); \
  ({ \
  register char * _EC_GROUP_set_generator__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), EC_GROUP * __asm("a0"), const EC_POINT * __asm("a1"), const BIGNUM * __asm("a2"), const BIGNUM * __asm("a3"))) \
  (_EC_GROUP_set_generator__bn - 3774))(_EC_GROUP_set_generator__bn, _EC_GROUP_set_generator_a1, _EC_GROUP_set_generator_generator, _EC_GROUP_set_generator_order, _EC_GROUP_set_generator_cofactor); \
});})

#define EC_GROUP_get0_generator(a1) ({ \
  const EC_GROUP * _EC_GROUP_get0_generator_a1 = (a1); \
  ({ \
  register char * _EC_GROUP_get0_generator__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((EC_POINT * (*)(char * __asm("a6"), const EC_GROUP * __asm("a0"))) \
  (_EC_GROUP_get0_generator__bn - 3780))(_EC_GROUP_get0_generator__bn, _EC_GROUP_get0_generator_a1); \
});})

#define EC_GROUP_get_order(a1, order, a2) ({ \
  const EC_GROUP * _EC_GROUP_get_order_a1 = (a1); \
  BIGNUM * _EC_GROUP_get_order_order = (order); \
  BN_CTX * _EC_GROUP_get_order_a2 = (a2); \
  ({ \
  register char * _EC_GROUP_get_order__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const EC_GROUP * __asm("a0"), BIGNUM * __asm("a1"), BN_CTX * __asm("a2"))) \
  (_EC_GROUP_get_order__bn - 3786))(_EC_GROUP_get_order__bn, _EC_GROUP_get_order_a1, _EC_GROUP_get_order_order, _EC_GROUP_get_order_a2); \
});})

#define EC_GROUP_get_cofactor(a1, cofactor, a2) ({ \
  const EC_GROUP * _EC_GROUP_get_cofactor_a1 = (a1); \
  BIGNUM * _EC_GROUP_get_cofactor_cofactor = (cofactor); \
  BN_CTX * _EC_GROUP_get_cofactor_a2 = (a2); \
  ({ \
  register char * _EC_GROUP_get_cofactor__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const EC_GROUP * __asm("a0"), BIGNUM * __asm("a1"), BN_CTX * __asm("a2"))) \
  (_EC_GROUP_get_cofactor__bn - 3792))(_EC_GROUP_get_cofactor__bn, _EC_GROUP_get_cofactor_a1, _EC_GROUP_get_cofactor_cofactor, _EC_GROUP_get_cofactor_a2); \
});})

#define EC_POINT_new(a) ({ \
  const EC_GROUP * _EC_POINT_new_a = (a); \
  ({ \
  register char * _EC_POINT_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((EC_POINT * (*)(char * __asm("a6"), const EC_GROUP * __asm("a0"))) \
  (_EC_POINT_new__bn - 3798))(_EC_POINT_new__bn, _EC_POINT_new_a); \
});})

#define EC_POINT_free(a) ({ \
  EC_POINT * _EC_POINT_free_a = (a); \
  ({ \
  register char * _EC_POINT_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), EC_POINT * __asm("a0"))) \
  (_EC_POINT_free__bn - 3804))(_EC_POINT_free__bn, _EC_POINT_free_a); \
});})

#define EC_POINT_clear_free(a) ({ \
  EC_POINT * _EC_POINT_clear_free_a = (a); \
  ({ \
  register char * _EC_POINT_clear_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), EC_POINT * __asm("a0"))) \
  (_EC_POINT_clear_free__bn - 3810))(_EC_POINT_clear_free__bn, _EC_POINT_clear_free_a); \
});})

#define EC_POINT_copy(a, b) ({ \
  EC_POINT * _EC_POINT_copy_a = (a); \
  const EC_POINT * _EC_POINT_copy_b = (b); \
  ({ \
  register char * _EC_POINT_copy__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), EC_POINT * __asm("a0"), const EC_POINT * __asm("a1"))) \
  (_EC_POINT_copy__bn - 3816))(_EC_POINT_copy__bn, _EC_POINT_copy_a, _EC_POINT_copy_b); \
});})

#define EC_POINT_method_of(a) ({ \
  const EC_POINT * _EC_POINT_method_of_a = (a); \
  ({ \
  register char * _EC_POINT_method_of__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const EC_METHOD * (*)(char * __asm("a6"), const EC_POINT * __asm("a0"))) \
  (_EC_POINT_method_of__bn - 3822))(_EC_POINT_method_of__bn, _EC_POINT_method_of_a); \
});})

#define EC_POINT_set_to_infinity(a, b) ({ \
  const EC_GROUP * _EC_POINT_set_to_infinity_a = (a); \
  EC_POINT * _EC_POINT_set_to_infinity_b = (b); \
  ({ \
  register char * _EC_POINT_set_to_infinity__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const EC_GROUP * __asm("a0"), EC_POINT * __asm("a1"))) \
  (_EC_POINT_set_to_infinity__bn - 3828))(_EC_POINT_set_to_infinity__bn, _EC_POINT_set_to_infinity_a, _EC_POINT_set_to_infinity_b); \
});})

#define EC_POINT_set_Jprojective_coordinates_GFp(a1, a2, x, y, z, a3) ({ \
  const EC_GROUP * _EC_POINT_set_Jprojective_coordinates_GFp_a1 = (a1); \
  EC_POINT * _EC_POINT_set_Jprojective_coordinates_GFp_a2 = (a2); \
  const BIGNUM * _EC_POINT_set_Jprojective_coordinates_GFp_x = (x); \
  const BIGNUM * _EC_POINT_set_Jprojective_coordinates_GFp_y = (y); \
  const BIGNUM * _EC_POINT_set_Jprojective_coordinates_GFp_z = (z); \
  BN_CTX * _EC_POINT_set_Jprojective_coordinates_GFp_a3 = (a3); \
  ({ \
  register char * _EC_POINT_set_Jprojective_coordinates_GFp__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const EC_GROUP * __asm("a0"), EC_POINT * __asm("a1"), const BIGNUM * __asm("a2"), const BIGNUM * __asm("a3"), const BIGNUM * __asm("d0"), BN_CTX * __asm("d1"))) \
  (_EC_POINT_set_Jprojective_coordinates_GFp__bn - 3834))(_EC_POINT_set_Jprojective_coordinates_GFp__bn, _EC_POINT_set_Jprojective_coordinates_GFp_a1, _EC_POINT_set_Jprojective_coordinates_GFp_a2, _EC_POINT_set_Jprojective_coordinates_GFp_x, _EC_POINT_set_Jprojective_coordinates_GFp_y, _EC_POINT_set_Jprojective_coordinates_GFp_z, _EC_POINT_set_Jprojective_coordinates_GFp_a3); \
});})

#define EC_POINT_get_Jprojective_coordinates_GFp(a1, a2, x, y, z, a3) ({ \
  const EC_GROUP * _EC_POINT_get_Jprojective_coordinates_GFp_a1 = (a1); \
  const EC_POINT * _EC_POINT_get_Jprojective_coordinates_GFp_a2 = (a2); \
  BIGNUM * _EC_POINT_get_Jprojective_coordinates_GFp_x = (x); \
  BIGNUM * _EC_POINT_get_Jprojective_coordinates_GFp_y = (y); \
  BIGNUM * _EC_POINT_get_Jprojective_coordinates_GFp_z = (z); \
  BN_CTX * _EC_POINT_get_Jprojective_coordinates_GFp_a3 = (a3); \
  ({ \
  register char * _EC_POINT_get_Jprojective_coordinates_GFp__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const EC_GROUP * __asm("a0"), const EC_POINT * __asm("a1"), BIGNUM * __asm("a2"), BIGNUM * __asm("a3"), BIGNUM * __asm("d0"), BN_CTX * __asm("d1"))) \
  (_EC_POINT_get_Jprojective_coordinates_GFp__bn - 3840))(_EC_POINT_get_Jprojective_coordinates_GFp__bn, _EC_POINT_get_Jprojective_coordinates_GFp_a1, _EC_POINT_get_Jprojective_coordinates_GFp_a2, _EC_POINT_get_Jprojective_coordinates_GFp_x, _EC_POINT_get_Jprojective_coordinates_GFp_y, _EC_POINT_get_Jprojective_coordinates_GFp_z, _EC_POINT_get_Jprojective_coordinates_GFp_a3); \
});})

#define EC_POINT_set_affine_coordinates_GFp(a1, a2, x, y, a3) ({ \
  const EC_GROUP * _EC_POINT_set_affine_coordinates_GFp_a1 = (a1); \
  EC_POINT * _EC_POINT_set_affine_coordinates_GFp_a2 = (a2); \
  const BIGNUM * _EC_POINT_set_affine_coordinates_GFp_x = (x); \
  const BIGNUM * _EC_POINT_set_affine_coordinates_GFp_y = (y); \
  BN_CTX * _EC_POINT_set_affine_coordinates_GFp_a3 = (a3); \
  ({ \
  register char * _EC_POINT_set_affine_coordinates_GFp__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const EC_GROUP * __asm("a0"), EC_POINT * __asm("a1"), const BIGNUM * __asm("a2"), const BIGNUM * __asm("a3"), BN_CTX * __asm("d0"))) \
  (_EC_POINT_set_affine_coordinates_GFp__bn - 3846))(_EC_POINT_set_affine_coordinates_GFp__bn, _EC_POINT_set_affine_coordinates_GFp_a1, _EC_POINT_set_affine_coordinates_GFp_a2, _EC_POINT_set_affine_coordinates_GFp_x, _EC_POINT_set_affine_coordinates_GFp_y, _EC_POINT_set_affine_coordinates_GFp_a3); \
});})

#define EC_POINT_get_affine_coordinates_GFp(a1, a2, x, y, a3) ({ \
  const EC_GROUP * _EC_POINT_get_affine_coordinates_GFp_a1 = (a1); \
  const EC_POINT * _EC_POINT_get_affine_coordinates_GFp_a2 = (a2); \
  BIGNUM * _EC_POINT_get_affine_coordinates_GFp_x = (x); \
  BIGNUM * _EC_POINT_get_affine_coordinates_GFp_y = (y); \
  BN_CTX * _EC_POINT_get_affine_coordinates_GFp_a3 = (a3); \
  ({ \
  register char * _EC_POINT_get_affine_coordinates_GFp__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const EC_GROUP * __asm("a0"), const EC_POINT * __asm("a1"), BIGNUM * __asm("a2"), BIGNUM * __asm("a3"), BN_CTX * __asm("d0"))) \
  (_EC_POINT_get_affine_coordinates_GFp__bn - 3852))(_EC_POINT_get_affine_coordinates_GFp__bn, _EC_POINT_get_affine_coordinates_GFp_a1, _EC_POINT_get_affine_coordinates_GFp_a2, _EC_POINT_get_affine_coordinates_GFp_x, _EC_POINT_get_affine_coordinates_GFp_y, _EC_POINT_get_affine_coordinates_GFp_a3); \
});})

#define EC_POINT_set_compressed_coordinates_GFp(a1, a2, x, y_bit, a3) ({ \
  const EC_GROUP * _EC_POINT_set_compressed_coordinates_GFp_a1 = (a1); \
  EC_POINT * _EC_POINT_set_compressed_coordinates_GFp_a2 = (a2); \
  const BIGNUM * _EC_POINT_set_compressed_coordinates_GFp_x = (x); \
  LONG _EC_POINT_set_compressed_coordinates_GFp_y_bit = (y_bit); \
  BN_CTX * _EC_POINT_set_compressed_coordinates_GFp_a3 = (a3); \
  ({ \
  register char * _EC_POINT_set_compressed_coordinates_GFp__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const EC_GROUP * __asm("a0"), EC_POINT * __asm("a1"), const BIGNUM * __asm("a2"), LONG __asm("d0"), BN_CTX * __asm("a3"))) \
  (_EC_POINT_set_compressed_coordinates_GFp__bn - 3858))(_EC_POINT_set_compressed_coordinates_GFp__bn, _EC_POINT_set_compressed_coordinates_GFp_a1, _EC_POINT_set_compressed_coordinates_GFp_a2, _EC_POINT_set_compressed_coordinates_GFp_x, _EC_POINT_set_compressed_coordinates_GFp_y_bit, _EC_POINT_set_compressed_coordinates_GFp_a3); \
});})

#define EC_POINT_point2oct(a1, a2, form, buf, len, a3) ({ \
  const EC_GROUP * _EC_POINT_point2oct_a1 = (a1); \
  const EC_POINT * _EC_POINT_point2oct_a2 = (a2); \
  point_conversion_form_t _EC_POINT_point2oct_form = (form); \
  unsigned char * _EC_POINT_point2oct_buf = (buf); \
  ULONG _EC_POINT_point2oct_len = (len); \
  BN_CTX * _EC_POINT_point2oct_a3 = (a3); \
  ({ \
  register char * _EC_POINT_point2oct__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((size_t (*)(char * __asm("a6"), const EC_GROUP * __asm("a0"), const EC_POINT * __asm("a1"), point_conversion_form_t __asm("d0"), unsigned char * __asm("a2"), ULONG __asm("d1"), BN_CTX * __asm("a3"))) \
  (_EC_POINT_point2oct__bn - 3864))(_EC_POINT_point2oct__bn, _EC_POINT_point2oct_a1, _EC_POINT_point2oct_a2, _EC_POINT_point2oct_form, _EC_POINT_point2oct_buf, _EC_POINT_point2oct_len, _EC_POINT_point2oct_a3); \
});})

#define EC_POINT_oct2point(a1, a2, buf, len, a3) ({ \
  const EC_GROUP * _EC_POINT_oct2point_a1 = (a1); \
  EC_POINT * _EC_POINT_oct2point_a2 = (a2); \
  const unsigned char * _EC_POINT_oct2point_buf = (buf); \
  ULONG _EC_POINT_oct2point_len = (len); \
  BN_CTX * _EC_POINT_oct2point_a3 = (a3); \
  ({ \
  register char * _EC_POINT_oct2point__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const EC_GROUP * __asm("a0"), EC_POINT * __asm("a1"), const unsigned char * __asm("a2"), ULONG __asm("d0"), BN_CTX * __asm("a3"))) \
  (_EC_POINT_oct2point__bn - 3870))(_EC_POINT_oct2point__bn, _EC_POINT_oct2point_a1, _EC_POINT_oct2point_a2, _EC_POINT_oct2point_buf, _EC_POINT_oct2point_len, _EC_POINT_oct2point_a3); \
});})

#define EC_POINT_add(a1, r, a, b, a2) ({ \
  const EC_GROUP * _EC_POINT_add_a1 = (a1); \
  EC_POINT * _EC_POINT_add_r = (r); \
  const EC_POINT * _EC_POINT_add_a = (a); \
  const EC_POINT * _EC_POINT_add_b = (b); \
  BN_CTX * _EC_POINT_add_a2 = (a2); \
  ({ \
  register char * _EC_POINT_add__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const EC_GROUP * __asm("a0"), EC_POINT * __asm("a1"), const EC_POINT * __asm("a2"), const EC_POINT * __asm("a3"), BN_CTX * __asm("d0"))) \
  (_EC_POINT_add__bn - 3876))(_EC_POINT_add__bn, _EC_POINT_add_a1, _EC_POINT_add_r, _EC_POINT_add_a, _EC_POINT_add_b, _EC_POINT_add_a2); \
});})

#define EC_POINT_dbl(a1, r, a, a2) ({ \
  const EC_GROUP * _EC_POINT_dbl_a1 = (a1); \
  EC_POINT * _EC_POINT_dbl_r = (r); \
  const EC_POINT * _EC_POINT_dbl_a = (a); \
  BN_CTX * _EC_POINT_dbl_a2 = (a2); \
  ({ \
  register char * _EC_POINT_dbl__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const EC_GROUP * __asm("a0"), EC_POINT * __asm("a1"), const EC_POINT * __asm("a2"), BN_CTX * __asm("a3"))) \
  (_EC_POINT_dbl__bn - 3882))(_EC_POINT_dbl__bn, _EC_POINT_dbl_a1, _EC_POINT_dbl_r, _EC_POINT_dbl_a, _EC_POINT_dbl_a2); \
});})

#define EC_POINT_invert(a1, a2, a3) ({ \
  const EC_GROUP * _EC_POINT_invert_a1 = (a1); \
  EC_POINT * _EC_POINT_invert_a2 = (a2); \
  BN_CTX * _EC_POINT_invert_a3 = (a3); \
  ({ \
  register char * _EC_POINT_invert__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const EC_GROUP * __asm("a0"), EC_POINT * __asm("a1"), BN_CTX * __asm("a2"))) \
  (_EC_POINT_invert__bn - 3888))(_EC_POINT_invert__bn, _EC_POINT_invert_a1, _EC_POINT_invert_a2, _EC_POINT_invert_a3); \
});})

#define EC_POINT_is_at_infinity(a, b) ({ \
  const EC_GROUP * _EC_POINT_is_at_infinity_a = (a); \
  const EC_POINT * _EC_POINT_is_at_infinity_b = (b); \
  ({ \
  register char * _EC_POINT_is_at_infinity__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const EC_GROUP * __asm("a0"), const EC_POINT * __asm("a1"))) \
  (_EC_POINT_is_at_infinity__bn - 3894))(_EC_POINT_is_at_infinity__bn, _EC_POINT_is_at_infinity_a, _EC_POINT_is_at_infinity_b); \
});})

#define EC_POINT_is_on_curve(a, b, c) ({ \
  const EC_GROUP * _EC_POINT_is_on_curve_a = (a); \
  const EC_POINT * _EC_POINT_is_on_curve_b = (b); \
  BN_CTX * _EC_POINT_is_on_curve_c = (c); \
  ({ \
  register char * _EC_POINT_is_on_curve__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const EC_GROUP * __asm("a0"), const EC_POINT * __asm("a1"), BN_CTX * __asm("a2"))) \
  (_EC_POINT_is_on_curve__bn - 3900))(_EC_POINT_is_on_curve__bn, _EC_POINT_is_on_curve_a, _EC_POINT_is_on_curve_b, _EC_POINT_is_on_curve_c); \
});})

#define EC_POINT_cmp(a1, a, b, a2) ({ \
  const EC_GROUP * _EC_POINT_cmp_a1 = (a1); \
  const EC_POINT * _EC_POINT_cmp_a = (a); \
  const EC_POINT * _EC_POINT_cmp_b = (b); \
  BN_CTX * _EC_POINT_cmp_a2 = (a2); \
  ({ \
  register char * _EC_POINT_cmp__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const EC_GROUP * __asm("a0"), const EC_POINT * __asm("a1"), const EC_POINT * __asm("a2"), BN_CTX * __asm("a3"))) \
  (_EC_POINT_cmp__bn - 3906))(_EC_POINT_cmp__bn, _EC_POINT_cmp_a1, _EC_POINT_cmp_a, _EC_POINT_cmp_b, _EC_POINT_cmp_a2); \
});})

#define EC_POINT_make_affine(a, b, c) ({ \
  const EC_GROUP * _EC_POINT_make_affine_a = (a); \
  EC_POINT * _EC_POINT_make_affine_b = (b); \
  BN_CTX * _EC_POINT_make_affine_c = (c); \
  ({ \
  register char * _EC_POINT_make_affine__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const EC_GROUP * __asm("a0"), EC_POINT * __asm("a1"), BN_CTX * __asm("a2"))) \
  (_EC_POINT_make_affine__bn - 3912))(_EC_POINT_make_affine__bn, _EC_POINT_make_affine_a, _EC_POINT_make_affine_b, _EC_POINT_make_affine_c); \
});})

#define EC_POINTs_make_affine(a1, num, a2, a3) ({ \
  const EC_GROUP * _EC_POINTs_make_affine_a1 = (a1); \
  ULONG _EC_POINTs_make_affine_num = (num); \
  EC_POINT ** _EC_POINTs_make_affine_a2 = (a2); \
  BN_CTX * _EC_POINTs_make_affine_a3 = (a3); \
  ({ \
  register char * _EC_POINTs_make_affine__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const EC_GROUP * __asm("a0"), ULONG __asm("d0"), EC_POINT ** __asm("a1"), BN_CTX * __asm("a2"))) \
  (_EC_POINTs_make_affine__bn - 3918))(_EC_POINTs_make_affine__bn, _EC_POINTs_make_affine_a1, _EC_POINTs_make_affine_num, _EC_POINTs_make_affine_a2, _EC_POINTs_make_affine_a3); \
});})

#define EC_POINTs_mul(a1, r, a2, num, a3, a4, a5) ({ \
  const EC_GROUP * _EC_POINTs_mul_a1 = (a1); \
  EC_POINT * _EC_POINTs_mul_r = (r); \
  const BIGNUM * _EC_POINTs_mul_a2 = (a2); \
  ULONG _EC_POINTs_mul_num = (num); \
  const EC_POINT ** _EC_POINTs_mul_a3 = (a3); \
  const BIGNUM ** _EC_POINTs_mul_a4 = (a4); \
  BN_CTX * _EC_POINTs_mul_a5 = (a5); \
  ({ \
  register char * _EC_POINTs_mul__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const EC_GROUP * __asm("a0"), EC_POINT * __asm("a1"), const BIGNUM * __asm("a2"), ULONG __asm("d0"), const EC_POINT ** __asm("a3"), const BIGNUM ** __asm("d1"), BN_CTX * __asm("d2"))) \
  (_EC_POINTs_mul__bn - 3924))(_EC_POINTs_mul__bn, _EC_POINTs_mul_a1, _EC_POINTs_mul_r, _EC_POINTs_mul_a2, _EC_POINTs_mul_num, _EC_POINTs_mul_a3, _EC_POINTs_mul_a4, _EC_POINTs_mul_a5); \
});})

#define EC_POINT_mul(a1, r, a2, a3, a4, a5) ({ \
  const EC_GROUP * _EC_POINT_mul_a1 = (a1); \
  EC_POINT * _EC_POINT_mul_r = (r); \
  const BIGNUM * _EC_POINT_mul_a2 = (a2); \
  const EC_POINT * _EC_POINT_mul_a3 = (a3); \
  const BIGNUM * _EC_POINT_mul_a4 = (a4); \
  BN_CTX * _EC_POINT_mul_a5 = (a5); \
  ({ \
  register char * _EC_POINT_mul__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const EC_GROUP * __asm("a0"), EC_POINT * __asm("a1"), const BIGNUM * __asm("a2"), const EC_POINT * __asm("a3"), const BIGNUM * __asm("d0"), BN_CTX * __asm("d1"))) \
  (_EC_POINT_mul__bn - 3930))(_EC_POINT_mul__bn, _EC_POINT_mul_a1, _EC_POINT_mul_r, _EC_POINT_mul_a2, _EC_POINT_mul_a3, _EC_POINT_mul_a4, _EC_POINT_mul_a5); \
});})

#define EC_GROUP_precompute_mult(a, b) ({ \
  EC_GROUP * _EC_GROUP_precompute_mult_a = (a); \
  BN_CTX * _EC_GROUP_precompute_mult_b = (b); \
  ({ \
  register char * _EC_GROUP_precompute_mult__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), EC_GROUP * __asm("a0"), BN_CTX * __asm("a1"))) \
  (_EC_GROUP_precompute_mult__bn - 3936))(_EC_GROUP_precompute_mult__bn, _EC_GROUP_precompute_mult_a, _EC_GROUP_precompute_mult_b); \
});})

#define ERR_load_EC_strings() ({ \
  register char * _ERR_load_EC_strings__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"))) \
  (_ERR_load_EC_strings__bn - 3942))(_ERR_load_EC_strings__bn); \
})

#define ERR_put_error(lib, func, reason, file, line) ({ \
  LONG _ERR_put_error_lib = (lib); \
  LONG _ERR_put_error_func = (func); \
  LONG _ERR_put_error_reason = (reason); \
  const char * _ERR_put_error_file = (file); \
  LONG _ERR_put_error_line = (line); \
  ({ \
  register char * _ERR_put_error__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), LONG __asm("d0"), LONG __asm("d1"), LONG __asm("d2"), const char * __asm("a0"), LONG __asm("d3"))) \
  (_ERR_put_error__bn - 3948))(_ERR_put_error__bn, _ERR_put_error_lib, _ERR_put_error_func, _ERR_put_error_reason, _ERR_put_error_file, _ERR_put_error_line); \
});})

#define ERR_set_error_data(data, flags) ({ \
  char * _ERR_set_error_data_data = (data); \
  LONG _ERR_set_error_data_flags = (flags); \
  ({ \
  register char * _ERR_set_error_data__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), char * __asm("a0"), LONG __asm("d0"))) \
  (_ERR_set_error_data__bn - 3954))(_ERR_set_error_data__bn, _ERR_set_error_data_data, _ERR_set_error_data_flags); \
});})

#define ERR_get_error() ({ \
  register char * _ERR_get_error__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((unsigned long (*)(char * __asm("a6"))) \
  (_ERR_get_error__bn - 3960))(_ERR_get_error__bn); \
})

#define ERR_get_error_line(file, line) ({ \
  const char ** _ERR_get_error_line_file = (file); \
  int * _ERR_get_error_line_line = (line); \
  ({ \
  register char * _ERR_get_error_line__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((unsigned long (*)(char * __asm("a6"), const char ** __asm("a0"), int * __asm("a1"))) \
  (_ERR_get_error_line__bn - 3966))(_ERR_get_error_line__bn, _ERR_get_error_line_file, _ERR_get_error_line_line); \
});})

#define ERR_get_error_line_data(file, line, data, flags) ({ \
  const char ** _ERR_get_error_line_data_file = (file); \
  int * _ERR_get_error_line_data_line = (line); \
  const char ** _ERR_get_error_line_data_data = (data); \
  int * _ERR_get_error_line_data_flags = (flags); \
  ({ \
  register char * _ERR_get_error_line_data__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((unsigned long (*)(char * __asm("a6"), const char ** __asm("a0"), int * __asm("a1"), const char ** __asm("a2"), int * __asm("a3"))) \
  (_ERR_get_error_line_data__bn - 3972))(_ERR_get_error_line_data__bn, _ERR_get_error_line_data_file, _ERR_get_error_line_data_line, _ERR_get_error_line_data_data, _ERR_get_error_line_data_flags); \
});})

#define ERR_peek_error() ({ \
  register char * _ERR_peek_error__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((unsigned long (*)(char * __asm("a6"))) \
  (_ERR_peek_error__bn - 3978))(_ERR_peek_error__bn); \
})

#define ERR_peek_error_line(file, line) ({ \
  const char ** _ERR_peek_error_line_file = (file); \
  int * _ERR_peek_error_line_line = (line); \
  ({ \
  register char * _ERR_peek_error_line__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((unsigned long (*)(char * __asm("a6"), const char ** __asm("a0"), int * __asm("a1"))) \
  (_ERR_peek_error_line__bn - 3984))(_ERR_peek_error_line__bn, _ERR_peek_error_line_file, _ERR_peek_error_line_line); \
});})

#define ERR_peek_error_line_data(file, line, data, flags) ({ \
  const char ** _ERR_peek_error_line_data_file = (file); \
  int * _ERR_peek_error_line_data_line = (line); \
  const char ** _ERR_peek_error_line_data_data = (data); \
  int * _ERR_peek_error_line_data_flags = (flags); \
  ({ \
  register char * _ERR_peek_error_line_data__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((unsigned long (*)(char * __asm("a6"), const char ** __asm("a0"), int * __asm("a1"), const char ** __asm("a2"), int * __asm("a3"))) \
  (_ERR_peek_error_line_data__bn - 3990))(_ERR_peek_error_line_data__bn, _ERR_peek_error_line_data_file, _ERR_peek_error_line_data_line, _ERR_peek_error_line_data_data, _ERR_peek_error_line_data_flags); \
});})

#define ERR_peek_last_error() ({ \
  register char * _ERR_peek_last_error__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((unsigned long (*)(char * __asm("a6"))) \
  (_ERR_peek_last_error__bn - 3996))(_ERR_peek_last_error__bn); \
})

#define ERR_peek_last_error_line(file, line) ({ \
  const char ** _ERR_peek_last_error_line_file = (file); \
  int * _ERR_peek_last_error_line_line = (line); \
  ({ \
  register char * _ERR_peek_last_error_line__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((unsigned long (*)(char * __asm("a6"), const char ** __asm("a0"), int * __asm("a1"))) \
  (_ERR_peek_last_error_line__bn - 4002))(_ERR_peek_last_error_line__bn, _ERR_peek_last_error_line_file, _ERR_peek_last_error_line_line); \
});})

#define ERR_peek_last_error_line_data(file, line, data, flags) ({ \
  const char ** _ERR_peek_last_error_line_data_file = (file); \
  int * _ERR_peek_last_error_line_data_line = (line); \
  const char ** _ERR_peek_last_error_line_data_data = (data); \
  int * _ERR_peek_last_error_line_data_flags = (flags); \
  ({ \
  register char * _ERR_peek_last_error_line_data__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((unsigned long (*)(char * __asm("a6"), const char ** __asm("a0"), int * __asm("a1"), const char ** __asm("a2"), int * __asm("a3"))) \
  (_ERR_peek_last_error_line_data__bn - 4008))(_ERR_peek_last_error_line_data__bn, _ERR_peek_last_error_line_data_file, _ERR_peek_last_error_line_data_line, _ERR_peek_last_error_line_data_data, _ERR_peek_last_error_line_data_flags); \
});})

#define ERR_clear_error() ({ \
  register char * _ERR_clear_error__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"))) \
  (_ERR_clear_error__bn - 4014))(_ERR_clear_error__bn); \
})

#define ERR_error_string(e, buf) ({ \
  unsigned long _ERR_error_string_e = (e); \
  char * _ERR_error_string_buf = (buf); \
  ({ \
  register char * _ERR_error_string__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((char * (*)(char * __asm("a6"), unsigned long __asm("d0"), char * __asm("a0"))) \
  (_ERR_error_string__bn - 4020))(_ERR_error_string__bn, _ERR_error_string_e, _ERR_error_string_buf); \
});})

#define ERR_error_string_n(e, buf, len) ({ \
  unsigned long _ERR_error_string_n_e = (e); \
  char * _ERR_error_string_n_buf = (buf); \
  ULONG _ERR_error_string_n_len = (len); \
  ({ \
  register char * _ERR_error_string_n__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), unsigned long __asm("d0"), char * __asm("a0"), ULONG __asm("d1"))) \
  (_ERR_error_string_n__bn - 4026))(_ERR_error_string_n__bn, _ERR_error_string_n_e, _ERR_error_string_n_buf, _ERR_error_string_n_len); \
});})

#define ERR_lib_error_string(e) ({ \
  unsigned long _ERR_lib_error_string_e = (e); \
  ({ \
  register char * _ERR_lib_error_string__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const char * (*)(char * __asm("a6"), unsigned long __asm("d0"))) \
  (_ERR_lib_error_string__bn - 4032))(_ERR_lib_error_string__bn, _ERR_lib_error_string_e); \
});})

#define ERR_func_error_string(e) ({ \
  unsigned long _ERR_func_error_string_e = (e); \
  ({ \
  register char * _ERR_func_error_string__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const char * (*)(char * __asm("a6"), unsigned long __asm("d0"))) \
  (_ERR_func_error_string__bn - 4038))(_ERR_func_error_string__bn, _ERR_func_error_string_e); \
});})

#define ERR_reason_error_string(e) ({ \
  unsigned long _ERR_reason_error_string_e = (e); \
  ({ \
  register char * _ERR_reason_error_string__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const char * (*)(char * __asm("a6"), unsigned long __asm("d0"))) \
  (_ERR_reason_error_string__bn - 4044))(_ERR_reason_error_string__bn, _ERR_reason_error_string_e); \
});})

#define ERR_print_errors_cb(cb, u) ({ \
  int (*_ERR_print_errors_cb_cb)(const char *str, size_t len, void *u) = (cb); \
  void * _ERR_print_errors_cb_u = (u); \
  ({ \
  register char * _ERR_print_errors_cb__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), int (*)(const char *str, size_t len, void *u) __asm("a0"), void * __asm("a1"))) \
  (_ERR_print_errors_cb__bn - 4050))(_ERR_print_errors_cb__bn, _ERR_print_errors_cb_cb, _ERR_print_errors_cb_u); \
});})

#define ERR_print_errors(bp) ({ \
  BIO * _ERR_print_errors_bp = (bp); \
  ({ \
  register char * _ERR_print_errors__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), BIO * __asm("a0"))) \
  (_ERR_print_errors__bn - 4056))(_ERR_print_errors__bn, _ERR_print_errors_bp); \
});})

#define ERR_add_error_dataA(num, args) ({ \
  LONG _ERR_add_error_dataA_num = (num); \
  long * _ERR_add_error_dataA_args = (args); \
  ({ \
  register char * _ERR_add_error_dataA__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), LONG __asm("d0"), long * __asm("d1"))) \
  (_ERR_add_error_dataA__bn - 4062))(_ERR_add_error_dataA__bn, _ERR_add_error_dataA_num, _ERR_add_error_dataA_args); \
});})

#ifndef NO_INLINE_STDARG
static __inline__ void ___ERR_add_error_data(struct Library * AmiSSLBase, LONG num, ...)
{
  ERR_add_error_dataA(num, &num + 1);
}

#define ERR_add_error_data(num...) ___ERR_add_error_data(AMISSL_BASE_NAME, num)
#endif

#define ERR_load_strings(lib, str) ({ \
  LONG _ERR_load_strings_lib = (lib); \
  ERR_STRING_DATA * _ERR_load_strings_str = (str); \
  ({ \
  register char * _ERR_load_strings__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), LONG __asm("d0"), ERR_STRING_DATA * __asm("a0"))) \
  (_ERR_load_strings__bn - 4068))(_ERR_load_strings__bn, _ERR_load_strings_lib, _ERR_load_strings_str); \
});})

#define ERR_unload_strings(lib, str) ({ \
  LONG _ERR_unload_strings_lib = (lib); \
  ERR_STRING_DATA * _ERR_unload_strings_str = (str); \
  ({ \
  register char * _ERR_unload_strings__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), LONG __asm("d0"), ERR_STRING_DATA * __asm("a0"))) \
  (_ERR_unload_strings__bn - 4074))(_ERR_unload_strings__bn, _ERR_unload_strings_lib, _ERR_unload_strings_str); \
});})

#define ERR_load_ERR_strings() ({ \
  register char * _ERR_load_ERR_strings__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"))) \
  (_ERR_load_ERR_strings__bn - 4080))(_ERR_load_ERR_strings__bn); \
})

#define ERR_load_crypto_strings() ({ \
  register char * _ERR_load_crypto_strings__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"))) \
  (_ERR_load_crypto_strings__bn - 4086))(_ERR_load_crypto_strings__bn); \
})

#define ERR_free_strings() ({ \
  register char * _ERR_free_strings__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"))) \
  (_ERR_free_strings__bn - 4092))(_ERR_free_strings__bn); \
})

#define ERR_remove_state(pid) ({ \
  unsigned long _ERR_remove_state_pid = (pid); \
  ({ \
  register char * _ERR_remove_state__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), unsigned long __asm("d0"))) \
  (_ERR_remove_state__bn - 4098))(_ERR_remove_state__bn, _ERR_remove_state_pid); \
});})

#define ERR_get_state() ({ \
  register char * _ERR_get_state__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((ERR_STATE * (*)(char * __asm("a6"))) \
  (_ERR_get_state__bn - 4104))(_ERR_get_state__bn); \
})

#define ERR_get_string_table() ({ \
  register char * _ERR_get_string_table__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((LHASH * (*)(char * __asm("a6"))) \
  (_ERR_get_string_table__bn - 4110))(_ERR_get_string_table__bn); \
})

#define ERR_get_err_state_table() ({ \
  register char * _ERR_get_err_state_table__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((LHASH * (*)(char * __asm("a6"))) \
  (_ERR_get_err_state_table__bn - 4116))(_ERR_get_err_state_table__bn); \
})

#define ERR_release_err_state_table(hash) ({ \
  LHASH ** _ERR_release_err_state_table_hash = (hash); \
  ({ \
  register char * _ERR_release_err_state_table__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), LHASH ** __asm("a0"))) \
  (_ERR_release_err_state_table__bn - 4122))(_ERR_release_err_state_table__bn, _ERR_release_err_state_table_hash); \
});})

#define ERR_get_next_error_library() ({ \
  register char * _ERR_get_next_error_library__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"))) \
  (_ERR_get_next_error_library__bn - 4128))(_ERR_get_next_error_library__bn); \
})

#define ERR_get_implementation() ({ \
  register char * _ERR_get_implementation__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ERR_FNS * (*)(char * __asm("a6"))) \
  (_ERR_get_implementation__bn - 4134))(_ERR_get_implementation__bn); \
})

#define ERR_set_implementation(fns) ({ \
  const ERR_FNS * _ERR_set_implementation_fns = (fns); \
  ({ \
  register char * _ERR_set_implementation__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const ERR_FNS * __asm("a0"))) \
  (_ERR_set_implementation__bn - 4140))(_ERR_set_implementation__bn, _ERR_set_implementation_fns); \
});})

#define EVP_MD_CTX_init(ctx) ({ \
  EVP_MD_CTX * _EVP_MD_CTX_init_ctx = (ctx); \
  ({ \
  register char * _EVP_MD_CTX_init__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), EVP_MD_CTX * __asm("a0"))) \
  (_EVP_MD_CTX_init__bn - 4146))(_EVP_MD_CTX_init__bn, _EVP_MD_CTX_init_ctx); \
});})

#define EVP_MD_CTX_cleanup(ctx) ({ \
  EVP_MD_CTX * _EVP_MD_CTX_cleanup_ctx = (ctx); \
  ({ \
  register char * _EVP_MD_CTX_cleanup__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), EVP_MD_CTX * __asm("a0"))) \
  (_EVP_MD_CTX_cleanup__bn - 4152))(_EVP_MD_CTX_cleanup__bn, _EVP_MD_CTX_cleanup_ctx); \
});})

#define EVP_MD_CTX_create() ({ \
  register char * _EVP_MD_CTX_create__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((EVP_MD_CTX * (*)(char * __asm("a6"))) \
  (_EVP_MD_CTX_create__bn - 4158))(_EVP_MD_CTX_create__bn); \
})

#define EVP_MD_CTX_destroy(ctx) ({ \
  EVP_MD_CTX * _EVP_MD_CTX_destroy_ctx = (ctx); \
  ({ \
  register char * _EVP_MD_CTX_destroy__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), EVP_MD_CTX * __asm("a0"))) \
  (_EVP_MD_CTX_destroy__bn - 4164))(_EVP_MD_CTX_destroy__bn, _EVP_MD_CTX_destroy_ctx); \
});})

#define EVP_MD_CTX_copy_ex(out, in) ({ \
  EVP_MD_CTX * _EVP_MD_CTX_copy_ex_out = (out); \
  const EVP_MD_CTX * _EVP_MD_CTX_copy_ex_in = (in); \
  ({ \
  register char * _EVP_MD_CTX_copy_ex__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), EVP_MD_CTX * __asm("a0"), const EVP_MD_CTX * __asm("a1"))) \
  (_EVP_MD_CTX_copy_ex__bn - 4170))(_EVP_MD_CTX_copy_ex__bn, _EVP_MD_CTX_copy_ex_out, _EVP_MD_CTX_copy_ex_in); \
});})

#define EVP_DigestInit_ex(ctx, type, impl) ({ \
  EVP_MD_CTX * _EVP_DigestInit_ex_ctx = (ctx); \
  const EVP_MD * _EVP_DigestInit_ex_type = (type); \
  ENGINE * _EVP_DigestInit_ex_impl = (impl); \
  ({ \
  register char * _EVP_DigestInit_ex__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), EVP_MD_CTX * __asm("a0"), const EVP_MD * __asm("a1"), ENGINE * __asm("a2"))) \
  (_EVP_DigestInit_ex__bn - 4176))(_EVP_DigestInit_ex__bn, _EVP_DigestInit_ex_ctx, _EVP_DigestInit_ex_type, _EVP_DigestInit_ex_impl); \
});})

#define EVP_DigestUpdate(ctx, d, cnt) ({ \
  EVP_MD_CTX * _EVP_DigestUpdate_ctx = (ctx); \
  const void * _EVP_DigestUpdate_d = (d); \
  ULONG _EVP_DigestUpdate_cnt = (cnt); \
  ({ \
  register char * _EVP_DigestUpdate__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), EVP_MD_CTX * __asm("a0"), const void * __asm("a1"), ULONG __asm("d0"))) \
  (_EVP_DigestUpdate__bn - 4182))(_EVP_DigestUpdate__bn, _EVP_DigestUpdate_ctx, _EVP_DigestUpdate_d, _EVP_DigestUpdate_cnt); \
});})

#define EVP_DigestFinal_ex(ctx, md, s) ({ \
  EVP_MD_CTX * _EVP_DigestFinal_ex_ctx = (ctx); \
  unsigned char * _EVP_DigestFinal_ex_md = (md); \
  unsigned int * _EVP_DigestFinal_ex_s = (s); \
  ({ \
  register char * _EVP_DigestFinal_ex__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), EVP_MD_CTX * __asm("a0"), unsigned char * __asm("a1"), unsigned int * __asm("a2"))) \
  (_EVP_DigestFinal_ex__bn - 4188))(_EVP_DigestFinal_ex__bn, _EVP_DigestFinal_ex_ctx, _EVP_DigestFinal_ex_md, _EVP_DigestFinal_ex_s); \
});})

#define EVP_Digest(data, count, md, size, type, impl) ({ \
  void * _EVP_Digest_data = (data); \
  ULONG _EVP_Digest_count = (count); \
  unsigned char * _EVP_Digest_md = (md); \
  unsigned int * _EVP_Digest_size = (size); \
  const EVP_MD * _EVP_Digest_type = (type); \
  ENGINE * _EVP_Digest_impl = (impl); \
  ({ \
  register char * _EVP_Digest__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), void * __asm("a0"), ULONG __asm("d0"), unsigned char * __asm("a1"), unsigned int * __asm("a2"), const EVP_MD * __asm("a3"), ENGINE * __asm("d1"))) \
  (_EVP_Digest__bn - 4194))(_EVP_Digest__bn, _EVP_Digest_data, _EVP_Digest_count, _EVP_Digest_md, _EVP_Digest_size, _EVP_Digest_type, _EVP_Digest_impl); \
});})

#define EVP_MD_CTX_copy(out, in) ({ \
  EVP_MD_CTX * _EVP_MD_CTX_copy_out = (out); \
  const EVP_MD_CTX * _EVP_MD_CTX_copy_in = (in); \
  ({ \
  register char * _EVP_MD_CTX_copy__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), EVP_MD_CTX * __asm("a0"), const EVP_MD_CTX * __asm("a1"))) \
  (_EVP_MD_CTX_copy__bn - 4200))(_EVP_MD_CTX_copy__bn, _EVP_MD_CTX_copy_out, _EVP_MD_CTX_copy_in); \
});})

#define EVP_DigestInit(ctx, type) ({ \
  EVP_MD_CTX * _EVP_DigestInit_ctx = (ctx); \
  const EVP_MD * _EVP_DigestInit_type = (type); \
  ({ \
  register char * _EVP_DigestInit__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), EVP_MD_CTX * __asm("a0"), const EVP_MD * __asm("a1"))) \
  (_EVP_DigestInit__bn - 4206))(_EVP_DigestInit__bn, _EVP_DigestInit_ctx, _EVP_DigestInit_type); \
});})

#define EVP_DigestFinal(ctx, md, s) ({ \
  EVP_MD_CTX * _EVP_DigestFinal_ctx = (ctx); \
  unsigned char * _EVP_DigestFinal_md = (md); \
  unsigned int * _EVP_DigestFinal_s = (s); \
  ({ \
  register char * _EVP_DigestFinal__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), EVP_MD_CTX * __asm("a0"), unsigned char * __asm("a1"), unsigned int * __asm("a2"))) \
  (_EVP_DigestFinal__bn - 4212))(_EVP_DigestFinal__bn, _EVP_DigestFinal_ctx, _EVP_DigestFinal_md, _EVP_DigestFinal_s); \
});})

#define EVP_read_pw_string(buf, length, prompt, verify) ({ \
  char * _EVP_read_pw_string_buf = (buf); \
  LONG _EVP_read_pw_string_length = (length); \
  const char * _EVP_read_pw_string_prompt = (prompt); \
  LONG _EVP_read_pw_string_verify = (verify); \
  ({ \
  register char * _EVP_read_pw_string__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), char * __asm("a0"), LONG __asm("d0"), const char * __asm("a1"), LONG __asm("d1"))) \
  (_EVP_read_pw_string__bn - 4218))(_EVP_read_pw_string__bn, _EVP_read_pw_string_buf, _EVP_read_pw_string_length, _EVP_read_pw_string_prompt, _EVP_read_pw_string_verify); \
});})

#define EVP_set_pw_prompt(prompt) ({ \
  char * _EVP_set_pw_prompt_prompt = (prompt); \
  ({ \
  register char * _EVP_set_pw_prompt__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), char * __asm("a0"))) \
  (_EVP_set_pw_prompt__bn - 4224))(_EVP_set_pw_prompt__bn, _EVP_set_pw_prompt_prompt); \
});})

#define EVP_get_pw_prompt() ({ \
  register char * _EVP_get_pw_prompt__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((char * (*)(char * __asm("a6"))) \
  (_EVP_get_pw_prompt__bn - 4230))(_EVP_get_pw_prompt__bn); \
})

#define EVP_BytesToKey(type, md, salt, data, datal, count, key, iv) ({ \
  const EVP_CIPHER * _EVP_BytesToKey_type = (type); \
  const EVP_MD * _EVP_BytesToKey_md = (md); \
  const unsigned char * _EVP_BytesToKey_salt = (salt); \
  const unsigned char * _EVP_BytesToKey_data = (data); \
  LONG _EVP_BytesToKey_datal = (datal); \
  LONG _EVP_BytesToKey_count = (count); \
  unsigned char * _EVP_BytesToKey_key = (key); \
  unsigned char * _EVP_BytesToKey_iv = (iv); \
  ({ \
  register char * _EVP_BytesToKey__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const EVP_CIPHER * __asm("a0"), const EVP_MD * __asm("a1"), const unsigned char * __asm("a2"), const unsigned char * __asm("a3"), LONG __asm("d0"), LONG __asm("d1"), unsigned char * __asm("d2"), unsigned char * __asm("d3"))) \
  (_EVP_BytesToKey__bn - 4236))(_EVP_BytesToKey__bn, _EVP_BytesToKey_type, _EVP_BytesToKey_md, _EVP_BytesToKey_salt, _EVP_BytesToKey_data, _EVP_BytesToKey_datal, _EVP_BytesToKey_count, _EVP_BytesToKey_key, _EVP_BytesToKey_iv); \
});})

#define EVP_EncryptInit(ctx, cipher, key, iv) ({ \
  EVP_CIPHER_CTX * _EVP_EncryptInit_ctx = (ctx); \
  const EVP_CIPHER * _EVP_EncryptInit_cipher = (cipher); \
  const unsigned char * _EVP_EncryptInit_key = (key); \
  const unsigned char * _EVP_EncryptInit_iv = (iv); \
  ({ \
  register char * _EVP_EncryptInit__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), EVP_CIPHER_CTX * __asm("a0"), const EVP_CIPHER * __asm("a1"), const unsigned char * __asm("a2"), const unsigned char * __asm("a3"))) \
  (_EVP_EncryptInit__bn - 4242))(_EVP_EncryptInit__bn, _EVP_EncryptInit_ctx, _EVP_EncryptInit_cipher, _EVP_EncryptInit_key, _EVP_EncryptInit_iv); \
});})

#define EVP_EncryptInit_ex(ctx, cipher, impl, key, iv) ({ \
  EVP_CIPHER_CTX * _EVP_EncryptInit_ex_ctx = (ctx); \
  const EVP_CIPHER * _EVP_EncryptInit_ex_cipher = (cipher); \
  ENGINE * _EVP_EncryptInit_ex_impl = (impl); \
  const unsigned char * _EVP_EncryptInit_ex_key = (key); \
  const unsigned char * _EVP_EncryptInit_ex_iv = (iv); \
  ({ \
  register char * _EVP_EncryptInit_ex__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), EVP_CIPHER_CTX * __asm("a0"), const EVP_CIPHER * __asm("a1"), ENGINE * __asm("a2"), const unsigned char * __asm("a3"), const unsigned char * __asm("d0"))) \
  (_EVP_EncryptInit_ex__bn - 4248))(_EVP_EncryptInit_ex__bn, _EVP_EncryptInit_ex_ctx, _EVP_EncryptInit_ex_cipher, _EVP_EncryptInit_ex_impl, _EVP_EncryptInit_ex_key, _EVP_EncryptInit_ex_iv); \
});})

#define EVP_EncryptUpdate(ctx, out, outl, in, inl) ({ \
  EVP_CIPHER_CTX * _EVP_EncryptUpdate_ctx = (ctx); \
  unsigned char * _EVP_EncryptUpdate_out = (out); \
  int * _EVP_EncryptUpdate_outl = (outl); \
  const unsigned char * _EVP_EncryptUpdate_in = (in); \
  LONG _EVP_EncryptUpdate_inl = (inl); \
  ({ \
  register char * _EVP_EncryptUpdate__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), EVP_CIPHER_CTX * __asm("a0"), unsigned char * __asm("a1"), int * __asm("a2"), const unsigned char * __asm("a3"), LONG __asm("d0"))) \
  (_EVP_EncryptUpdate__bn - 4254))(_EVP_EncryptUpdate__bn, _EVP_EncryptUpdate_ctx, _EVP_EncryptUpdate_out, _EVP_EncryptUpdate_outl, _EVP_EncryptUpdate_in, _EVP_EncryptUpdate_inl); \
});})

#define EVP_EncryptFinal_ex(ctx, out, outl) ({ \
  EVP_CIPHER_CTX * _EVP_EncryptFinal_ex_ctx = (ctx); \
  unsigned char * _EVP_EncryptFinal_ex_out = (out); \
  int * _EVP_EncryptFinal_ex_outl = (outl); \
  ({ \
  register char * _EVP_EncryptFinal_ex__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), EVP_CIPHER_CTX * __asm("a0"), unsigned char * __asm("a1"), int * __asm("a2"))) \
  (_EVP_EncryptFinal_ex__bn - 4260))(_EVP_EncryptFinal_ex__bn, _EVP_EncryptFinal_ex_ctx, _EVP_EncryptFinal_ex_out, _EVP_EncryptFinal_ex_outl); \
});})

#define EVP_EncryptFinal(ctx, out, outl) ({ \
  EVP_CIPHER_CTX * _EVP_EncryptFinal_ctx = (ctx); \
  unsigned char * _EVP_EncryptFinal_out = (out); \
  int * _EVP_EncryptFinal_outl = (outl); \
  ({ \
  register char * _EVP_EncryptFinal__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), EVP_CIPHER_CTX * __asm("a0"), unsigned char * __asm("a1"), int * __asm("a2"))) \
  (_EVP_EncryptFinal__bn - 4266))(_EVP_EncryptFinal__bn, _EVP_EncryptFinal_ctx, _EVP_EncryptFinal_out, _EVP_EncryptFinal_outl); \
});})

#define EVP_DecryptInit(ctx, cipher, key, iv) ({ \
  EVP_CIPHER_CTX * _EVP_DecryptInit_ctx = (ctx); \
  const EVP_CIPHER * _EVP_DecryptInit_cipher = (cipher); \
  const unsigned char * _EVP_DecryptInit_key = (key); \
  const unsigned char * _EVP_DecryptInit_iv = (iv); \
  ({ \
  register char * _EVP_DecryptInit__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), EVP_CIPHER_CTX * __asm("a0"), const EVP_CIPHER * __asm("a1"), const unsigned char * __asm("a2"), const unsigned char * __asm("a3"))) \
  (_EVP_DecryptInit__bn - 4272))(_EVP_DecryptInit__bn, _EVP_DecryptInit_ctx, _EVP_DecryptInit_cipher, _EVP_DecryptInit_key, _EVP_DecryptInit_iv); \
});})

#define EVP_DecryptInit_ex(ctx, cipher, impl, key, iv) ({ \
  EVP_CIPHER_CTX * _EVP_DecryptInit_ex_ctx = (ctx); \
  const EVP_CIPHER * _EVP_DecryptInit_ex_cipher = (cipher); \
  ENGINE * _EVP_DecryptInit_ex_impl = (impl); \
  const unsigned char * _EVP_DecryptInit_ex_key = (key); \
  const unsigned char * _EVP_DecryptInit_ex_iv = (iv); \
  ({ \
  register char * _EVP_DecryptInit_ex__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), EVP_CIPHER_CTX * __asm("a0"), const EVP_CIPHER * __asm("a1"), ENGINE * __asm("a2"), const unsigned char * __asm("a3"), const unsigned char * __asm("d0"))) \
  (_EVP_DecryptInit_ex__bn - 4278))(_EVP_DecryptInit_ex__bn, _EVP_DecryptInit_ex_ctx, _EVP_DecryptInit_ex_cipher, _EVP_DecryptInit_ex_impl, _EVP_DecryptInit_ex_key, _EVP_DecryptInit_ex_iv); \
});})

#define EVP_DecryptUpdate(ctx, out, outl, in, inl) ({ \
  EVP_CIPHER_CTX * _EVP_DecryptUpdate_ctx = (ctx); \
  unsigned char * _EVP_DecryptUpdate_out = (out); \
  int * _EVP_DecryptUpdate_outl = (outl); \
  const unsigned char * _EVP_DecryptUpdate_in = (in); \
  LONG _EVP_DecryptUpdate_inl = (inl); \
  ({ \
  register char * _EVP_DecryptUpdate__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), EVP_CIPHER_CTX * __asm("a0"), unsigned char * __asm("a1"), int * __asm("a2"), const unsigned char * __asm("a3"), LONG __asm("d0"))) \
  (_EVP_DecryptUpdate__bn - 4284))(_EVP_DecryptUpdate__bn, _EVP_DecryptUpdate_ctx, _EVP_DecryptUpdate_out, _EVP_DecryptUpdate_outl, _EVP_DecryptUpdate_in, _EVP_DecryptUpdate_inl); \
});})

#define EVP_DecryptFinal(ctx, outm, outl) ({ \
  EVP_CIPHER_CTX * _EVP_DecryptFinal_ctx = (ctx); \
  unsigned char * _EVP_DecryptFinal_outm = (outm); \
  int * _EVP_DecryptFinal_outl = (outl); \
  ({ \
  register char * _EVP_DecryptFinal__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), EVP_CIPHER_CTX * __asm("a0"), unsigned char * __asm("a1"), int * __asm("a2"))) \
  (_EVP_DecryptFinal__bn - 4290))(_EVP_DecryptFinal__bn, _EVP_DecryptFinal_ctx, _EVP_DecryptFinal_outm, _EVP_DecryptFinal_outl); \
});})

#define EVP_DecryptFinal_ex(ctx, outm, outl) ({ \
  EVP_CIPHER_CTX * _EVP_DecryptFinal_ex_ctx = (ctx); \
  unsigned char * _EVP_DecryptFinal_ex_outm = (outm); \
  int * _EVP_DecryptFinal_ex_outl = (outl); \
  ({ \
  register char * _EVP_DecryptFinal_ex__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), EVP_CIPHER_CTX * __asm("a0"), unsigned char * __asm("a1"), int * __asm("a2"))) \
  (_EVP_DecryptFinal_ex__bn - 4296))(_EVP_DecryptFinal_ex__bn, _EVP_DecryptFinal_ex_ctx, _EVP_DecryptFinal_ex_outm, _EVP_DecryptFinal_ex_outl); \
});})

#define EVP_CipherInit(ctx, cipher, key, iv, enc) ({ \
  EVP_CIPHER_CTX * _EVP_CipherInit_ctx = (ctx); \
  const EVP_CIPHER * _EVP_CipherInit_cipher = (cipher); \
  const unsigned char * _EVP_CipherInit_key = (key); \
  const unsigned char * _EVP_CipherInit_iv = (iv); \
  LONG _EVP_CipherInit_enc = (enc); \
  ({ \
  register char * _EVP_CipherInit__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), EVP_CIPHER_CTX * __asm("a0"), const EVP_CIPHER * __asm("a1"), const unsigned char * __asm("a2"), const unsigned char * __asm("a3"), LONG __asm("d0"))) \
  (_EVP_CipherInit__bn - 4302))(_EVP_CipherInit__bn, _EVP_CipherInit_ctx, _EVP_CipherInit_cipher, _EVP_CipherInit_key, _EVP_CipherInit_iv, _EVP_CipherInit_enc); \
});})

#define EVP_CipherInit_ex(ctx, cipher, impl, key, iv, enc) ({ \
  EVP_CIPHER_CTX * _EVP_CipherInit_ex_ctx = (ctx); \
  const EVP_CIPHER * _EVP_CipherInit_ex_cipher = (cipher); \
  ENGINE * _EVP_CipherInit_ex_impl = (impl); \
  const unsigned char * _EVP_CipherInit_ex_key = (key); \
  const unsigned char * _EVP_CipherInit_ex_iv = (iv); \
  LONG _EVP_CipherInit_ex_enc = (enc); \
  ({ \
  register char * _EVP_CipherInit_ex__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), EVP_CIPHER_CTX * __asm("a0"), const EVP_CIPHER * __asm("a1"), ENGINE * __asm("a2"), const unsigned char * __asm("a3"), const unsigned char * __asm("d0"), LONG __asm("d1"))) \
  (_EVP_CipherInit_ex__bn - 4308))(_EVP_CipherInit_ex__bn, _EVP_CipherInit_ex_ctx, _EVP_CipherInit_ex_cipher, _EVP_CipherInit_ex_impl, _EVP_CipherInit_ex_key, _EVP_CipherInit_ex_iv, _EVP_CipherInit_ex_enc); \
});})

#define EVP_CipherUpdate(ctx, out, outl, in, inl) ({ \
  EVP_CIPHER_CTX * _EVP_CipherUpdate_ctx = (ctx); \
  unsigned char * _EVP_CipherUpdate_out = (out); \
  int * _EVP_CipherUpdate_outl = (outl); \
  const unsigned char * _EVP_CipherUpdate_in = (in); \
  LONG _EVP_CipherUpdate_inl = (inl); \
  ({ \
  register char * _EVP_CipherUpdate__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), EVP_CIPHER_CTX * __asm("a0"), unsigned char * __asm("a1"), int * __asm("a2"), const unsigned char * __asm("a3"), LONG __asm("d0"))) \
  (_EVP_CipherUpdate__bn - 4314))(_EVP_CipherUpdate__bn, _EVP_CipherUpdate_ctx, _EVP_CipherUpdate_out, _EVP_CipherUpdate_outl, _EVP_CipherUpdate_in, _EVP_CipherUpdate_inl); \
});})

#define EVP_CipherFinal(ctx, outm, outl) ({ \
  EVP_CIPHER_CTX * _EVP_CipherFinal_ctx = (ctx); \
  unsigned char * _EVP_CipherFinal_outm = (outm); \
  int * _EVP_CipherFinal_outl = (outl); \
  ({ \
  register char * _EVP_CipherFinal__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), EVP_CIPHER_CTX * __asm("a0"), unsigned char * __asm("a1"), int * __asm("a2"))) \
  (_EVP_CipherFinal__bn - 4320))(_EVP_CipherFinal__bn, _EVP_CipherFinal_ctx, _EVP_CipherFinal_outm, _EVP_CipherFinal_outl); \
});})

#define EVP_CipherFinal_ex(ctx, outm, outl) ({ \
  EVP_CIPHER_CTX * _EVP_CipherFinal_ex_ctx = (ctx); \
  unsigned char * _EVP_CipherFinal_ex_outm = (outm); \
  int * _EVP_CipherFinal_ex_outl = (outl); \
  ({ \
  register char * _EVP_CipherFinal_ex__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), EVP_CIPHER_CTX * __asm("a0"), unsigned char * __asm("a1"), int * __asm("a2"))) \
  (_EVP_CipherFinal_ex__bn - 4326))(_EVP_CipherFinal_ex__bn, _EVP_CipherFinal_ex_ctx, _EVP_CipherFinal_ex_outm, _EVP_CipherFinal_ex_outl); \
});})

#define EVP_SignFinal(ctx, md, s, pkey) ({ \
  EVP_MD_CTX * _EVP_SignFinal_ctx = (ctx); \
  unsigned char * _EVP_SignFinal_md = (md); \
  unsigned int * _EVP_SignFinal_s = (s); \
  EVP_PKEY * _EVP_SignFinal_pkey = (pkey); \
  ({ \
  register char * _EVP_SignFinal__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), EVP_MD_CTX * __asm("a0"), unsigned char * __asm("a1"), unsigned int * __asm("a2"), EVP_PKEY * __asm("a3"))) \
  (_EVP_SignFinal__bn - 4332))(_EVP_SignFinal__bn, _EVP_SignFinal_ctx, _EVP_SignFinal_md, _EVP_SignFinal_s, _EVP_SignFinal_pkey); \
});})

#define EVP_VerifyFinal(ctx, sigbuf, siglen, pkey) ({ \
  EVP_MD_CTX * _EVP_VerifyFinal_ctx = (ctx); \
  unsigned char * _EVP_VerifyFinal_sigbuf = (sigbuf); \
  ULONG _EVP_VerifyFinal_siglen = (siglen); \
  EVP_PKEY * _EVP_VerifyFinal_pkey = (pkey); \
  ({ \
  register char * _EVP_VerifyFinal__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), EVP_MD_CTX * __asm("a0"), unsigned char * __asm("a1"), ULONG __asm("d0"), EVP_PKEY * __asm("a2"))) \
  (_EVP_VerifyFinal__bn - 4338))(_EVP_VerifyFinal__bn, _EVP_VerifyFinal_ctx, _EVP_VerifyFinal_sigbuf, _EVP_VerifyFinal_siglen, _EVP_VerifyFinal_pkey); \
});})

#define EVP_OpenInit(ctx, type, ek, ekl, iv, priv) ({ \
  EVP_CIPHER_CTX * _EVP_OpenInit_ctx = (ctx); \
  const EVP_CIPHER * _EVP_OpenInit_type = (type); \
  unsigned char * _EVP_OpenInit_ek = (ek); \
  LONG _EVP_OpenInit_ekl = (ekl); \
  unsigned char * _EVP_OpenInit_iv = (iv); \
  EVP_PKEY * _EVP_OpenInit_priv = (priv); \
  ({ \
  register char * _EVP_OpenInit__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), EVP_CIPHER_CTX * __asm("a0"), const EVP_CIPHER * __asm("a1"), unsigned char * __asm("a2"), LONG __asm("d0"), unsigned char * __asm("a3"), EVP_PKEY * __asm("d1"))) \
  (_EVP_OpenInit__bn - 4344))(_EVP_OpenInit__bn, _EVP_OpenInit_ctx, _EVP_OpenInit_type, _EVP_OpenInit_ek, _EVP_OpenInit_ekl, _EVP_OpenInit_iv, _EVP_OpenInit_priv); \
});})

#define EVP_OpenFinal(ctx, out, outl) ({ \
  EVP_CIPHER_CTX * _EVP_OpenFinal_ctx = (ctx); \
  unsigned char * _EVP_OpenFinal_out = (out); \
  int * _EVP_OpenFinal_outl = (outl); \
  ({ \
  register char * _EVP_OpenFinal__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), EVP_CIPHER_CTX * __asm("a0"), unsigned char * __asm("a1"), int * __asm("a2"))) \
  (_EVP_OpenFinal__bn - 4350))(_EVP_OpenFinal__bn, _EVP_OpenFinal_ctx, _EVP_OpenFinal_out, _EVP_OpenFinal_outl); \
});})

#define EVP_SealInit(ctx, type, ek, ekl, iv, pubk, npubk) ({ \
  EVP_CIPHER_CTX * _EVP_SealInit_ctx = (ctx); \
  const EVP_CIPHER * _EVP_SealInit_type = (type); \
  unsigned char ** _EVP_SealInit_ek = (ek); \
  int * _EVP_SealInit_ekl = (ekl); \
  unsigned char * _EVP_SealInit_iv = (iv); \
  EVP_PKEY ** _EVP_SealInit_pubk = (pubk); \
  LONG _EVP_SealInit_npubk = (npubk); \
  ({ \
  register char * _EVP_SealInit__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), EVP_CIPHER_CTX * __asm("a0"), const EVP_CIPHER * __asm("a1"), unsigned char ** __asm("a2"), int * __asm("a3"), unsigned char * __asm("d0"), EVP_PKEY ** __asm("d1"), LONG __asm("d2"))) \
  (_EVP_SealInit__bn - 4356))(_EVP_SealInit__bn, _EVP_SealInit_ctx, _EVP_SealInit_type, _EVP_SealInit_ek, _EVP_SealInit_ekl, _EVP_SealInit_iv, _EVP_SealInit_pubk, _EVP_SealInit_npubk); \
});})

#define EVP_SealFinal(ctx, out, outl) ({ \
  EVP_CIPHER_CTX * _EVP_SealFinal_ctx = (ctx); \
  unsigned char * _EVP_SealFinal_out = (out); \
  int * _EVP_SealFinal_outl = (outl); \
  ({ \
  register char * _EVP_SealFinal__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), EVP_CIPHER_CTX * __asm("a0"), unsigned char * __asm("a1"), int * __asm("a2"))) \
  (_EVP_SealFinal__bn - 4362))(_EVP_SealFinal__bn, _EVP_SealFinal_ctx, _EVP_SealFinal_out, _EVP_SealFinal_outl); \
});})

#define EVP_EncodeInit(ctx) ({ \
  EVP_ENCODE_CTX * _EVP_EncodeInit_ctx = (ctx); \
  ({ \
  register char * _EVP_EncodeInit__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), EVP_ENCODE_CTX * __asm("a0"))) \
  (_EVP_EncodeInit__bn - 4368))(_EVP_EncodeInit__bn, _EVP_EncodeInit_ctx); \
});})

#define EVP_EncodeUpdate(ctx, out, outl, in, inl) ({ \
  EVP_ENCODE_CTX * _EVP_EncodeUpdate_ctx = (ctx); \
  unsigned char * _EVP_EncodeUpdate_out = (out); \
  int * _EVP_EncodeUpdate_outl = (outl); \
  unsigned char * _EVP_EncodeUpdate_in = (in); \
  LONG _EVP_EncodeUpdate_inl = (inl); \
  ({ \
  register char * _EVP_EncodeUpdate__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), EVP_ENCODE_CTX * __asm("a0"), unsigned char * __asm("a1"), int * __asm("a2"), unsigned char * __asm("a3"), LONG __asm("d0"))) \
  (_EVP_EncodeUpdate__bn - 4374))(_EVP_EncodeUpdate__bn, _EVP_EncodeUpdate_ctx, _EVP_EncodeUpdate_out, _EVP_EncodeUpdate_outl, _EVP_EncodeUpdate_in, _EVP_EncodeUpdate_inl); \
});})

#define EVP_EncodeFinal(ctx, out, outl) ({ \
  EVP_ENCODE_CTX * _EVP_EncodeFinal_ctx = (ctx); \
  unsigned char * _EVP_EncodeFinal_out = (out); \
  int * _EVP_EncodeFinal_outl = (outl); \
  ({ \
  register char * _EVP_EncodeFinal__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), EVP_ENCODE_CTX * __asm("a0"), unsigned char * __asm("a1"), int * __asm("a2"))) \
  (_EVP_EncodeFinal__bn - 4380))(_EVP_EncodeFinal__bn, _EVP_EncodeFinal_ctx, _EVP_EncodeFinal_out, _EVP_EncodeFinal_outl); \
});})

#define EVP_EncodeBlock(t, f, n) ({ \
  unsigned char * _EVP_EncodeBlock_t = (t); \
  const unsigned char * _EVP_EncodeBlock_f = (f); \
  LONG _EVP_EncodeBlock_n = (n); \
  ({ \
  register char * _EVP_EncodeBlock__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), unsigned char * __asm("a0"), const unsigned char * __asm("a1"), LONG __asm("d0"))) \
  (_EVP_EncodeBlock__bn - 4386))(_EVP_EncodeBlock__bn, _EVP_EncodeBlock_t, _EVP_EncodeBlock_f, _EVP_EncodeBlock_n); \
});})

#define EVP_DecodeInit(ctx) ({ \
  EVP_ENCODE_CTX * _EVP_DecodeInit_ctx = (ctx); \
  ({ \
  register char * _EVP_DecodeInit__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), EVP_ENCODE_CTX * __asm("a0"))) \
  (_EVP_DecodeInit__bn - 4392))(_EVP_DecodeInit__bn, _EVP_DecodeInit_ctx); \
});})

#define EVP_DecodeUpdate(ctx, out, outl, in, inl) ({ \
  EVP_ENCODE_CTX * _EVP_DecodeUpdate_ctx = (ctx); \
  unsigned char * _EVP_DecodeUpdate_out = (out); \
  int * _EVP_DecodeUpdate_outl = (outl); \
  unsigned char * _EVP_DecodeUpdate_in = (in); \
  LONG _EVP_DecodeUpdate_inl = (inl); \
  ({ \
  register char * _EVP_DecodeUpdate__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), EVP_ENCODE_CTX * __asm("a0"), unsigned char * __asm("a1"), int * __asm("a2"), unsigned char * __asm("a3"), LONG __asm("d0"))) \
  (_EVP_DecodeUpdate__bn - 4398))(_EVP_DecodeUpdate__bn, _EVP_DecodeUpdate_ctx, _EVP_DecodeUpdate_out, _EVP_DecodeUpdate_outl, _EVP_DecodeUpdate_in, _EVP_DecodeUpdate_inl); \
});})

#define EVP_DecodeFinal(ctx, out, outl) ({ \
  EVP_ENCODE_CTX * _EVP_DecodeFinal_ctx = (ctx); \
  unsigned char * _EVP_DecodeFinal_out = (out); \
  int * _EVP_DecodeFinal_outl = (outl); \
  ({ \
  register char * _EVP_DecodeFinal__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), EVP_ENCODE_CTX * __asm("a0"), unsigned char * __asm("a1"), int * __asm("a2"))) \
  (_EVP_DecodeFinal__bn - 4404))(_EVP_DecodeFinal__bn, _EVP_DecodeFinal_ctx, _EVP_DecodeFinal_out, _EVP_DecodeFinal_outl); \
});})

#define EVP_DecodeBlock(t, f, n) ({ \
  unsigned char * _EVP_DecodeBlock_t = (t); \
  const unsigned char * _EVP_DecodeBlock_f = (f); \
  LONG _EVP_DecodeBlock_n = (n); \
  ({ \
  register char * _EVP_DecodeBlock__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), unsigned char * __asm("a0"), const unsigned char * __asm("a1"), LONG __asm("d0"))) \
  (_EVP_DecodeBlock__bn - 4410))(_EVP_DecodeBlock__bn, _EVP_DecodeBlock_t, _EVP_DecodeBlock_f, _EVP_DecodeBlock_n); \
});})

#define EVP_CIPHER_CTX_init(a) ({ \
  EVP_CIPHER_CTX * _EVP_CIPHER_CTX_init_a = (a); \
  ({ \
  register char * _EVP_CIPHER_CTX_init__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), EVP_CIPHER_CTX * __asm("a0"))) \
  (_EVP_CIPHER_CTX_init__bn - 4416))(_EVP_CIPHER_CTX_init__bn, _EVP_CIPHER_CTX_init_a); \
});})

#define EVP_CIPHER_CTX_cleanup(a) ({ \
  EVP_CIPHER_CTX * _EVP_CIPHER_CTX_cleanup_a = (a); \
  ({ \
  register char * _EVP_CIPHER_CTX_cleanup__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), EVP_CIPHER_CTX * __asm("a0"))) \
  (_EVP_CIPHER_CTX_cleanup__bn - 4422))(_EVP_CIPHER_CTX_cleanup__bn, _EVP_CIPHER_CTX_cleanup_a); \
});})

#define EVP_CIPHER_CTX_set_key_length(x, keylen) ({ \
  EVP_CIPHER_CTX * _EVP_CIPHER_CTX_set_key_length_x = (x); \
  LONG _EVP_CIPHER_CTX_set_key_length_keylen = (keylen); \
  ({ \
  register char * _EVP_CIPHER_CTX_set_key_length__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), EVP_CIPHER_CTX * __asm("a0"), LONG __asm("d0"))) \
  (_EVP_CIPHER_CTX_set_key_length__bn - 4428))(_EVP_CIPHER_CTX_set_key_length__bn, _EVP_CIPHER_CTX_set_key_length_x, _EVP_CIPHER_CTX_set_key_length_keylen); \
});})

#define EVP_CIPHER_CTX_set_padding(c, pad) ({ \
  EVP_CIPHER_CTX * _EVP_CIPHER_CTX_set_padding_c = (c); \
  LONG _EVP_CIPHER_CTX_set_padding_pad = (pad); \
  ({ \
  register char * _EVP_CIPHER_CTX_set_padding__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), EVP_CIPHER_CTX * __asm("a0"), LONG __asm("d0"))) \
  (_EVP_CIPHER_CTX_set_padding__bn - 4434))(_EVP_CIPHER_CTX_set_padding__bn, _EVP_CIPHER_CTX_set_padding_c, _EVP_CIPHER_CTX_set_padding_pad); \
});})

#define EVP_CIPHER_CTX_ctrl(ctx, type, arg, ptr) ({ \
  EVP_CIPHER_CTX * _EVP_CIPHER_CTX_ctrl_ctx = (ctx); \
  LONG _EVP_CIPHER_CTX_ctrl_type = (type); \
  LONG _EVP_CIPHER_CTX_ctrl_arg = (arg); \
  void * _EVP_CIPHER_CTX_ctrl_ptr = (ptr); \
  ({ \
  register char * _EVP_CIPHER_CTX_ctrl__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), EVP_CIPHER_CTX * __asm("a0"), LONG __asm("d0"), LONG __asm("d1"), void * __asm("a1"))) \
  (_EVP_CIPHER_CTX_ctrl__bn - 4440))(_EVP_CIPHER_CTX_ctrl__bn, _EVP_CIPHER_CTX_ctrl_ctx, _EVP_CIPHER_CTX_ctrl_type, _EVP_CIPHER_CTX_ctrl_arg, _EVP_CIPHER_CTX_ctrl_ptr); \
});})

#define BIO_f_md() ({ \
  register char * _BIO_f_md__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((BIO_METHOD * (*)(char * __asm("a6"))) \
  (_BIO_f_md__bn - 4446))(_BIO_f_md__bn); \
})

#define BIO_f_base64() ({ \
  register char * _BIO_f_base64__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((BIO_METHOD * (*)(char * __asm("a6"))) \
  (_BIO_f_base64__bn - 4452))(_BIO_f_base64__bn); \
})

#define BIO_f_cipher() ({ \
  register char * _BIO_f_cipher__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((BIO_METHOD * (*)(char * __asm("a6"))) \
  (_BIO_f_cipher__bn - 4458))(_BIO_f_cipher__bn); \
})

#define BIO_f_reliable() ({ \
  register char * _BIO_f_reliable__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((BIO_METHOD * (*)(char * __asm("a6"))) \
  (_BIO_f_reliable__bn - 4464))(_BIO_f_reliable__bn); \
})

#define BIO_set_cipher(b, c, k, i, enc) ({ \
  BIO * _BIO_set_cipher_b = (b); \
  const EVP_CIPHER * _BIO_set_cipher_c = (c); \
  unsigned char * _BIO_set_cipher_k = (k); \
  unsigned char * _BIO_set_cipher_i = (i); \
  LONG _BIO_set_cipher_enc = (enc); \
  ({ \
  register char * _BIO_set_cipher__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), BIO * __asm("a0"), const EVP_CIPHER * __asm("a1"), unsigned char * __asm("a2"), unsigned char * __asm("a3"), LONG __asm("d0"))) \
  (_BIO_set_cipher__bn - 4470))(_BIO_set_cipher__bn, _BIO_set_cipher_b, _BIO_set_cipher_c, _BIO_set_cipher_k, _BIO_set_cipher_i, _BIO_set_cipher_enc); \
});})

#define EVP_md_null() ({ \
  register char * _EVP_md_null__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const EVP_MD * (*)(char * __asm("a6"))) \
  (_EVP_md_null__bn - 4476))(_EVP_md_null__bn); \
})

#define EVP_md2() ({ \
  register char * _EVP_md2__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const EVP_MD * (*)(char * __asm("a6"))) \
  (_EVP_md2__bn - 4482))(_EVP_md2__bn); \
})

#define EVP_md4() ({ \
  register char * _EVP_md4__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const EVP_MD * (*)(char * __asm("a6"))) \
  (_EVP_md4__bn - 4488))(_EVP_md4__bn); \
})

#define EVP_md5() ({ \
  register char * _EVP_md5__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const EVP_MD * (*)(char * __asm("a6"))) \
  (_EVP_md5__bn - 4494))(_EVP_md5__bn); \
})

#define EVP_sha() ({ \
  register char * _EVP_sha__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const EVP_MD * (*)(char * __asm("a6"))) \
  (_EVP_sha__bn - 4500))(_EVP_sha__bn); \
})

#define EVP_sha1() ({ \
  register char * _EVP_sha1__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const EVP_MD * (*)(char * __asm("a6"))) \
  (_EVP_sha1__bn - 4506))(_EVP_sha1__bn); \
})

#define EVP_dss() ({ \
  register char * _EVP_dss__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const EVP_MD * (*)(char * __asm("a6"))) \
  (_EVP_dss__bn - 4512))(_EVP_dss__bn); \
})

#define EVP_dss1() ({ \
  register char * _EVP_dss1__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const EVP_MD * (*)(char * __asm("a6"))) \
  (_EVP_dss1__bn - 4518))(_EVP_dss1__bn); \
})

#define EVP_mdc2() ({ \
  register char * _EVP_mdc2__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const EVP_MD * (*)(char * __asm("a6"))) \
  (_EVP_mdc2__bn - 4524))(_EVP_mdc2__bn); \
})

#define EVP_ripemd160() ({ \
  register char * _EVP_ripemd160__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const EVP_MD * (*)(char * __asm("a6"))) \
  (_EVP_ripemd160__bn - 4530))(_EVP_ripemd160__bn); \
})

#define EVP_enc_null() ({ \
  register char * _EVP_enc_null__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const EVP_CIPHER * (*)(char * __asm("a6"))) \
  (_EVP_enc_null__bn - 4536))(_EVP_enc_null__bn); \
})

#define EVP_des_ecb() ({ \
  register char * _EVP_des_ecb__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const EVP_CIPHER * (*)(char * __asm("a6"))) \
  (_EVP_des_ecb__bn - 4542))(_EVP_des_ecb__bn); \
})

#define EVP_des_ede() ({ \
  register char * _EVP_des_ede__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const EVP_CIPHER * (*)(char * __asm("a6"))) \
  (_EVP_des_ede__bn - 4548))(_EVP_des_ede__bn); \
})

#define EVP_des_ede3() ({ \
  register char * _EVP_des_ede3__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const EVP_CIPHER * (*)(char * __asm("a6"))) \
  (_EVP_des_ede3__bn - 4554))(_EVP_des_ede3__bn); \
})

#define EVP_des_ede_ecb() ({ \
  register char * _EVP_des_ede_ecb__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const EVP_CIPHER * (*)(char * __asm("a6"))) \
  (_EVP_des_ede_ecb__bn - 4560))(_EVP_des_ede_ecb__bn); \
})

#define EVP_des_ede3_ecb() ({ \
  register char * _EVP_des_ede3_ecb__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const EVP_CIPHER * (*)(char * __asm("a6"))) \
  (_EVP_des_ede3_ecb__bn - 4566))(_EVP_des_ede3_ecb__bn); \
})

#define EVP_des_cfb64() ({ \
  register char * _EVP_des_cfb64__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const EVP_CIPHER * (*)(char * __asm("a6"))) \
  (_EVP_des_cfb64__bn - 4572))(_EVP_des_cfb64__bn); \
})

#define EVP_des_cfb1() ({ \
  register char * _EVP_des_cfb1__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const EVP_CIPHER * (*)(char * __asm("a6"))) \
  (_EVP_des_cfb1__bn - 4578))(_EVP_des_cfb1__bn); \
})

#define EVP_des_cfb8() ({ \
  register char * _EVP_des_cfb8__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const EVP_CIPHER * (*)(char * __asm("a6"))) \
  (_EVP_des_cfb8__bn - 4584))(_EVP_des_cfb8__bn); \
})

#define EVP_des_ede_cfb64() ({ \
  register char * _EVP_des_ede_cfb64__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const EVP_CIPHER * (*)(char * __asm("a6"))) \
  (_EVP_des_ede_cfb64__bn - 4590))(_EVP_des_ede_cfb64__bn); \
})

#define EVP_des_ede3_cfb64() ({ \
  register char * _EVP_des_ede3_cfb64__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const EVP_CIPHER * (*)(char * __asm("a6"))) \
  (_EVP_des_ede3_cfb64__bn - 4596))(_EVP_des_ede3_cfb64__bn); \
})

#define EVP_des_ede3_cfb1() ({ \
  register char * _EVP_des_ede3_cfb1__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const EVP_CIPHER * (*)(char * __asm("a6"))) \
  (_EVP_des_ede3_cfb1__bn - 4602))(_EVP_des_ede3_cfb1__bn); \
})

#define EVP_des_ede3_cfb8() ({ \
  register char * _EVP_des_ede3_cfb8__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const EVP_CIPHER * (*)(char * __asm("a6"))) \
  (_EVP_des_ede3_cfb8__bn - 4608))(_EVP_des_ede3_cfb8__bn); \
})

#define EVP_des_ofb() ({ \
  register char * _EVP_des_ofb__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const EVP_CIPHER * (*)(char * __asm("a6"))) \
  (_EVP_des_ofb__bn - 4614))(_EVP_des_ofb__bn); \
})

#define EVP_des_ede_ofb() ({ \
  register char * _EVP_des_ede_ofb__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const EVP_CIPHER * (*)(char * __asm("a6"))) \
  (_EVP_des_ede_ofb__bn - 4620))(_EVP_des_ede_ofb__bn); \
})

#define EVP_des_ede3_ofb() ({ \
  register char * _EVP_des_ede3_ofb__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const EVP_CIPHER * (*)(char * __asm("a6"))) \
  (_EVP_des_ede3_ofb__bn - 4626))(_EVP_des_ede3_ofb__bn); \
})

#define EVP_des_cbc() ({ \
  register char * _EVP_des_cbc__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const EVP_CIPHER * (*)(char * __asm("a6"))) \
  (_EVP_des_cbc__bn - 4632))(_EVP_des_cbc__bn); \
})

#define EVP_des_ede_cbc() ({ \
  register char * _EVP_des_ede_cbc__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const EVP_CIPHER * (*)(char * __asm("a6"))) \
  (_EVP_des_ede_cbc__bn - 4638))(_EVP_des_ede_cbc__bn); \
})

#define EVP_des_ede3_cbc() ({ \
  register char * _EVP_des_ede3_cbc__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const EVP_CIPHER * (*)(char * __asm("a6"))) \
  (_EVP_des_ede3_cbc__bn - 4644))(_EVP_des_ede3_cbc__bn); \
})

#define EVP_desx_cbc() ({ \
  register char * _EVP_desx_cbc__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const EVP_CIPHER * (*)(char * __asm("a6"))) \
  (_EVP_desx_cbc__bn - 4650))(_EVP_desx_cbc__bn); \
})

#define EVP_rc4() ({ \
  register char * _EVP_rc4__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const EVP_CIPHER * (*)(char * __asm("a6"))) \
  (_EVP_rc4__bn - 4656))(_EVP_rc4__bn); \
})

#define EVP_rc4_40() ({ \
  register char * _EVP_rc4_40__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const EVP_CIPHER * (*)(char * __asm("a6"))) \
  (_EVP_rc4_40__bn - 4662))(_EVP_rc4_40__bn); \
})

#define EVP_idea_ecb() ({ \
  register char * _EVP_idea_ecb__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const EVP_CIPHER * (*)(char * __asm("a6"))) \
  (_EVP_idea_ecb__bn - 4668))(_EVP_idea_ecb__bn); \
})

#define EVP_idea_cfb64() ({ \
  register char * _EVP_idea_cfb64__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const EVP_CIPHER * (*)(char * __asm("a6"))) \
  (_EVP_idea_cfb64__bn - 4674))(_EVP_idea_cfb64__bn); \
})

#define EVP_idea_ofb() ({ \
  register char * _EVP_idea_ofb__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const EVP_CIPHER * (*)(char * __asm("a6"))) \
  (_EVP_idea_ofb__bn - 4680))(_EVP_idea_ofb__bn); \
})

#define EVP_idea_cbc() ({ \
  register char * _EVP_idea_cbc__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const EVP_CIPHER * (*)(char * __asm("a6"))) \
  (_EVP_idea_cbc__bn - 4686))(_EVP_idea_cbc__bn); \
})

#define EVP_rc2_ecb() ({ \
  register char * _EVP_rc2_ecb__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const EVP_CIPHER * (*)(char * __asm("a6"))) \
  (_EVP_rc2_ecb__bn - 4692))(_EVP_rc2_ecb__bn); \
})

#define EVP_rc2_cbc() ({ \
  register char * _EVP_rc2_cbc__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const EVP_CIPHER * (*)(char * __asm("a6"))) \
  (_EVP_rc2_cbc__bn - 4698))(_EVP_rc2_cbc__bn); \
})

#define EVP_rc2_40_cbc() ({ \
  register char * _EVP_rc2_40_cbc__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const EVP_CIPHER * (*)(char * __asm("a6"))) \
  (_EVP_rc2_40_cbc__bn - 4704))(_EVP_rc2_40_cbc__bn); \
})

#define EVP_rc2_64_cbc() ({ \
  register char * _EVP_rc2_64_cbc__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const EVP_CIPHER * (*)(char * __asm("a6"))) \
  (_EVP_rc2_64_cbc__bn - 4710))(_EVP_rc2_64_cbc__bn); \
})

#define EVP_rc2_cfb64() ({ \
  register char * _EVP_rc2_cfb64__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const EVP_CIPHER * (*)(char * __asm("a6"))) \
  (_EVP_rc2_cfb64__bn - 4716))(_EVP_rc2_cfb64__bn); \
})

#define EVP_rc2_ofb() ({ \
  register char * _EVP_rc2_ofb__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const EVP_CIPHER * (*)(char * __asm("a6"))) \
  (_EVP_rc2_ofb__bn - 4722))(_EVP_rc2_ofb__bn); \
})

#define EVP_bf_ecb() ({ \
  register char * _EVP_bf_ecb__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const EVP_CIPHER * (*)(char * __asm("a6"))) \
  (_EVP_bf_ecb__bn - 4728))(_EVP_bf_ecb__bn); \
})

#define EVP_bf_cbc() ({ \
  register char * _EVP_bf_cbc__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const EVP_CIPHER * (*)(char * __asm("a6"))) \
  (_EVP_bf_cbc__bn - 4734))(_EVP_bf_cbc__bn); \
})

#define EVP_bf_cfb64() ({ \
  register char * _EVP_bf_cfb64__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const EVP_CIPHER * (*)(char * __asm("a6"))) \
  (_EVP_bf_cfb64__bn - 4740))(_EVP_bf_cfb64__bn); \
})

#define EVP_bf_ofb() ({ \
  register char * _EVP_bf_ofb__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const EVP_CIPHER * (*)(char * __asm("a6"))) \
  (_EVP_bf_ofb__bn - 4746))(_EVP_bf_ofb__bn); \
})

#define EVP_cast5_ecb() ({ \
  register char * _EVP_cast5_ecb__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const EVP_CIPHER * (*)(char * __asm("a6"))) \
  (_EVP_cast5_ecb__bn - 4752))(_EVP_cast5_ecb__bn); \
})

#define EVP_cast5_cbc() ({ \
  register char * _EVP_cast5_cbc__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const EVP_CIPHER * (*)(char * __asm("a6"))) \
  (_EVP_cast5_cbc__bn - 4758))(_EVP_cast5_cbc__bn); \
})

#define EVP_cast5_cfb64() ({ \
  register char * _EVP_cast5_cfb64__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const EVP_CIPHER * (*)(char * __asm("a6"))) \
  (_EVP_cast5_cfb64__bn - 4764))(_EVP_cast5_cfb64__bn); \
})

#define EVP_cast5_ofb() ({ \
  register char * _EVP_cast5_ofb__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const EVP_CIPHER * (*)(char * __asm("a6"))) \
  (_EVP_cast5_ofb__bn - 4770))(_EVP_cast5_ofb__bn); \
})

#define EVP_rc5_32_12_16_cbc() ({ \
  register char * _EVP_rc5_32_12_16_cbc__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const EVP_CIPHER * (*)(char * __asm("a6"))) \
  (_EVP_rc5_32_12_16_cbc__bn - 4776))(_EVP_rc5_32_12_16_cbc__bn); \
})

#define EVP_rc5_32_12_16_ecb() ({ \
  register char * _EVP_rc5_32_12_16_ecb__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const EVP_CIPHER * (*)(char * __asm("a6"))) \
  (_EVP_rc5_32_12_16_ecb__bn - 4782))(_EVP_rc5_32_12_16_ecb__bn); \
})

#define EVP_rc5_32_12_16_cfb64() ({ \
  register char * _EVP_rc5_32_12_16_cfb64__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const EVP_CIPHER * (*)(char * __asm("a6"))) \
  (_EVP_rc5_32_12_16_cfb64__bn - 4788))(_EVP_rc5_32_12_16_cfb64__bn); \
})

#define EVP_rc5_32_12_16_ofb() ({ \
  register char * _EVP_rc5_32_12_16_ofb__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const EVP_CIPHER * (*)(char * __asm("a6"))) \
  (_EVP_rc5_32_12_16_ofb__bn - 4794))(_EVP_rc5_32_12_16_ofb__bn); \
})

#define EVP_aes_128_ecb() ({ \
  register char * _EVP_aes_128_ecb__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const EVP_CIPHER * (*)(char * __asm("a6"))) \
  (_EVP_aes_128_ecb__bn - 4800))(_EVP_aes_128_ecb__bn); \
})

#define EVP_aes_128_cbc() ({ \
  register char * _EVP_aes_128_cbc__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const EVP_CIPHER * (*)(char * __asm("a6"))) \
  (_EVP_aes_128_cbc__bn - 4806))(_EVP_aes_128_cbc__bn); \
})

#define EVP_aes_128_cfb1() ({ \
  register char * _EVP_aes_128_cfb1__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const EVP_CIPHER * (*)(char * __asm("a6"))) \
  (_EVP_aes_128_cfb1__bn - 4812))(_EVP_aes_128_cfb1__bn); \
})

#define EVP_aes_128_cfb8() ({ \
  register char * _EVP_aes_128_cfb8__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const EVP_CIPHER * (*)(char * __asm("a6"))) \
  (_EVP_aes_128_cfb8__bn - 4818))(_EVP_aes_128_cfb8__bn); \
})

#define EVP_aes_128_cfb128() ({ \
  register char * _EVP_aes_128_cfb128__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const EVP_CIPHER * (*)(char * __asm("a6"))) \
  (_EVP_aes_128_cfb128__bn - 4824))(_EVP_aes_128_cfb128__bn); \
})

#define EVP_aes_128_ofb() ({ \
  register char * _EVP_aes_128_ofb__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const EVP_CIPHER * (*)(char * __asm("a6"))) \
  (_EVP_aes_128_ofb__bn - 4830))(_EVP_aes_128_ofb__bn); \
})

#define EVP_aes_192_ecb() ({ \
  register char * _EVP_aes_192_ecb__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const EVP_CIPHER * (*)(char * __asm("a6"))) \
  (_EVP_aes_192_ecb__bn - 4836))(_EVP_aes_192_ecb__bn); \
})

#define EVP_aes_192_cbc() ({ \
  register char * _EVP_aes_192_cbc__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const EVP_CIPHER * (*)(char * __asm("a6"))) \
  (_EVP_aes_192_cbc__bn - 4842))(_EVP_aes_192_cbc__bn); \
})

#define EVP_aes_192_cfb1() ({ \
  register char * _EVP_aes_192_cfb1__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const EVP_CIPHER * (*)(char * __asm("a6"))) \
  (_EVP_aes_192_cfb1__bn - 4848))(_EVP_aes_192_cfb1__bn); \
})

#define EVP_aes_192_cfb8() ({ \
  register char * _EVP_aes_192_cfb8__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const EVP_CIPHER * (*)(char * __asm("a6"))) \
  (_EVP_aes_192_cfb8__bn - 4854))(_EVP_aes_192_cfb8__bn); \
})

#define EVP_aes_192_cfb128() ({ \
  register char * _EVP_aes_192_cfb128__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const EVP_CIPHER * (*)(char * __asm("a6"))) \
  (_EVP_aes_192_cfb128__bn - 4860))(_EVP_aes_192_cfb128__bn); \
})

#define EVP_aes_192_ofb() ({ \
  register char * _EVP_aes_192_ofb__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const EVP_CIPHER * (*)(char * __asm("a6"))) \
  (_EVP_aes_192_ofb__bn - 4866))(_EVP_aes_192_ofb__bn); \
})

#define EVP_aes_256_ecb() ({ \
  register char * _EVP_aes_256_ecb__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const EVP_CIPHER * (*)(char * __asm("a6"))) \
  (_EVP_aes_256_ecb__bn - 4872))(_EVP_aes_256_ecb__bn); \
})

#define EVP_aes_256_cbc() ({ \
  register char * _EVP_aes_256_cbc__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const EVP_CIPHER * (*)(char * __asm("a6"))) \
  (_EVP_aes_256_cbc__bn - 4878))(_EVP_aes_256_cbc__bn); \
})

#define EVP_aes_256_cfb1() ({ \
  register char * _EVP_aes_256_cfb1__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const EVP_CIPHER * (*)(char * __asm("a6"))) \
  (_EVP_aes_256_cfb1__bn - 4884))(_EVP_aes_256_cfb1__bn); \
})

#define EVP_aes_256_cfb8() ({ \
  register char * _EVP_aes_256_cfb8__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const EVP_CIPHER * (*)(char * __asm("a6"))) \
  (_EVP_aes_256_cfb8__bn - 4890))(_EVP_aes_256_cfb8__bn); \
})

#define EVP_aes_256_cfb128() ({ \
  register char * _EVP_aes_256_cfb128__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const EVP_CIPHER * (*)(char * __asm("a6"))) \
  (_EVP_aes_256_cfb128__bn - 4896))(_EVP_aes_256_cfb128__bn); \
})

#define EVP_aes_256_ofb() ({ \
  register char * _EVP_aes_256_ofb__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const EVP_CIPHER * (*)(char * __asm("a6"))) \
  (_EVP_aes_256_ofb__bn - 4902))(_EVP_aes_256_ofb__bn); \
})

#define OPENSSL_add_all_algorithms_noconf() ({ \
  register char * _OPENSSL_add_all_algorithms_noconf__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"))) \
  (_OPENSSL_add_all_algorithms_noconf__bn - 4908))(_OPENSSL_add_all_algorithms_noconf__bn); \
})

#define OPENSSL_add_all_algorithms_conf() ({ \
  register char * _OPENSSL_add_all_algorithms_conf__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"))) \
  (_OPENSSL_add_all_algorithms_conf__bn - 4914))(_OPENSSL_add_all_algorithms_conf__bn); \
})

#define OpenSSL_add_all_ciphers() ({ \
  register char * _OpenSSL_add_all_ciphers__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"))) \
  (_OpenSSL_add_all_ciphers__bn - 4920))(_OpenSSL_add_all_ciphers__bn); \
})

#define OpenSSL_add_all_digests() ({ \
  register char * _OpenSSL_add_all_digests__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"))) \
  (_OpenSSL_add_all_digests__bn - 4926))(_OpenSSL_add_all_digests__bn); \
})

#define EVP_add_cipher(cipher) ({ \
  const EVP_CIPHER * _EVP_add_cipher_cipher = (cipher); \
  ({ \
  register char * _EVP_add_cipher__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const EVP_CIPHER * __asm("a0"))) \
  (_EVP_add_cipher__bn - 4932))(_EVP_add_cipher__bn, _EVP_add_cipher_cipher); \
});})

#define EVP_add_digest(digest) ({ \
  const EVP_MD * _EVP_add_digest_digest = (digest); \
  ({ \
  register char * _EVP_add_digest__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const EVP_MD * __asm("a0"))) \
  (_EVP_add_digest__bn - 4938))(_EVP_add_digest__bn, _EVP_add_digest_digest); \
});})

#define EVP_get_cipherbyname(name) ({ \
  const char * _EVP_get_cipherbyname_name = (name); \
  ({ \
  register char * _EVP_get_cipherbyname__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const EVP_CIPHER * (*)(char * __asm("a6"), const char * __asm("a0"))) \
  (_EVP_get_cipherbyname__bn - 4944))(_EVP_get_cipherbyname__bn, _EVP_get_cipherbyname_name); \
});})

#define EVP_get_digestbyname(name) ({ \
  const char * _EVP_get_digestbyname_name = (name); \
  ({ \
  register char * _EVP_get_digestbyname__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const EVP_MD * (*)(char * __asm("a6"), const char * __asm("a0"))) \
  (_EVP_get_digestbyname__bn - 4950))(_EVP_get_digestbyname__bn, _EVP_get_digestbyname_name); \
});})

#define EVP_cleanup() ({ \
  register char * _EVP_cleanup__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"))) \
  (_EVP_cleanup__bn - 4956))(_EVP_cleanup__bn); \
})

#define EVP_PKEY_decrypt(dec_key, enc_key, enc_key_len, private_key) ({ \
  unsigned char * _EVP_PKEY_decrypt_dec_key = (dec_key); \
  unsigned char * _EVP_PKEY_decrypt_enc_key = (enc_key); \
  LONG _EVP_PKEY_decrypt_enc_key_len = (enc_key_len); \
  EVP_PKEY * _EVP_PKEY_decrypt_private_key = (private_key); \
  ({ \
  register char * _EVP_PKEY_decrypt__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), unsigned char * __asm("a0"), unsigned char * __asm("a1"), LONG __asm("d0"), EVP_PKEY * __asm("a2"))) \
  (_EVP_PKEY_decrypt__bn - 4962))(_EVP_PKEY_decrypt__bn, _EVP_PKEY_decrypt_dec_key, _EVP_PKEY_decrypt_enc_key, _EVP_PKEY_decrypt_enc_key_len, _EVP_PKEY_decrypt_private_key); \
});})

#define EVP_PKEY_encrypt(enc_key, key, key_len, pub_key) ({ \
  unsigned char * _EVP_PKEY_encrypt_enc_key = (enc_key); \
  unsigned char * _EVP_PKEY_encrypt_key = (key); \
  LONG _EVP_PKEY_encrypt_key_len = (key_len); \
  EVP_PKEY * _EVP_PKEY_encrypt_pub_key = (pub_key); \
  ({ \
  register char * _EVP_PKEY_encrypt__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), unsigned char * __asm("a0"), unsigned char * __asm("a1"), LONG __asm("d0"), EVP_PKEY * __asm("a2"))) \
  (_EVP_PKEY_encrypt__bn - 4968))(_EVP_PKEY_encrypt__bn, _EVP_PKEY_encrypt_enc_key, _EVP_PKEY_encrypt_key, _EVP_PKEY_encrypt_key_len, _EVP_PKEY_encrypt_pub_key); \
});})

#define EVP_PKEY_type(type) ({ \
  LONG _EVP_PKEY_type_type = (type); \
  ({ \
  register char * _EVP_PKEY_type__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), LONG __asm("d0"))) \
  (_EVP_PKEY_type__bn - 4974))(_EVP_PKEY_type__bn, _EVP_PKEY_type_type); \
});})

#define EVP_PKEY_bits(pkey) ({ \
  EVP_PKEY * _EVP_PKEY_bits_pkey = (pkey); \
  ({ \
  register char * _EVP_PKEY_bits__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), EVP_PKEY * __asm("a0"))) \
  (_EVP_PKEY_bits__bn - 4980))(_EVP_PKEY_bits__bn, _EVP_PKEY_bits_pkey); \
});})

#define EVP_PKEY_size(pkey) ({ \
  EVP_PKEY * _EVP_PKEY_size_pkey = (pkey); \
  ({ \
  register char * _EVP_PKEY_size__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), EVP_PKEY * __asm("a0"))) \
  (_EVP_PKEY_size__bn - 4986))(_EVP_PKEY_size__bn, _EVP_PKEY_size_pkey); \
});})

#define EVP_PKEY_assign(pkey, type, key) ({ \
  EVP_PKEY * _EVP_PKEY_assign_pkey = (pkey); \
  LONG _EVP_PKEY_assign_type = (type); \
  char * _EVP_PKEY_assign_key = (key); \
  ({ \
  register char * _EVP_PKEY_assign__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), EVP_PKEY * __asm("a0"), LONG __asm("d0"), char * __asm("a1"))) \
  (_EVP_PKEY_assign__bn - 4992))(_EVP_PKEY_assign__bn, _EVP_PKEY_assign_pkey, _EVP_PKEY_assign_type, _EVP_PKEY_assign_key); \
});})

#define EVP_PKEY_set1_RSA(pkey, key) ({ \
  EVP_PKEY * _EVP_PKEY_set1_RSA_pkey = (pkey); \
  struct rsa_st * _EVP_PKEY_set1_RSA_key = (key); \
  ({ \
  register char * _EVP_PKEY_set1_RSA__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), EVP_PKEY * __asm("a0"), struct rsa_st * __asm("a1"))) \
  (_EVP_PKEY_set1_RSA__bn - 4998))(_EVP_PKEY_set1_RSA__bn, _EVP_PKEY_set1_RSA_pkey, _EVP_PKEY_set1_RSA_key); \
});})

#define EVP_PKEY_get1_RSA(pkey) ({ \
  EVP_PKEY * _EVP_PKEY_get1_RSA_pkey = (pkey); \
  ({ \
  register char * _EVP_PKEY_get1_RSA__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((struct rsa_st * (*)(char * __asm("a6"), EVP_PKEY * __asm("a0"))) \
  (_EVP_PKEY_get1_RSA__bn - 5004))(_EVP_PKEY_get1_RSA__bn, _EVP_PKEY_get1_RSA_pkey); \
});})

#define EVP_PKEY_set1_DSA(pkey, key) ({ \
  EVP_PKEY * _EVP_PKEY_set1_DSA_pkey = (pkey); \
  struct dsa_st * _EVP_PKEY_set1_DSA_key = (key); \
  ({ \
  register char * _EVP_PKEY_set1_DSA__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), EVP_PKEY * __asm("a0"), struct dsa_st * __asm("a1"))) \
  (_EVP_PKEY_set1_DSA__bn - 5010))(_EVP_PKEY_set1_DSA__bn, _EVP_PKEY_set1_DSA_pkey, _EVP_PKEY_set1_DSA_key); \
});})

#define EVP_PKEY_get1_DSA(pkey) ({ \
  EVP_PKEY * _EVP_PKEY_get1_DSA_pkey = (pkey); \
  ({ \
  register char * _EVP_PKEY_get1_DSA__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((struct dsa_st * (*)(char * __asm("a6"), EVP_PKEY * __asm("a0"))) \
  (_EVP_PKEY_get1_DSA__bn - 5016))(_EVP_PKEY_get1_DSA__bn, _EVP_PKEY_get1_DSA_pkey); \
});})

#define EVP_PKEY_set1_DH(pkey, key) ({ \
  EVP_PKEY * _EVP_PKEY_set1_DH_pkey = (pkey); \
  struct dh_st * _EVP_PKEY_set1_DH_key = (key); \
  ({ \
  register char * _EVP_PKEY_set1_DH__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), EVP_PKEY * __asm("a0"), struct dh_st * __asm("a1"))) \
  (_EVP_PKEY_set1_DH__bn - 5022))(_EVP_PKEY_set1_DH__bn, _EVP_PKEY_set1_DH_pkey, _EVP_PKEY_set1_DH_key); \
});})

#define EVP_PKEY_get1_DH(pkey) ({ \
  EVP_PKEY * _EVP_PKEY_get1_DH_pkey = (pkey); \
  ({ \
  register char * _EVP_PKEY_get1_DH__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((struct dh_st * (*)(char * __asm("a6"), EVP_PKEY * __asm("a0"))) \
  (_EVP_PKEY_get1_DH__bn - 5028))(_EVP_PKEY_get1_DH__bn, _EVP_PKEY_get1_DH_pkey); \
});})

#define EVP_PKEY_new() ({ \
  register char * _EVP_PKEY_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((EVP_PKEY * (*)(char * __asm("a6"))) \
  (_EVP_PKEY_new__bn - 5034))(_EVP_PKEY_new__bn); \
})

#define EVP_PKEY_free(pkey) ({ \
  EVP_PKEY * _EVP_PKEY_free_pkey = (pkey); \
  ({ \
  register char * _EVP_PKEY_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), EVP_PKEY * __asm("a0"))) \
  (_EVP_PKEY_free__bn - 5040))(_EVP_PKEY_free__bn, _EVP_PKEY_free_pkey); \
});})

#define d2i_PublicKey(type, a, pp, length) ({ \
  LONG _d2i_PublicKey_type = (type); \
  EVP_PKEY ** _d2i_PublicKey_a = (a); \
  unsigned char ** _d2i_PublicKey_pp = (pp); \
  long _d2i_PublicKey_length = (length); \
  ({ \
  register char * _d2i_PublicKey__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((EVP_PKEY * (*)(char * __asm("a6"), LONG __asm("d0"), EVP_PKEY ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d1"))) \
  (_d2i_PublicKey__bn - 5046))(_d2i_PublicKey__bn, _d2i_PublicKey_type, _d2i_PublicKey_a, _d2i_PublicKey_pp, _d2i_PublicKey_length); \
});})

#define i2d_PublicKey(a, pp) ({ \
  EVP_PKEY * _i2d_PublicKey_a = (a); \
  unsigned char ** _i2d_PublicKey_pp = (pp); \
  ({ \
  register char * _i2d_PublicKey__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), EVP_PKEY * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_PublicKey__bn - 5052))(_i2d_PublicKey__bn, _i2d_PublicKey_a, _i2d_PublicKey_pp); \
});})

#define d2i_PrivateKey(type, a, pp, length) ({ \
  LONG _d2i_PrivateKey_type = (type); \
  EVP_PKEY ** _d2i_PrivateKey_a = (a); \
  unsigned char ** _d2i_PrivateKey_pp = (pp); \
  long _d2i_PrivateKey_length = (length); \
  ({ \
  register char * _d2i_PrivateKey__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((EVP_PKEY * (*)(char * __asm("a6"), LONG __asm("d0"), EVP_PKEY ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d1"))) \
  (_d2i_PrivateKey__bn - 5058))(_d2i_PrivateKey__bn, _d2i_PrivateKey_type, _d2i_PrivateKey_a, _d2i_PrivateKey_pp, _d2i_PrivateKey_length); \
});})

#define d2i_AutoPrivateKey(a, pp, length) ({ \
  EVP_PKEY ** _d2i_AutoPrivateKey_a = (a); \
  unsigned char ** _d2i_AutoPrivateKey_pp = (pp); \
  long _d2i_AutoPrivateKey_length = (length); \
  ({ \
  register char * _d2i_AutoPrivateKey__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((EVP_PKEY * (*)(char * __asm("a6"), EVP_PKEY ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_AutoPrivateKey__bn - 5064))(_d2i_AutoPrivateKey__bn, _d2i_AutoPrivateKey_a, _d2i_AutoPrivateKey_pp, _d2i_AutoPrivateKey_length); \
});})

#define i2d_PrivateKey(a, pp) ({ \
  EVP_PKEY * _i2d_PrivateKey_a = (a); \
  unsigned char ** _i2d_PrivateKey_pp = (pp); \
  ({ \
  register char * _i2d_PrivateKey__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), EVP_PKEY * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_PrivateKey__bn - 5070))(_i2d_PrivateKey__bn, _i2d_PrivateKey_a, _i2d_PrivateKey_pp); \
});})

#define EVP_PKEY_copy_parameters(to, from) ({ \
  EVP_PKEY * _EVP_PKEY_copy_parameters_to = (to); \
  EVP_PKEY * _EVP_PKEY_copy_parameters_from = (from); \
  ({ \
  register char * _EVP_PKEY_copy_parameters__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), EVP_PKEY * __asm("a0"), EVP_PKEY * __asm("a1"))) \
  (_EVP_PKEY_copy_parameters__bn - 5076))(_EVP_PKEY_copy_parameters__bn, _EVP_PKEY_copy_parameters_to, _EVP_PKEY_copy_parameters_from); \
});})

#define EVP_PKEY_missing_parameters(pkey) ({ \
  EVP_PKEY * _EVP_PKEY_missing_parameters_pkey = (pkey); \
  ({ \
  register char * _EVP_PKEY_missing_parameters__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), EVP_PKEY * __asm("a0"))) \
  (_EVP_PKEY_missing_parameters__bn - 5082))(_EVP_PKEY_missing_parameters__bn, _EVP_PKEY_missing_parameters_pkey); \
});})

#define EVP_PKEY_save_parameters(pkey, mode) ({ \
  EVP_PKEY * _EVP_PKEY_save_parameters_pkey = (pkey); \
  LONG _EVP_PKEY_save_parameters_mode = (mode); \
  ({ \
  register char * _EVP_PKEY_save_parameters__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), EVP_PKEY * __asm("a0"), LONG __asm("d0"))) \
  (_EVP_PKEY_save_parameters__bn - 5088))(_EVP_PKEY_save_parameters__bn, _EVP_PKEY_save_parameters_pkey, _EVP_PKEY_save_parameters_mode); \
});})

#define EVP_PKEY_cmp_parameters(a, b) ({ \
  EVP_PKEY * _EVP_PKEY_cmp_parameters_a = (a); \
  EVP_PKEY * _EVP_PKEY_cmp_parameters_b = (b); \
  ({ \
  register char * _EVP_PKEY_cmp_parameters__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), EVP_PKEY * __asm("a0"), EVP_PKEY * __asm("a1"))) \
  (_EVP_PKEY_cmp_parameters__bn - 5094))(_EVP_PKEY_cmp_parameters__bn, _EVP_PKEY_cmp_parameters_a, _EVP_PKEY_cmp_parameters_b); \
});})

#define EVP_CIPHER_type(ctx) ({ \
  const EVP_CIPHER * _EVP_CIPHER_type_ctx = (ctx); \
  ({ \
  register char * _EVP_CIPHER_type__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const EVP_CIPHER * __asm("a0"))) \
  (_EVP_CIPHER_type__bn - 5100))(_EVP_CIPHER_type__bn, _EVP_CIPHER_type_ctx); \
});})

#define EVP_CIPHER_param_to_asn1(c, type) ({ \
  EVP_CIPHER_CTX * _EVP_CIPHER_param_to_asn1_c = (c); \
  ASN1_TYPE * _EVP_CIPHER_param_to_asn1_type = (type); \
  ({ \
  register char * _EVP_CIPHER_param_to_asn1__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), EVP_CIPHER_CTX * __asm("a0"), ASN1_TYPE * __asm("a1"))) \
  (_EVP_CIPHER_param_to_asn1__bn - 5106))(_EVP_CIPHER_param_to_asn1__bn, _EVP_CIPHER_param_to_asn1_c, _EVP_CIPHER_param_to_asn1_type); \
});})

#define EVP_CIPHER_asn1_to_param(c, type) ({ \
  EVP_CIPHER_CTX * _EVP_CIPHER_asn1_to_param_c = (c); \
  ASN1_TYPE * _EVP_CIPHER_asn1_to_param_type = (type); \
  ({ \
  register char * _EVP_CIPHER_asn1_to_param__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), EVP_CIPHER_CTX * __asm("a0"), ASN1_TYPE * __asm("a1"))) \
  (_EVP_CIPHER_asn1_to_param__bn - 5112))(_EVP_CIPHER_asn1_to_param__bn, _EVP_CIPHER_asn1_to_param_c, _EVP_CIPHER_asn1_to_param_type); \
});})

#define EVP_CIPHER_set_asn1_iv(c, type) ({ \
  EVP_CIPHER_CTX * _EVP_CIPHER_set_asn1_iv_c = (c); \
  ASN1_TYPE * _EVP_CIPHER_set_asn1_iv_type = (type); \
  ({ \
  register char * _EVP_CIPHER_set_asn1_iv__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), EVP_CIPHER_CTX * __asm("a0"), ASN1_TYPE * __asm("a1"))) \
  (_EVP_CIPHER_set_asn1_iv__bn - 5118))(_EVP_CIPHER_set_asn1_iv__bn, _EVP_CIPHER_set_asn1_iv_c, _EVP_CIPHER_set_asn1_iv_type); \
});})

#define EVP_CIPHER_get_asn1_iv(c, type) ({ \
  EVP_CIPHER_CTX * _EVP_CIPHER_get_asn1_iv_c = (c); \
  ASN1_TYPE * _EVP_CIPHER_get_asn1_iv_type = (type); \
  ({ \
  register char * _EVP_CIPHER_get_asn1_iv__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), EVP_CIPHER_CTX * __asm("a0"), ASN1_TYPE * __asm("a1"))) \
  (_EVP_CIPHER_get_asn1_iv__bn - 5124))(_EVP_CIPHER_get_asn1_iv__bn, _EVP_CIPHER_get_asn1_iv_c, _EVP_CIPHER_get_asn1_iv_type); \
});})

#define PKCS5_PBE_keyivgen(ctx, pass, passlen, param, cipher, md, en_de) ({ \
  EVP_CIPHER_CTX * _PKCS5_PBE_keyivgen_ctx = (ctx); \
  const char * _PKCS5_PBE_keyivgen_pass = (pass); \
  LONG _PKCS5_PBE_keyivgen_passlen = (passlen); \
  ASN1_TYPE * _PKCS5_PBE_keyivgen_param = (param); \
  const EVP_CIPHER * _PKCS5_PBE_keyivgen_cipher = (cipher); \
  const EVP_MD * _PKCS5_PBE_keyivgen_md = (md); \
  LONG _PKCS5_PBE_keyivgen_en_de = (en_de); \
  ({ \
  register char * _PKCS5_PBE_keyivgen__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), EVP_CIPHER_CTX * __asm("a0"), const char * __asm("a1"), LONG __asm("d0"), ASN1_TYPE * __asm("a2"), const EVP_CIPHER * __asm("a3"), const EVP_MD * __asm("d1"), LONG __asm("d2"))) \
  (_PKCS5_PBE_keyivgen__bn - 5130))(_PKCS5_PBE_keyivgen__bn, _PKCS5_PBE_keyivgen_ctx, _PKCS5_PBE_keyivgen_pass, _PKCS5_PBE_keyivgen_passlen, _PKCS5_PBE_keyivgen_param, _PKCS5_PBE_keyivgen_cipher, _PKCS5_PBE_keyivgen_md, _PKCS5_PBE_keyivgen_en_de); \
});})

#define PKCS5_PBKDF2_HMAC_SHA1(pass, passlen, salt, saltlen, iter, keylen, out) ({ \
  const char * _PKCS5_PBKDF2_HMAC_SHA1_pass = (pass); \
  LONG _PKCS5_PBKDF2_HMAC_SHA1_passlen = (passlen); \
  unsigned char * _PKCS5_PBKDF2_HMAC_SHA1_salt = (salt); \
  LONG _PKCS5_PBKDF2_HMAC_SHA1_saltlen = (saltlen); \
  LONG _PKCS5_PBKDF2_HMAC_SHA1_iter = (iter); \
  LONG _PKCS5_PBKDF2_HMAC_SHA1_keylen = (keylen); \
  unsigned char * _PKCS5_PBKDF2_HMAC_SHA1_out = (out); \
  ({ \
  register char * _PKCS5_PBKDF2_HMAC_SHA1__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const char * __asm("a0"), LONG __asm("d0"), unsigned char * __asm("a1"), LONG __asm("d1"), LONG __asm("d2"), LONG __asm("d3"), unsigned char * __asm("a2"))) \
  (_PKCS5_PBKDF2_HMAC_SHA1__bn - 5136))(_PKCS5_PBKDF2_HMAC_SHA1__bn, _PKCS5_PBKDF2_HMAC_SHA1_pass, _PKCS5_PBKDF2_HMAC_SHA1_passlen, _PKCS5_PBKDF2_HMAC_SHA1_salt, _PKCS5_PBKDF2_HMAC_SHA1_saltlen, _PKCS5_PBKDF2_HMAC_SHA1_iter, _PKCS5_PBKDF2_HMAC_SHA1_keylen, _PKCS5_PBKDF2_HMAC_SHA1_out); \
});})

#define PKCS5_v2_PBE_keyivgen(ctx, pass, passlen, param, cipher, md, en_de) ({ \
  EVP_CIPHER_CTX * _PKCS5_v2_PBE_keyivgen_ctx = (ctx); \
  const char * _PKCS5_v2_PBE_keyivgen_pass = (pass); \
  LONG _PKCS5_v2_PBE_keyivgen_passlen = (passlen); \
  ASN1_TYPE * _PKCS5_v2_PBE_keyivgen_param = (param); \
  const EVP_CIPHER * _PKCS5_v2_PBE_keyivgen_cipher = (cipher); \
  const EVP_MD * _PKCS5_v2_PBE_keyivgen_md = (md); \
  LONG _PKCS5_v2_PBE_keyivgen_en_de = (en_de); \
  ({ \
  register char * _PKCS5_v2_PBE_keyivgen__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), EVP_CIPHER_CTX * __asm("a0"), const char * __asm("a1"), LONG __asm("d0"), ASN1_TYPE * __asm("a2"), const EVP_CIPHER * __asm("a3"), const EVP_MD * __asm("d1"), LONG __asm("d2"))) \
  (_PKCS5_v2_PBE_keyivgen__bn - 5142))(_PKCS5_v2_PBE_keyivgen__bn, _PKCS5_v2_PBE_keyivgen_ctx, _PKCS5_v2_PBE_keyivgen_pass, _PKCS5_v2_PBE_keyivgen_passlen, _PKCS5_v2_PBE_keyivgen_param, _PKCS5_v2_PBE_keyivgen_cipher, _PKCS5_v2_PBE_keyivgen_md, _PKCS5_v2_PBE_keyivgen_en_de); \
});})

#define PKCS5_PBE_add() ({ \
  register char * _PKCS5_PBE_add__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"))) \
  (_PKCS5_PBE_add__bn - 5148))(_PKCS5_PBE_add__bn); \
})

#define EVP_PBE_CipherInit(pbe_obj, pass, passlen, param, ctx, en_de) ({ \
  ASN1_OBJECT * _EVP_PBE_CipherInit_pbe_obj = (pbe_obj); \
  const char * _EVP_PBE_CipherInit_pass = (pass); \
  LONG _EVP_PBE_CipherInit_passlen = (passlen); \
  ASN1_TYPE * _EVP_PBE_CipherInit_param = (param); \
  EVP_CIPHER_CTX * _EVP_PBE_CipherInit_ctx = (ctx); \
  LONG _EVP_PBE_CipherInit_en_de = (en_de); \
  ({ \
  register char * _EVP_PBE_CipherInit__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), ASN1_OBJECT * __asm("a0"), const char * __asm("a1"), LONG __asm("d0"), ASN1_TYPE * __asm("a2"), EVP_CIPHER_CTX * __asm("a3"), LONG __asm("d1"))) \
  (_EVP_PBE_CipherInit__bn - 5154))(_EVP_PBE_CipherInit__bn, _EVP_PBE_CipherInit_pbe_obj, _EVP_PBE_CipherInit_pass, _EVP_PBE_CipherInit_passlen, _EVP_PBE_CipherInit_param, _EVP_PBE_CipherInit_ctx, _EVP_PBE_CipherInit_en_de); \
});})

#define EVP_PBE_alg_add(nid, cipher, md, keygen) ({ \
  LONG _EVP_PBE_alg_add_nid = (nid); \
  const EVP_CIPHER * _EVP_PBE_alg_add_cipher = (cipher); \
  const EVP_MD * _EVP_PBE_alg_add_md = (md); \
  EVP_PBE_KEYGEN * (*_EVP_PBE_alg_add_keygen)(struct evp_cipher_ctx_st *ctx, const char *pass, int passlen, struct asn1_type_st *param, struct evp_cipher_st *cipher, struct env_md_st *md, int en_de) = (keygen); \
  ({ \
  register char * _EVP_PBE_alg_add__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), LONG __asm("d0"), const EVP_CIPHER * __asm("a0"), const EVP_MD * __asm("a1"), EVP_PBE_KEYGEN * (*)(struct evp_cipher_ctx_st *ctx, const char *pass, int passlen, struct asn1_type_st *param, struct evp_cipher_st *cipher, struct env_md_st *md, int en_de) __asm("a2"))) \
  (_EVP_PBE_alg_add__bn - 5160))(_EVP_PBE_alg_add__bn, _EVP_PBE_alg_add_nid, _EVP_PBE_alg_add_cipher, _EVP_PBE_alg_add_md, _EVP_PBE_alg_add_keygen); \
});})

#define EVP_PBE_cleanup() ({ \
  register char * _EVP_PBE_cleanup__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"))) \
  (_EVP_PBE_cleanup__bn - 5166))(_EVP_PBE_cleanup__bn); \
})

#define ERR_load_EVP_strings() ({ \
  register char * _ERR_load_EVP_strings__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"))) \
  (_ERR_load_EVP_strings__bn - 5172))(_ERR_load_EVP_strings__bn); \
})

#define HMAC_CTX_init(ctx) ({ \
  HMAC_CTX * _HMAC_CTX_init_ctx = (ctx); \
  ({ \
  register char * _HMAC_CTX_init__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), HMAC_CTX * __asm("a0"))) \
  (_HMAC_CTX_init__bn - 5178))(_HMAC_CTX_init__bn, _HMAC_CTX_init_ctx); \
});})

#define HMAC_CTX_cleanup(ctx) ({ \
  HMAC_CTX * _HMAC_CTX_cleanup_ctx = (ctx); \
  ({ \
  register char * _HMAC_CTX_cleanup__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), HMAC_CTX * __asm("a0"))) \
  (_HMAC_CTX_cleanup__bn - 5184))(_HMAC_CTX_cleanup__bn, _HMAC_CTX_cleanup_ctx); \
});})

#define HMAC_Init(ctx, key, len, md) ({ \
  HMAC_CTX * _HMAC_Init_ctx = (ctx); \
  const void * _HMAC_Init_key = (key); \
  LONG _HMAC_Init_len = (len); \
  const EVP_MD * _HMAC_Init_md = (md); \
  ({ \
  register char * _HMAC_Init__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), HMAC_CTX * __asm("a0"), const void * __asm("a1"), LONG __asm("d0"), const EVP_MD * __asm("a2"))) \
  (_HMAC_Init__bn - 5190))(_HMAC_Init__bn, _HMAC_Init_ctx, _HMAC_Init_key, _HMAC_Init_len, _HMAC_Init_md); \
});})

#define HMAC_Init_ex(ctx, key, len, md, impl) ({ \
  HMAC_CTX * _HMAC_Init_ex_ctx = (ctx); \
  const void * _HMAC_Init_ex_key = (key); \
  LONG _HMAC_Init_ex_len = (len); \
  const EVP_MD * _HMAC_Init_ex_md = (md); \
  ENGINE * _HMAC_Init_ex_impl = (impl); \
  ({ \
  register char * _HMAC_Init_ex__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), HMAC_CTX * __asm("a0"), const void * __asm("a1"), LONG __asm("d0"), const EVP_MD * __asm("a2"), ENGINE * __asm("a3"))) \
  (_HMAC_Init_ex__bn - 5196))(_HMAC_Init_ex__bn, _HMAC_Init_ex_ctx, _HMAC_Init_ex_key, _HMAC_Init_ex_len, _HMAC_Init_ex_md, _HMAC_Init_ex_impl); \
});})

#define HMAC_Update(ctx, data, len) ({ \
  HMAC_CTX * _HMAC_Update_ctx = (ctx); \
  const unsigned char * _HMAC_Update_data = (data); \
  LONG _HMAC_Update_len = (len); \
  ({ \
  register char * _HMAC_Update__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), HMAC_CTX * __asm("a0"), const unsigned char * __asm("a1"), LONG __asm("d0"))) \
  (_HMAC_Update__bn - 5202))(_HMAC_Update__bn, _HMAC_Update_ctx, _HMAC_Update_data, _HMAC_Update_len); \
});})

#define HMAC_Final(ctx, md, len) ({ \
  HMAC_CTX * _HMAC_Final_ctx = (ctx); \
  unsigned char * _HMAC_Final_md = (md); \
  unsigned int * _HMAC_Final_len = (len); \
  ({ \
  register char * _HMAC_Final__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), HMAC_CTX * __asm("a0"), unsigned char * __asm("a1"), unsigned int * __asm("a2"))) \
  (_HMAC_Final__bn - 5208))(_HMAC_Final__bn, _HMAC_Final_ctx, _HMAC_Final_md, _HMAC_Final_len); \
});})

#define HMAC(evp_md, key, key_len, d, n, md, md_len) ({ \
  const EVP_MD * _HMAC_evp_md = (evp_md); \
  const void * _HMAC_key = (key); \
  LONG _HMAC_key_len = (key_len); \
  const unsigned char * _HMAC_d = (d); \
  LONG _HMAC_n = (n); \
  unsigned char * _HMAC_md = (md); \
  unsigned int * _HMAC_md_len = (md_len); \
  ({ \
  register char * _HMAC__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((unsigned char * (*)(char * __asm("a6"), const EVP_MD * __asm("a0"), const void * __asm("a1"), LONG __asm("d0"), const unsigned char * __asm("a2"), LONG __asm("d1"), unsigned char * __asm("a3"), unsigned int * __asm("d2"))) \
  (_HMAC__bn - 5214))(_HMAC__bn, _HMAC_evp_md, _HMAC_key, _HMAC_key_len, _HMAC_d, _HMAC_n, _HMAC_md, _HMAC_md_len); \
});})

#define KRB5_ENCDATA_new() ({ \
  register char * _KRB5_ENCDATA_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((KRB5_ENCDATA * (*)(char * __asm("a6"))) \
  (_KRB5_ENCDATA_new__bn - 5220))(_KRB5_ENCDATA_new__bn); \
})

#define KRB5_ENCDATA_free(a) ({ \
  KRB5_ENCDATA * _KRB5_ENCDATA_free_a = (a); \
  ({ \
  register char * _KRB5_ENCDATA_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), KRB5_ENCDATA * __asm("a0"))) \
  (_KRB5_ENCDATA_free__bn - 5226))(_KRB5_ENCDATA_free__bn, _KRB5_ENCDATA_free_a); \
});})

#define d2i_KRB5_ENCDATA(a, in, len) ({ \
  KRB5_ENCDATA ** _d2i_KRB5_ENCDATA_a = (a); \
  unsigned char ** _d2i_KRB5_ENCDATA_in = (in); \
  long _d2i_KRB5_ENCDATA_len = (len); \
  ({ \
  register char * _d2i_KRB5_ENCDATA__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((KRB5_ENCDATA * (*)(char * __asm("a6"), KRB5_ENCDATA ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_KRB5_ENCDATA__bn - 5232))(_d2i_KRB5_ENCDATA__bn, _d2i_KRB5_ENCDATA_a, _d2i_KRB5_ENCDATA_in, _d2i_KRB5_ENCDATA_len); \
});})

#define i2d_KRB5_ENCDATA(a, out) ({ \
  KRB5_ENCDATA * _i2d_KRB5_ENCDATA_a = (a); \
  unsigned char ** _i2d_KRB5_ENCDATA_out = (out); \
  ({ \
  register char * _i2d_KRB5_ENCDATA__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), KRB5_ENCDATA * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_KRB5_ENCDATA__bn - 5238))(_i2d_KRB5_ENCDATA__bn, _i2d_KRB5_ENCDATA_a, _i2d_KRB5_ENCDATA_out); \
});})

#define KRB5_ENCDATA_it() ({ \
  register char * _KRB5_ENCDATA_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_KRB5_ENCDATA_it__bn - 5244))(_KRB5_ENCDATA_it__bn); \
})

#define KRB5_PRINCNAME_new() ({ \
  register char * _KRB5_PRINCNAME_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((KRB5_PRINCNAME * (*)(char * __asm("a6"))) \
  (_KRB5_PRINCNAME_new__bn - 5250))(_KRB5_PRINCNAME_new__bn); \
})

#define KRB5_PRINCNAME_free(a) ({ \
  KRB5_PRINCNAME * _KRB5_PRINCNAME_free_a = (a); \
  ({ \
  register char * _KRB5_PRINCNAME_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), KRB5_PRINCNAME * __asm("a0"))) \
  (_KRB5_PRINCNAME_free__bn - 5256))(_KRB5_PRINCNAME_free__bn, _KRB5_PRINCNAME_free_a); \
});})

#define d2i_KRB5_PRINCNAME(a, in, len) ({ \
  KRB5_PRINCNAME ** _d2i_KRB5_PRINCNAME_a = (a); \
  unsigned char ** _d2i_KRB5_PRINCNAME_in = (in); \
  long _d2i_KRB5_PRINCNAME_len = (len); \
  ({ \
  register char * _d2i_KRB5_PRINCNAME__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((KRB5_PRINCNAME * (*)(char * __asm("a6"), KRB5_PRINCNAME ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_KRB5_PRINCNAME__bn - 5262))(_d2i_KRB5_PRINCNAME__bn, _d2i_KRB5_PRINCNAME_a, _d2i_KRB5_PRINCNAME_in, _d2i_KRB5_PRINCNAME_len); \
});})

#define i2d_KRB5_PRINCNAME(a, out) ({ \
  KRB5_PRINCNAME * _i2d_KRB5_PRINCNAME_a = (a); \
  unsigned char ** _i2d_KRB5_PRINCNAME_out = (out); \
  ({ \
  register char * _i2d_KRB5_PRINCNAME__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), KRB5_PRINCNAME * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_KRB5_PRINCNAME__bn - 5268))(_i2d_KRB5_PRINCNAME__bn, _i2d_KRB5_PRINCNAME_a, _i2d_KRB5_PRINCNAME_out); \
});})

#define KRB5_PRINCNAME_it() ({ \
  register char * _KRB5_PRINCNAME_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_KRB5_PRINCNAME_it__bn - 5274))(_KRB5_PRINCNAME_it__bn); \
})

#define KRB5_TKTBODY_new() ({ \
  register char * _KRB5_TKTBODY_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((KRB5_TKTBODY * (*)(char * __asm("a6"))) \
  (_KRB5_TKTBODY_new__bn - 5280))(_KRB5_TKTBODY_new__bn); \
})

#define KRB5_TKTBODY_free(a) ({ \
  KRB5_TKTBODY * _KRB5_TKTBODY_free_a = (a); \
  ({ \
  register char * _KRB5_TKTBODY_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), KRB5_TKTBODY * __asm("a0"))) \
  (_KRB5_TKTBODY_free__bn - 5286))(_KRB5_TKTBODY_free__bn, _KRB5_TKTBODY_free_a); \
});})

#define d2i_KRB5_TKTBODY(a, in, len) ({ \
  KRB5_TKTBODY ** _d2i_KRB5_TKTBODY_a = (a); \
  unsigned char ** _d2i_KRB5_TKTBODY_in = (in); \
  long _d2i_KRB5_TKTBODY_len = (len); \
  ({ \
  register char * _d2i_KRB5_TKTBODY__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((KRB5_TKTBODY * (*)(char * __asm("a6"), KRB5_TKTBODY ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_KRB5_TKTBODY__bn - 5292))(_d2i_KRB5_TKTBODY__bn, _d2i_KRB5_TKTBODY_a, _d2i_KRB5_TKTBODY_in, _d2i_KRB5_TKTBODY_len); \
});})

#define i2d_KRB5_TKTBODY(a, out) ({ \
  KRB5_TKTBODY * _i2d_KRB5_TKTBODY_a = (a); \
  unsigned char ** _i2d_KRB5_TKTBODY_out = (out); \
  ({ \
  register char * _i2d_KRB5_TKTBODY__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), KRB5_TKTBODY * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_KRB5_TKTBODY__bn - 5298))(_i2d_KRB5_TKTBODY__bn, _i2d_KRB5_TKTBODY_a, _i2d_KRB5_TKTBODY_out); \
});})

#define KRB5_TKTBODY_it() ({ \
  register char * _KRB5_TKTBODY_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_KRB5_TKTBODY_it__bn - 5304))(_KRB5_TKTBODY_it__bn); \
})

#define KRB5_APREQBODY_new() ({ \
  register char * _KRB5_APREQBODY_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((KRB5_APREQBODY * (*)(char * __asm("a6"))) \
  (_KRB5_APREQBODY_new__bn - 5310))(_KRB5_APREQBODY_new__bn); \
})

#define KRB5_APREQBODY_free(a) ({ \
  KRB5_APREQBODY * _KRB5_APREQBODY_free_a = (a); \
  ({ \
  register char * _KRB5_APREQBODY_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), KRB5_APREQBODY * __asm("a0"))) \
  (_KRB5_APREQBODY_free__bn - 5316))(_KRB5_APREQBODY_free__bn, _KRB5_APREQBODY_free_a); \
});})

#define d2i_KRB5_APREQBODY(a, in, len) ({ \
  KRB5_APREQBODY ** _d2i_KRB5_APREQBODY_a = (a); \
  unsigned char ** _d2i_KRB5_APREQBODY_in = (in); \
  long _d2i_KRB5_APREQBODY_len = (len); \
  ({ \
  register char * _d2i_KRB5_APREQBODY__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((KRB5_APREQBODY * (*)(char * __asm("a6"), KRB5_APREQBODY ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_KRB5_APREQBODY__bn - 5322))(_d2i_KRB5_APREQBODY__bn, _d2i_KRB5_APREQBODY_a, _d2i_KRB5_APREQBODY_in, _d2i_KRB5_APREQBODY_len); \
});})

#define i2d_KRB5_APREQBODY(a, out) ({ \
  KRB5_APREQBODY * _i2d_KRB5_APREQBODY_a = (a); \
  unsigned char ** _i2d_KRB5_APREQBODY_out = (out); \
  ({ \
  register char * _i2d_KRB5_APREQBODY__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), KRB5_APREQBODY * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_KRB5_APREQBODY__bn - 5328))(_i2d_KRB5_APREQBODY__bn, _i2d_KRB5_APREQBODY_a, _i2d_KRB5_APREQBODY_out); \
});})

#define KRB5_APREQBODY_it() ({ \
  register char * _KRB5_APREQBODY_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_KRB5_APREQBODY_it__bn - 5334))(_KRB5_APREQBODY_it__bn); \
})

#define KRB5_TICKET_new() ({ \
  register char * _KRB5_TICKET_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((KRB5_TICKET * (*)(char * __asm("a6"))) \
  (_KRB5_TICKET_new__bn - 5340))(_KRB5_TICKET_new__bn); \
})

#define KRB5_TICKET_free(a) ({ \
  KRB5_TICKET * _KRB5_TICKET_free_a = (a); \
  ({ \
  register char * _KRB5_TICKET_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), KRB5_TICKET * __asm("a0"))) \
  (_KRB5_TICKET_free__bn - 5346))(_KRB5_TICKET_free__bn, _KRB5_TICKET_free_a); \
});})

#define d2i_KRB5_TICKET(a, in, len) ({ \
  KRB5_TICKET ** _d2i_KRB5_TICKET_a = (a); \
  unsigned char ** _d2i_KRB5_TICKET_in = (in); \
  long _d2i_KRB5_TICKET_len = (len); \
  ({ \
  register char * _d2i_KRB5_TICKET__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((KRB5_TICKET * (*)(char * __asm("a6"), KRB5_TICKET ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_KRB5_TICKET__bn - 5352))(_d2i_KRB5_TICKET__bn, _d2i_KRB5_TICKET_a, _d2i_KRB5_TICKET_in, _d2i_KRB5_TICKET_len); \
});})

#define i2d_KRB5_TICKET(a, out) ({ \
  KRB5_TICKET * _i2d_KRB5_TICKET_a = (a); \
  unsigned char ** _i2d_KRB5_TICKET_out = (out); \
  ({ \
  register char * _i2d_KRB5_TICKET__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), KRB5_TICKET * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_KRB5_TICKET__bn - 5358))(_i2d_KRB5_TICKET__bn, _i2d_KRB5_TICKET_a, _i2d_KRB5_TICKET_out); \
});})

#define KRB5_TICKET_it() ({ \
  register char * _KRB5_TICKET_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_KRB5_TICKET_it__bn - 5364))(_KRB5_TICKET_it__bn); \
})

#define KRB5_APREQ_new() ({ \
  register char * _KRB5_APREQ_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((KRB5_APREQ * (*)(char * __asm("a6"))) \
  (_KRB5_APREQ_new__bn - 5370))(_KRB5_APREQ_new__bn); \
})

#define KRB5_APREQ_free(a) ({ \
  KRB5_APREQ * _KRB5_APREQ_free_a = (a); \
  ({ \
  register char * _KRB5_APREQ_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), KRB5_APREQ * __asm("a0"))) \
  (_KRB5_APREQ_free__bn - 5376))(_KRB5_APREQ_free__bn, _KRB5_APREQ_free_a); \
});})

#define d2i_KRB5_APREQ(a, in, len) ({ \
  KRB5_APREQ ** _d2i_KRB5_APREQ_a = (a); \
  unsigned char ** _d2i_KRB5_APREQ_in = (in); \
  long _d2i_KRB5_APREQ_len = (len); \
  ({ \
  register char * _d2i_KRB5_APREQ__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((KRB5_APREQ * (*)(char * __asm("a6"), KRB5_APREQ ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_KRB5_APREQ__bn - 5382))(_d2i_KRB5_APREQ__bn, _d2i_KRB5_APREQ_a, _d2i_KRB5_APREQ_in, _d2i_KRB5_APREQ_len); \
});})

#define i2d_KRB5_APREQ(a, out) ({ \
  KRB5_APREQ * _i2d_KRB5_APREQ_a = (a); \
  unsigned char ** _i2d_KRB5_APREQ_out = (out); \
  ({ \
  register char * _i2d_KRB5_APREQ__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), KRB5_APREQ * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_KRB5_APREQ__bn - 5388))(_i2d_KRB5_APREQ__bn, _i2d_KRB5_APREQ_a, _i2d_KRB5_APREQ_out); \
});})

#define KRB5_APREQ_it() ({ \
  register char * _KRB5_APREQ_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_KRB5_APREQ_it__bn - 5394))(_KRB5_APREQ_it__bn); \
})

#define KRB5_CHECKSUM_new() ({ \
  register char * _KRB5_CHECKSUM_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((KRB5_CHECKSUM * (*)(char * __asm("a6"))) \
  (_KRB5_CHECKSUM_new__bn - 5400))(_KRB5_CHECKSUM_new__bn); \
})

#define KRB5_CHECKSUM_free(a) ({ \
  KRB5_CHECKSUM * _KRB5_CHECKSUM_free_a = (a); \
  ({ \
  register char * _KRB5_CHECKSUM_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), KRB5_CHECKSUM * __asm("a0"))) \
  (_KRB5_CHECKSUM_free__bn - 5406))(_KRB5_CHECKSUM_free__bn, _KRB5_CHECKSUM_free_a); \
});})

#define d2i_KRB5_CHECKSUM(a, in, len) ({ \
  KRB5_CHECKSUM ** _d2i_KRB5_CHECKSUM_a = (a); \
  unsigned char ** _d2i_KRB5_CHECKSUM_in = (in); \
  long _d2i_KRB5_CHECKSUM_len = (len); \
  ({ \
  register char * _d2i_KRB5_CHECKSUM__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((KRB5_CHECKSUM * (*)(char * __asm("a6"), KRB5_CHECKSUM ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_KRB5_CHECKSUM__bn - 5412))(_d2i_KRB5_CHECKSUM__bn, _d2i_KRB5_CHECKSUM_a, _d2i_KRB5_CHECKSUM_in, _d2i_KRB5_CHECKSUM_len); \
});})

#define i2d_KRB5_CHECKSUM(a, out) ({ \
  KRB5_CHECKSUM * _i2d_KRB5_CHECKSUM_a = (a); \
  unsigned char ** _i2d_KRB5_CHECKSUM_out = (out); \
  ({ \
  register char * _i2d_KRB5_CHECKSUM__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), KRB5_CHECKSUM * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_KRB5_CHECKSUM__bn - 5418))(_i2d_KRB5_CHECKSUM__bn, _i2d_KRB5_CHECKSUM_a, _i2d_KRB5_CHECKSUM_out); \
});})

#define KRB5_CHECKSUM_it() ({ \
  register char * _KRB5_CHECKSUM_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_KRB5_CHECKSUM_it__bn - 5424))(_KRB5_CHECKSUM_it__bn); \
})

#define KRB5_ENCKEY_new() ({ \
  register char * _KRB5_ENCKEY_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((KRB5_ENCKEY * (*)(char * __asm("a6"))) \
  (_KRB5_ENCKEY_new__bn - 5430))(_KRB5_ENCKEY_new__bn); \
})

#define KRB5_ENCKEY_free(a) ({ \
  KRB5_ENCKEY * _KRB5_ENCKEY_free_a = (a); \
  ({ \
  register char * _KRB5_ENCKEY_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), KRB5_ENCKEY * __asm("a0"))) \
  (_KRB5_ENCKEY_free__bn - 5436))(_KRB5_ENCKEY_free__bn, _KRB5_ENCKEY_free_a); \
});})

#define d2i_KRB5_ENCKEY(a, in, len) ({ \
  KRB5_ENCKEY ** _d2i_KRB5_ENCKEY_a = (a); \
  unsigned char ** _d2i_KRB5_ENCKEY_in = (in); \
  long _d2i_KRB5_ENCKEY_len = (len); \
  ({ \
  register char * _d2i_KRB5_ENCKEY__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((KRB5_ENCKEY * (*)(char * __asm("a6"), KRB5_ENCKEY ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_KRB5_ENCKEY__bn - 5442))(_d2i_KRB5_ENCKEY__bn, _d2i_KRB5_ENCKEY_a, _d2i_KRB5_ENCKEY_in, _d2i_KRB5_ENCKEY_len); \
});})

#define i2d_KRB5_ENCKEY(a, out) ({ \
  KRB5_ENCKEY * _i2d_KRB5_ENCKEY_a = (a); \
  unsigned char ** _i2d_KRB5_ENCKEY_out = (out); \
  ({ \
  register char * _i2d_KRB5_ENCKEY__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), KRB5_ENCKEY * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_KRB5_ENCKEY__bn - 5448))(_i2d_KRB5_ENCKEY__bn, _i2d_KRB5_ENCKEY_a, _i2d_KRB5_ENCKEY_out); \
});})

#define KRB5_ENCKEY_it() ({ \
  register char * _KRB5_ENCKEY_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_KRB5_ENCKEY_it__bn - 5454))(_KRB5_ENCKEY_it__bn); \
})

#define KRB5_AUTHDATA_new() ({ \
  register char * _KRB5_AUTHDATA_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((KRB5_AUTHDATA * (*)(char * __asm("a6"))) \
  (_KRB5_AUTHDATA_new__bn - 5460))(_KRB5_AUTHDATA_new__bn); \
})

#define KRB5_AUTHDATA_free(a) ({ \
  KRB5_AUTHDATA * _KRB5_AUTHDATA_free_a = (a); \
  ({ \
  register char * _KRB5_AUTHDATA_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), KRB5_AUTHDATA * __asm("a0"))) \
  (_KRB5_AUTHDATA_free__bn - 5466))(_KRB5_AUTHDATA_free__bn, _KRB5_AUTHDATA_free_a); \
});})

#define d2i_KRB5_AUTHDATA(a, in, len) ({ \
  KRB5_AUTHDATA ** _d2i_KRB5_AUTHDATA_a = (a); \
  unsigned char ** _d2i_KRB5_AUTHDATA_in = (in); \
  long _d2i_KRB5_AUTHDATA_len = (len); \
  ({ \
  register char * _d2i_KRB5_AUTHDATA__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((KRB5_AUTHDATA * (*)(char * __asm("a6"), KRB5_AUTHDATA ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_KRB5_AUTHDATA__bn - 5472))(_d2i_KRB5_AUTHDATA__bn, _d2i_KRB5_AUTHDATA_a, _d2i_KRB5_AUTHDATA_in, _d2i_KRB5_AUTHDATA_len); \
});})

#define i2d_KRB5_AUTHDATA(a, out) ({ \
  KRB5_AUTHDATA * _i2d_KRB5_AUTHDATA_a = (a); \
  unsigned char ** _i2d_KRB5_AUTHDATA_out = (out); \
  ({ \
  register char * _i2d_KRB5_AUTHDATA__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), KRB5_AUTHDATA * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_KRB5_AUTHDATA__bn - 5478))(_i2d_KRB5_AUTHDATA__bn, _i2d_KRB5_AUTHDATA_a, _i2d_KRB5_AUTHDATA_out); \
});})

#define KRB5_AUTHDATA_it() ({ \
  register char * _KRB5_AUTHDATA_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_KRB5_AUTHDATA_it__bn - 5484))(_KRB5_AUTHDATA_it__bn); \
})

#define KRB5_AUTHENTBODY_new() ({ \
  register char * _KRB5_AUTHENTBODY_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((KRB5_AUTHENTBODY * (*)(char * __asm("a6"))) \
  (_KRB5_AUTHENTBODY_new__bn - 5490))(_KRB5_AUTHENTBODY_new__bn); \
})

#define KRB5_AUTHENTBODY_free(a) ({ \
  KRB5_AUTHENTBODY * _KRB5_AUTHENTBODY_free_a = (a); \
  ({ \
  register char * _KRB5_AUTHENTBODY_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), KRB5_AUTHENTBODY * __asm("a0"))) \
  (_KRB5_AUTHENTBODY_free__bn - 5496))(_KRB5_AUTHENTBODY_free__bn, _KRB5_AUTHENTBODY_free_a); \
});})

#define d2i_KRB5_AUTHENTBODY(a, in, len) ({ \
  KRB5_AUTHENTBODY ** _d2i_KRB5_AUTHENTBODY_a = (a); \
  unsigned char ** _d2i_KRB5_AUTHENTBODY_in = (in); \
  long _d2i_KRB5_AUTHENTBODY_len = (len); \
  ({ \
  register char * _d2i_KRB5_AUTHENTBODY__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((KRB5_AUTHENTBODY * (*)(char * __asm("a6"), KRB5_AUTHENTBODY ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_KRB5_AUTHENTBODY__bn - 5502))(_d2i_KRB5_AUTHENTBODY__bn, _d2i_KRB5_AUTHENTBODY_a, _d2i_KRB5_AUTHENTBODY_in, _d2i_KRB5_AUTHENTBODY_len); \
});})

#define i2d_KRB5_AUTHENTBODY(a, out) ({ \
  KRB5_AUTHENTBODY * _i2d_KRB5_AUTHENTBODY_a = (a); \
  unsigned char ** _i2d_KRB5_AUTHENTBODY_out = (out); \
  ({ \
  register char * _i2d_KRB5_AUTHENTBODY__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), KRB5_AUTHENTBODY * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_KRB5_AUTHENTBODY__bn - 5508))(_i2d_KRB5_AUTHENTBODY__bn, _i2d_KRB5_AUTHENTBODY_a, _i2d_KRB5_AUTHENTBODY_out); \
});})

#define KRB5_AUTHENTBODY_it() ({ \
  register char * _KRB5_AUTHENTBODY_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_KRB5_AUTHENTBODY_it__bn - 5514))(_KRB5_AUTHENTBODY_it__bn); \
})

#define KRB5_AUTHENT_new() ({ \
  register char * _KRB5_AUTHENT_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((KRB5_AUTHENT * (*)(char * __asm("a6"))) \
  (_KRB5_AUTHENT_new__bn - 5520))(_KRB5_AUTHENT_new__bn); \
})

#define KRB5_AUTHENT_free(a) ({ \
  KRB5_AUTHENT * _KRB5_AUTHENT_free_a = (a); \
  ({ \
  register char * _KRB5_AUTHENT_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), KRB5_AUTHENT * __asm("a0"))) \
  (_KRB5_AUTHENT_free__bn - 5526))(_KRB5_AUTHENT_free__bn, _KRB5_AUTHENT_free_a); \
});})

#define d2i_KRB5_AUTHENT(a, in, len) ({ \
  KRB5_AUTHENT ** _d2i_KRB5_AUTHENT_a = (a); \
  unsigned char ** _d2i_KRB5_AUTHENT_in = (in); \
  long _d2i_KRB5_AUTHENT_len = (len); \
  ({ \
  register char * _d2i_KRB5_AUTHENT__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((KRB5_AUTHENT * (*)(char * __asm("a6"), KRB5_AUTHENT ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_KRB5_AUTHENT__bn - 5532))(_d2i_KRB5_AUTHENT__bn, _d2i_KRB5_AUTHENT_a, _d2i_KRB5_AUTHENT_in, _d2i_KRB5_AUTHENT_len); \
});})

#define i2d_KRB5_AUTHENT(a, out) ({ \
  KRB5_AUTHENT * _i2d_KRB5_AUTHENT_a = (a); \
  unsigned char ** _i2d_KRB5_AUTHENT_out = (out); \
  ({ \
  register char * _i2d_KRB5_AUTHENT__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), KRB5_AUTHENT * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_KRB5_AUTHENT__bn - 5538))(_i2d_KRB5_AUTHENT__bn, _i2d_KRB5_AUTHENT_a, _i2d_KRB5_AUTHENT_out); \
});})

#define KRB5_AUTHENT_it() ({ \
  register char * _KRB5_AUTHENT_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_KRB5_AUTHENT_it__bn - 5544))(_KRB5_AUTHENT_it__bn); \
})

#define lh_new(h, c) ({ \
  LHASH_HASH_FN_TYPE _lh_new_h = (h); \
  LHASH_COMP_FN_TYPE _lh_new_c = (c); \
  ({ \
  register char * _lh_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((LHASH * (*)(char * __asm("a6"), LHASH_HASH_FN_TYPE __asm("d0"), LHASH_COMP_FN_TYPE __asm("d1"))) \
  (_lh_new__bn - 5550))(_lh_new__bn, _lh_new_h, _lh_new_c); \
});})

#define lh_free(lh) ({ \
  LHASH * _lh_free_lh = (lh); \
  ({ \
  register char * _lh_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), LHASH * __asm("a0"))) \
  (_lh_free__bn - 5556))(_lh_free__bn, _lh_free_lh); \
});})

#define lh_insert(lh, data) ({ \
  LHASH * _lh_insert_lh = (lh); \
  const void * _lh_insert_data = (data); \
  ({ \
  register char * _lh_insert__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void * (*)(char * __asm("a6"), LHASH * __asm("a0"), const void * __asm("a1"))) \
  (_lh_insert__bn - 5562))(_lh_insert__bn, _lh_insert_lh, _lh_insert_data); \
});})

#define lh_delete(lh, data) ({ \
  LHASH * _lh_delete_lh = (lh); \
  const void * _lh_delete_data = (data); \
  ({ \
  register char * _lh_delete__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void * (*)(char * __asm("a6"), LHASH * __asm("a0"), const void * __asm("a1"))) \
  (_lh_delete__bn - 5568))(_lh_delete__bn, _lh_delete_lh, _lh_delete_data); \
});})

#define lh_retrieve(lh, data) ({ \
  LHASH * _lh_retrieve_lh = (lh); \
  const void * _lh_retrieve_data = (data); \
  ({ \
  register char * _lh_retrieve__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void * (*)(char * __asm("a6"), LHASH * __asm("a0"), const void * __asm("a1"))) \
  (_lh_retrieve__bn - 5574))(_lh_retrieve__bn, _lh_retrieve_lh, _lh_retrieve_data); \
});})

#define lh_doall(lh, func) ({ \
  LHASH * _lh_doall_lh = (lh); \
  LHASH_DOALL_FN_TYPE _lh_doall_func = (func); \
  ({ \
  register char * _lh_doall__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), LHASH * __asm("a0"), LHASH_DOALL_FN_TYPE __asm("d0"))) \
  (_lh_doall__bn - 5580))(_lh_doall__bn, _lh_doall_lh, _lh_doall_func); \
});})

#define lh_doall_arg(lh, func, arg) ({ \
  LHASH * _lh_doall_arg_lh = (lh); \
  LHASH_DOALL_ARG_FN_TYPE _lh_doall_arg_func = (func); \
  void * _lh_doall_arg_arg = (arg); \
  ({ \
  register char * _lh_doall_arg__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), LHASH * __asm("a0"), LHASH_DOALL_ARG_FN_TYPE __asm("d0"), void * __asm("a1"))) \
  (_lh_doall_arg__bn - 5586))(_lh_doall_arg__bn, _lh_doall_arg_lh, _lh_doall_arg_func, _lh_doall_arg_arg); \
});})

#define lh_strhash(c) ({ \
  const char * _lh_strhash_c = (c); \
  ({ \
  register char * _lh_strhash__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((unsigned long (*)(char * __asm("a6"), const char * __asm("a0"))) \
  (_lh_strhash__bn - 5592))(_lh_strhash__bn, _lh_strhash_c); \
});})

#define lh_num_items(lh) ({ \
  const LHASH * _lh_num_items_lh = (lh); \
  ({ \
  register char * _lh_num_items__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((unsigned long (*)(char * __asm("a6"), const LHASH * __asm("a0"))) \
  (_lh_num_items__bn - 5598))(_lh_num_items__bn, _lh_num_items_lh); \
});})

#define lh_stats_bio(lh, out) ({ \
  const LHASH * _lh_stats_bio_lh = (lh); \
  BIO * _lh_stats_bio_out = (out); \
  ({ \
  register char * _lh_stats_bio__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), const LHASH * __asm("a0"), BIO * __asm("a1"))) \
  (_lh_stats_bio__bn - 5604))(_lh_stats_bio__bn, _lh_stats_bio_lh, _lh_stats_bio_out); \
});})

#define lh_node_stats_bio(lh, out) ({ \
  const LHASH * _lh_node_stats_bio_lh = (lh); \
  BIO * _lh_node_stats_bio_out = (out); \
  ({ \
  register char * _lh_node_stats_bio__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), const LHASH * __asm("a0"), BIO * __asm("a1"))) \
  (_lh_node_stats_bio__bn - 5610))(_lh_node_stats_bio__bn, _lh_node_stats_bio_lh, _lh_node_stats_bio_out); \
});})

#define lh_node_usage_stats_bio(lh, out) ({ \
  const LHASH * _lh_node_usage_stats_bio_lh = (lh); \
  BIO * _lh_node_usage_stats_bio_out = (out); \
  ({ \
  register char * _lh_node_usage_stats_bio__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), const LHASH * __asm("a0"), BIO * __asm("a1"))) \
  (_lh_node_usage_stats_bio__bn - 5616))(_lh_node_usage_stats_bio__bn, _lh_node_usage_stats_bio_lh, _lh_node_usage_stats_bio_out); \
});})

#define OBJ_NAME_init() ({ \
  register char * _OBJ_NAME_init__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"))) \
  (_OBJ_NAME_init__bn - 5622))(_OBJ_NAME_init__bn); \
})

#define OBJ_NAME_new_index(hash_func, cmp_func, free_func) ({ \
  unsigned long (*_OBJ_NAME_new_index_hash_func)(const char *) = (hash_func); \
  int (*_OBJ_NAME_new_index_cmp_func)(const char *, const char *) = (cmp_func); \
  void (*_OBJ_NAME_new_index_free_func)(const char *, int, const char *) = (free_func); \
  ({ \
  register char * _OBJ_NAME_new_index__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), unsigned long (*)(const char *) __asm("a0"), int (*)(const char *, const char *) __asm("a1"), void (*)(const char *, int, const char *) __asm("a2"))) \
  (_OBJ_NAME_new_index__bn - 5628))(_OBJ_NAME_new_index__bn, _OBJ_NAME_new_index_hash_func, _OBJ_NAME_new_index_cmp_func, _OBJ_NAME_new_index_free_func); \
});})

#define OBJ_NAME_get(name, type) ({ \
  const char * _OBJ_NAME_get_name = (name); \
  LONG _OBJ_NAME_get_type = (type); \
  ({ \
  register char * _OBJ_NAME_get__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const char * (*)(char * __asm("a6"), const char * __asm("a0"), LONG __asm("d0"))) \
  (_OBJ_NAME_get__bn - 5634))(_OBJ_NAME_get__bn, _OBJ_NAME_get_name, _OBJ_NAME_get_type); \
});})

#define OBJ_NAME_add(name, type, data) ({ \
  const char * _OBJ_NAME_add_name = (name); \
  LONG _OBJ_NAME_add_type = (type); \
  const char * _OBJ_NAME_add_data = (data); \
  ({ \
  register char * _OBJ_NAME_add__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const char * __asm("a0"), LONG __asm("d0"), const char * __asm("a1"))) \
  (_OBJ_NAME_add__bn - 5640))(_OBJ_NAME_add__bn, _OBJ_NAME_add_name, _OBJ_NAME_add_type, _OBJ_NAME_add_data); \
});})

#define OBJ_NAME_remove(name, type) ({ \
  const char * _OBJ_NAME_remove_name = (name); \
  LONG _OBJ_NAME_remove_type = (type); \
  ({ \
  register char * _OBJ_NAME_remove__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const char * __asm("a0"), LONG __asm("d0"))) \
  (_OBJ_NAME_remove__bn - 5646))(_OBJ_NAME_remove__bn, _OBJ_NAME_remove_name, _OBJ_NAME_remove_type); \
});})

#define OBJ_NAME_cleanup(type) ({ \
  LONG _OBJ_NAME_cleanup_type = (type); \
  ({ \
  register char * _OBJ_NAME_cleanup__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), LONG __asm("d0"))) \
  (_OBJ_NAME_cleanup__bn - 5652))(_OBJ_NAME_cleanup__bn, _OBJ_NAME_cleanup_type); \
});})

#define OBJ_NAME_do_all(type, fn, arg) ({ \
  LONG _OBJ_NAME_do_all_type = (type); \
  void (*_OBJ_NAME_do_all_fn)(const OBJ_NAME *, void *arg) = (fn); \
  void * _OBJ_NAME_do_all_arg = (arg); \
  ({ \
  register char * _OBJ_NAME_do_all__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), LONG __asm("d0"), void (*)(const OBJ_NAME *, void *arg) __asm("a0"), void * __asm("a1"))) \
  (_OBJ_NAME_do_all__bn - 5658))(_OBJ_NAME_do_all__bn, _OBJ_NAME_do_all_type, _OBJ_NAME_do_all_fn, _OBJ_NAME_do_all_arg); \
});})

#define OBJ_NAME_do_all_sorted(type, fn, arg) ({ \
  LONG _OBJ_NAME_do_all_sorted_type = (type); \
  void (*_OBJ_NAME_do_all_sorted_fn)(const OBJ_NAME *, void *arg) = (fn); \
  void * _OBJ_NAME_do_all_sorted_arg = (arg); \
  ({ \
  register char * _OBJ_NAME_do_all_sorted__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), LONG __asm("d0"), void (*)(const OBJ_NAME *, void *arg) __asm("a0"), void * __asm("a1"))) \
  (_OBJ_NAME_do_all_sorted__bn - 5664))(_OBJ_NAME_do_all_sorted__bn, _OBJ_NAME_do_all_sorted_type, _OBJ_NAME_do_all_sorted_fn, _OBJ_NAME_do_all_sorted_arg); \
});})

#define OBJ_dup(o) ({ \
  const ASN1_OBJECT * _OBJ_dup_o = (o); \
  ({ \
  register char * _OBJ_dup__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((ASN1_OBJECT * (*)(char * __asm("a6"), const ASN1_OBJECT * __asm("a0"))) \
  (_OBJ_dup__bn - 5670))(_OBJ_dup__bn, _OBJ_dup_o); \
});})

#define OBJ_nid2obj(n) ({ \
  LONG _OBJ_nid2obj_n = (n); \
  ({ \
  register char * _OBJ_nid2obj__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((ASN1_OBJECT * (*)(char * __asm("a6"), LONG __asm("d0"))) \
  (_OBJ_nid2obj__bn - 5676))(_OBJ_nid2obj__bn, _OBJ_nid2obj_n); \
});})

#define OBJ_nid2ln(n) ({ \
  LONG _OBJ_nid2ln_n = (n); \
  ({ \
  register char * _OBJ_nid2ln__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const char * (*)(char * __asm("a6"), LONG __asm("d0"))) \
  (_OBJ_nid2ln__bn - 5682))(_OBJ_nid2ln__bn, _OBJ_nid2ln_n); \
});})

#define OBJ_nid2sn(n) ({ \
  LONG _OBJ_nid2sn_n = (n); \
  ({ \
  register char * _OBJ_nid2sn__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const char * (*)(char * __asm("a6"), LONG __asm("d0"))) \
  (_OBJ_nid2sn__bn - 5688))(_OBJ_nid2sn__bn, _OBJ_nid2sn_n); \
});})

#define OBJ_obj2nid(o) ({ \
  const ASN1_OBJECT * _OBJ_obj2nid_o = (o); \
  ({ \
  register char * _OBJ_obj2nid__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const ASN1_OBJECT * __asm("a0"))) \
  (_OBJ_obj2nid__bn - 5694))(_OBJ_obj2nid__bn, _OBJ_obj2nid_o); \
});})

#define OBJ_txt2obj(s, no_name) ({ \
  const char * _OBJ_txt2obj_s = (s); \
  LONG _OBJ_txt2obj_no_name = (no_name); \
  ({ \
  register char * _OBJ_txt2obj__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((ASN1_OBJECT * (*)(char * __asm("a6"), const char * __asm("a0"), LONG __asm("d0"))) \
  (_OBJ_txt2obj__bn - 5700))(_OBJ_txt2obj__bn, _OBJ_txt2obj_s, _OBJ_txt2obj_no_name); \
});})

#define OBJ_obj2txt(buf, buf_len, a, no_name) ({ \
  char * _OBJ_obj2txt_buf = (buf); \
  LONG _OBJ_obj2txt_buf_len = (buf_len); \
  const ASN1_OBJECT * _OBJ_obj2txt_a = (a); \
  LONG _OBJ_obj2txt_no_name = (no_name); \
  ({ \
  register char * _OBJ_obj2txt__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), char * __asm("a0"), LONG __asm("d0"), const ASN1_OBJECT * __asm("a1"), LONG __asm("d1"))) \
  (_OBJ_obj2txt__bn - 5706))(_OBJ_obj2txt__bn, _OBJ_obj2txt_buf, _OBJ_obj2txt_buf_len, _OBJ_obj2txt_a, _OBJ_obj2txt_no_name); \
});})

#define OBJ_txt2nid(s) ({ \
  const char * _OBJ_txt2nid_s = (s); \
  ({ \
  register char * _OBJ_txt2nid__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const char * __asm("a0"))) \
  (_OBJ_txt2nid__bn - 5712))(_OBJ_txt2nid__bn, _OBJ_txt2nid_s); \
});})

#define OBJ_ln2nid(s) ({ \
  const char * _OBJ_ln2nid_s = (s); \
  ({ \
  register char * _OBJ_ln2nid__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const char * __asm("a0"))) \
  (_OBJ_ln2nid__bn - 5718))(_OBJ_ln2nid__bn, _OBJ_ln2nid_s); \
});})

#define OBJ_sn2nid(s) ({ \
  const char * _OBJ_sn2nid_s = (s); \
  ({ \
  register char * _OBJ_sn2nid__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const char * __asm("a0"))) \
  (_OBJ_sn2nid__bn - 5724))(_OBJ_sn2nid__bn, _OBJ_sn2nid_s); \
});})

#define OBJ_cmp(a, b) ({ \
  const ASN1_OBJECT * _OBJ_cmp_a = (a); \
  const ASN1_OBJECT * _OBJ_cmp_b = (b); \
  ({ \
  register char * _OBJ_cmp__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const ASN1_OBJECT * __asm("a0"), const ASN1_OBJECT * __asm("a1"))) \
  (_OBJ_cmp__bn - 5730))(_OBJ_cmp__bn, _OBJ_cmp_a, _OBJ_cmp_b); \
});})

#define OBJ_bsearch(key, base, num, size, cmp) ({ \
  const char * _OBJ_bsearch_key = (key); \
  const char * _OBJ_bsearch_base = (base); \
  LONG _OBJ_bsearch_num = (num); \
  LONG _OBJ_bsearch_size = (size); \
  int (*_OBJ_bsearch_cmp)(const void *, const void *) = (cmp); \
  ({ \
  register char * _OBJ_bsearch__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const char * (*)(char * __asm("a6"), const char * __asm("a0"), const char * __asm("a1"), LONG __asm("d0"), LONG __asm("d1"), int (*)(const void *, const void *) __asm("a2"))) \
  (_OBJ_bsearch__bn - 5736))(_OBJ_bsearch__bn, _OBJ_bsearch_key, _OBJ_bsearch_base, _OBJ_bsearch_num, _OBJ_bsearch_size, _OBJ_bsearch_cmp); \
});})

#define OBJ_new_nid(num) ({ \
  LONG _OBJ_new_nid_num = (num); \
  ({ \
  register char * _OBJ_new_nid__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), LONG __asm("d0"))) \
  (_OBJ_new_nid__bn - 5742))(_OBJ_new_nid__bn, _OBJ_new_nid_num); \
});})

#define OBJ_add_object(obj) ({ \
  const ASN1_OBJECT * _OBJ_add_object_obj = (obj); \
  ({ \
  register char * _OBJ_add_object__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const ASN1_OBJECT * __asm("a0"))) \
  (_OBJ_add_object__bn - 5748))(_OBJ_add_object__bn, _OBJ_add_object_obj); \
});})

#define OBJ_create(oid, sn, ln) ({ \
  const char * _OBJ_create_oid = (oid); \
  const char * _OBJ_create_sn = (sn); \
  const char * _OBJ_create_ln = (ln); \
  ({ \
  register char * _OBJ_create__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const char * __asm("a0"), const char * __asm("a1"), const char * __asm("a2"))) \
  (_OBJ_create__bn - 5754))(_OBJ_create__bn, _OBJ_create_oid, _OBJ_create_sn, _OBJ_create_ln); \
});})

#define OBJ_cleanup() ({ \
  register char * _OBJ_cleanup__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"))) \
  (_OBJ_cleanup__bn - 5760))(_OBJ_cleanup__bn); \
})

#define OBJ_create_objects(in) ({ \
  BIO * _OBJ_create_objects_in = (in); \
  ({ \
  register char * _OBJ_create_objects__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIO * __asm("a0"))) \
  (_OBJ_create_objects__bn - 5766))(_OBJ_create_objects__bn, _OBJ_create_objects_in); \
});})

#define ERR_load_OBJ_strings() ({ \
  register char * _ERR_load_OBJ_strings__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"))) \
  (_ERR_load_OBJ_strings__bn - 5772))(_ERR_load_OBJ_strings__bn); \
})

#define OCSP_sendreq_bio(b, path, req) ({ \
  BIO * _OCSP_sendreq_bio_b = (b); \
  char * _OCSP_sendreq_bio_path = (path); \
  OCSP_REQUEST * _OCSP_sendreq_bio_req = (req); \
  ({ \
  register char * _OCSP_sendreq_bio__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((OCSP_RESPONSE * (*)(char * __asm("a6"), BIO * __asm("a0"), char * __asm("a1"), OCSP_REQUEST * __asm("a2"))) \
  (_OCSP_sendreq_bio__bn - 5778))(_OCSP_sendreq_bio__bn, _OCSP_sendreq_bio_b, _OCSP_sendreq_bio_path, _OCSP_sendreq_bio_req); \
});})

#define OCSP_cert_to_id(dgst, subject, issuer) ({ \
  const EVP_MD * _OCSP_cert_to_id_dgst = (dgst); \
  X509 * _OCSP_cert_to_id_subject = (subject); \
  X509 * _OCSP_cert_to_id_issuer = (issuer); \
  ({ \
  register char * _OCSP_cert_to_id__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((OCSP_CERTID * (*)(char * __asm("a6"), const EVP_MD * __asm("a0"), X509 * __asm("a1"), X509 * __asm("a2"))) \
  (_OCSP_cert_to_id__bn - 5784))(_OCSP_cert_to_id__bn, _OCSP_cert_to_id_dgst, _OCSP_cert_to_id_subject, _OCSP_cert_to_id_issuer); \
});})

#define OCSP_cert_id_new(dgst, issuerName, issuerKey, serialNumber) ({ \
  const EVP_MD * _OCSP_cert_id_new_dgst = (dgst); \
  X509_NAME * _OCSP_cert_id_new_issuerName = (issuerName); \
  ASN1_BIT_STRING* _OCSP_cert_id_new_issuerKey = (issuerKey); \
  ASN1_INTEGER * _OCSP_cert_id_new_serialNumber = (serialNumber); \
  ({ \
  register char * _OCSP_cert_id_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((OCSP_CERTID * (*)(char * __asm("a6"), const EVP_MD * __asm("a0"), X509_NAME * __asm("a1"), ASN1_BIT_STRING* __asm("a2"), ASN1_INTEGER * __asm("a3"))) \
  (_OCSP_cert_id_new__bn - 5790))(_OCSP_cert_id_new__bn, _OCSP_cert_id_new_dgst, _OCSP_cert_id_new_issuerName, _OCSP_cert_id_new_issuerKey, _OCSP_cert_id_new_serialNumber); \
});})

#define OCSP_request_add0_id(req, cid) ({ \
  OCSP_REQUEST * _OCSP_request_add0_id_req = (req); \
  OCSP_CERTID * _OCSP_request_add0_id_cid = (cid); \
  ({ \
  register char * _OCSP_request_add0_id__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((OCSP_ONEREQ * (*)(char * __asm("a6"), OCSP_REQUEST * __asm("a0"), OCSP_CERTID * __asm("a1"))) \
  (_OCSP_request_add0_id__bn - 5796))(_OCSP_request_add0_id__bn, _OCSP_request_add0_id_req, _OCSP_request_add0_id_cid); \
});})

#define OCSP_request_add1_nonce(req, val, len) ({ \
  OCSP_REQUEST * _OCSP_request_add1_nonce_req = (req); \
  unsigned char * _OCSP_request_add1_nonce_val = (val); \
  LONG _OCSP_request_add1_nonce_len = (len); \
  ({ \
  register char * _OCSP_request_add1_nonce__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), OCSP_REQUEST * __asm("a0"), unsigned char * __asm("a1"), LONG __asm("d0"))) \
  (_OCSP_request_add1_nonce__bn - 5802))(_OCSP_request_add1_nonce__bn, _OCSP_request_add1_nonce_req, _OCSP_request_add1_nonce_val, _OCSP_request_add1_nonce_len); \
});})

#define OCSP_basic_add1_nonce(resp, val, len) ({ \
  OCSP_BASICRESP * _OCSP_basic_add1_nonce_resp = (resp); \
  unsigned char * _OCSP_basic_add1_nonce_val = (val); \
  LONG _OCSP_basic_add1_nonce_len = (len); \
  ({ \
  register char * _OCSP_basic_add1_nonce__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), OCSP_BASICRESP * __asm("a0"), unsigned char * __asm("a1"), LONG __asm("d0"))) \
  (_OCSP_basic_add1_nonce__bn - 5808))(_OCSP_basic_add1_nonce__bn, _OCSP_basic_add1_nonce_resp, _OCSP_basic_add1_nonce_val, _OCSP_basic_add1_nonce_len); \
});})

#define OCSP_check_nonce(req, bs) ({ \
  OCSP_REQUEST * _OCSP_check_nonce_req = (req); \
  OCSP_BASICRESP * _OCSP_check_nonce_bs = (bs); \
  ({ \
  register char * _OCSP_check_nonce__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), OCSP_REQUEST * __asm("a0"), OCSP_BASICRESP * __asm("a1"))) \
  (_OCSP_check_nonce__bn - 5814))(_OCSP_check_nonce__bn, _OCSP_check_nonce_req, _OCSP_check_nonce_bs); \
});})

#define OCSP_copy_nonce(resp, req) ({ \
  OCSP_BASICRESP * _OCSP_copy_nonce_resp = (resp); \
  OCSP_REQUEST * _OCSP_copy_nonce_req = (req); \
  ({ \
  register char * _OCSP_copy_nonce__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), OCSP_BASICRESP * __asm("a0"), OCSP_REQUEST * __asm("a1"))) \
  (_OCSP_copy_nonce__bn - 5820))(_OCSP_copy_nonce__bn, _OCSP_copy_nonce_resp, _OCSP_copy_nonce_req); \
});})

#define OCSP_request_set1_name(req, nm) ({ \
  OCSP_REQUEST * _OCSP_request_set1_name_req = (req); \
  X509_NAME * _OCSP_request_set1_name_nm = (nm); \
  ({ \
  register char * _OCSP_request_set1_name__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), OCSP_REQUEST * __asm("a0"), X509_NAME * __asm("a1"))) \
  (_OCSP_request_set1_name__bn - 5826))(_OCSP_request_set1_name__bn, _OCSP_request_set1_name_req, _OCSP_request_set1_name_nm); \
});})

#define OCSP_request_add1_cert(req, cert) ({ \
  OCSP_REQUEST * _OCSP_request_add1_cert_req = (req); \
  X509 * _OCSP_request_add1_cert_cert = (cert); \
  ({ \
  register char * _OCSP_request_add1_cert__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), OCSP_REQUEST * __asm("a0"), X509 * __asm("a1"))) \
  (_OCSP_request_add1_cert__bn - 5832))(_OCSP_request_add1_cert__bn, _OCSP_request_add1_cert_req, _OCSP_request_add1_cert_cert); \
});})

#define OCSP_request_sign(req, signer, key, dgst, certs, flags) ({ \
  OCSP_REQUEST * _OCSP_request_sign_req = (req); \
  X509 * _OCSP_request_sign_signer = (signer); \
  EVP_PKEY * _OCSP_request_sign_key = (key); \
  const EVP_MD * _OCSP_request_sign_dgst = (dgst); \
  STACK_OF(X509) * _OCSP_request_sign_certs = (certs); \
  unsigned long _OCSP_request_sign_flags = (flags); \
  ({ \
  register char * _OCSP_request_sign__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), OCSP_REQUEST * __asm("a0"), X509 * __asm("a1"), EVP_PKEY * __asm("a2"), const EVP_MD * __asm("a3"), STACK_OF(X509) * __asm("d0"), unsigned long __asm("d1"))) \
  (_OCSP_request_sign__bn - 5838))(_OCSP_request_sign__bn, _OCSP_request_sign_req, _OCSP_request_sign_signer, _OCSP_request_sign_key, _OCSP_request_sign_dgst, _OCSP_request_sign_certs, _OCSP_request_sign_flags); \
});})

#define OCSP_response_status(resp) ({ \
  OCSP_RESPONSE * _OCSP_response_status_resp = (resp); \
  ({ \
  register char * _OCSP_response_status__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), OCSP_RESPONSE * __asm("a0"))) \
  (_OCSP_response_status__bn - 5844))(_OCSP_response_status__bn, _OCSP_response_status_resp); \
});})

#define OCSP_response_get1_basic(resp) ({ \
  OCSP_RESPONSE * _OCSP_response_get1_basic_resp = (resp); \
  ({ \
  register char * _OCSP_response_get1_basic__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((OCSP_BASICRESP * (*)(char * __asm("a6"), OCSP_RESPONSE * __asm("a0"))) \
  (_OCSP_response_get1_basic__bn - 5850))(_OCSP_response_get1_basic__bn, _OCSP_response_get1_basic_resp); \
});})

#define OCSP_resp_count(bs) ({ \
  OCSP_BASICRESP * _OCSP_resp_count_bs = (bs); \
  ({ \
  register char * _OCSP_resp_count__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), OCSP_BASICRESP * __asm("a0"))) \
  (_OCSP_resp_count__bn - 5856))(_OCSP_resp_count__bn, _OCSP_resp_count_bs); \
});})

#define OCSP_resp_get0(bs, idx) ({ \
  OCSP_BASICRESP * _OCSP_resp_get0_bs = (bs); \
  LONG _OCSP_resp_get0_idx = (idx); \
  ({ \
  register char * _OCSP_resp_get0__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((OCSP_SINGLERESP * (*)(char * __asm("a6"), OCSP_BASICRESP * __asm("a0"), LONG __asm("d0"))) \
  (_OCSP_resp_get0__bn - 5862))(_OCSP_resp_get0__bn, _OCSP_resp_get0_bs, _OCSP_resp_get0_idx); \
});})

#define OCSP_resp_find(bs, id, last) ({ \
  OCSP_BASICRESP * _OCSP_resp_find_bs = (bs); \
  OCSP_CERTID * _OCSP_resp_find_id = (id); \
  LONG _OCSP_resp_find_last = (last); \
  ({ \
  register char * _OCSP_resp_find__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), OCSP_BASICRESP * __asm("a0"), OCSP_CERTID * __asm("a1"), LONG __asm("d0"))) \
  (_OCSP_resp_find__bn - 5868))(_OCSP_resp_find__bn, _OCSP_resp_find_bs, _OCSP_resp_find_id, _OCSP_resp_find_last); \
});})

#define OCSP_single_get0_status(single, reason, revtime, thisupd, nextupd) ({ \
  OCSP_SINGLERESP * _OCSP_single_get0_status_single = (single); \
  int * _OCSP_single_get0_status_reason = (reason); \
  ASN1_GENERALIZEDTIME ** _OCSP_single_get0_status_revtime = (revtime); \
  ASN1_GENERALIZEDTIME ** _OCSP_single_get0_status_thisupd = (thisupd); \
  ASN1_GENERALIZEDTIME ** _OCSP_single_get0_status_nextupd = (nextupd); \
  ({ \
  register char * _OCSP_single_get0_status__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), OCSP_SINGLERESP * __asm("a0"), int * __asm("a1"), ASN1_GENERALIZEDTIME ** __asm("a2"), ASN1_GENERALIZEDTIME ** __asm("a3"), ASN1_GENERALIZEDTIME ** __asm("d0"))) \
  (_OCSP_single_get0_status__bn - 5874))(_OCSP_single_get0_status__bn, _OCSP_single_get0_status_single, _OCSP_single_get0_status_reason, _OCSP_single_get0_status_revtime, _OCSP_single_get0_status_thisupd, _OCSP_single_get0_status_nextupd); \
});})

#define OCSP_resp_find_status(bs, id, status, reason, revtime, thisupd, nextupd) ({ \
  OCSP_BASICRESP * _OCSP_resp_find_status_bs = (bs); \
  OCSP_CERTID * _OCSP_resp_find_status_id = (id); \
  int * _OCSP_resp_find_status_status = (status); \
  int * _OCSP_resp_find_status_reason = (reason); \
  ASN1_GENERALIZEDTIME ** _OCSP_resp_find_status_revtime = (revtime); \
  ASN1_GENERALIZEDTIME ** _OCSP_resp_find_status_thisupd = (thisupd); \
  ASN1_GENERALIZEDTIME ** _OCSP_resp_find_status_nextupd = (nextupd); \
  ({ \
  register char * _OCSP_resp_find_status__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), OCSP_BASICRESP * __asm("a0"), OCSP_CERTID * __asm("a1"), int * __asm("a2"), int * __asm("a3"), ASN1_GENERALIZEDTIME ** __asm("d0"), ASN1_GENERALIZEDTIME ** __asm("d1"), ASN1_GENERALIZEDTIME ** __asm("d2"))) \
  (_OCSP_resp_find_status__bn - 5880))(_OCSP_resp_find_status__bn, _OCSP_resp_find_status_bs, _OCSP_resp_find_status_id, _OCSP_resp_find_status_status, _OCSP_resp_find_status_reason, _OCSP_resp_find_status_revtime, _OCSP_resp_find_status_thisupd, _OCSP_resp_find_status_nextupd); \
});})

#define OCSP_check_validity(thisupd, nextupd, sec, maxsec) ({ \
  ASN1_GENERALIZEDTIME * _OCSP_check_validity_thisupd = (thisupd); \
  ASN1_GENERALIZEDTIME * _OCSP_check_validity_nextupd = (nextupd); \
  long _OCSP_check_validity_sec = (sec); \
  long _OCSP_check_validity_maxsec = (maxsec); \
  ({ \
  register char * _OCSP_check_validity__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), ASN1_GENERALIZEDTIME * __asm("a0"), ASN1_GENERALIZEDTIME * __asm("a1"), long __asm("d0"), long __asm("d1"))) \
  (_OCSP_check_validity__bn - 5886))(_OCSP_check_validity__bn, _OCSP_check_validity_thisupd, _OCSP_check_validity_nextupd, _OCSP_check_validity_sec, _OCSP_check_validity_maxsec); \
});})

#define OCSP_request_verify(req, certs, store, flags) ({ \
  OCSP_REQUEST * _OCSP_request_verify_req = (req); \
  STACK_OF(X509) * _OCSP_request_verify_certs = (certs); \
  X509_STORE * _OCSP_request_verify_store = (store); \
  unsigned long _OCSP_request_verify_flags = (flags); \
  ({ \
  register char * _OCSP_request_verify__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), OCSP_REQUEST * __asm("a0"), STACK_OF(X509) * __asm("a1"), X509_STORE * __asm("a2"), unsigned long __asm("d0"))) \
  (_OCSP_request_verify__bn - 5892))(_OCSP_request_verify__bn, _OCSP_request_verify_req, _OCSP_request_verify_certs, _OCSP_request_verify_store, _OCSP_request_verify_flags); \
});})

#define OCSP_parse_url(url, phost, pport, ppath, pssl) ({ \
  char * _OCSP_parse_url_url = (url); \
  char ** _OCSP_parse_url_phost = (phost); \
  char ** _OCSP_parse_url_pport = (pport); \
  char ** _OCSP_parse_url_ppath = (ppath); \
  int * _OCSP_parse_url_pssl = (pssl); \
  ({ \
  register char * _OCSP_parse_url__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), char * __asm("a0"), char ** __asm("a1"), char ** __asm("a2"), char ** __asm("a3"), int * __asm("d0"))) \
  (_OCSP_parse_url__bn - 5898))(_OCSP_parse_url__bn, _OCSP_parse_url_url, _OCSP_parse_url_phost, _OCSP_parse_url_pport, _OCSP_parse_url_ppath, _OCSP_parse_url_pssl); \
});})

#define OCSP_id_issuer_cmp(a, b) ({ \
  OCSP_CERTID * _OCSP_id_issuer_cmp_a = (a); \
  OCSP_CERTID * _OCSP_id_issuer_cmp_b = (b); \
  ({ \
  register char * _OCSP_id_issuer_cmp__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), OCSP_CERTID * __asm("a0"), OCSP_CERTID * __asm("a1"))) \
  (_OCSP_id_issuer_cmp__bn - 5904))(_OCSP_id_issuer_cmp__bn, _OCSP_id_issuer_cmp_a, _OCSP_id_issuer_cmp_b); \
});})

#define OCSP_id_cmp(a, b) ({ \
  OCSP_CERTID * _OCSP_id_cmp_a = (a); \
  OCSP_CERTID * _OCSP_id_cmp_b = (b); \
  ({ \
  register char * _OCSP_id_cmp__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), OCSP_CERTID * __asm("a0"), OCSP_CERTID * __asm("a1"))) \
  (_OCSP_id_cmp__bn - 5910))(_OCSP_id_cmp__bn, _OCSP_id_cmp_a, _OCSP_id_cmp_b); \
});})

#define OCSP_request_onereq_count(req) ({ \
  OCSP_REQUEST * _OCSP_request_onereq_count_req = (req); \
  ({ \
  register char * _OCSP_request_onereq_count__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), OCSP_REQUEST * __asm("a0"))) \
  (_OCSP_request_onereq_count__bn - 5916))(_OCSP_request_onereq_count__bn, _OCSP_request_onereq_count_req); \
});})

#define OCSP_request_onereq_get0(req, i) ({ \
  OCSP_REQUEST * _OCSP_request_onereq_get0_req = (req); \
  LONG _OCSP_request_onereq_get0_i = (i); \
  ({ \
  register char * _OCSP_request_onereq_get0__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((OCSP_ONEREQ * (*)(char * __asm("a6"), OCSP_REQUEST * __asm("a0"), LONG __asm("d0"))) \
  (_OCSP_request_onereq_get0__bn - 5922))(_OCSP_request_onereq_get0__bn, _OCSP_request_onereq_get0_req, _OCSP_request_onereq_get0_i); \
});})

#define OCSP_onereq_get0_id(one) ({ \
  OCSP_ONEREQ * _OCSP_onereq_get0_id_one = (one); \
  ({ \
  register char * _OCSP_onereq_get0_id__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((OCSP_CERTID * (*)(char * __asm("a6"), OCSP_ONEREQ * __asm("a0"))) \
  (_OCSP_onereq_get0_id__bn - 5928))(_OCSP_onereq_get0_id__bn, _OCSP_onereq_get0_id_one); \
});})

#define OCSP_id_get0_info(piNameHash, pmd, pikeyHash, pserial, cid) ({ \
  ASN1_OCTET_STRING ** _OCSP_id_get0_info_piNameHash = (piNameHash); \
  ASN1_OBJECT ** _OCSP_id_get0_info_pmd = (pmd); \
  ASN1_OCTET_STRING ** _OCSP_id_get0_info_pikeyHash = (pikeyHash); \
  ASN1_INTEGER ** _OCSP_id_get0_info_pserial = (pserial); \
  OCSP_CERTID * _OCSP_id_get0_info_cid = (cid); \
  ({ \
  register char * _OCSP_id_get0_info__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), ASN1_OCTET_STRING ** __asm("a0"), ASN1_OBJECT ** __asm("a1"), ASN1_OCTET_STRING ** __asm("a2"), ASN1_INTEGER ** __asm("a3"), OCSP_CERTID * __asm("d0"))) \
  (_OCSP_id_get0_info__bn - 5934))(_OCSP_id_get0_info__bn, _OCSP_id_get0_info_piNameHash, _OCSP_id_get0_info_pmd, _OCSP_id_get0_info_pikeyHash, _OCSP_id_get0_info_pserial, _OCSP_id_get0_info_cid); \
});})

#define OCSP_request_is_signed(req) ({ \
  OCSP_REQUEST * _OCSP_request_is_signed_req = (req); \
  ({ \
  register char * _OCSP_request_is_signed__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), OCSP_REQUEST * __asm("a0"))) \
  (_OCSP_request_is_signed__bn - 5940))(_OCSP_request_is_signed__bn, _OCSP_request_is_signed_req); \
});})

#define OCSP_response_create(status, bs) ({ \
  LONG _OCSP_response_create_status = (status); \
  OCSP_BASICRESP * _OCSP_response_create_bs = (bs); \
  ({ \
  register char * _OCSP_response_create__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((OCSP_RESPONSE * (*)(char * __asm("a6"), LONG __asm("d0"), OCSP_BASICRESP * __asm("a0"))) \
  (_OCSP_response_create__bn - 5946))(_OCSP_response_create__bn, _OCSP_response_create_status, _OCSP_response_create_bs); \
});})

#define OCSP_basic_add1_status(rsp, cid, status, reason, revtime, thisupd, nextupd) ({ \
  OCSP_BASICRESP * _OCSP_basic_add1_status_rsp = (rsp); \
  OCSP_CERTID * _OCSP_basic_add1_status_cid = (cid); \
  LONG _OCSP_basic_add1_status_status = (status); \
  LONG _OCSP_basic_add1_status_reason = (reason); \
  ASN1_TIME * _OCSP_basic_add1_status_revtime = (revtime); \
  ASN1_TIME * _OCSP_basic_add1_status_thisupd = (thisupd); \
  ASN1_TIME * _OCSP_basic_add1_status_nextupd = (nextupd); \
  ({ \
  register char * _OCSP_basic_add1_status__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((OCSP_SINGLERESP * (*)(char * __asm("a6"), OCSP_BASICRESP * __asm("a0"), OCSP_CERTID * __asm("a1"), LONG __asm("d0"), LONG __asm("d1"), ASN1_TIME * __asm("a2"), ASN1_TIME * __asm("a3"), ASN1_TIME * __asm("d2"))) \
  (_OCSP_basic_add1_status__bn - 5952))(_OCSP_basic_add1_status__bn, _OCSP_basic_add1_status_rsp, _OCSP_basic_add1_status_cid, _OCSP_basic_add1_status_status, _OCSP_basic_add1_status_reason, _OCSP_basic_add1_status_revtime, _OCSP_basic_add1_status_thisupd, _OCSP_basic_add1_status_nextupd); \
});})

#define OCSP_basic_add1_cert(resp, cert) ({ \
  OCSP_BASICRESP * _OCSP_basic_add1_cert_resp = (resp); \
  X509 * _OCSP_basic_add1_cert_cert = (cert); \
  ({ \
  register char * _OCSP_basic_add1_cert__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), OCSP_BASICRESP * __asm("a0"), X509 * __asm("a1"))) \
  (_OCSP_basic_add1_cert__bn - 5958))(_OCSP_basic_add1_cert__bn, _OCSP_basic_add1_cert_resp, _OCSP_basic_add1_cert_cert); \
});})

#define OCSP_basic_sign(brsp, signer, key, dgst, certs, flags) ({ \
  OCSP_BASICRESP * _OCSP_basic_sign_brsp = (brsp); \
  X509 * _OCSP_basic_sign_signer = (signer); \
  EVP_PKEY * _OCSP_basic_sign_key = (key); \
  const EVP_MD * _OCSP_basic_sign_dgst = (dgst); \
  STACK_OF(X509) * _OCSP_basic_sign_certs = (certs); \
  unsigned long _OCSP_basic_sign_flags = (flags); \
  ({ \
  register char * _OCSP_basic_sign__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), OCSP_BASICRESP * __asm("a0"), X509 * __asm("a1"), EVP_PKEY * __asm("a2"), const EVP_MD * __asm("a3"), STACK_OF(X509) * __asm("d0"), unsigned long __asm("d1"))) \
  (_OCSP_basic_sign__bn - 5964))(_OCSP_basic_sign__bn, _OCSP_basic_sign_brsp, _OCSP_basic_sign_signer, _OCSP_basic_sign_key, _OCSP_basic_sign_dgst, _OCSP_basic_sign_certs, _OCSP_basic_sign_flags); \
});})

#define ASN1_STRING_encode(s, i2d, data, sk) ({ \
  ASN1_STRING * _ASN1_STRING_encode_s = (s); \
  int (*_ASN1_STRING_encode_i2d)() = (i2d); \
  char * _ASN1_STRING_encode_data = (data); \
  STACK_OF(ASN1_OBJECT) * _ASN1_STRING_encode_sk = (sk); \
  ({ \
  register char * _ASN1_STRING_encode__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((ASN1_STRING * (*)(char * __asm("a6"), ASN1_STRING * __asm("a0"), int (*)() __asm("a1"), char * __asm("a2"), STACK_OF(ASN1_OBJECT) * __asm("a3"))) \
  (_ASN1_STRING_encode__bn - 5970))(_ASN1_STRING_encode__bn, _ASN1_STRING_encode_s, _ASN1_STRING_encode_i2d, _ASN1_STRING_encode_data, _ASN1_STRING_encode_sk); \
});})

#define OCSP_crlID_new(url, n, tim) ({ \
  char * _OCSP_crlID_new_url = (url); \
  long * _OCSP_crlID_new_n = (n); \
  char * _OCSP_crlID_new_tim = (tim); \
  ({ \
  register char * _OCSP_crlID_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509_EXTENSION * (*)(char * __asm("a6"), char * __asm("a0"), long * __asm("a1"), char * __asm("a2"))) \
  (_OCSP_crlID_new__bn - 5976))(_OCSP_crlID_new__bn, _OCSP_crlID_new_url, _OCSP_crlID_new_n, _OCSP_crlID_new_tim); \
});})

#define OCSP_accept_responses_new(oids) ({ \
  char ** _OCSP_accept_responses_new_oids = (oids); \
  ({ \
  register char * _OCSP_accept_responses_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509_EXTENSION * (*)(char * __asm("a6"), char ** __asm("a0"))) \
  (_OCSP_accept_responses_new__bn - 5982))(_OCSP_accept_responses_new__bn, _OCSP_accept_responses_new_oids); \
});})

#define OCSP_archive_cutoff_new(tim) ({ \
  char* _OCSP_archive_cutoff_new_tim = (tim); \
  ({ \
  register char * _OCSP_archive_cutoff_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509_EXTENSION * (*)(char * __asm("a6"), char* __asm("a0"))) \
  (_OCSP_archive_cutoff_new__bn - 5988))(_OCSP_archive_cutoff_new__bn, _OCSP_archive_cutoff_new_tim); \
});})

#define OCSP_url_svcloc_new(issuer, urls) ({ \
  X509_NAME* _OCSP_url_svcloc_new_issuer = (issuer); \
  char ** _OCSP_url_svcloc_new_urls = (urls); \
  ({ \
  register char * _OCSP_url_svcloc_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509_EXTENSION * (*)(char * __asm("a6"), X509_NAME* __asm("a0"), char ** __asm("a1"))) \
  (_OCSP_url_svcloc_new__bn - 5994))(_OCSP_url_svcloc_new__bn, _OCSP_url_svcloc_new_issuer, _OCSP_url_svcloc_new_urls); \
});})

#define OCSP_REQUEST_get_ext_count(x) ({ \
  OCSP_REQUEST * _OCSP_REQUEST_get_ext_count_x = (x); \
  ({ \
  register char * _OCSP_REQUEST_get_ext_count__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), OCSP_REQUEST * __asm("a0"))) \
  (_OCSP_REQUEST_get_ext_count__bn - 6000))(_OCSP_REQUEST_get_ext_count__bn, _OCSP_REQUEST_get_ext_count_x); \
});})

#define OCSP_REQUEST_get_ext_by_NID(x, nid, lastpos) ({ \
  OCSP_REQUEST * _OCSP_REQUEST_get_ext_by_NID_x = (x); \
  LONG _OCSP_REQUEST_get_ext_by_NID_nid = (nid); \
  LONG _OCSP_REQUEST_get_ext_by_NID_lastpos = (lastpos); \
  ({ \
  register char * _OCSP_REQUEST_get_ext_by_NID__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), OCSP_REQUEST * __asm("a0"), LONG __asm("d0"), LONG __asm("d1"))) \
  (_OCSP_REQUEST_get_ext_by_NID__bn - 6006))(_OCSP_REQUEST_get_ext_by_NID__bn, _OCSP_REQUEST_get_ext_by_NID_x, _OCSP_REQUEST_get_ext_by_NID_nid, _OCSP_REQUEST_get_ext_by_NID_lastpos); \
});})

#define OCSP_REQUEST_get_ext_by_OBJ(x, obj, lastpos) ({ \
  OCSP_REQUEST * _OCSP_REQUEST_get_ext_by_OBJ_x = (x); \
  ASN1_OBJECT * _OCSP_REQUEST_get_ext_by_OBJ_obj = (obj); \
  LONG _OCSP_REQUEST_get_ext_by_OBJ_lastpos = (lastpos); \
  ({ \
  register char * _OCSP_REQUEST_get_ext_by_OBJ__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), OCSP_REQUEST * __asm("a0"), ASN1_OBJECT * __asm("a1"), LONG __asm("d0"))) \
  (_OCSP_REQUEST_get_ext_by_OBJ__bn - 6012))(_OCSP_REQUEST_get_ext_by_OBJ__bn, _OCSP_REQUEST_get_ext_by_OBJ_x, _OCSP_REQUEST_get_ext_by_OBJ_obj, _OCSP_REQUEST_get_ext_by_OBJ_lastpos); \
});})

#define OCSP_REQUEST_get_ext_by_critical(x, crit, lastpos) ({ \
  OCSP_REQUEST * _OCSP_REQUEST_get_ext_by_critical_x = (x); \
  LONG _OCSP_REQUEST_get_ext_by_critical_crit = (crit); \
  LONG _OCSP_REQUEST_get_ext_by_critical_lastpos = (lastpos); \
  ({ \
  register char * _OCSP_REQUEST_get_ext_by_critical__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), OCSP_REQUEST * __asm("a0"), LONG __asm("d0"), LONG __asm("d1"))) \
  (_OCSP_REQUEST_get_ext_by_critical__bn - 6018))(_OCSP_REQUEST_get_ext_by_critical__bn, _OCSP_REQUEST_get_ext_by_critical_x, _OCSP_REQUEST_get_ext_by_critical_crit, _OCSP_REQUEST_get_ext_by_critical_lastpos); \
});})

#define OCSP_REQUEST_get_ext(x, loc) ({ \
  OCSP_REQUEST * _OCSP_REQUEST_get_ext_x = (x); \
  LONG _OCSP_REQUEST_get_ext_loc = (loc); \
  ({ \
  register char * _OCSP_REQUEST_get_ext__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509_EXTENSION * (*)(char * __asm("a6"), OCSP_REQUEST * __asm("a0"), LONG __asm("d0"))) \
  (_OCSP_REQUEST_get_ext__bn - 6024))(_OCSP_REQUEST_get_ext__bn, _OCSP_REQUEST_get_ext_x, _OCSP_REQUEST_get_ext_loc); \
});})

#define OCSP_REQUEST_delete_ext(x, loc) ({ \
  OCSP_REQUEST * _OCSP_REQUEST_delete_ext_x = (x); \
  LONG _OCSP_REQUEST_delete_ext_loc = (loc); \
  ({ \
  register char * _OCSP_REQUEST_delete_ext__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509_EXTENSION * (*)(char * __asm("a6"), OCSP_REQUEST * __asm("a0"), LONG __asm("d0"))) \
  (_OCSP_REQUEST_delete_ext__bn - 6030))(_OCSP_REQUEST_delete_ext__bn, _OCSP_REQUEST_delete_ext_x, _OCSP_REQUEST_delete_ext_loc); \
});})

#define OCSP_REQUEST_get1_ext_d2i(x, nid, crit, idx) ({ \
  OCSP_REQUEST * _OCSP_REQUEST_get1_ext_d2i_x = (x); \
  LONG _OCSP_REQUEST_get1_ext_d2i_nid = (nid); \
  int * _OCSP_REQUEST_get1_ext_d2i_crit = (crit); \
  int * _OCSP_REQUEST_get1_ext_d2i_idx = (idx); \
  ({ \
  register char * _OCSP_REQUEST_get1_ext_d2i__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void * (*)(char * __asm("a6"), OCSP_REQUEST * __asm("a0"), LONG __asm("d0"), int * __asm("a1"), int * __asm("a2"))) \
  (_OCSP_REQUEST_get1_ext_d2i__bn - 6036))(_OCSP_REQUEST_get1_ext_d2i__bn, _OCSP_REQUEST_get1_ext_d2i_x, _OCSP_REQUEST_get1_ext_d2i_nid, _OCSP_REQUEST_get1_ext_d2i_crit, _OCSP_REQUEST_get1_ext_d2i_idx); \
});})

#define OCSP_REQUEST_add1_ext_i2d(x, nid, value, crit, flags) ({ \
  OCSP_REQUEST * _OCSP_REQUEST_add1_ext_i2d_x = (x); \
  LONG _OCSP_REQUEST_add1_ext_i2d_nid = (nid); \
  void * _OCSP_REQUEST_add1_ext_i2d_value = (value); \
  LONG _OCSP_REQUEST_add1_ext_i2d_crit = (crit); \
  unsigned long _OCSP_REQUEST_add1_ext_i2d_flags = (flags); \
  ({ \
  register char * _OCSP_REQUEST_add1_ext_i2d__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), OCSP_REQUEST * __asm("a0"), LONG __asm("d0"), void * __asm("a1"), LONG __asm("d1"), unsigned long __asm("d2"))) \
  (_OCSP_REQUEST_add1_ext_i2d__bn - 6042))(_OCSP_REQUEST_add1_ext_i2d__bn, _OCSP_REQUEST_add1_ext_i2d_x, _OCSP_REQUEST_add1_ext_i2d_nid, _OCSP_REQUEST_add1_ext_i2d_value, _OCSP_REQUEST_add1_ext_i2d_crit, _OCSP_REQUEST_add1_ext_i2d_flags); \
});})

#define OCSP_REQUEST_add_ext(x, ex, loc) ({ \
  OCSP_REQUEST * _OCSP_REQUEST_add_ext_x = (x); \
  X509_EXTENSION * _OCSP_REQUEST_add_ext_ex = (ex); \
  LONG _OCSP_REQUEST_add_ext_loc = (loc); \
  ({ \
  register char * _OCSP_REQUEST_add_ext__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), OCSP_REQUEST * __asm("a0"), X509_EXTENSION * __asm("a1"), LONG __asm("d0"))) \
  (_OCSP_REQUEST_add_ext__bn - 6048))(_OCSP_REQUEST_add_ext__bn, _OCSP_REQUEST_add_ext_x, _OCSP_REQUEST_add_ext_ex, _OCSP_REQUEST_add_ext_loc); \
});})

#define OCSP_ONEREQ_get_ext_count(x) ({ \
  OCSP_ONEREQ * _OCSP_ONEREQ_get_ext_count_x = (x); \
  ({ \
  register char * _OCSP_ONEREQ_get_ext_count__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), OCSP_ONEREQ * __asm("a0"))) \
  (_OCSP_ONEREQ_get_ext_count__bn - 6054))(_OCSP_ONEREQ_get_ext_count__bn, _OCSP_ONEREQ_get_ext_count_x); \
});})

#define OCSP_ONEREQ_get_ext_by_NID(x, nid, lastpos) ({ \
  OCSP_ONEREQ * _OCSP_ONEREQ_get_ext_by_NID_x = (x); \
  LONG _OCSP_ONEREQ_get_ext_by_NID_nid = (nid); \
  LONG _OCSP_ONEREQ_get_ext_by_NID_lastpos = (lastpos); \
  ({ \
  register char * _OCSP_ONEREQ_get_ext_by_NID__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), OCSP_ONEREQ * __asm("a0"), LONG __asm("d0"), LONG __asm("d1"))) \
  (_OCSP_ONEREQ_get_ext_by_NID__bn - 6060))(_OCSP_ONEREQ_get_ext_by_NID__bn, _OCSP_ONEREQ_get_ext_by_NID_x, _OCSP_ONEREQ_get_ext_by_NID_nid, _OCSP_ONEREQ_get_ext_by_NID_lastpos); \
});})

#define OCSP_ONEREQ_get_ext_by_OBJ(x, obj, lastpos) ({ \
  OCSP_ONEREQ * _OCSP_ONEREQ_get_ext_by_OBJ_x = (x); \
  ASN1_OBJECT * _OCSP_ONEREQ_get_ext_by_OBJ_obj = (obj); \
  LONG _OCSP_ONEREQ_get_ext_by_OBJ_lastpos = (lastpos); \
  ({ \
  register char * _OCSP_ONEREQ_get_ext_by_OBJ__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), OCSP_ONEREQ * __asm("a0"), ASN1_OBJECT * __asm("a1"), LONG __asm("d0"))) \
  (_OCSP_ONEREQ_get_ext_by_OBJ__bn - 6066))(_OCSP_ONEREQ_get_ext_by_OBJ__bn, _OCSP_ONEREQ_get_ext_by_OBJ_x, _OCSP_ONEREQ_get_ext_by_OBJ_obj, _OCSP_ONEREQ_get_ext_by_OBJ_lastpos); \
});})

#define OCSP_ONEREQ_get_ext_by_critical(x, crit, lastpos) ({ \
  OCSP_ONEREQ * _OCSP_ONEREQ_get_ext_by_critical_x = (x); \
  LONG _OCSP_ONEREQ_get_ext_by_critical_crit = (crit); \
  LONG _OCSP_ONEREQ_get_ext_by_critical_lastpos = (lastpos); \
  ({ \
  register char * _OCSP_ONEREQ_get_ext_by_critical__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), OCSP_ONEREQ * __asm("a0"), LONG __asm("d0"), LONG __asm("d1"))) \
  (_OCSP_ONEREQ_get_ext_by_critical__bn - 6072))(_OCSP_ONEREQ_get_ext_by_critical__bn, _OCSP_ONEREQ_get_ext_by_critical_x, _OCSP_ONEREQ_get_ext_by_critical_crit, _OCSP_ONEREQ_get_ext_by_critical_lastpos); \
});})

#define OCSP_ONEREQ_get_ext(x, loc) ({ \
  OCSP_ONEREQ * _OCSP_ONEREQ_get_ext_x = (x); \
  LONG _OCSP_ONEREQ_get_ext_loc = (loc); \
  ({ \
  register char * _OCSP_ONEREQ_get_ext__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509_EXTENSION * (*)(char * __asm("a6"), OCSP_ONEREQ * __asm("a0"), LONG __asm("d0"))) \
  (_OCSP_ONEREQ_get_ext__bn - 6078))(_OCSP_ONEREQ_get_ext__bn, _OCSP_ONEREQ_get_ext_x, _OCSP_ONEREQ_get_ext_loc); \
});})

#define OCSP_ONEREQ_delete_ext(x, loc) ({ \
  OCSP_ONEREQ * _OCSP_ONEREQ_delete_ext_x = (x); \
  LONG _OCSP_ONEREQ_delete_ext_loc = (loc); \
  ({ \
  register char * _OCSP_ONEREQ_delete_ext__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509_EXTENSION * (*)(char * __asm("a6"), OCSP_ONEREQ * __asm("a0"), LONG __asm("d0"))) \
  (_OCSP_ONEREQ_delete_ext__bn - 6084))(_OCSP_ONEREQ_delete_ext__bn, _OCSP_ONEREQ_delete_ext_x, _OCSP_ONEREQ_delete_ext_loc); \
});})

#define OCSP_ONEREQ_get1_ext_d2i(x, nid, crit, idx) ({ \
  OCSP_ONEREQ * _OCSP_ONEREQ_get1_ext_d2i_x = (x); \
  LONG _OCSP_ONEREQ_get1_ext_d2i_nid = (nid); \
  int * _OCSP_ONEREQ_get1_ext_d2i_crit = (crit); \
  int * _OCSP_ONEREQ_get1_ext_d2i_idx = (idx); \
  ({ \
  register char * _OCSP_ONEREQ_get1_ext_d2i__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void * (*)(char * __asm("a6"), OCSP_ONEREQ * __asm("a0"), LONG __asm("d0"), int * __asm("a1"), int * __asm("a2"))) \
  (_OCSP_ONEREQ_get1_ext_d2i__bn - 6090))(_OCSP_ONEREQ_get1_ext_d2i__bn, _OCSP_ONEREQ_get1_ext_d2i_x, _OCSP_ONEREQ_get1_ext_d2i_nid, _OCSP_ONEREQ_get1_ext_d2i_crit, _OCSP_ONEREQ_get1_ext_d2i_idx); \
});})

#define OCSP_ONEREQ_add1_ext_i2d(x, nid, value, crit, flags) ({ \
  OCSP_ONEREQ * _OCSP_ONEREQ_add1_ext_i2d_x = (x); \
  LONG _OCSP_ONEREQ_add1_ext_i2d_nid = (nid); \
  void * _OCSP_ONEREQ_add1_ext_i2d_value = (value); \
  LONG _OCSP_ONEREQ_add1_ext_i2d_crit = (crit); \
  unsigned long _OCSP_ONEREQ_add1_ext_i2d_flags = (flags); \
  ({ \
  register char * _OCSP_ONEREQ_add1_ext_i2d__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), OCSP_ONEREQ * __asm("a0"), LONG __asm("d0"), void * __asm("a1"), LONG __asm("d1"), unsigned long __asm("d2"))) \
  (_OCSP_ONEREQ_add1_ext_i2d__bn - 6096))(_OCSP_ONEREQ_add1_ext_i2d__bn, _OCSP_ONEREQ_add1_ext_i2d_x, _OCSP_ONEREQ_add1_ext_i2d_nid, _OCSP_ONEREQ_add1_ext_i2d_value, _OCSP_ONEREQ_add1_ext_i2d_crit, _OCSP_ONEREQ_add1_ext_i2d_flags); \
});})

#define OCSP_ONEREQ_add_ext(x, ex, loc) ({ \
  OCSP_ONEREQ * _OCSP_ONEREQ_add_ext_x = (x); \
  X509_EXTENSION * _OCSP_ONEREQ_add_ext_ex = (ex); \
  LONG _OCSP_ONEREQ_add_ext_loc = (loc); \
  ({ \
  register char * _OCSP_ONEREQ_add_ext__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), OCSP_ONEREQ * __asm("a0"), X509_EXTENSION * __asm("a1"), LONG __asm("d0"))) \
  (_OCSP_ONEREQ_add_ext__bn - 6102))(_OCSP_ONEREQ_add_ext__bn, _OCSP_ONEREQ_add_ext_x, _OCSP_ONEREQ_add_ext_ex, _OCSP_ONEREQ_add_ext_loc); \
});})

#define OCSP_BASICRESP_get_ext_count(x) ({ \
  OCSP_BASICRESP * _OCSP_BASICRESP_get_ext_count_x = (x); \
  ({ \
  register char * _OCSP_BASICRESP_get_ext_count__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), OCSP_BASICRESP * __asm("a0"))) \
  (_OCSP_BASICRESP_get_ext_count__bn - 6108))(_OCSP_BASICRESP_get_ext_count__bn, _OCSP_BASICRESP_get_ext_count_x); \
});})

#define OCSP_BASICRESP_get_ext_by_NID(x, nid, lastpos) ({ \
  OCSP_BASICRESP * _OCSP_BASICRESP_get_ext_by_NID_x = (x); \
  LONG _OCSP_BASICRESP_get_ext_by_NID_nid = (nid); \
  LONG _OCSP_BASICRESP_get_ext_by_NID_lastpos = (lastpos); \
  ({ \
  register char * _OCSP_BASICRESP_get_ext_by_NID__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), OCSP_BASICRESP * __asm("a0"), LONG __asm("d0"), LONG __asm("d1"))) \
  (_OCSP_BASICRESP_get_ext_by_NID__bn - 6114))(_OCSP_BASICRESP_get_ext_by_NID__bn, _OCSP_BASICRESP_get_ext_by_NID_x, _OCSP_BASICRESP_get_ext_by_NID_nid, _OCSP_BASICRESP_get_ext_by_NID_lastpos); \
});})

#define OCSP_BASICRESP_get_ext_by_OBJ(x, obj, lastpos) ({ \
  OCSP_BASICRESP * _OCSP_BASICRESP_get_ext_by_OBJ_x = (x); \
  ASN1_OBJECT * _OCSP_BASICRESP_get_ext_by_OBJ_obj = (obj); \
  LONG _OCSP_BASICRESP_get_ext_by_OBJ_lastpos = (lastpos); \
  ({ \
  register char * _OCSP_BASICRESP_get_ext_by_OBJ__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), OCSP_BASICRESP * __asm("a0"), ASN1_OBJECT * __asm("a1"), LONG __asm("d0"))) \
  (_OCSP_BASICRESP_get_ext_by_OBJ__bn - 6120))(_OCSP_BASICRESP_get_ext_by_OBJ__bn, _OCSP_BASICRESP_get_ext_by_OBJ_x, _OCSP_BASICRESP_get_ext_by_OBJ_obj, _OCSP_BASICRESP_get_ext_by_OBJ_lastpos); \
});})

#define OCSP_BASICRESP_get_ext_by_critical(x, crit, lastpos) ({ \
  OCSP_BASICRESP * _OCSP_BASICRESP_get_ext_by_critical_x = (x); \
  LONG _OCSP_BASICRESP_get_ext_by_critical_crit = (crit); \
  LONG _OCSP_BASICRESP_get_ext_by_critical_lastpos = (lastpos); \
  ({ \
  register char * _OCSP_BASICRESP_get_ext_by_critical__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), OCSP_BASICRESP * __asm("a0"), LONG __asm("d0"), LONG __asm("d1"))) \
  (_OCSP_BASICRESP_get_ext_by_critical__bn - 6126))(_OCSP_BASICRESP_get_ext_by_critical__bn, _OCSP_BASICRESP_get_ext_by_critical_x, _OCSP_BASICRESP_get_ext_by_critical_crit, _OCSP_BASICRESP_get_ext_by_critical_lastpos); \
});})

#define OCSP_BASICRESP_get_ext(x, loc) ({ \
  OCSP_BASICRESP * _OCSP_BASICRESP_get_ext_x = (x); \
  LONG _OCSP_BASICRESP_get_ext_loc = (loc); \
  ({ \
  register char * _OCSP_BASICRESP_get_ext__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509_EXTENSION * (*)(char * __asm("a6"), OCSP_BASICRESP * __asm("a0"), LONG __asm("d0"))) \
  (_OCSP_BASICRESP_get_ext__bn - 6132))(_OCSP_BASICRESP_get_ext__bn, _OCSP_BASICRESP_get_ext_x, _OCSP_BASICRESP_get_ext_loc); \
});})

#define OCSP_BASICRESP_delete_ext(x, loc) ({ \
  OCSP_BASICRESP * _OCSP_BASICRESP_delete_ext_x = (x); \
  LONG _OCSP_BASICRESP_delete_ext_loc = (loc); \
  ({ \
  register char * _OCSP_BASICRESP_delete_ext__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509_EXTENSION * (*)(char * __asm("a6"), OCSP_BASICRESP * __asm("a0"), LONG __asm("d0"))) \
  (_OCSP_BASICRESP_delete_ext__bn - 6138))(_OCSP_BASICRESP_delete_ext__bn, _OCSP_BASICRESP_delete_ext_x, _OCSP_BASICRESP_delete_ext_loc); \
});})

#define OCSP_BASICRESP_get1_ext_d2i(x, nid, crit, idx) ({ \
  OCSP_BASICRESP * _OCSP_BASICRESP_get1_ext_d2i_x = (x); \
  LONG _OCSP_BASICRESP_get1_ext_d2i_nid = (nid); \
  int * _OCSP_BASICRESP_get1_ext_d2i_crit = (crit); \
  int * _OCSP_BASICRESP_get1_ext_d2i_idx = (idx); \
  ({ \
  register char * _OCSP_BASICRESP_get1_ext_d2i__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void * (*)(char * __asm("a6"), OCSP_BASICRESP * __asm("a0"), LONG __asm("d0"), int * __asm("a1"), int * __asm("a2"))) \
  (_OCSP_BASICRESP_get1_ext_d2i__bn - 6144))(_OCSP_BASICRESP_get1_ext_d2i__bn, _OCSP_BASICRESP_get1_ext_d2i_x, _OCSP_BASICRESP_get1_ext_d2i_nid, _OCSP_BASICRESP_get1_ext_d2i_crit, _OCSP_BASICRESP_get1_ext_d2i_idx); \
});})

#define OCSP_BASICRESP_add1_ext_i2d(x, nid, value, crit, flags) ({ \
  OCSP_BASICRESP * _OCSP_BASICRESP_add1_ext_i2d_x = (x); \
  LONG _OCSP_BASICRESP_add1_ext_i2d_nid = (nid); \
  void * _OCSP_BASICRESP_add1_ext_i2d_value = (value); \
  LONG _OCSP_BASICRESP_add1_ext_i2d_crit = (crit); \
  unsigned long _OCSP_BASICRESP_add1_ext_i2d_flags = (flags); \
  ({ \
  register char * _OCSP_BASICRESP_add1_ext_i2d__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), OCSP_BASICRESP * __asm("a0"), LONG __asm("d0"), void * __asm("a1"), LONG __asm("d1"), unsigned long __asm("d2"))) \
  (_OCSP_BASICRESP_add1_ext_i2d__bn - 6150))(_OCSP_BASICRESP_add1_ext_i2d__bn, _OCSP_BASICRESP_add1_ext_i2d_x, _OCSP_BASICRESP_add1_ext_i2d_nid, _OCSP_BASICRESP_add1_ext_i2d_value, _OCSP_BASICRESP_add1_ext_i2d_crit, _OCSP_BASICRESP_add1_ext_i2d_flags); \
});})

#define OCSP_BASICRESP_add_ext(x, ex, loc) ({ \
  OCSP_BASICRESP * _OCSP_BASICRESP_add_ext_x = (x); \
  X509_EXTENSION * _OCSP_BASICRESP_add_ext_ex = (ex); \
  LONG _OCSP_BASICRESP_add_ext_loc = (loc); \
  ({ \
  register char * _OCSP_BASICRESP_add_ext__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), OCSP_BASICRESP * __asm("a0"), X509_EXTENSION * __asm("a1"), LONG __asm("d0"))) \
  (_OCSP_BASICRESP_add_ext__bn - 6156))(_OCSP_BASICRESP_add_ext__bn, _OCSP_BASICRESP_add_ext_x, _OCSP_BASICRESP_add_ext_ex, _OCSP_BASICRESP_add_ext_loc); \
});})

#define OCSP_SINGLERESP_get_ext_count(x) ({ \
  OCSP_SINGLERESP * _OCSP_SINGLERESP_get_ext_count_x = (x); \
  ({ \
  register char * _OCSP_SINGLERESP_get_ext_count__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), OCSP_SINGLERESP * __asm("a0"))) \
  (_OCSP_SINGLERESP_get_ext_count__bn - 6162))(_OCSP_SINGLERESP_get_ext_count__bn, _OCSP_SINGLERESP_get_ext_count_x); \
});})

#define OCSP_SINGLERESP_get_ext_by_NID(x, nid, lastpos) ({ \
  OCSP_SINGLERESP * _OCSP_SINGLERESP_get_ext_by_NID_x = (x); \
  LONG _OCSP_SINGLERESP_get_ext_by_NID_nid = (nid); \
  LONG _OCSP_SINGLERESP_get_ext_by_NID_lastpos = (lastpos); \
  ({ \
  register char * _OCSP_SINGLERESP_get_ext_by_NID__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), OCSP_SINGLERESP * __asm("a0"), LONG __asm("d0"), LONG __asm("d1"))) \
  (_OCSP_SINGLERESP_get_ext_by_NID__bn - 6168))(_OCSP_SINGLERESP_get_ext_by_NID__bn, _OCSP_SINGLERESP_get_ext_by_NID_x, _OCSP_SINGLERESP_get_ext_by_NID_nid, _OCSP_SINGLERESP_get_ext_by_NID_lastpos); \
});})

#define OCSP_SINGLERESP_get_ext_by_OBJ(x, obj, lastpos) ({ \
  OCSP_SINGLERESP * _OCSP_SINGLERESP_get_ext_by_OBJ_x = (x); \
  ASN1_OBJECT * _OCSP_SINGLERESP_get_ext_by_OBJ_obj = (obj); \
  LONG _OCSP_SINGLERESP_get_ext_by_OBJ_lastpos = (lastpos); \
  ({ \
  register char * _OCSP_SINGLERESP_get_ext_by_OBJ__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), OCSP_SINGLERESP * __asm("a0"), ASN1_OBJECT * __asm("a1"), LONG __asm("d0"))) \
  (_OCSP_SINGLERESP_get_ext_by_OBJ__bn - 6174))(_OCSP_SINGLERESP_get_ext_by_OBJ__bn, _OCSP_SINGLERESP_get_ext_by_OBJ_x, _OCSP_SINGLERESP_get_ext_by_OBJ_obj, _OCSP_SINGLERESP_get_ext_by_OBJ_lastpos); \
});})

#define OCSP_SINGLERESP_get_ext_by_critical(x, crit, lastpos) ({ \
  OCSP_SINGLERESP * _OCSP_SINGLERESP_get_ext_by_critical_x = (x); \
  LONG _OCSP_SINGLERESP_get_ext_by_critical_crit = (crit); \
  LONG _OCSP_SINGLERESP_get_ext_by_critical_lastpos = (lastpos); \
  ({ \
  register char * _OCSP_SINGLERESP_get_ext_by_critical__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), OCSP_SINGLERESP * __asm("a0"), LONG __asm("d0"), LONG __asm("d1"))) \
  (_OCSP_SINGLERESP_get_ext_by_critical__bn - 6180))(_OCSP_SINGLERESP_get_ext_by_critical__bn, _OCSP_SINGLERESP_get_ext_by_critical_x, _OCSP_SINGLERESP_get_ext_by_critical_crit, _OCSP_SINGLERESP_get_ext_by_critical_lastpos); \
});})

#define OCSP_SINGLERESP_get_ext(x, loc) ({ \
  OCSP_SINGLERESP * _OCSP_SINGLERESP_get_ext_x = (x); \
  LONG _OCSP_SINGLERESP_get_ext_loc = (loc); \
  ({ \
  register char * _OCSP_SINGLERESP_get_ext__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509_EXTENSION * (*)(char * __asm("a6"), OCSP_SINGLERESP * __asm("a0"), LONG __asm("d0"))) \
  (_OCSP_SINGLERESP_get_ext__bn - 6186))(_OCSP_SINGLERESP_get_ext__bn, _OCSP_SINGLERESP_get_ext_x, _OCSP_SINGLERESP_get_ext_loc); \
});})

#define OCSP_SINGLERESP_delete_ext(x, loc) ({ \
  OCSP_SINGLERESP * _OCSP_SINGLERESP_delete_ext_x = (x); \
  LONG _OCSP_SINGLERESP_delete_ext_loc = (loc); \
  ({ \
  register char * _OCSP_SINGLERESP_delete_ext__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509_EXTENSION * (*)(char * __asm("a6"), OCSP_SINGLERESP * __asm("a0"), LONG __asm("d0"))) \
  (_OCSP_SINGLERESP_delete_ext__bn - 6192))(_OCSP_SINGLERESP_delete_ext__bn, _OCSP_SINGLERESP_delete_ext_x, _OCSP_SINGLERESP_delete_ext_loc); \
});})

#define OCSP_SINGLERESP_get1_ext_d2i(x, nid, crit, idx) ({ \
  OCSP_SINGLERESP * _OCSP_SINGLERESP_get1_ext_d2i_x = (x); \
  LONG _OCSP_SINGLERESP_get1_ext_d2i_nid = (nid); \
  int * _OCSP_SINGLERESP_get1_ext_d2i_crit = (crit); \
  int * _OCSP_SINGLERESP_get1_ext_d2i_idx = (idx); \
  ({ \
  register char * _OCSP_SINGLERESP_get1_ext_d2i__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void * (*)(char * __asm("a6"), OCSP_SINGLERESP * __asm("a0"), LONG __asm("d0"), int * __asm("a1"), int * __asm("a2"))) \
  (_OCSP_SINGLERESP_get1_ext_d2i__bn - 6198))(_OCSP_SINGLERESP_get1_ext_d2i__bn, _OCSP_SINGLERESP_get1_ext_d2i_x, _OCSP_SINGLERESP_get1_ext_d2i_nid, _OCSP_SINGLERESP_get1_ext_d2i_crit, _OCSP_SINGLERESP_get1_ext_d2i_idx); \
});})

#define OCSP_SINGLERESP_add1_ext_i2d(x, nid, value, crit, flags) ({ \
  OCSP_SINGLERESP * _OCSP_SINGLERESP_add1_ext_i2d_x = (x); \
  LONG _OCSP_SINGLERESP_add1_ext_i2d_nid = (nid); \
  void * _OCSP_SINGLERESP_add1_ext_i2d_value = (value); \
  LONG _OCSP_SINGLERESP_add1_ext_i2d_crit = (crit); \
  unsigned long _OCSP_SINGLERESP_add1_ext_i2d_flags = (flags); \
  ({ \
  register char * _OCSP_SINGLERESP_add1_ext_i2d__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), OCSP_SINGLERESP * __asm("a0"), LONG __asm("d0"), void * __asm("a1"), LONG __asm("d1"), unsigned long __asm("d2"))) \
  (_OCSP_SINGLERESP_add1_ext_i2d__bn - 6204))(_OCSP_SINGLERESP_add1_ext_i2d__bn, _OCSP_SINGLERESP_add1_ext_i2d_x, _OCSP_SINGLERESP_add1_ext_i2d_nid, _OCSP_SINGLERESP_add1_ext_i2d_value, _OCSP_SINGLERESP_add1_ext_i2d_crit, _OCSP_SINGLERESP_add1_ext_i2d_flags); \
});})

#define OCSP_SINGLERESP_add_ext(x, ex, loc) ({ \
  OCSP_SINGLERESP * _OCSP_SINGLERESP_add_ext_x = (x); \
  X509_EXTENSION * _OCSP_SINGLERESP_add_ext_ex = (ex); \
  LONG _OCSP_SINGLERESP_add_ext_loc = (loc); \
  ({ \
  register char * _OCSP_SINGLERESP_add_ext__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), OCSP_SINGLERESP * __asm("a0"), X509_EXTENSION * __asm("a1"), LONG __asm("d0"))) \
  (_OCSP_SINGLERESP_add_ext__bn - 6210))(_OCSP_SINGLERESP_add_ext__bn, _OCSP_SINGLERESP_add_ext_x, _OCSP_SINGLERESP_add_ext_ex, _OCSP_SINGLERESP_add_ext_loc); \
});})

#define OCSP_SINGLERESP_new() ({ \
  register char * _OCSP_SINGLERESP_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((OCSP_SINGLERESP * (*)(char * __asm("a6"))) \
  (_OCSP_SINGLERESP_new__bn - 6216))(_OCSP_SINGLERESP_new__bn); \
})

#define OCSP_SINGLERESP_free(a) ({ \
  OCSP_SINGLERESP * _OCSP_SINGLERESP_free_a = (a); \
  ({ \
  register char * _OCSP_SINGLERESP_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), OCSP_SINGLERESP * __asm("a0"))) \
  (_OCSP_SINGLERESP_free__bn - 6222))(_OCSP_SINGLERESP_free__bn, _OCSP_SINGLERESP_free_a); \
});})

#define d2i_OCSP_SINGLERESP(a, in, len) ({ \
  OCSP_SINGLERESP ** _d2i_OCSP_SINGLERESP_a = (a); \
  unsigned char ** _d2i_OCSP_SINGLERESP_in = (in); \
  long _d2i_OCSP_SINGLERESP_len = (len); \
  ({ \
  register char * _d2i_OCSP_SINGLERESP__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((OCSP_SINGLERESP * (*)(char * __asm("a6"), OCSP_SINGLERESP ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_OCSP_SINGLERESP__bn - 6228))(_d2i_OCSP_SINGLERESP__bn, _d2i_OCSP_SINGLERESP_a, _d2i_OCSP_SINGLERESP_in, _d2i_OCSP_SINGLERESP_len); \
});})

#define i2d_OCSP_SINGLERESP(a, out) ({ \
  OCSP_SINGLERESP * _i2d_OCSP_SINGLERESP_a = (a); \
  unsigned char ** _i2d_OCSP_SINGLERESP_out = (out); \
  ({ \
  register char * _i2d_OCSP_SINGLERESP__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), OCSP_SINGLERESP * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_OCSP_SINGLERESP__bn - 6234))(_i2d_OCSP_SINGLERESP__bn, _i2d_OCSP_SINGLERESP_a, _i2d_OCSP_SINGLERESP_out); \
});})

#define OCSP_SINGLERESP_it() ({ \
  register char * _OCSP_SINGLERESP_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_OCSP_SINGLERESP_it__bn - 6240))(_OCSP_SINGLERESP_it__bn); \
})

#define OCSP_CERTSTATUS_new() ({ \
  register char * _OCSP_CERTSTATUS_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((OCSP_CERTSTATUS * (*)(char * __asm("a6"))) \
  (_OCSP_CERTSTATUS_new__bn - 6246))(_OCSP_CERTSTATUS_new__bn); \
})

#define OCSP_CERTSTATUS_free(a) ({ \
  OCSP_CERTSTATUS * _OCSP_CERTSTATUS_free_a = (a); \
  ({ \
  register char * _OCSP_CERTSTATUS_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), OCSP_CERTSTATUS * __asm("a0"))) \
  (_OCSP_CERTSTATUS_free__bn - 6252))(_OCSP_CERTSTATUS_free__bn, _OCSP_CERTSTATUS_free_a); \
});})

#define d2i_OCSP_CERTSTATUS(a, in, len) ({ \
  OCSP_CERTSTATUS ** _d2i_OCSP_CERTSTATUS_a = (a); \
  unsigned char ** _d2i_OCSP_CERTSTATUS_in = (in); \
  long _d2i_OCSP_CERTSTATUS_len = (len); \
  ({ \
  register char * _d2i_OCSP_CERTSTATUS__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((OCSP_CERTSTATUS * (*)(char * __asm("a6"), OCSP_CERTSTATUS ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_OCSP_CERTSTATUS__bn - 6258))(_d2i_OCSP_CERTSTATUS__bn, _d2i_OCSP_CERTSTATUS_a, _d2i_OCSP_CERTSTATUS_in, _d2i_OCSP_CERTSTATUS_len); \
});})

#define i2d_OCSP_CERTSTATUS(a, out) ({ \
  OCSP_CERTSTATUS * _i2d_OCSP_CERTSTATUS_a = (a); \
  unsigned char ** _i2d_OCSP_CERTSTATUS_out = (out); \
  ({ \
  register char * _i2d_OCSP_CERTSTATUS__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), OCSP_CERTSTATUS * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_OCSP_CERTSTATUS__bn - 6264))(_i2d_OCSP_CERTSTATUS__bn, _i2d_OCSP_CERTSTATUS_a, _i2d_OCSP_CERTSTATUS_out); \
});})

#define OCSP_CERTSTATUS_it() ({ \
  register char * _OCSP_CERTSTATUS_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_OCSP_CERTSTATUS_it__bn - 6270))(_OCSP_CERTSTATUS_it__bn); \
})

#define OCSP_REVOKEDINFO_new() ({ \
  register char * _OCSP_REVOKEDINFO_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((OCSP_REVOKEDINFO * (*)(char * __asm("a6"))) \
  (_OCSP_REVOKEDINFO_new__bn - 6276))(_OCSP_REVOKEDINFO_new__bn); \
})

#define OCSP_REVOKEDINFO_free(a) ({ \
  OCSP_REVOKEDINFO * _OCSP_REVOKEDINFO_free_a = (a); \
  ({ \
  register char * _OCSP_REVOKEDINFO_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), OCSP_REVOKEDINFO * __asm("a0"))) \
  (_OCSP_REVOKEDINFO_free__bn - 6282))(_OCSP_REVOKEDINFO_free__bn, _OCSP_REVOKEDINFO_free_a); \
});})

#define d2i_OCSP_REVOKEDINFO(a, in, len) ({ \
  OCSP_REVOKEDINFO ** _d2i_OCSP_REVOKEDINFO_a = (a); \
  unsigned char ** _d2i_OCSP_REVOKEDINFO_in = (in); \
  long _d2i_OCSP_REVOKEDINFO_len = (len); \
  ({ \
  register char * _d2i_OCSP_REVOKEDINFO__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((OCSP_REVOKEDINFO * (*)(char * __asm("a6"), OCSP_REVOKEDINFO ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_OCSP_REVOKEDINFO__bn - 6288))(_d2i_OCSP_REVOKEDINFO__bn, _d2i_OCSP_REVOKEDINFO_a, _d2i_OCSP_REVOKEDINFO_in, _d2i_OCSP_REVOKEDINFO_len); \
});})

#define i2d_OCSP_REVOKEDINFO(a, out) ({ \
  OCSP_REVOKEDINFO * _i2d_OCSP_REVOKEDINFO_a = (a); \
  unsigned char ** _i2d_OCSP_REVOKEDINFO_out = (out); \
  ({ \
  register char * _i2d_OCSP_REVOKEDINFO__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), OCSP_REVOKEDINFO * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_OCSP_REVOKEDINFO__bn - 6294))(_i2d_OCSP_REVOKEDINFO__bn, _i2d_OCSP_REVOKEDINFO_a, _i2d_OCSP_REVOKEDINFO_out); \
});})

#define OCSP_REVOKEDINFO_it() ({ \
  register char * _OCSP_REVOKEDINFO_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_OCSP_REVOKEDINFO_it__bn - 6300))(_OCSP_REVOKEDINFO_it__bn); \
})

#define OCSP_BASICRESP_new() ({ \
  register char * _OCSP_BASICRESP_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((OCSP_BASICRESP * (*)(char * __asm("a6"))) \
  (_OCSP_BASICRESP_new__bn - 6306))(_OCSP_BASICRESP_new__bn); \
})

#define OCSP_BASICRESP_free(a) ({ \
  OCSP_BASICRESP * _OCSP_BASICRESP_free_a = (a); \
  ({ \
  register char * _OCSP_BASICRESP_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), OCSP_BASICRESP * __asm("a0"))) \
  (_OCSP_BASICRESP_free__bn - 6312))(_OCSP_BASICRESP_free__bn, _OCSP_BASICRESP_free_a); \
});})

#define d2i_OCSP_BASICRESP(a, in, len) ({ \
  OCSP_BASICRESP ** _d2i_OCSP_BASICRESP_a = (a); \
  unsigned char ** _d2i_OCSP_BASICRESP_in = (in); \
  long _d2i_OCSP_BASICRESP_len = (len); \
  ({ \
  register char * _d2i_OCSP_BASICRESP__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((OCSP_BASICRESP * (*)(char * __asm("a6"), OCSP_BASICRESP ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_OCSP_BASICRESP__bn - 6318))(_d2i_OCSP_BASICRESP__bn, _d2i_OCSP_BASICRESP_a, _d2i_OCSP_BASICRESP_in, _d2i_OCSP_BASICRESP_len); \
});})

#define i2d_OCSP_BASICRESP(a, out) ({ \
  OCSP_BASICRESP * _i2d_OCSP_BASICRESP_a = (a); \
  unsigned char ** _i2d_OCSP_BASICRESP_out = (out); \
  ({ \
  register char * _i2d_OCSP_BASICRESP__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), OCSP_BASICRESP * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_OCSP_BASICRESP__bn - 6324))(_i2d_OCSP_BASICRESP__bn, _i2d_OCSP_BASICRESP_a, _i2d_OCSP_BASICRESP_out); \
});})

#define OCSP_BASICRESP_it() ({ \
  register char * _OCSP_BASICRESP_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_OCSP_BASICRESP_it__bn - 6330))(_OCSP_BASICRESP_it__bn); \
})

#define OCSP_RESPDATA_new() ({ \
  register char * _OCSP_RESPDATA_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((OCSP_RESPDATA * (*)(char * __asm("a6"))) \
  (_OCSP_RESPDATA_new__bn - 6336))(_OCSP_RESPDATA_new__bn); \
})

#define OCSP_RESPDATA_free(a) ({ \
  OCSP_RESPDATA * _OCSP_RESPDATA_free_a = (a); \
  ({ \
  register char * _OCSP_RESPDATA_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), OCSP_RESPDATA * __asm("a0"))) \
  (_OCSP_RESPDATA_free__bn - 6342))(_OCSP_RESPDATA_free__bn, _OCSP_RESPDATA_free_a); \
});})

#define d2i_OCSP_RESPDATA(a, in, len) ({ \
  OCSP_RESPDATA ** _d2i_OCSP_RESPDATA_a = (a); \
  unsigned char ** _d2i_OCSP_RESPDATA_in = (in); \
  long _d2i_OCSP_RESPDATA_len = (len); \
  ({ \
  register char * _d2i_OCSP_RESPDATA__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((OCSP_RESPDATA * (*)(char * __asm("a6"), OCSP_RESPDATA ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_OCSP_RESPDATA__bn - 6348))(_d2i_OCSP_RESPDATA__bn, _d2i_OCSP_RESPDATA_a, _d2i_OCSP_RESPDATA_in, _d2i_OCSP_RESPDATA_len); \
});})

#define i2d_OCSP_RESPDATA(a, out) ({ \
  OCSP_RESPDATA * _i2d_OCSP_RESPDATA_a = (a); \
  unsigned char ** _i2d_OCSP_RESPDATA_out = (out); \
  ({ \
  register char * _i2d_OCSP_RESPDATA__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), OCSP_RESPDATA * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_OCSP_RESPDATA__bn - 6354))(_i2d_OCSP_RESPDATA__bn, _i2d_OCSP_RESPDATA_a, _i2d_OCSP_RESPDATA_out); \
});})

#define OCSP_RESPDATA_it() ({ \
  register char * _OCSP_RESPDATA_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_OCSP_RESPDATA_it__bn - 6360))(_OCSP_RESPDATA_it__bn); \
})

#define OCSP_RESPID_new() ({ \
  register char * _OCSP_RESPID_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((OCSP_RESPID * (*)(char * __asm("a6"))) \
  (_OCSP_RESPID_new__bn - 6366))(_OCSP_RESPID_new__bn); \
})

#define OCSP_RESPID_free(a) ({ \
  OCSP_RESPID * _OCSP_RESPID_free_a = (a); \
  ({ \
  register char * _OCSP_RESPID_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), OCSP_RESPID * __asm("a0"))) \
  (_OCSP_RESPID_free__bn - 6372))(_OCSP_RESPID_free__bn, _OCSP_RESPID_free_a); \
});})

#define d2i_OCSP_RESPID(a, in, len) ({ \
  OCSP_RESPID ** _d2i_OCSP_RESPID_a = (a); \
  unsigned char ** _d2i_OCSP_RESPID_in = (in); \
  long _d2i_OCSP_RESPID_len = (len); \
  ({ \
  register char * _d2i_OCSP_RESPID__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((OCSP_RESPID * (*)(char * __asm("a6"), OCSP_RESPID ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_OCSP_RESPID__bn - 6378))(_d2i_OCSP_RESPID__bn, _d2i_OCSP_RESPID_a, _d2i_OCSP_RESPID_in, _d2i_OCSP_RESPID_len); \
});})

#define i2d_OCSP_RESPID(a, out) ({ \
  OCSP_RESPID * _i2d_OCSP_RESPID_a = (a); \
  unsigned char ** _i2d_OCSP_RESPID_out = (out); \
  ({ \
  register char * _i2d_OCSP_RESPID__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), OCSP_RESPID * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_OCSP_RESPID__bn - 6384))(_i2d_OCSP_RESPID__bn, _i2d_OCSP_RESPID_a, _i2d_OCSP_RESPID_out); \
});})

#define OCSP_RESPID_it() ({ \
  register char * _OCSP_RESPID_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_OCSP_RESPID_it__bn - 6390))(_OCSP_RESPID_it__bn); \
})

#define OCSP_RESPONSE_new() ({ \
  register char * _OCSP_RESPONSE_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((OCSP_RESPONSE * (*)(char * __asm("a6"))) \
  (_OCSP_RESPONSE_new__bn - 6396))(_OCSP_RESPONSE_new__bn); \
})

#define OCSP_RESPONSE_free(a) ({ \
  OCSP_RESPONSE * _OCSP_RESPONSE_free_a = (a); \
  ({ \
  register char * _OCSP_RESPONSE_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), OCSP_RESPONSE * __asm("a0"))) \
  (_OCSP_RESPONSE_free__bn - 6402))(_OCSP_RESPONSE_free__bn, _OCSP_RESPONSE_free_a); \
});})

#define d2i_OCSP_RESPONSE(a, in, len) ({ \
  OCSP_RESPONSE ** _d2i_OCSP_RESPONSE_a = (a); \
  unsigned char ** _d2i_OCSP_RESPONSE_in = (in); \
  long _d2i_OCSP_RESPONSE_len = (len); \
  ({ \
  register char * _d2i_OCSP_RESPONSE__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((OCSP_RESPONSE * (*)(char * __asm("a6"), OCSP_RESPONSE ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_OCSP_RESPONSE__bn - 6408))(_d2i_OCSP_RESPONSE__bn, _d2i_OCSP_RESPONSE_a, _d2i_OCSP_RESPONSE_in, _d2i_OCSP_RESPONSE_len); \
});})

#define i2d_OCSP_RESPONSE(a, out) ({ \
  OCSP_RESPONSE * _i2d_OCSP_RESPONSE_a = (a); \
  unsigned char ** _i2d_OCSP_RESPONSE_out = (out); \
  ({ \
  register char * _i2d_OCSP_RESPONSE__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), OCSP_RESPONSE * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_OCSP_RESPONSE__bn - 6414))(_i2d_OCSP_RESPONSE__bn, _i2d_OCSP_RESPONSE_a, _i2d_OCSP_RESPONSE_out); \
});})

#define OCSP_RESPONSE_it() ({ \
  register char * _OCSP_RESPONSE_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_OCSP_RESPONSE_it__bn - 6420))(_OCSP_RESPONSE_it__bn); \
})

#define OCSP_RESPBYTES_new() ({ \
  register char * _OCSP_RESPBYTES_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((OCSP_RESPBYTES * (*)(char * __asm("a6"))) \
  (_OCSP_RESPBYTES_new__bn - 6426))(_OCSP_RESPBYTES_new__bn); \
})

#define OCSP_RESPBYTES_free(a) ({ \
  OCSP_RESPBYTES * _OCSP_RESPBYTES_free_a = (a); \
  ({ \
  register char * _OCSP_RESPBYTES_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), OCSP_RESPBYTES * __asm("a0"))) \
  (_OCSP_RESPBYTES_free__bn - 6432))(_OCSP_RESPBYTES_free__bn, _OCSP_RESPBYTES_free_a); \
});})

#define d2i_OCSP_RESPBYTES(a, in, len) ({ \
  OCSP_RESPBYTES ** _d2i_OCSP_RESPBYTES_a = (a); \
  unsigned char ** _d2i_OCSP_RESPBYTES_in = (in); \
  long _d2i_OCSP_RESPBYTES_len = (len); \
  ({ \
  register char * _d2i_OCSP_RESPBYTES__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((OCSP_RESPBYTES * (*)(char * __asm("a6"), OCSP_RESPBYTES ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_OCSP_RESPBYTES__bn - 6438))(_d2i_OCSP_RESPBYTES__bn, _d2i_OCSP_RESPBYTES_a, _d2i_OCSP_RESPBYTES_in, _d2i_OCSP_RESPBYTES_len); \
});})

#define i2d_OCSP_RESPBYTES(a, out) ({ \
  OCSP_RESPBYTES * _i2d_OCSP_RESPBYTES_a = (a); \
  unsigned char ** _i2d_OCSP_RESPBYTES_out = (out); \
  ({ \
  register char * _i2d_OCSP_RESPBYTES__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), OCSP_RESPBYTES * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_OCSP_RESPBYTES__bn - 6444))(_i2d_OCSP_RESPBYTES__bn, _i2d_OCSP_RESPBYTES_a, _i2d_OCSP_RESPBYTES_out); \
});})

#define OCSP_RESPBYTES_it() ({ \
  register char * _OCSP_RESPBYTES_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_OCSP_RESPBYTES_it__bn - 6450))(_OCSP_RESPBYTES_it__bn); \
})

#define OCSP_ONEREQ_new() ({ \
  register char * _OCSP_ONEREQ_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((OCSP_ONEREQ * (*)(char * __asm("a6"))) \
  (_OCSP_ONEREQ_new__bn - 6456))(_OCSP_ONEREQ_new__bn); \
})

#define OCSP_ONEREQ_free(a) ({ \
  OCSP_ONEREQ * _OCSP_ONEREQ_free_a = (a); \
  ({ \
  register char * _OCSP_ONEREQ_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), OCSP_ONEREQ * __asm("a0"))) \
  (_OCSP_ONEREQ_free__bn - 6462))(_OCSP_ONEREQ_free__bn, _OCSP_ONEREQ_free_a); \
});})

#define d2i_OCSP_ONEREQ(a, in, len) ({ \
  OCSP_ONEREQ ** _d2i_OCSP_ONEREQ_a = (a); \
  unsigned char ** _d2i_OCSP_ONEREQ_in = (in); \
  long _d2i_OCSP_ONEREQ_len = (len); \
  ({ \
  register char * _d2i_OCSP_ONEREQ__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((OCSP_ONEREQ * (*)(char * __asm("a6"), OCSP_ONEREQ ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_OCSP_ONEREQ__bn - 6468))(_d2i_OCSP_ONEREQ__bn, _d2i_OCSP_ONEREQ_a, _d2i_OCSP_ONEREQ_in, _d2i_OCSP_ONEREQ_len); \
});})

#define i2d_OCSP_ONEREQ(a, out) ({ \
  OCSP_ONEREQ * _i2d_OCSP_ONEREQ_a = (a); \
  unsigned char ** _i2d_OCSP_ONEREQ_out = (out); \
  ({ \
  register char * _i2d_OCSP_ONEREQ__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), OCSP_ONEREQ * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_OCSP_ONEREQ__bn - 6474))(_i2d_OCSP_ONEREQ__bn, _i2d_OCSP_ONEREQ_a, _i2d_OCSP_ONEREQ_out); \
});})

#define OCSP_ONEREQ_it() ({ \
  register char * _OCSP_ONEREQ_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_OCSP_ONEREQ_it__bn - 6480))(_OCSP_ONEREQ_it__bn); \
})

#define OCSP_CERTID_new() ({ \
  register char * _OCSP_CERTID_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((OCSP_CERTID * (*)(char * __asm("a6"))) \
  (_OCSP_CERTID_new__bn - 6486))(_OCSP_CERTID_new__bn); \
})

#define OCSP_CERTID_free(a) ({ \
  OCSP_CERTID * _OCSP_CERTID_free_a = (a); \
  ({ \
  register char * _OCSP_CERTID_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), OCSP_CERTID * __asm("a0"))) \
  (_OCSP_CERTID_free__bn - 6492))(_OCSP_CERTID_free__bn, _OCSP_CERTID_free_a); \
});})

#define d2i_OCSP_CERTID(a, in, len) ({ \
  OCSP_CERTID ** _d2i_OCSP_CERTID_a = (a); \
  unsigned char ** _d2i_OCSP_CERTID_in = (in); \
  long _d2i_OCSP_CERTID_len = (len); \
  ({ \
  register char * _d2i_OCSP_CERTID__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((OCSP_CERTID * (*)(char * __asm("a6"), OCSP_CERTID ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_OCSP_CERTID__bn - 6498))(_d2i_OCSP_CERTID__bn, _d2i_OCSP_CERTID_a, _d2i_OCSP_CERTID_in, _d2i_OCSP_CERTID_len); \
});})

#define i2d_OCSP_CERTID(a, out) ({ \
  OCSP_CERTID * _i2d_OCSP_CERTID_a = (a); \
  unsigned char ** _i2d_OCSP_CERTID_out = (out); \
  ({ \
  register char * _i2d_OCSP_CERTID__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), OCSP_CERTID * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_OCSP_CERTID__bn - 6504))(_i2d_OCSP_CERTID__bn, _i2d_OCSP_CERTID_a, _i2d_OCSP_CERTID_out); \
});})

#define OCSP_CERTID_it() ({ \
  register char * _OCSP_CERTID_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_OCSP_CERTID_it__bn - 6510))(_OCSP_CERTID_it__bn); \
})

#define OCSP_REQUEST_new() ({ \
  register char * _OCSP_REQUEST_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((OCSP_REQUEST * (*)(char * __asm("a6"))) \
  (_OCSP_REQUEST_new__bn - 6516))(_OCSP_REQUEST_new__bn); \
})

#define OCSP_REQUEST_free(a) ({ \
  OCSP_REQUEST * _OCSP_REQUEST_free_a = (a); \
  ({ \
  register char * _OCSP_REQUEST_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), OCSP_REQUEST * __asm("a0"))) \
  (_OCSP_REQUEST_free__bn - 6522))(_OCSP_REQUEST_free__bn, _OCSP_REQUEST_free_a); \
});})

#define d2i_OCSP_REQUEST(a, in, len) ({ \
  OCSP_REQUEST ** _d2i_OCSP_REQUEST_a = (a); \
  unsigned char ** _d2i_OCSP_REQUEST_in = (in); \
  long _d2i_OCSP_REQUEST_len = (len); \
  ({ \
  register char * _d2i_OCSP_REQUEST__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((OCSP_REQUEST * (*)(char * __asm("a6"), OCSP_REQUEST ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_OCSP_REQUEST__bn - 6528))(_d2i_OCSP_REQUEST__bn, _d2i_OCSP_REQUEST_a, _d2i_OCSP_REQUEST_in, _d2i_OCSP_REQUEST_len); \
});})

#define i2d_OCSP_REQUEST(a, out) ({ \
  OCSP_REQUEST * _i2d_OCSP_REQUEST_a = (a); \
  unsigned char ** _i2d_OCSP_REQUEST_out = (out); \
  ({ \
  register char * _i2d_OCSP_REQUEST__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), OCSP_REQUEST * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_OCSP_REQUEST__bn - 6534))(_i2d_OCSP_REQUEST__bn, _i2d_OCSP_REQUEST_a, _i2d_OCSP_REQUEST_out); \
});})

#define OCSP_REQUEST_it() ({ \
  register char * _OCSP_REQUEST_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_OCSP_REQUEST_it__bn - 6540))(_OCSP_REQUEST_it__bn); \
})

#define OCSP_SIGNATURE_new() ({ \
  register char * _OCSP_SIGNATURE_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((OCSP_SIGNATURE * (*)(char * __asm("a6"))) \
  (_OCSP_SIGNATURE_new__bn - 6546))(_OCSP_SIGNATURE_new__bn); \
})

#define OCSP_SIGNATURE_free(a) ({ \
  OCSP_SIGNATURE * _OCSP_SIGNATURE_free_a = (a); \
  ({ \
  register char * _OCSP_SIGNATURE_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), OCSP_SIGNATURE * __asm("a0"))) \
  (_OCSP_SIGNATURE_free__bn - 6552))(_OCSP_SIGNATURE_free__bn, _OCSP_SIGNATURE_free_a); \
});})

#define d2i_OCSP_SIGNATURE(a, in, len) ({ \
  OCSP_SIGNATURE ** _d2i_OCSP_SIGNATURE_a = (a); \
  unsigned char ** _d2i_OCSP_SIGNATURE_in = (in); \
  long _d2i_OCSP_SIGNATURE_len = (len); \
  ({ \
  register char * _d2i_OCSP_SIGNATURE__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((OCSP_SIGNATURE * (*)(char * __asm("a6"), OCSP_SIGNATURE ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_OCSP_SIGNATURE__bn - 6558))(_d2i_OCSP_SIGNATURE__bn, _d2i_OCSP_SIGNATURE_a, _d2i_OCSP_SIGNATURE_in, _d2i_OCSP_SIGNATURE_len); \
});})

#define i2d_OCSP_SIGNATURE(a, out) ({ \
  OCSP_SIGNATURE * _i2d_OCSP_SIGNATURE_a = (a); \
  unsigned char ** _i2d_OCSP_SIGNATURE_out = (out); \
  ({ \
  register char * _i2d_OCSP_SIGNATURE__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), OCSP_SIGNATURE * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_OCSP_SIGNATURE__bn - 6564))(_i2d_OCSP_SIGNATURE__bn, _i2d_OCSP_SIGNATURE_a, _i2d_OCSP_SIGNATURE_out); \
});})

#define OCSP_SIGNATURE_it() ({ \
  register char * _OCSP_SIGNATURE_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_OCSP_SIGNATURE_it__bn - 6570))(_OCSP_SIGNATURE_it__bn); \
})

#define OCSP_REQINFO_new() ({ \
  register char * _OCSP_REQINFO_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((OCSP_REQINFO * (*)(char * __asm("a6"))) \
  (_OCSP_REQINFO_new__bn - 6576))(_OCSP_REQINFO_new__bn); \
})

#define OCSP_REQINFO_free(a) ({ \
  OCSP_REQINFO * _OCSP_REQINFO_free_a = (a); \
  ({ \
  register char * _OCSP_REQINFO_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), OCSP_REQINFO * __asm("a0"))) \
  (_OCSP_REQINFO_free__bn - 6582))(_OCSP_REQINFO_free__bn, _OCSP_REQINFO_free_a); \
});})

#define d2i_OCSP_REQINFO(a, in, len) ({ \
  OCSP_REQINFO ** _d2i_OCSP_REQINFO_a = (a); \
  unsigned char ** _d2i_OCSP_REQINFO_in = (in); \
  long _d2i_OCSP_REQINFO_len = (len); \
  ({ \
  register char * _d2i_OCSP_REQINFO__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((OCSP_REQINFO * (*)(char * __asm("a6"), OCSP_REQINFO ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_OCSP_REQINFO__bn - 6588))(_d2i_OCSP_REQINFO__bn, _d2i_OCSP_REQINFO_a, _d2i_OCSP_REQINFO_in, _d2i_OCSP_REQINFO_len); \
});})

#define i2d_OCSP_REQINFO(a, out) ({ \
  OCSP_REQINFO * _i2d_OCSP_REQINFO_a = (a); \
  unsigned char ** _i2d_OCSP_REQINFO_out = (out); \
  ({ \
  register char * _i2d_OCSP_REQINFO__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), OCSP_REQINFO * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_OCSP_REQINFO__bn - 6594))(_i2d_OCSP_REQINFO__bn, _i2d_OCSP_REQINFO_a, _i2d_OCSP_REQINFO_out); \
});})

#define OCSP_REQINFO_it() ({ \
  register char * _OCSP_REQINFO_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_OCSP_REQINFO_it__bn - 6600))(_OCSP_REQINFO_it__bn); \
})

#define OCSP_CRLID_new() ({ \
  register char * _OCSP_CRLID_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((OCSP_CRLID * (*)(char * __asm("a6"))) \
  (_OCSP_CRLID_new__bn - 6606))(_OCSP_CRLID_new__bn); \
})

#define OCSP_CRLID_free(a) ({ \
  OCSP_CRLID * _OCSP_CRLID_free_a = (a); \
  ({ \
  register char * _OCSP_CRLID_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), OCSP_CRLID * __asm("a0"))) \
  (_OCSP_CRLID_free__bn - 6612))(_OCSP_CRLID_free__bn, _OCSP_CRLID_free_a); \
});})

#define d2i_OCSP_CRLID(a, in, len) ({ \
  OCSP_CRLID ** _d2i_OCSP_CRLID_a = (a); \
  unsigned char ** _d2i_OCSP_CRLID_in = (in); \
  long _d2i_OCSP_CRLID_len = (len); \
  ({ \
  register char * _d2i_OCSP_CRLID__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((OCSP_CRLID * (*)(char * __asm("a6"), OCSP_CRLID ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_OCSP_CRLID__bn - 6618))(_d2i_OCSP_CRLID__bn, _d2i_OCSP_CRLID_a, _d2i_OCSP_CRLID_in, _d2i_OCSP_CRLID_len); \
});})

#define i2d_OCSP_CRLID(a, out) ({ \
  OCSP_CRLID * _i2d_OCSP_CRLID_a = (a); \
  unsigned char ** _i2d_OCSP_CRLID_out = (out); \
  ({ \
  register char * _i2d_OCSP_CRLID__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), OCSP_CRLID * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_OCSP_CRLID__bn - 6624))(_i2d_OCSP_CRLID__bn, _i2d_OCSP_CRLID_a, _i2d_OCSP_CRLID_out); \
});})

#define OCSP_CRLID_it() ({ \
  register char * _OCSP_CRLID_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_OCSP_CRLID_it__bn - 6630))(_OCSP_CRLID_it__bn); \
})

#define OCSP_SERVICELOC_new() ({ \
  register char * _OCSP_SERVICELOC_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((OCSP_SERVICELOC * (*)(char * __asm("a6"))) \
  (_OCSP_SERVICELOC_new__bn - 6636))(_OCSP_SERVICELOC_new__bn); \
})

#define OCSP_SERVICELOC_free(a) ({ \
  OCSP_SERVICELOC * _OCSP_SERVICELOC_free_a = (a); \
  ({ \
  register char * _OCSP_SERVICELOC_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), OCSP_SERVICELOC * __asm("a0"))) \
  (_OCSP_SERVICELOC_free__bn - 6642))(_OCSP_SERVICELOC_free__bn, _OCSP_SERVICELOC_free_a); \
});})

#define d2i_OCSP_SERVICELOC(a, in, len) ({ \
  OCSP_SERVICELOC ** _d2i_OCSP_SERVICELOC_a = (a); \
  unsigned char ** _d2i_OCSP_SERVICELOC_in = (in); \
  long _d2i_OCSP_SERVICELOC_len = (len); \
  ({ \
  register char * _d2i_OCSP_SERVICELOC__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((OCSP_SERVICELOC * (*)(char * __asm("a6"), OCSP_SERVICELOC ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_OCSP_SERVICELOC__bn - 6648))(_d2i_OCSP_SERVICELOC__bn, _d2i_OCSP_SERVICELOC_a, _d2i_OCSP_SERVICELOC_in, _d2i_OCSP_SERVICELOC_len); \
});})

#define i2d_OCSP_SERVICELOC(a, out) ({ \
  OCSP_SERVICELOC * _i2d_OCSP_SERVICELOC_a = (a); \
  unsigned char ** _i2d_OCSP_SERVICELOC_out = (out); \
  ({ \
  register char * _i2d_OCSP_SERVICELOC__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), OCSP_SERVICELOC * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_OCSP_SERVICELOC__bn - 6654))(_i2d_OCSP_SERVICELOC__bn, _i2d_OCSP_SERVICELOC_a, _i2d_OCSP_SERVICELOC_out); \
});})

#define OCSP_SERVICELOC_it() ({ \
  register char * _OCSP_SERVICELOC_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_OCSP_SERVICELOC_it__bn - 6660))(_OCSP_SERVICELOC_it__bn); \
})

#define OCSP_response_status_str(s) ({ \
  long _OCSP_response_status_str_s = (s); \
  ({ \
  register char * _OCSP_response_status_str__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((char * (*)(char * __asm("a6"), long __asm("d0"))) \
  (_OCSP_response_status_str__bn - 6666))(_OCSP_response_status_str__bn, _OCSP_response_status_str_s); \
});})

#define OCSP_cert_status_str(s) ({ \
  long _OCSP_cert_status_str_s = (s); \
  ({ \
  register char * _OCSP_cert_status_str__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((char * (*)(char * __asm("a6"), long __asm("d0"))) \
  (_OCSP_cert_status_str__bn - 6672))(_OCSP_cert_status_str__bn, _OCSP_cert_status_str_s); \
});})

#define OCSP_crl_reason_str(s) ({ \
  long _OCSP_crl_reason_str_s = (s); \
  ({ \
  register char * _OCSP_crl_reason_str__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((char * (*)(char * __asm("a6"), long __asm("d0"))) \
  (_OCSP_crl_reason_str__bn - 6678))(_OCSP_crl_reason_str__bn, _OCSP_crl_reason_str_s); \
});})

#define OCSP_REQUEST_print(bp, a, flags) ({ \
  BIO * _OCSP_REQUEST_print_bp = (bp); \
  OCSP_REQUEST* _OCSP_REQUEST_print_a = (a); \
  unsigned long _OCSP_REQUEST_print_flags = (flags); \
  ({ \
  register char * _OCSP_REQUEST_print__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIO * __asm("a0"), OCSP_REQUEST* __asm("a1"), unsigned long __asm("d0"))) \
  (_OCSP_REQUEST_print__bn - 6684))(_OCSP_REQUEST_print__bn, _OCSP_REQUEST_print_bp, _OCSP_REQUEST_print_a, _OCSP_REQUEST_print_flags); \
});})

#define OCSP_RESPONSE_print(bp, o, flags) ({ \
  BIO * _OCSP_RESPONSE_print_bp = (bp); \
  OCSP_RESPONSE* _OCSP_RESPONSE_print_o = (o); \
  unsigned long _OCSP_RESPONSE_print_flags = (flags); \
  ({ \
  register char * _OCSP_RESPONSE_print__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIO * __asm("a0"), OCSP_RESPONSE* __asm("a1"), unsigned long __asm("d0"))) \
  (_OCSP_RESPONSE_print__bn - 6690))(_OCSP_RESPONSE_print__bn, _OCSP_RESPONSE_print_bp, _OCSP_RESPONSE_print_o, _OCSP_RESPONSE_print_flags); \
});})

#define OCSP_basic_verify(bs, certs, st, flags) ({ \
  OCSP_BASICRESP * _OCSP_basic_verify_bs = (bs); \
  STACK_OF(X509) * _OCSP_basic_verify_certs = (certs); \
  X509_STORE * _OCSP_basic_verify_st = (st); \
  unsigned long _OCSP_basic_verify_flags = (flags); \
  ({ \
  register char * _OCSP_basic_verify__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), OCSP_BASICRESP * __asm("a0"), STACK_OF(X509) * __asm("a1"), X509_STORE * __asm("a2"), unsigned long __asm("d0"))) \
  (_OCSP_basic_verify__bn - 6696))(_OCSP_basic_verify__bn, _OCSP_basic_verify_bs, _OCSP_basic_verify_certs, _OCSP_basic_verify_st, _OCSP_basic_verify_flags); \
});})

#define ERR_load_OCSP_strings() ({ \
  register char * _ERR_load_OCSP_strings__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"))) \
  (_ERR_load_OCSP_strings__bn - 6702))(_ERR_load_OCSP_strings__bn); \
})

#define PEM_get_EVP_CIPHER_INFO(header, cipher) ({ \
  char * _PEM_get_EVP_CIPHER_INFO_header = (header); \
  EVP_CIPHER_INFO * _PEM_get_EVP_CIPHER_INFO_cipher = (cipher); \
  ({ \
  register char * _PEM_get_EVP_CIPHER_INFO__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), char * __asm("a0"), EVP_CIPHER_INFO * __asm("a1"))) \
  (_PEM_get_EVP_CIPHER_INFO__bn - 6708))(_PEM_get_EVP_CIPHER_INFO__bn, _PEM_get_EVP_CIPHER_INFO_header, _PEM_get_EVP_CIPHER_INFO_cipher); \
});})

#define PEM_do_header(cipher, data, len, callback, u) ({ \
  EVP_CIPHER_INFO * _PEM_do_header_cipher = (cipher); \
  unsigned char * _PEM_do_header_data = (data); \
  long * _PEM_do_header_len = (len); \
  pem_password_cb * (*_PEM_do_header_callback)(char *buf, int size, int rwflag, void *userdata) = (callback); \
  void * _PEM_do_header_u = (u); \
  ({ \
  register char * _PEM_do_header__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), EVP_CIPHER_INFO * __asm("a0"), unsigned char * __asm("a1"), long * __asm("a2"), pem_password_cb * (*)(char *buf, int size, int rwflag, void *userdata) __asm("a3"), void * __asm("d0"))) \
  (_PEM_do_header__bn - 6714))(_PEM_do_header__bn, _PEM_do_header_cipher, _PEM_do_header_data, _PEM_do_header_len, _PEM_do_header_callback, _PEM_do_header_u); \
});})

#define PEM_read_bio(bp, name, header, data, len) ({ \
  BIO * _PEM_read_bio_bp = (bp); \
  char ** _PEM_read_bio_name = (name); \
  char ** _PEM_read_bio_header = (header); \
  unsigned char ** _PEM_read_bio_data = (data); \
  long * _PEM_read_bio_len = (len); \
  ({ \
  register char * _PEM_read_bio__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIO * __asm("a0"), char ** __asm("a1"), char ** __asm("a2"), unsigned char ** __asm("a3"), long * __asm("d0"))) \
  (_PEM_read_bio__bn - 6720))(_PEM_read_bio__bn, _PEM_read_bio_bp, _PEM_read_bio_name, _PEM_read_bio_header, _PEM_read_bio_data, _PEM_read_bio_len); \
});})

#define PEM_write_bio(bp, name, hdr, data, len) ({ \
  BIO * _PEM_write_bio_bp = (bp); \
  const char * _PEM_write_bio_name = (name); \
  char * _PEM_write_bio_hdr = (hdr); \
  unsigned char * _PEM_write_bio_data = (data); \
  long _PEM_write_bio_len = (len); \
  ({ \
  register char * _PEM_write_bio__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIO * __asm("a0"), const char * __asm("a1"), char * __asm("a2"), unsigned char * __asm("a3"), long __asm("d0"))) \
  (_PEM_write_bio__bn - 6726))(_PEM_write_bio__bn, _PEM_write_bio_bp, _PEM_write_bio_name, _PEM_write_bio_hdr, _PEM_write_bio_data, _PEM_write_bio_len); \
});})

#define PEM_bytes_read_bio(pdata, plen, pnm, name, bp, cb, u) ({ \
  unsigned char ** _PEM_bytes_read_bio_pdata = (pdata); \
  long * _PEM_bytes_read_bio_plen = (plen); \
  char ** _PEM_bytes_read_bio_pnm = (pnm); \
  const char * _PEM_bytes_read_bio_name = (name); \
  BIO * _PEM_bytes_read_bio_bp = (bp); \
  pem_password_cb * (*_PEM_bytes_read_bio_cb)(char *buf, int size, int rwflag, void *userdata) = (cb); \
  void * _PEM_bytes_read_bio_u = (u); \
  ({ \
  register char * _PEM_bytes_read_bio__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), unsigned char ** __asm("a0"), long * __asm("a1"), char ** __asm("a2"), const char * __asm("a3"), BIO * __asm("d0"), pem_password_cb * (*)(char *buf, int size, int rwflag, void *userdata) __asm("d1"), void * __asm("d2"))) \
  (_PEM_bytes_read_bio__bn - 6732))(_PEM_bytes_read_bio__bn, _PEM_bytes_read_bio_pdata, _PEM_bytes_read_bio_plen, _PEM_bytes_read_bio_pnm, _PEM_bytes_read_bio_name, _PEM_bytes_read_bio_bp, _PEM_bytes_read_bio_cb, _PEM_bytes_read_bio_u); \
});})

#define PEM_ASN1_read_bio(d2i, name, bp, x, cb, u) ({ \
  char * (*_PEM_ASN1_read_bio_d2i)() = (d2i); \
  const char * _PEM_ASN1_read_bio_name = (name); \
  BIO * _PEM_ASN1_read_bio_bp = (bp); \
  char ** _PEM_ASN1_read_bio_x = (x); \
  pem_password_cb * (*_PEM_ASN1_read_bio_cb)(char *buf, int size, int rwflag, void *userdata) = (cb); \
  void * _PEM_ASN1_read_bio_u = (u); \
  ({ \
  register char * _PEM_ASN1_read_bio__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((char * (*)(char * __asm("a6"), char * (*)() __asm("a0"), const char * __asm("a1"), BIO * __asm("a2"), char ** __asm("a3"), pem_password_cb * (*)(char *buf, int size, int rwflag, void *userdata) __asm("d0"), void * __asm("d1"))) \
  (_PEM_ASN1_read_bio__bn - 6738))(_PEM_ASN1_read_bio__bn, _PEM_ASN1_read_bio_d2i, _PEM_ASN1_read_bio_name, _PEM_ASN1_read_bio_bp, _PEM_ASN1_read_bio_x, _PEM_ASN1_read_bio_cb, _PEM_ASN1_read_bio_u); \
});})

#define PEM_ASN1_write_bio(i2d, name, bp, x, enc, kstr, klen, cb, u) ({ \
  int (*_PEM_ASN1_write_bio_i2d)() = (i2d); \
  const char * _PEM_ASN1_write_bio_name = (name); \
  BIO * _PEM_ASN1_write_bio_bp = (bp); \
  char * _PEM_ASN1_write_bio_x = (x); \
  const EVP_CIPHER * _PEM_ASN1_write_bio_enc = (enc); \
  unsigned char * _PEM_ASN1_write_bio_kstr = (kstr); \
  LONG _PEM_ASN1_write_bio_klen = (klen); \
  pem_password_cb * (*_PEM_ASN1_write_bio_cb)(char *buf, int size, int rwflag, void *userdata) = (cb); \
  void * _PEM_ASN1_write_bio_u = (u); \
  ({ \
  register char * _PEM_ASN1_write_bio__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), int (*)() __asm("a0"), const char * __asm("a1"), BIO * __asm("a2"), char * __asm("a3"), const EVP_CIPHER * __asm("d0"), unsigned char * __asm("d1"), LONG __asm("d2"), pem_password_cb * (*)(char *buf, int size, int rwflag, void *userdata) __asm("d3"), void * __asm("d4"))) \
  (_PEM_ASN1_write_bio__bn - 6744))(_PEM_ASN1_write_bio__bn, _PEM_ASN1_write_bio_i2d, _PEM_ASN1_write_bio_name, _PEM_ASN1_write_bio_bp, _PEM_ASN1_write_bio_x, _PEM_ASN1_write_bio_enc, _PEM_ASN1_write_bio_kstr, _PEM_ASN1_write_bio_klen, _PEM_ASN1_write_bio_cb, _PEM_ASN1_write_bio_u); \
});})

#define PEM_X509_INFO_read_bio(bp, sk, cb, u) ({ \
  BIO * _PEM_X509_INFO_read_bio_bp = (bp); \
  STACK_OF(X509_INFO) * _PEM_X509_INFO_read_bio_sk = (sk); \
  pem_password_cb * (*_PEM_X509_INFO_read_bio_cb)(char *buf, int size, int rwflag, void *userdata) = (cb); \
  void * _PEM_X509_INFO_read_bio_u = (u); \
  ({ \
  register char * _PEM_X509_INFO_read_bio__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((STACK_OF(X509_INFO) * (*)(char * __asm("a6"), BIO * __asm("a0"), STACK_OF(X509_INFO) * __asm("a1"), pem_password_cb * (*)(char *buf, int size, int rwflag, void *userdata) __asm("a2"), void * __asm("a3"))) \
  (_PEM_X509_INFO_read_bio__bn - 6750))(_PEM_X509_INFO_read_bio__bn, _PEM_X509_INFO_read_bio_bp, _PEM_X509_INFO_read_bio_sk, _PEM_X509_INFO_read_bio_cb, _PEM_X509_INFO_read_bio_u); \
});})

#define PEM_X509_INFO_write_bio(bp, xi, enc, kstr, klen, cd, u) ({ \
  BIO * _PEM_X509_INFO_write_bio_bp = (bp); \
  X509_INFO * _PEM_X509_INFO_write_bio_xi = (xi); \
  EVP_CIPHER * _PEM_X509_INFO_write_bio_enc = (enc); \
  unsigned char * _PEM_X509_INFO_write_bio_kstr = (kstr); \
  LONG _PEM_X509_INFO_write_bio_klen = (klen); \
  pem_password_cb * (*_PEM_X509_INFO_write_bio_cd)(char *buf, int size, int rwflag, void *userdata) = (cd); \
  void * _PEM_X509_INFO_write_bio_u = (u); \
  ({ \
  register char * _PEM_X509_INFO_write_bio__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIO * __asm("a0"), X509_INFO * __asm("a1"), EVP_CIPHER * __asm("a2"), unsigned char * __asm("a3"), LONG __asm("d0"), pem_password_cb * (*)(char *buf, int size, int rwflag, void *userdata) __asm("d1"), void * __asm("d2"))) \
  (_PEM_X509_INFO_write_bio__bn - 6756))(_PEM_X509_INFO_write_bio__bn, _PEM_X509_INFO_write_bio_bp, _PEM_X509_INFO_write_bio_xi, _PEM_X509_INFO_write_bio_enc, _PEM_X509_INFO_write_bio_kstr, _PEM_X509_INFO_write_bio_klen, _PEM_X509_INFO_write_bio_cd, _PEM_X509_INFO_write_bio_u); \
});})

#define PEM_SealInit(ctx, type, md_type, ek, ekl, iv, pubk, npubk) ({ \
  PEM_ENCODE_SEAL_CTX * _PEM_SealInit_ctx = (ctx); \
  EVP_CIPHER * _PEM_SealInit_type = (type); \
  EVP_MD * _PEM_SealInit_md_type = (md_type); \
  unsigned char ** _PEM_SealInit_ek = (ek); \
  int * _PEM_SealInit_ekl = (ekl); \
  unsigned char * _PEM_SealInit_iv = (iv); \
  EVP_PKEY ** _PEM_SealInit_pubk = (pubk); \
  LONG _PEM_SealInit_npubk = (npubk); \
  ({ \
  register char * _PEM_SealInit__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), PEM_ENCODE_SEAL_CTX * __asm("a0"), EVP_CIPHER * __asm("a1"), EVP_MD * __asm("a2"), unsigned char ** __asm("a3"), int * __asm("d0"), unsigned char * __asm("d1"), EVP_PKEY ** __asm("d2"), LONG __asm("d3"))) \
  (_PEM_SealInit__bn - 6762))(_PEM_SealInit__bn, _PEM_SealInit_ctx, _PEM_SealInit_type, _PEM_SealInit_md_type, _PEM_SealInit_ek, _PEM_SealInit_ekl, _PEM_SealInit_iv, _PEM_SealInit_pubk, _PEM_SealInit_npubk); \
});})

#define PEM_SealUpdate(ctx, out, outl, in, inl) ({ \
  PEM_ENCODE_SEAL_CTX * _PEM_SealUpdate_ctx = (ctx); \
  unsigned char * _PEM_SealUpdate_out = (out); \
  int * _PEM_SealUpdate_outl = (outl); \
  unsigned char * _PEM_SealUpdate_in = (in); \
  LONG _PEM_SealUpdate_inl = (inl); \
  ({ \
  register char * _PEM_SealUpdate__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), PEM_ENCODE_SEAL_CTX * __asm("a0"), unsigned char * __asm("a1"), int * __asm("a2"), unsigned char * __asm("a3"), LONG __asm("d0"))) \
  (_PEM_SealUpdate__bn - 6768))(_PEM_SealUpdate__bn, _PEM_SealUpdate_ctx, _PEM_SealUpdate_out, _PEM_SealUpdate_outl, _PEM_SealUpdate_in, _PEM_SealUpdate_inl); \
});})

#define PEM_SealFinal(ctx, sig, sigl, out, outl, priv) ({ \
  PEM_ENCODE_SEAL_CTX * _PEM_SealFinal_ctx = (ctx); \
  unsigned char * _PEM_SealFinal_sig = (sig); \
  int * _PEM_SealFinal_sigl = (sigl); \
  unsigned char * _PEM_SealFinal_out = (out); \
  int * _PEM_SealFinal_outl = (outl); \
  EVP_PKEY * _PEM_SealFinal_priv = (priv); \
  ({ \
  register char * _PEM_SealFinal__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), PEM_ENCODE_SEAL_CTX * __asm("a0"), unsigned char * __asm("a1"), int * __asm("a2"), unsigned char * __asm("a3"), int * __asm("d0"), EVP_PKEY * __asm("d1"))) \
  (_PEM_SealFinal__bn - 6774))(_PEM_SealFinal__bn, _PEM_SealFinal_ctx, _PEM_SealFinal_sig, _PEM_SealFinal_sigl, _PEM_SealFinal_out, _PEM_SealFinal_outl, _PEM_SealFinal_priv); \
});})

#define PEM_SignInit(ctx, type) ({ \
  EVP_MD_CTX * _PEM_SignInit_ctx = (ctx); \
  EVP_MD * _PEM_SignInit_type = (type); \
  ({ \
  register char * _PEM_SignInit__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), EVP_MD_CTX * __asm("a0"), EVP_MD * __asm("a1"))) \
  (_PEM_SignInit__bn - 6780))(_PEM_SignInit__bn, _PEM_SignInit_ctx, _PEM_SignInit_type); \
});})

#define PEM_SignUpdate(ctx, d, cnt) ({ \
  EVP_MD_CTX * _PEM_SignUpdate_ctx = (ctx); \
  unsigned char * _PEM_SignUpdate_d = (d); \
  ULONG _PEM_SignUpdate_cnt = (cnt); \
  ({ \
  register char * _PEM_SignUpdate__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), EVP_MD_CTX * __asm("a0"), unsigned char * __asm("a1"), ULONG __asm("d0"))) \
  (_PEM_SignUpdate__bn - 6786))(_PEM_SignUpdate__bn, _PEM_SignUpdate_ctx, _PEM_SignUpdate_d, _PEM_SignUpdate_cnt); \
});})

#define PEM_SignFinal(ctx, sigret, siglen, pkey) ({ \
  EVP_MD_CTX * _PEM_SignFinal_ctx = (ctx); \
  unsigned char * _PEM_SignFinal_sigret = (sigret); \
  unsigned int * _PEM_SignFinal_siglen = (siglen); \
  EVP_PKEY * _PEM_SignFinal_pkey = (pkey); \
  ({ \
  register char * _PEM_SignFinal__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), EVP_MD_CTX * __asm("a0"), unsigned char * __asm("a1"), unsigned int * __asm("a2"), EVP_PKEY * __asm("a3"))) \
  (_PEM_SignFinal__bn - 6792))(_PEM_SignFinal__bn, _PEM_SignFinal_ctx, _PEM_SignFinal_sigret, _PEM_SignFinal_siglen, _PEM_SignFinal_pkey); \
});})

#define PEM_def_callback(buf, num, w, key) ({ \
  char * _PEM_def_callback_buf = (buf); \
  LONG _PEM_def_callback_num = (num); \
  LONG _PEM_def_callback_w = (w); \
  void * _PEM_def_callback_key = (key); \
  ({ \
  register char * _PEM_def_callback__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), char * __asm("a0"), LONG __asm("d0"), LONG __asm("d1"), void * __asm("a1"))) \
  (_PEM_def_callback__bn - 6798))(_PEM_def_callback__bn, _PEM_def_callback_buf, _PEM_def_callback_num, _PEM_def_callback_w, _PEM_def_callback_key); \
});})

#define PEM_proc_type(buf, type) ({ \
  char * _PEM_proc_type_buf = (buf); \
  LONG _PEM_proc_type_type = (type); \
  ({ \
  register char * _PEM_proc_type__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), char * __asm("a0"), LONG __asm("d0"))) \
  (_PEM_proc_type__bn - 6804))(_PEM_proc_type__bn, _PEM_proc_type_buf, _PEM_proc_type_type); \
});})

#define PEM_dek_info(buf, type, len, str) ({ \
  char * _PEM_dek_info_buf = (buf); \
  const char * _PEM_dek_info_type = (type); \
  LONG _PEM_dek_info_len = (len); \
  char * _PEM_dek_info_str = (str); \
  ({ \
  register char * _PEM_dek_info__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), char * __asm("a0"), const char * __asm("a1"), LONG __asm("d0"), char * __asm("a2"))) \
  (_PEM_dek_info__bn - 6810))(_PEM_dek_info__bn, _PEM_dek_info_buf, _PEM_dek_info_type, _PEM_dek_info_len, _PEM_dek_info_str); \
});})

#define PEM_read_bio_X509(bp, x, cb, u) ({ \
  BIO * _PEM_read_bio_X509_bp = (bp); \
  X509 ** _PEM_read_bio_X509_x = (x); \
  pem_password_cb * (*_PEM_read_bio_X509_cb)(char *buf, int size, int rwflag, void *userdata) = (cb); \
  void * _PEM_read_bio_X509_u = (u); \
  ({ \
  register char * _PEM_read_bio_X509__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509 * (*)(char * __asm("a6"), BIO * __asm("a0"), X509 ** __asm("a1"), pem_password_cb * (*)(char *buf, int size, int rwflag, void *userdata) __asm("a2"), void * __asm("a3"))) \
  (_PEM_read_bio_X509__bn - 6816))(_PEM_read_bio_X509__bn, _PEM_read_bio_X509_bp, _PEM_read_bio_X509_x, _PEM_read_bio_X509_cb, _PEM_read_bio_X509_u); \
});})

#define PEM_write_bio_X509(bp, x) ({ \
  BIO * _PEM_write_bio_X509_bp = (bp); \
  X509 * _PEM_write_bio_X509_x = (x); \
  ({ \
  register char * _PEM_write_bio_X509__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIO * __asm("a0"), X509 * __asm("a1"))) \
  (_PEM_write_bio_X509__bn - 6822))(_PEM_write_bio_X509__bn, _PEM_write_bio_X509_bp, _PEM_write_bio_X509_x); \
});})

#define PEM_read_bio_X509_AUX(bp, x, cb, u) ({ \
  BIO * _PEM_read_bio_X509_AUX_bp = (bp); \
  X509 ** _PEM_read_bio_X509_AUX_x = (x); \
  pem_password_cb * (*_PEM_read_bio_X509_AUX_cb)(char *buf, int size, int rwflag, void *userdata) = (cb); \
  void * _PEM_read_bio_X509_AUX_u = (u); \
  ({ \
  register char * _PEM_read_bio_X509_AUX__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509 * (*)(char * __asm("a6"), BIO * __asm("a0"), X509 ** __asm("a1"), pem_password_cb * (*)(char *buf, int size, int rwflag, void *userdata) __asm("a2"), void * __asm("a3"))) \
  (_PEM_read_bio_X509_AUX__bn - 6828))(_PEM_read_bio_X509_AUX__bn, _PEM_read_bio_X509_AUX_bp, _PEM_read_bio_X509_AUX_x, _PEM_read_bio_X509_AUX_cb, _PEM_read_bio_X509_AUX_u); \
});})

#define PEM_write_bio_X509_AUX(bp, x) ({ \
  BIO * _PEM_write_bio_X509_AUX_bp = (bp); \
  X509 * _PEM_write_bio_X509_AUX_x = (x); \
  ({ \
  register char * _PEM_write_bio_X509_AUX__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIO * __asm("a0"), X509 * __asm("a1"))) \
  (_PEM_write_bio_X509_AUX__bn - 6834))(_PEM_write_bio_X509_AUX__bn, _PEM_write_bio_X509_AUX_bp, _PEM_write_bio_X509_AUX_x); \
});})

#define PEM_read_bio_X509_REQ(bp, x, cb, u) ({ \
  BIO * _PEM_read_bio_X509_REQ_bp = (bp); \
  X509_REQ ** _PEM_read_bio_X509_REQ_x = (x); \
  pem_password_cb * (*_PEM_read_bio_X509_REQ_cb)(char *buf, int size, int rwflag, void *userdata) = (cb); \
  void * _PEM_read_bio_X509_REQ_u = (u); \
  ({ \
  register char * _PEM_read_bio_X509_REQ__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509_REQ * (*)(char * __asm("a6"), BIO * __asm("a0"), X509_REQ ** __asm("a1"), pem_password_cb * (*)(char *buf, int size, int rwflag, void *userdata) __asm("a2"), void * __asm("a3"))) \
  (_PEM_read_bio_X509_REQ__bn - 6840))(_PEM_read_bio_X509_REQ__bn, _PEM_read_bio_X509_REQ_bp, _PEM_read_bio_X509_REQ_x, _PEM_read_bio_X509_REQ_cb, _PEM_read_bio_X509_REQ_u); \
});})

#define PEM_write_bio_X509_REQ(bp, x) ({ \
  BIO * _PEM_write_bio_X509_REQ_bp = (bp); \
  X509_REQ * _PEM_write_bio_X509_REQ_x = (x); \
  ({ \
  register char * _PEM_write_bio_X509_REQ__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIO * __asm("a0"), X509_REQ * __asm("a1"))) \
  (_PEM_write_bio_X509_REQ__bn - 6846))(_PEM_write_bio_X509_REQ__bn, _PEM_write_bio_X509_REQ_bp, _PEM_write_bio_X509_REQ_x); \
});})

#define PEM_write_bio_X509_REQ_NEW(bp, x) ({ \
  BIO * _PEM_write_bio_X509_REQ_NEW_bp = (bp); \
  X509_REQ * _PEM_write_bio_X509_REQ_NEW_x = (x); \
  ({ \
  register char * _PEM_write_bio_X509_REQ_NEW__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIO * __asm("a0"), X509_REQ * __asm("a1"))) \
  (_PEM_write_bio_X509_REQ_NEW__bn - 6852))(_PEM_write_bio_X509_REQ_NEW__bn, _PEM_write_bio_X509_REQ_NEW_bp, _PEM_write_bio_X509_REQ_NEW_x); \
});})

#define PEM_read_bio_X509_CRL(bp, x, cb, u) ({ \
  BIO * _PEM_read_bio_X509_CRL_bp = (bp); \
  X509_CRL ** _PEM_read_bio_X509_CRL_x = (x); \
  pem_password_cb * (*_PEM_read_bio_X509_CRL_cb)(char *buf, int size, int rwflag, void *userdata) = (cb); \
  void * _PEM_read_bio_X509_CRL_u = (u); \
  ({ \
  register char * _PEM_read_bio_X509_CRL__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509_CRL * (*)(char * __asm("a6"), BIO * __asm("a0"), X509_CRL ** __asm("a1"), pem_password_cb * (*)(char *buf, int size, int rwflag, void *userdata) __asm("a2"), void * __asm("a3"))) \
  (_PEM_read_bio_X509_CRL__bn - 6858))(_PEM_read_bio_X509_CRL__bn, _PEM_read_bio_X509_CRL_bp, _PEM_read_bio_X509_CRL_x, _PEM_read_bio_X509_CRL_cb, _PEM_read_bio_X509_CRL_u); \
});})

#define PEM_write_bio_X509_CRL(bp, x) ({ \
  BIO * _PEM_write_bio_X509_CRL_bp = (bp); \
  X509_CRL * _PEM_write_bio_X509_CRL_x = (x); \
  ({ \
  register char * _PEM_write_bio_X509_CRL__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIO * __asm("a0"), X509_CRL * __asm("a1"))) \
  (_PEM_write_bio_X509_CRL__bn - 6864))(_PEM_write_bio_X509_CRL__bn, _PEM_write_bio_X509_CRL_bp, _PEM_write_bio_X509_CRL_x); \
});})

#define PEM_read_bio_PKCS7(bp, x, cb, u) ({ \
  BIO * _PEM_read_bio_PKCS7_bp = (bp); \
  PKCS7 ** _PEM_read_bio_PKCS7_x = (x); \
  pem_password_cb * (*_PEM_read_bio_PKCS7_cb)(char *buf, int size, int rwflag, void *userdata) = (cb); \
  void * _PEM_read_bio_PKCS7_u = (u); \
  ({ \
  register char * _PEM_read_bio_PKCS7__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((PKCS7 * (*)(char * __asm("a6"), BIO * __asm("a0"), PKCS7 ** __asm("a1"), pem_password_cb * (*)(char *buf, int size, int rwflag, void *userdata) __asm("a2"), void * __asm("a3"))) \
  (_PEM_read_bio_PKCS7__bn - 6870))(_PEM_read_bio_PKCS7__bn, _PEM_read_bio_PKCS7_bp, _PEM_read_bio_PKCS7_x, _PEM_read_bio_PKCS7_cb, _PEM_read_bio_PKCS7_u); \
});})

#define PEM_write_bio_PKCS7(bp, x) ({ \
  BIO * _PEM_write_bio_PKCS7_bp = (bp); \
  PKCS7 * _PEM_write_bio_PKCS7_x = (x); \
  ({ \
  register char * _PEM_write_bio_PKCS7__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIO * __asm("a0"), PKCS7 * __asm("a1"))) \
  (_PEM_write_bio_PKCS7__bn - 6876))(_PEM_write_bio_PKCS7__bn, _PEM_write_bio_PKCS7_bp, _PEM_write_bio_PKCS7_x); \
});})

#define PEM_read_bio_NETSCAPE_CERT_SEQUENCE(bp, x, cb, u) ({ \
  BIO * _PEM_read_bio_NETSCAPE_CERT_SEQUENCE_bp = (bp); \
  NETSCAPE_CERT_SEQUENCE ** _PEM_read_bio_NETSCAPE_CERT_SEQUENCE_x = (x); \
  pem_password_cb * (*_PEM_read_bio_NETSCAPE_CERT_SEQUENCE_cb)(char *buf, int size, int rwflag, void *userdata) = (cb); \
  void * _PEM_read_bio_NETSCAPE_CERT_SEQUENCE_u = (u); \
  ({ \
  register char * _PEM_read_bio_NETSCAPE_CERT_SEQUENCE__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((NETSCAPE_CERT_SEQUENCE * (*)(char * __asm("a6"), BIO * __asm("a0"), NETSCAPE_CERT_SEQUENCE ** __asm("a1"), pem_password_cb * (*)(char *buf, int size, int rwflag, void *userdata) __asm("a2"), void * __asm("a3"))) \
  (_PEM_read_bio_NETSCAPE_CERT_SEQUENCE__bn - 6882))(_PEM_read_bio_NETSCAPE_CERT_SEQUENCE__bn, _PEM_read_bio_NETSCAPE_CERT_SEQUENCE_bp, _PEM_read_bio_NETSCAPE_CERT_SEQUENCE_x, _PEM_read_bio_NETSCAPE_CERT_SEQUENCE_cb, _PEM_read_bio_NETSCAPE_CERT_SEQUENCE_u); \
});})

#define PEM_write_bio_NETSCAPE_CERT_SEQUENCE(bp, x) ({ \
  BIO * _PEM_write_bio_NETSCAPE_CERT_SEQUENCE_bp = (bp); \
  NETSCAPE_CERT_SEQUENCE * _PEM_write_bio_NETSCAPE_CERT_SEQUENCE_x = (x); \
  ({ \
  register char * _PEM_write_bio_NETSCAPE_CERT_SEQUENCE__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIO * __asm("a0"), NETSCAPE_CERT_SEQUENCE * __asm("a1"))) \
  (_PEM_write_bio_NETSCAPE_CERT_SEQUENCE__bn - 6888))(_PEM_write_bio_NETSCAPE_CERT_SEQUENCE__bn, _PEM_write_bio_NETSCAPE_CERT_SEQUENCE_bp, _PEM_write_bio_NETSCAPE_CERT_SEQUENCE_x); \
});})

#define PEM_read_bio_PKCS8(bp, x, cb, u) ({ \
  BIO * _PEM_read_bio_PKCS8_bp = (bp); \
  X509_SIG ** _PEM_read_bio_PKCS8_x = (x); \
  pem_password_cb * (*_PEM_read_bio_PKCS8_cb)(char *buf, int size, int rwflag, void *userdata) = (cb); \
  void * _PEM_read_bio_PKCS8_u = (u); \
  ({ \
  register char * _PEM_read_bio_PKCS8__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509_SIG * (*)(char * __asm("a6"), BIO * __asm("a0"), X509_SIG ** __asm("a1"), pem_password_cb * (*)(char *buf, int size, int rwflag, void *userdata) __asm("a2"), void * __asm("a3"))) \
  (_PEM_read_bio_PKCS8__bn - 6894))(_PEM_read_bio_PKCS8__bn, _PEM_read_bio_PKCS8_bp, _PEM_read_bio_PKCS8_x, _PEM_read_bio_PKCS8_cb, _PEM_read_bio_PKCS8_u); \
});})

#define PEM_write_bio_PKCS8(bp, x) ({ \
  BIO * _PEM_write_bio_PKCS8_bp = (bp); \
  X509_SIG * _PEM_write_bio_PKCS8_x = (x); \
  ({ \
  register char * _PEM_write_bio_PKCS8__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIO * __asm("a0"), X509_SIG * __asm("a1"))) \
  (_PEM_write_bio_PKCS8__bn - 6900))(_PEM_write_bio_PKCS8__bn, _PEM_write_bio_PKCS8_bp, _PEM_write_bio_PKCS8_x); \
});})

#define PEM_read_bio_PKCS8_PRIV_KEY_INFO(bp, x, cb, u) ({ \
  BIO * _PEM_read_bio_PKCS8_PRIV_KEY_INFO_bp = (bp); \
  PKCS8_PRIV_KEY_INFO ** _PEM_read_bio_PKCS8_PRIV_KEY_INFO_x = (x); \
  pem_password_cb * (*_PEM_read_bio_PKCS8_PRIV_KEY_INFO_cb)(char *buf, int size, int rwflag, void *userdata) = (cb); \
  void * _PEM_read_bio_PKCS8_PRIV_KEY_INFO_u = (u); \
  ({ \
  register char * _PEM_read_bio_PKCS8_PRIV_KEY_INFO__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((PKCS8_PRIV_KEY_INFO * (*)(char * __asm("a6"), BIO * __asm("a0"), PKCS8_PRIV_KEY_INFO ** __asm("a1"), pem_password_cb * (*)(char *buf, int size, int rwflag, void *userdata) __asm("a2"), void * __asm("a3"))) \
  (_PEM_read_bio_PKCS8_PRIV_KEY_INFO__bn - 6906))(_PEM_read_bio_PKCS8_PRIV_KEY_INFO__bn, _PEM_read_bio_PKCS8_PRIV_KEY_INFO_bp, _PEM_read_bio_PKCS8_PRIV_KEY_INFO_x, _PEM_read_bio_PKCS8_PRIV_KEY_INFO_cb, _PEM_read_bio_PKCS8_PRIV_KEY_INFO_u); \
});})

#define PEM_write_bio_PKCS8_PRIV_KEY_INFO(bp, x) ({ \
  BIO * _PEM_write_bio_PKCS8_PRIV_KEY_INFO_bp = (bp); \
  PKCS8_PRIV_KEY_INFO * _PEM_write_bio_PKCS8_PRIV_KEY_INFO_x = (x); \
  ({ \
  register char * _PEM_write_bio_PKCS8_PRIV_KEY_INFO__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIO * __asm("a0"), PKCS8_PRIV_KEY_INFO * __asm("a1"))) \
  (_PEM_write_bio_PKCS8_PRIV_KEY_INFO__bn - 6912))(_PEM_write_bio_PKCS8_PRIV_KEY_INFO__bn, _PEM_write_bio_PKCS8_PRIV_KEY_INFO_bp, _PEM_write_bio_PKCS8_PRIV_KEY_INFO_x); \
});})

#define PEM_read_bio_RSAPrivateKey(bp, x, cb, u) ({ \
  BIO * _PEM_read_bio_RSAPrivateKey_bp = (bp); \
  RSA ** _PEM_read_bio_RSAPrivateKey_x = (x); \
  pem_password_cb * (*_PEM_read_bio_RSAPrivateKey_cb)(char *buf, int size, int rwflag, void *userdata) = (cb); \
  void * _PEM_read_bio_RSAPrivateKey_u = (u); \
  ({ \
  register char * _PEM_read_bio_RSAPrivateKey__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((RSA * (*)(char * __asm("a6"), BIO * __asm("a0"), RSA ** __asm("a1"), pem_password_cb * (*)(char *buf, int size, int rwflag, void *userdata) __asm("a2"), void * __asm("a3"))) \
  (_PEM_read_bio_RSAPrivateKey__bn - 6918))(_PEM_read_bio_RSAPrivateKey__bn, _PEM_read_bio_RSAPrivateKey_bp, _PEM_read_bio_RSAPrivateKey_x, _PEM_read_bio_RSAPrivateKey_cb, _PEM_read_bio_RSAPrivateKey_u); \
});})

#define PEM_write_bio_RSAPrivateKey(bp, x, enc, kstr, klen, cb, u) ({ \
  BIO * _PEM_write_bio_RSAPrivateKey_bp = (bp); \
  RSA * _PEM_write_bio_RSAPrivateKey_x = (x); \
  const EVP_CIPHER * _PEM_write_bio_RSAPrivateKey_enc = (enc); \
  unsigned char * _PEM_write_bio_RSAPrivateKey_kstr = (kstr); \
  LONG _PEM_write_bio_RSAPrivateKey_klen = (klen); \
  pem_password_cb * (*_PEM_write_bio_RSAPrivateKey_cb)(char *buf, int size, int rwflag, void *userdata) = (cb); \
  void * _PEM_write_bio_RSAPrivateKey_u = (u); \
  ({ \
  register char * _PEM_write_bio_RSAPrivateKey__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIO * __asm("a0"), RSA * __asm("a1"), const EVP_CIPHER * __asm("a2"), unsigned char * __asm("a3"), LONG __asm("d0"), pem_password_cb * (*)(char *buf, int size, int rwflag, void *userdata) __asm("d1"), void * __asm("d2"))) \
  (_PEM_write_bio_RSAPrivateKey__bn - 6924))(_PEM_write_bio_RSAPrivateKey__bn, _PEM_write_bio_RSAPrivateKey_bp, _PEM_write_bio_RSAPrivateKey_x, _PEM_write_bio_RSAPrivateKey_enc, _PEM_write_bio_RSAPrivateKey_kstr, _PEM_write_bio_RSAPrivateKey_klen, _PEM_write_bio_RSAPrivateKey_cb, _PEM_write_bio_RSAPrivateKey_u); \
});})

#define PEM_read_bio_RSAPublicKey(bp, x, cb, u) ({ \
  BIO * _PEM_read_bio_RSAPublicKey_bp = (bp); \
  RSA ** _PEM_read_bio_RSAPublicKey_x = (x); \
  pem_password_cb * (*_PEM_read_bio_RSAPublicKey_cb)(char *buf, int size, int rwflag, void *userdata) = (cb); \
  void * _PEM_read_bio_RSAPublicKey_u = (u); \
  ({ \
  register char * _PEM_read_bio_RSAPublicKey__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((RSA * (*)(char * __asm("a6"), BIO * __asm("a0"), RSA ** __asm("a1"), pem_password_cb * (*)(char *buf, int size, int rwflag, void *userdata) __asm("a2"), void * __asm("a3"))) \
  (_PEM_read_bio_RSAPublicKey__bn - 6930))(_PEM_read_bio_RSAPublicKey__bn, _PEM_read_bio_RSAPublicKey_bp, _PEM_read_bio_RSAPublicKey_x, _PEM_read_bio_RSAPublicKey_cb, _PEM_read_bio_RSAPublicKey_u); \
});})

#define PEM_write_bio_RSAPublicKey(bp, x) ({ \
  BIO * _PEM_write_bio_RSAPublicKey_bp = (bp); \
  RSA * _PEM_write_bio_RSAPublicKey_x = (x); \
  ({ \
  register char * _PEM_write_bio_RSAPublicKey__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIO * __asm("a0"), RSA * __asm("a1"))) \
  (_PEM_write_bio_RSAPublicKey__bn - 6936))(_PEM_write_bio_RSAPublicKey__bn, _PEM_write_bio_RSAPublicKey_bp, _PEM_write_bio_RSAPublicKey_x); \
});})

#define PEM_read_bio_RSA_PUBKEY(bp, x, cb, u) ({ \
  BIO * _PEM_read_bio_RSA_PUBKEY_bp = (bp); \
  RSA ** _PEM_read_bio_RSA_PUBKEY_x = (x); \
  pem_password_cb * (*_PEM_read_bio_RSA_PUBKEY_cb)(char *buf, int size, int rwflag, void *userdata) = (cb); \
  void * _PEM_read_bio_RSA_PUBKEY_u = (u); \
  ({ \
  register char * _PEM_read_bio_RSA_PUBKEY__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((RSA * (*)(char * __asm("a6"), BIO * __asm("a0"), RSA ** __asm("a1"), pem_password_cb * (*)(char *buf, int size, int rwflag, void *userdata) __asm("a2"), void * __asm("a3"))) \
  (_PEM_read_bio_RSA_PUBKEY__bn - 6942))(_PEM_read_bio_RSA_PUBKEY__bn, _PEM_read_bio_RSA_PUBKEY_bp, _PEM_read_bio_RSA_PUBKEY_x, _PEM_read_bio_RSA_PUBKEY_cb, _PEM_read_bio_RSA_PUBKEY_u); \
});})

#define PEM_write_bio_RSA_PUBKEY(bp, x) ({ \
  BIO * _PEM_write_bio_RSA_PUBKEY_bp = (bp); \
  RSA * _PEM_write_bio_RSA_PUBKEY_x = (x); \
  ({ \
  register char * _PEM_write_bio_RSA_PUBKEY__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIO * __asm("a0"), RSA * __asm("a1"))) \
  (_PEM_write_bio_RSA_PUBKEY__bn - 6948))(_PEM_write_bio_RSA_PUBKEY__bn, _PEM_write_bio_RSA_PUBKEY_bp, _PEM_write_bio_RSA_PUBKEY_x); \
});})

#define PEM_read_bio_DSAPrivateKey(bp, x, cb, u) ({ \
  BIO * _PEM_read_bio_DSAPrivateKey_bp = (bp); \
  DSA ** _PEM_read_bio_DSAPrivateKey_x = (x); \
  pem_password_cb * (*_PEM_read_bio_DSAPrivateKey_cb)(char *buf, int size, int rwflag, void *userdata) = (cb); \
  void * _PEM_read_bio_DSAPrivateKey_u = (u); \
  ({ \
  register char * _PEM_read_bio_DSAPrivateKey__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((DSA * (*)(char * __asm("a6"), BIO * __asm("a0"), DSA ** __asm("a1"), pem_password_cb * (*)(char *buf, int size, int rwflag, void *userdata) __asm("a2"), void * __asm("a3"))) \
  (_PEM_read_bio_DSAPrivateKey__bn - 6954))(_PEM_read_bio_DSAPrivateKey__bn, _PEM_read_bio_DSAPrivateKey_bp, _PEM_read_bio_DSAPrivateKey_x, _PEM_read_bio_DSAPrivateKey_cb, _PEM_read_bio_DSAPrivateKey_u); \
});})

#define PEM_write_bio_DSAPrivateKey(bp, x, enc, kstr, klen, cb, u) ({ \
  BIO * _PEM_write_bio_DSAPrivateKey_bp = (bp); \
  DSA * _PEM_write_bio_DSAPrivateKey_x = (x); \
  const EVP_CIPHER * _PEM_write_bio_DSAPrivateKey_enc = (enc); \
  unsigned char * _PEM_write_bio_DSAPrivateKey_kstr = (kstr); \
  LONG _PEM_write_bio_DSAPrivateKey_klen = (klen); \
  pem_password_cb * (*_PEM_write_bio_DSAPrivateKey_cb)(char *buf, int size, int rwflag, void *userdata) = (cb); \
  void * _PEM_write_bio_DSAPrivateKey_u = (u); \
  ({ \
  register char * _PEM_write_bio_DSAPrivateKey__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIO * __asm("a0"), DSA * __asm("a1"), const EVP_CIPHER * __asm("a2"), unsigned char * __asm("a3"), LONG __asm("d0"), pem_password_cb * (*)(char *buf, int size, int rwflag, void *userdata) __asm("d1"), void * __asm("d2"))) \
  (_PEM_write_bio_DSAPrivateKey__bn - 6960))(_PEM_write_bio_DSAPrivateKey__bn, _PEM_write_bio_DSAPrivateKey_bp, _PEM_write_bio_DSAPrivateKey_x, _PEM_write_bio_DSAPrivateKey_enc, _PEM_write_bio_DSAPrivateKey_kstr, _PEM_write_bio_DSAPrivateKey_klen, _PEM_write_bio_DSAPrivateKey_cb, _PEM_write_bio_DSAPrivateKey_u); \
});})

#define PEM_read_bio_DSA_PUBKEY(bp, x, cb, u) ({ \
  BIO * _PEM_read_bio_DSA_PUBKEY_bp = (bp); \
  DSA ** _PEM_read_bio_DSA_PUBKEY_x = (x); \
  pem_password_cb * (*_PEM_read_bio_DSA_PUBKEY_cb)(char *buf, int size, int rwflag, void *userdata) = (cb); \
  void * _PEM_read_bio_DSA_PUBKEY_u = (u); \
  ({ \
  register char * _PEM_read_bio_DSA_PUBKEY__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((DSA * (*)(char * __asm("a6"), BIO * __asm("a0"), DSA ** __asm("a1"), pem_password_cb * (*)(char *buf, int size, int rwflag, void *userdata) __asm("a2"), void * __asm("a3"))) \
  (_PEM_read_bio_DSA_PUBKEY__bn - 6966))(_PEM_read_bio_DSA_PUBKEY__bn, _PEM_read_bio_DSA_PUBKEY_bp, _PEM_read_bio_DSA_PUBKEY_x, _PEM_read_bio_DSA_PUBKEY_cb, _PEM_read_bio_DSA_PUBKEY_u); \
});})

#define PEM_write_bio_DSA_PUBKEY(bp, x) ({ \
  BIO * _PEM_write_bio_DSA_PUBKEY_bp = (bp); \
  DSA * _PEM_write_bio_DSA_PUBKEY_x = (x); \
  ({ \
  register char * _PEM_write_bio_DSA_PUBKEY__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIO * __asm("a0"), DSA * __asm("a1"))) \
  (_PEM_write_bio_DSA_PUBKEY__bn - 6972))(_PEM_write_bio_DSA_PUBKEY__bn, _PEM_write_bio_DSA_PUBKEY_bp, _PEM_write_bio_DSA_PUBKEY_x); \
});})

#define PEM_read_bio_DSAparams(bp, x, cb, u) ({ \
  BIO * _PEM_read_bio_DSAparams_bp = (bp); \
  DSA ** _PEM_read_bio_DSAparams_x = (x); \
  pem_password_cb * (*_PEM_read_bio_DSAparams_cb)(char *buf, int size, int rwflag, void *userdata) = (cb); \
  void * _PEM_read_bio_DSAparams_u = (u); \
  ({ \
  register char * _PEM_read_bio_DSAparams__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((DSA * (*)(char * __asm("a6"), BIO * __asm("a0"), DSA ** __asm("a1"), pem_password_cb * (*)(char *buf, int size, int rwflag, void *userdata) __asm("a2"), void * __asm("a3"))) \
  (_PEM_read_bio_DSAparams__bn - 6978))(_PEM_read_bio_DSAparams__bn, _PEM_read_bio_DSAparams_bp, _PEM_read_bio_DSAparams_x, _PEM_read_bio_DSAparams_cb, _PEM_read_bio_DSAparams_u); \
});})

#define PEM_write_bio_DSAparams(bp, x) ({ \
  BIO * _PEM_write_bio_DSAparams_bp = (bp); \
  DSA * _PEM_write_bio_DSAparams_x = (x); \
  ({ \
  register char * _PEM_write_bio_DSAparams__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIO * __asm("a0"), DSA * __asm("a1"))) \
  (_PEM_write_bio_DSAparams__bn - 6984))(_PEM_write_bio_DSAparams__bn, _PEM_write_bio_DSAparams_bp, _PEM_write_bio_DSAparams_x); \
});})

#define PEM_read_bio_DHparams(bp, x, cb, u) ({ \
  BIO * _PEM_read_bio_DHparams_bp = (bp); \
  DH ** _PEM_read_bio_DHparams_x = (x); \
  pem_password_cb * (*_PEM_read_bio_DHparams_cb)(char *buf, int size, int rwflag, void *userdata) = (cb); \
  void * _PEM_read_bio_DHparams_u = (u); \
  ({ \
  register char * _PEM_read_bio_DHparams__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((DH * (*)(char * __asm("a6"), BIO * __asm("a0"), DH ** __asm("a1"), pem_password_cb * (*)(char *buf, int size, int rwflag, void *userdata) __asm("a2"), void * __asm("a3"))) \
  (_PEM_read_bio_DHparams__bn - 6990))(_PEM_read_bio_DHparams__bn, _PEM_read_bio_DHparams_bp, _PEM_read_bio_DHparams_x, _PEM_read_bio_DHparams_cb, _PEM_read_bio_DHparams_u); \
});})

#define PEM_write_bio_DHparams(bp, x) ({ \
  BIO * _PEM_write_bio_DHparams_bp = (bp); \
  DH * _PEM_write_bio_DHparams_x = (x); \
  ({ \
  register char * _PEM_write_bio_DHparams__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIO * __asm("a0"), DH * __asm("a1"))) \
  (_PEM_write_bio_DHparams__bn - 6996))(_PEM_write_bio_DHparams__bn, _PEM_write_bio_DHparams_bp, _PEM_write_bio_DHparams_x); \
});})

#define PEM_read_bio_PrivateKey(bp, x, cb, u) ({ \
  BIO * _PEM_read_bio_PrivateKey_bp = (bp); \
  EVP_PKEY ** _PEM_read_bio_PrivateKey_x = (x); \
  pem_password_cb * (*_PEM_read_bio_PrivateKey_cb)(char *buf, int size, int rwflag, void *userdata) = (cb); \
  void * _PEM_read_bio_PrivateKey_u = (u); \
  ({ \
  register char * _PEM_read_bio_PrivateKey__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((EVP_PKEY * (*)(char * __asm("a6"), BIO * __asm("a0"), EVP_PKEY ** __asm("a1"), pem_password_cb * (*)(char *buf, int size, int rwflag, void *userdata) __asm("a2"), void * __asm("a3"))) \
  (_PEM_read_bio_PrivateKey__bn - 7002))(_PEM_read_bio_PrivateKey__bn, _PEM_read_bio_PrivateKey_bp, _PEM_read_bio_PrivateKey_x, _PEM_read_bio_PrivateKey_cb, _PEM_read_bio_PrivateKey_u); \
});})

#define PEM_write_bio_PrivateKey(bp, x, enc, kstr, klen, cb, u) ({ \
  BIO * _PEM_write_bio_PrivateKey_bp = (bp); \
  EVP_PKEY * _PEM_write_bio_PrivateKey_x = (x); \
  const EVP_CIPHER * _PEM_write_bio_PrivateKey_enc = (enc); \
  unsigned char * _PEM_write_bio_PrivateKey_kstr = (kstr); \
  LONG _PEM_write_bio_PrivateKey_klen = (klen); \
  pem_password_cb * (*_PEM_write_bio_PrivateKey_cb)(char *buf, int size, int rwflag, void *userdata) = (cb); \
  void * _PEM_write_bio_PrivateKey_u = (u); \
  ({ \
  register char * _PEM_write_bio_PrivateKey__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIO * __asm("a0"), EVP_PKEY * __asm("a1"), const EVP_CIPHER * __asm("a2"), unsigned char * __asm("a3"), LONG __asm("d0"), pem_password_cb * (*)(char *buf, int size, int rwflag, void *userdata) __asm("d1"), void * __asm("d2"))) \
  (_PEM_write_bio_PrivateKey__bn - 7008))(_PEM_write_bio_PrivateKey__bn, _PEM_write_bio_PrivateKey_bp, _PEM_write_bio_PrivateKey_x, _PEM_write_bio_PrivateKey_enc, _PEM_write_bio_PrivateKey_kstr, _PEM_write_bio_PrivateKey_klen, _PEM_write_bio_PrivateKey_cb, _PEM_write_bio_PrivateKey_u); \
});})

#define PEM_read_bio_PUBKEY(bp, x, cb, u) ({ \
  BIO * _PEM_read_bio_PUBKEY_bp = (bp); \
  EVP_PKEY ** _PEM_read_bio_PUBKEY_x = (x); \
  pem_password_cb * (*_PEM_read_bio_PUBKEY_cb)(char *buf, int size, int rwflag, void *userdata) = (cb); \
  void * _PEM_read_bio_PUBKEY_u = (u); \
  ({ \
  register char * _PEM_read_bio_PUBKEY__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((EVP_PKEY * (*)(char * __asm("a6"), BIO * __asm("a0"), EVP_PKEY ** __asm("a1"), pem_password_cb * (*)(char *buf, int size, int rwflag, void *userdata) __asm("a2"), void * __asm("a3"))) \
  (_PEM_read_bio_PUBKEY__bn - 7014))(_PEM_read_bio_PUBKEY__bn, _PEM_read_bio_PUBKEY_bp, _PEM_read_bio_PUBKEY_x, _PEM_read_bio_PUBKEY_cb, _PEM_read_bio_PUBKEY_u); \
});})

#define PEM_write_bio_PUBKEY(bp, x) ({ \
  BIO * _PEM_write_bio_PUBKEY_bp = (bp); \
  EVP_PKEY * _PEM_write_bio_PUBKEY_x = (x); \
  ({ \
  register char * _PEM_write_bio_PUBKEY__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIO * __asm("a0"), EVP_PKEY * __asm("a1"))) \
  (_PEM_write_bio_PUBKEY__bn - 7020))(_PEM_write_bio_PUBKEY__bn, _PEM_write_bio_PUBKEY_bp, _PEM_write_bio_PUBKEY_x); \
});})

#define PEM_write_bio_PKCS8PrivateKey_nid(bp, x, nid, kstr, klen, cb, u) ({ \
  BIO * _PEM_write_bio_PKCS8PrivateKey_nid_bp = (bp); \
  EVP_PKEY * _PEM_write_bio_PKCS8PrivateKey_nid_x = (x); \
  LONG _PEM_write_bio_PKCS8PrivateKey_nid_nid = (nid); \
  char * _PEM_write_bio_PKCS8PrivateKey_nid_kstr = (kstr); \
  LONG _PEM_write_bio_PKCS8PrivateKey_nid_klen = (klen); \
  pem_password_cb * (*_PEM_write_bio_PKCS8PrivateKey_nid_cb)(char *buf, int size, int rwflag, void *userdata) = (cb); \
  void * _PEM_write_bio_PKCS8PrivateKey_nid_u = (u); \
  ({ \
  register char * _PEM_write_bio_PKCS8PrivateKey_nid__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIO * __asm("a0"), EVP_PKEY * __asm("a1"), LONG __asm("d0"), char * __asm("a2"), LONG __asm("d1"), pem_password_cb * (*)(char *buf, int size, int rwflag, void *userdata) __asm("a3"), void * __asm("d2"))) \
  (_PEM_write_bio_PKCS8PrivateKey_nid__bn - 7026))(_PEM_write_bio_PKCS8PrivateKey_nid__bn, _PEM_write_bio_PKCS8PrivateKey_nid_bp, _PEM_write_bio_PKCS8PrivateKey_nid_x, _PEM_write_bio_PKCS8PrivateKey_nid_nid, _PEM_write_bio_PKCS8PrivateKey_nid_kstr, _PEM_write_bio_PKCS8PrivateKey_nid_klen, _PEM_write_bio_PKCS8PrivateKey_nid_cb, _PEM_write_bio_PKCS8PrivateKey_nid_u); \
});})

#define PEM_write_bio_PKCS8PrivateKey(a, b, c, d, a1, e, f) ({ \
  BIO * _PEM_write_bio_PKCS8PrivateKey_a = (a); \
  EVP_PKEY * _PEM_write_bio_PKCS8PrivateKey_b = (b); \
  const EVP_CIPHER * _PEM_write_bio_PKCS8PrivateKey_c = (c); \
  char * _PEM_write_bio_PKCS8PrivateKey_d = (d); \
  LONG _PEM_write_bio_PKCS8PrivateKey_a1 = (a1); \
  pem_password_cb * (*_PEM_write_bio_PKCS8PrivateKey_e)(char *buf, int size, int rwflag, void *userdata) = (e); \
  void * _PEM_write_bio_PKCS8PrivateKey_f = (f); \
  ({ \
  register char * _PEM_write_bio_PKCS8PrivateKey__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIO * __asm("a0"), EVP_PKEY * __asm("a1"), const EVP_CIPHER * __asm("a2"), char * __asm("a3"), LONG __asm("d0"), pem_password_cb * (*)(char *buf, int size, int rwflag, void *userdata) __asm("d1"), void * __asm("d2"))) \
  (_PEM_write_bio_PKCS8PrivateKey__bn - 7032))(_PEM_write_bio_PKCS8PrivateKey__bn, _PEM_write_bio_PKCS8PrivateKey_a, _PEM_write_bio_PKCS8PrivateKey_b, _PEM_write_bio_PKCS8PrivateKey_c, _PEM_write_bio_PKCS8PrivateKey_d, _PEM_write_bio_PKCS8PrivateKey_a1, _PEM_write_bio_PKCS8PrivateKey_e, _PEM_write_bio_PKCS8PrivateKey_f); \
});})

#define i2d_PKCS8PrivateKey_bio(bp, x, enc, kstr, klen, cb, u) ({ \
  BIO * _i2d_PKCS8PrivateKey_bio_bp = (bp); \
  EVP_PKEY * _i2d_PKCS8PrivateKey_bio_x = (x); \
  const EVP_CIPHER * _i2d_PKCS8PrivateKey_bio_enc = (enc); \
  char * _i2d_PKCS8PrivateKey_bio_kstr = (kstr); \
  LONG _i2d_PKCS8PrivateKey_bio_klen = (klen); \
  pem_password_cb * (*_i2d_PKCS8PrivateKey_bio_cb)(char *buf, int size, int rwflag, void *userdata) = (cb); \
  void * _i2d_PKCS8PrivateKey_bio_u = (u); \
  ({ \
  register char * _i2d_PKCS8PrivateKey_bio__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIO * __asm("a0"), EVP_PKEY * __asm("a1"), const EVP_CIPHER * __asm("a2"), char * __asm("a3"), LONG __asm("d0"), pem_password_cb * (*)(char *buf, int size, int rwflag, void *userdata) __asm("d1"), void * __asm("d2"))) \
  (_i2d_PKCS8PrivateKey_bio__bn - 7038))(_i2d_PKCS8PrivateKey_bio__bn, _i2d_PKCS8PrivateKey_bio_bp, _i2d_PKCS8PrivateKey_bio_x, _i2d_PKCS8PrivateKey_bio_enc, _i2d_PKCS8PrivateKey_bio_kstr, _i2d_PKCS8PrivateKey_bio_klen, _i2d_PKCS8PrivateKey_bio_cb, _i2d_PKCS8PrivateKey_bio_u); \
});})

#define i2d_PKCS8PrivateKey_nid_bio(bp, x, nid, kstr, klen, cb, u) ({ \
  BIO * _i2d_PKCS8PrivateKey_nid_bio_bp = (bp); \
  EVP_PKEY * _i2d_PKCS8PrivateKey_nid_bio_x = (x); \
  LONG _i2d_PKCS8PrivateKey_nid_bio_nid = (nid); \
  char * _i2d_PKCS8PrivateKey_nid_bio_kstr = (kstr); \
  LONG _i2d_PKCS8PrivateKey_nid_bio_klen = (klen); \
  pem_password_cb * (*_i2d_PKCS8PrivateKey_nid_bio_cb)(char *buf, int size, int rwflag, void *userdata) = (cb); \
  void * _i2d_PKCS8PrivateKey_nid_bio_u = (u); \
  ({ \
  register char * _i2d_PKCS8PrivateKey_nid_bio__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIO * __asm("a0"), EVP_PKEY * __asm("a1"), LONG __asm("d0"), char * __asm("a2"), LONG __asm("d1"), pem_password_cb * (*)(char *buf, int size, int rwflag, void *userdata) __asm("a3"), void * __asm("d2"))) \
  (_i2d_PKCS8PrivateKey_nid_bio__bn - 7044))(_i2d_PKCS8PrivateKey_nid_bio__bn, _i2d_PKCS8PrivateKey_nid_bio_bp, _i2d_PKCS8PrivateKey_nid_bio_x, _i2d_PKCS8PrivateKey_nid_bio_nid, _i2d_PKCS8PrivateKey_nid_bio_kstr, _i2d_PKCS8PrivateKey_nid_bio_klen, _i2d_PKCS8PrivateKey_nid_bio_cb, _i2d_PKCS8PrivateKey_nid_bio_u); \
});})

#define d2i_PKCS8PrivateKey_bio(bp, x, cb, u) ({ \
  BIO * _d2i_PKCS8PrivateKey_bio_bp = (bp); \
  EVP_PKEY ** _d2i_PKCS8PrivateKey_bio_x = (x); \
  pem_password_cb * (*_d2i_PKCS8PrivateKey_bio_cb)(char *buf, int size, int rwflag, void *userdata) = (cb); \
  void * _d2i_PKCS8PrivateKey_bio_u = (u); \
  ({ \
  register char * _d2i_PKCS8PrivateKey_bio__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((EVP_PKEY * (*)(char * __asm("a6"), BIO * __asm("a0"), EVP_PKEY ** __asm("a1"), pem_password_cb * (*)(char *buf, int size, int rwflag, void *userdata) __asm("a2"), void * __asm("a3"))) \
  (_d2i_PKCS8PrivateKey_bio__bn - 7050))(_d2i_PKCS8PrivateKey_bio__bn, _d2i_PKCS8PrivateKey_bio_bp, _d2i_PKCS8PrivateKey_bio_x, _d2i_PKCS8PrivateKey_bio_cb, _d2i_PKCS8PrivateKey_bio_u); \
});})

#define ERR_load_PEM_strings() ({ \
  register char * _ERR_load_PEM_strings__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"))) \
  (_ERR_load_PEM_strings__bn - 7056))(_ERR_load_PEM_strings__bn); \
})

#define PKCS12_x5092certbag(x509) ({ \
  X509 * _PKCS12_x5092certbag_x509 = (x509); \
  ({ \
  register char * _PKCS12_x5092certbag__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((PKCS12_SAFEBAG * (*)(char * __asm("a6"), X509 * __asm("a0"))) \
  (_PKCS12_x5092certbag__bn - 7062))(_PKCS12_x5092certbag__bn, _PKCS12_x5092certbag_x509); \
});})

#define PKCS12_x509crl2certbag(crl) ({ \
  X509_CRL * _PKCS12_x509crl2certbag_crl = (crl); \
  ({ \
  register char * _PKCS12_x509crl2certbag__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((PKCS12_SAFEBAG * (*)(char * __asm("a6"), X509_CRL * __asm("a0"))) \
  (_PKCS12_x509crl2certbag__bn - 7068))(_PKCS12_x509crl2certbag__bn, _PKCS12_x509crl2certbag_crl); \
});})

#define PKCS12_certbag2x509(bag) ({ \
  PKCS12_SAFEBAG * _PKCS12_certbag2x509_bag = (bag); \
  ({ \
  register char * _PKCS12_certbag2x509__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509 * (*)(char * __asm("a6"), PKCS12_SAFEBAG * __asm("a0"))) \
  (_PKCS12_certbag2x509__bn - 7074))(_PKCS12_certbag2x509__bn, _PKCS12_certbag2x509_bag); \
});})

#define PKCS12_certbag2x509crl(bag) ({ \
  PKCS12_SAFEBAG * _PKCS12_certbag2x509crl_bag = (bag); \
  ({ \
  register char * _PKCS12_certbag2x509crl__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509_CRL * (*)(char * __asm("a6"), PKCS12_SAFEBAG * __asm("a0"))) \
  (_PKCS12_certbag2x509crl__bn - 7080))(_PKCS12_certbag2x509crl__bn, _PKCS12_certbag2x509crl_bag); \
});})

#define PKCS12_item_pack_safebag(obj, it, nid1, nid2) ({ \
  void * _PKCS12_item_pack_safebag_obj = (obj); \
  const ASN1_ITEM * _PKCS12_item_pack_safebag_it = (it); \
  LONG _PKCS12_item_pack_safebag_nid1 = (nid1); \
  LONG _PKCS12_item_pack_safebag_nid2 = (nid2); \
  ({ \
  register char * _PKCS12_item_pack_safebag__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((PKCS12_SAFEBAG * (*)(char * __asm("a6"), void * __asm("a0"), const ASN1_ITEM * __asm("a1"), LONG __asm("d0"), LONG __asm("d1"))) \
  (_PKCS12_item_pack_safebag__bn - 7086))(_PKCS12_item_pack_safebag__bn, _PKCS12_item_pack_safebag_obj, _PKCS12_item_pack_safebag_it, _PKCS12_item_pack_safebag_nid1, _PKCS12_item_pack_safebag_nid2); \
});})

#define PKCS12_MAKE_KEYBAG(p8) ({ \
  PKCS8_PRIV_KEY_INFO * _PKCS12_MAKE_KEYBAG_p8 = (p8); \
  ({ \
  register char * _PKCS12_MAKE_KEYBAG__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((PKCS12_SAFEBAG * (*)(char * __asm("a6"), PKCS8_PRIV_KEY_INFO * __asm("a0"))) \
  (_PKCS12_MAKE_KEYBAG__bn - 7092))(_PKCS12_MAKE_KEYBAG__bn, _PKCS12_MAKE_KEYBAG_p8); \
});})

#define PKCS8_decrypt(p8, pass, passlen) ({ \
  X509_SIG * _PKCS8_decrypt_p8 = (p8); \
  const char * _PKCS8_decrypt_pass = (pass); \
  LONG _PKCS8_decrypt_passlen = (passlen); \
  ({ \
  register char * _PKCS8_decrypt__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((PKCS8_PRIV_KEY_INFO * (*)(char * __asm("a6"), X509_SIG * __asm("a0"), const char * __asm("a1"), LONG __asm("d0"))) \
  (_PKCS8_decrypt__bn - 7098))(_PKCS8_decrypt__bn, _PKCS8_decrypt_p8, _PKCS8_decrypt_pass, _PKCS8_decrypt_passlen); \
});})

#define PKCS12_decrypt_skey(bag, pass, passlen) ({ \
  PKCS12_SAFEBAG * _PKCS12_decrypt_skey_bag = (bag); \
  const char * _PKCS12_decrypt_skey_pass = (pass); \
  LONG _PKCS12_decrypt_skey_passlen = (passlen); \
  ({ \
  register char * _PKCS12_decrypt_skey__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((PKCS8_PRIV_KEY_INFO * (*)(char * __asm("a6"), PKCS12_SAFEBAG * __asm("a0"), const char * __asm("a1"), LONG __asm("d0"))) \
  (_PKCS12_decrypt_skey__bn - 7104))(_PKCS12_decrypt_skey__bn, _PKCS12_decrypt_skey_bag, _PKCS12_decrypt_skey_pass, _PKCS12_decrypt_skey_passlen); \
});})

#define PKCS8_encrypt(pbe_nid, cipher, pass, passlen, salt, saltlen, iter, p8) ({ \
  LONG _PKCS8_encrypt_pbe_nid = (pbe_nid); \
  const EVP_CIPHER * _PKCS8_encrypt_cipher = (cipher); \
  const char * _PKCS8_encrypt_pass = (pass); \
  LONG _PKCS8_encrypt_passlen = (passlen); \
  unsigned char * _PKCS8_encrypt_salt = (salt); \
  LONG _PKCS8_encrypt_saltlen = (saltlen); \
  LONG _PKCS8_encrypt_iter = (iter); \
  PKCS8_PRIV_KEY_INFO * _PKCS8_encrypt_p8 = (p8); \
  ({ \
  register char * _PKCS8_encrypt__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509_SIG * (*)(char * __asm("a6"), LONG __asm("d0"), const EVP_CIPHER * __asm("a0"), const char * __asm("a1"), LONG __asm("d1"), unsigned char * __asm("a2"), LONG __asm("d2"), LONG __asm("d3"), PKCS8_PRIV_KEY_INFO * __asm("a3"))) \
  (_PKCS8_encrypt__bn - 7110))(_PKCS8_encrypt__bn, _PKCS8_encrypt_pbe_nid, _PKCS8_encrypt_cipher, _PKCS8_encrypt_pass, _PKCS8_encrypt_passlen, _PKCS8_encrypt_salt, _PKCS8_encrypt_saltlen, _PKCS8_encrypt_iter, _PKCS8_encrypt_p8); \
});})

#define PKCS12_MAKE_SHKEYBAG(pbe_nid, pass, passlen, salt, saltlen, iter, p8) ({ \
  LONG _PKCS12_MAKE_SHKEYBAG_pbe_nid = (pbe_nid); \
  const char * _PKCS12_MAKE_SHKEYBAG_pass = (pass); \
  LONG _PKCS12_MAKE_SHKEYBAG_passlen = (passlen); \
  unsigned char * _PKCS12_MAKE_SHKEYBAG_salt = (salt); \
  LONG _PKCS12_MAKE_SHKEYBAG_saltlen = (saltlen); \
  LONG _PKCS12_MAKE_SHKEYBAG_iter = (iter); \
  PKCS8_PRIV_KEY_INFO * _PKCS12_MAKE_SHKEYBAG_p8 = (p8); \
  ({ \
  register char * _PKCS12_MAKE_SHKEYBAG__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((PKCS12_SAFEBAG * (*)(char * __asm("a6"), LONG __asm("d0"), const char * __asm("a0"), LONG __asm("d1"), unsigned char * __asm("a1"), LONG __asm("d2"), LONG __asm("d3"), PKCS8_PRIV_KEY_INFO * __asm("a2"))) \
  (_PKCS12_MAKE_SHKEYBAG__bn - 7116))(_PKCS12_MAKE_SHKEYBAG__bn, _PKCS12_MAKE_SHKEYBAG_pbe_nid, _PKCS12_MAKE_SHKEYBAG_pass, _PKCS12_MAKE_SHKEYBAG_passlen, _PKCS12_MAKE_SHKEYBAG_salt, _PKCS12_MAKE_SHKEYBAG_saltlen, _PKCS12_MAKE_SHKEYBAG_iter, _PKCS12_MAKE_SHKEYBAG_p8); \
});})

#define PKCS12_pack_p7data(sk) ({ \
  STACK_OF(PKCS12_SAFEBAG) * _PKCS12_pack_p7data_sk = (sk); \
  ({ \
  register char * _PKCS12_pack_p7data__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((PKCS7 * (*)(char * __asm("a6"), STACK_OF(PKCS12_SAFEBAG) * __asm("a0"))) \
  (_PKCS12_pack_p7data__bn - 7122))(_PKCS12_pack_p7data__bn, _PKCS12_pack_p7data_sk); \
});})

#define PKCS12_unpack_p7data(p7) ({ \
  PKCS7 * _PKCS12_unpack_p7data_p7 = (p7); \
  ({ \
  register char * _PKCS12_unpack_p7data__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((STACK_OF(PKCS12_SAFEBAG) * (*)(char * __asm("a6"), PKCS7 * __asm("a0"))) \
  (_PKCS12_unpack_p7data__bn - 7128))(_PKCS12_unpack_p7data__bn, _PKCS12_unpack_p7data_p7); \
});})

#define PKCS12_pack_p7encdata(pbe_nid, pass, passlen, salt, saltlen, iter, bags) ({ \
  LONG _PKCS12_pack_p7encdata_pbe_nid = (pbe_nid); \
  const char * _PKCS12_pack_p7encdata_pass = (pass); \
  LONG _PKCS12_pack_p7encdata_passlen = (passlen); \
  unsigned char * _PKCS12_pack_p7encdata_salt = (salt); \
  LONG _PKCS12_pack_p7encdata_saltlen = (saltlen); \
  LONG _PKCS12_pack_p7encdata_iter = (iter); \
  STACK_OF(PKCS12_SAFEBAG) * _PKCS12_pack_p7encdata_bags = (bags); \
  ({ \
  register char * _PKCS12_pack_p7encdata__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((PKCS7 * (*)(char * __asm("a6"), LONG __asm("d0"), const char * __asm("a0"), LONG __asm("d1"), unsigned char * __asm("a1"), LONG __asm("d2"), LONG __asm("d3"), STACK_OF(PKCS12_SAFEBAG) * __asm("a2"))) \
  (_PKCS12_pack_p7encdata__bn - 7134))(_PKCS12_pack_p7encdata__bn, _PKCS12_pack_p7encdata_pbe_nid, _PKCS12_pack_p7encdata_pass, _PKCS12_pack_p7encdata_passlen, _PKCS12_pack_p7encdata_salt, _PKCS12_pack_p7encdata_saltlen, _PKCS12_pack_p7encdata_iter, _PKCS12_pack_p7encdata_bags); \
});})

#define PKCS12_unpack_p7encdata(p7, pass, passlen) ({ \
  PKCS7 * _PKCS12_unpack_p7encdata_p7 = (p7); \
  const char * _PKCS12_unpack_p7encdata_pass = (pass); \
  LONG _PKCS12_unpack_p7encdata_passlen = (passlen); \
  ({ \
  register char * _PKCS12_unpack_p7encdata__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((STACK_OF(PKCS12_SAFEBAG) * (*)(char * __asm("a6"), PKCS7 * __asm("a0"), const char * __asm("a1"), LONG __asm("d0"))) \
  (_PKCS12_unpack_p7encdata__bn - 7140))(_PKCS12_unpack_p7encdata__bn, _PKCS12_unpack_p7encdata_p7, _PKCS12_unpack_p7encdata_pass, _PKCS12_unpack_p7encdata_passlen); \
});})

#define PKCS12_pack_authsafes(p12, safes) ({ \
  PKCS12 * _PKCS12_pack_authsafes_p12 = (p12); \
  STACK_OF(PKCS7) * _PKCS12_pack_authsafes_safes = (safes); \
  ({ \
  register char * _PKCS12_pack_authsafes__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), PKCS12 * __asm("a0"), STACK_OF(PKCS7) * __asm("a1"))) \
  (_PKCS12_pack_authsafes__bn - 7146))(_PKCS12_pack_authsafes__bn, _PKCS12_pack_authsafes_p12, _PKCS12_pack_authsafes_safes); \
});})

#define PKCS12_unpack_authsafes(p12) ({ \
  PKCS12 * _PKCS12_unpack_authsafes_p12 = (p12); \
  ({ \
  register char * _PKCS12_unpack_authsafes__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((STACK_OF(PKCS7) * (*)(char * __asm("a6"), PKCS12 * __asm("a0"))) \
  (_PKCS12_unpack_authsafes__bn - 7152))(_PKCS12_unpack_authsafes__bn, _PKCS12_unpack_authsafes_p12); \
});})

#define PKCS12_add_localkeyid(bag, name, namelen) ({ \
  PKCS12_SAFEBAG * _PKCS12_add_localkeyid_bag = (bag); \
  unsigned char * _PKCS12_add_localkeyid_name = (name); \
  LONG _PKCS12_add_localkeyid_namelen = (namelen); \
  ({ \
  register char * _PKCS12_add_localkeyid__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), PKCS12_SAFEBAG * __asm("a0"), unsigned char * __asm("a1"), LONG __asm("d0"))) \
  (_PKCS12_add_localkeyid__bn - 7158))(_PKCS12_add_localkeyid__bn, _PKCS12_add_localkeyid_bag, _PKCS12_add_localkeyid_name, _PKCS12_add_localkeyid_namelen); \
});})

#define PKCS12_add_friendlyname_asc(bag, name, namelen) ({ \
  PKCS12_SAFEBAG * _PKCS12_add_friendlyname_asc_bag = (bag); \
  const char * _PKCS12_add_friendlyname_asc_name = (name); \
  LONG _PKCS12_add_friendlyname_asc_namelen = (namelen); \
  ({ \
  register char * _PKCS12_add_friendlyname_asc__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), PKCS12_SAFEBAG * __asm("a0"), const char * __asm("a1"), LONG __asm("d0"))) \
  (_PKCS12_add_friendlyname_asc__bn - 7164))(_PKCS12_add_friendlyname_asc__bn, _PKCS12_add_friendlyname_asc_bag, _PKCS12_add_friendlyname_asc_name, _PKCS12_add_friendlyname_asc_namelen); \
});})

#define PKCS12_add_CSPName_asc(bag, name, namelen) ({ \
  PKCS12_SAFEBAG * _PKCS12_add_CSPName_asc_bag = (bag); \
  const char * _PKCS12_add_CSPName_asc_name = (name); \
  LONG _PKCS12_add_CSPName_asc_namelen = (namelen); \
  ({ \
  register char * _PKCS12_add_CSPName_asc__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), PKCS12_SAFEBAG * __asm("a0"), const char * __asm("a1"), LONG __asm("d0"))) \
  (_PKCS12_add_CSPName_asc__bn - 7170))(_PKCS12_add_CSPName_asc__bn, _PKCS12_add_CSPName_asc_bag, _PKCS12_add_CSPName_asc_name, _PKCS12_add_CSPName_asc_namelen); \
});})

#define PKCS12_add_friendlyname_uni(bag, name, namelen) ({ \
  PKCS12_SAFEBAG * _PKCS12_add_friendlyname_uni_bag = (bag); \
  const unsigned char * _PKCS12_add_friendlyname_uni_name = (name); \
  LONG _PKCS12_add_friendlyname_uni_namelen = (namelen); \
  ({ \
  register char * _PKCS12_add_friendlyname_uni__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), PKCS12_SAFEBAG * __asm("a0"), const unsigned char * __asm("a1"), LONG __asm("d0"))) \
  (_PKCS12_add_friendlyname_uni__bn - 7176))(_PKCS12_add_friendlyname_uni__bn, _PKCS12_add_friendlyname_uni_bag, _PKCS12_add_friendlyname_uni_name, _PKCS12_add_friendlyname_uni_namelen); \
});})

#define PKCS8_add_keyusage(p8, usage) ({ \
  PKCS8_PRIV_KEY_INFO * _PKCS8_add_keyusage_p8 = (p8); \
  LONG _PKCS8_add_keyusage_usage = (usage); \
  ({ \
  register char * _PKCS8_add_keyusage__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), PKCS8_PRIV_KEY_INFO * __asm("a0"), LONG __asm("d0"))) \
  (_PKCS8_add_keyusage__bn - 7182))(_PKCS8_add_keyusage__bn, _PKCS8_add_keyusage_p8, _PKCS8_add_keyusage_usage); \
});})

#define PKCS12_get_attr_gen(attrs, attr_nid) ({ \
  STACK_OF(X509_ATTRIBUTE) * _PKCS12_get_attr_gen_attrs = (attrs); \
  LONG _PKCS12_get_attr_gen_attr_nid = (attr_nid); \
  ({ \
  register char * _PKCS12_get_attr_gen__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((ASN1_TYPE * (*)(char * __asm("a6"), STACK_OF(X509_ATTRIBUTE) * __asm("a0"), LONG __asm("d0"))) \
  (_PKCS12_get_attr_gen__bn - 7188))(_PKCS12_get_attr_gen__bn, _PKCS12_get_attr_gen_attrs, _PKCS12_get_attr_gen_attr_nid); \
});})

#define PKCS12_get_friendlyname(bag) ({ \
  PKCS12_SAFEBAG * _PKCS12_get_friendlyname_bag = (bag); \
  ({ \
  register char * _PKCS12_get_friendlyname__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((char * (*)(char * __asm("a6"), PKCS12_SAFEBAG * __asm("a0"))) \
  (_PKCS12_get_friendlyname__bn - 7194))(_PKCS12_get_friendlyname__bn, _PKCS12_get_friendlyname_bag); \
});})

#define PKCS12_pbe_crypt(algor, pass, passlen, in, inlen, data, datalen, en_de) ({ \
  X509_ALGOR * _PKCS12_pbe_crypt_algor = (algor); \
  const char * _PKCS12_pbe_crypt_pass = (pass); \
  LONG _PKCS12_pbe_crypt_passlen = (passlen); \
  unsigned char * _PKCS12_pbe_crypt_in = (in); \
  LONG _PKCS12_pbe_crypt_inlen = (inlen); \
  unsigned char ** _PKCS12_pbe_crypt_data = (data); \
  int * _PKCS12_pbe_crypt_datalen = (datalen); \
  LONG _PKCS12_pbe_crypt_en_de = (en_de); \
  ({ \
  register char * _PKCS12_pbe_crypt__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((unsigned char * (*)(char * __asm("a6"), X509_ALGOR * __asm("a0"), const char * __asm("a1"), LONG __asm("d0"), unsigned char * __asm("a2"), LONG __asm("d1"), unsigned char ** __asm("a3"), int * __asm("d2"), LONG __asm("d3"))) \
  (_PKCS12_pbe_crypt__bn - 7200))(_PKCS12_pbe_crypt__bn, _PKCS12_pbe_crypt_algor, _PKCS12_pbe_crypt_pass, _PKCS12_pbe_crypt_passlen, _PKCS12_pbe_crypt_in, _PKCS12_pbe_crypt_inlen, _PKCS12_pbe_crypt_data, _PKCS12_pbe_crypt_datalen, _PKCS12_pbe_crypt_en_de); \
});})

#define PKCS12_item_decrypt_d2i(algor, it, pass, passlen, oct, zbuf) ({ \
  X509_ALGOR * _PKCS12_item_decrypt_d2i_algor = (algor); \
  const ASN1_ITEM * _PKCS12_item_decrypt_d2i_it = (it); \
  const char * _PKCS12_item_decrypt_d2i_pass = (pass); \
  LONG _PKCS12_item_decrypt_d2i_passlen = (passlen); \
  ASN1_OCTET_STRING * _PKCS12_item_decrypt_d2i_oct = (oct); \
  LONG _PKCS12_item_decrypt_d2i_zbuf = (zbuf); \
  ({ \
  register char * _PKCS12_item_decrypt_d2i__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void * (*)(char * __asm("a6"), X509_ALGOR * __asm("a0"), const ASN1_ITEM * __asm("a1"), const char * __asm("a2"), LONG __asm("d0"), ASN1_OCTET_STRING * __asm("a3"), LONG __asm("d1"))) \
  (_PKCS12_item_decrypt_d2i__bn - 7206))(_PKCS12_item_decrypt_d2i__bn, _PKCS12_item_decrypt_d2i_algor, _PKCS12_item_decrypt_d2i_it, _PKCS12_item_decrypt_d2i_pass, _PKCS12_item_decrypt_d2i_passlen, _PKCS12_item_decrypt_d2i_oct, _PKCS12_item_decrypt_d2i_zbuf); \
});})

#define PKCS12_item_i2d_encrypt(algor, it, pass, passlen, obj, zbuf) ({ \
  X509_ALGOR * _PKCS12_item_i2d_encrypt_algor = (algor); \
  const ASN1_ITEM * _PKCS12_item_i2d_encrypt_it = (it); \
  const char * _PKCS12_item_i2d_encrypt_pass = (pass); \
  LONG _PKCS12_item_i2d_encrypt_passlen = (passlen); \
  void * _PKCS12_item_i2d_encrypt_obj = (obj); \
  LONG _PKCS12_item_i2d_encrypt_zbuf = (zbuf); \
  ({ \
  register char * _PKCS12_item_i2d_encrypt__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((ASN1_OCTET_STRING * (*)(char * __asm("a6"), X509_ALGOR * __asm("a0"), const ASN1_ITEM * __asm("a1"), const char * __asm("a2"), LONG __asm("d0"), void * __asm("a3"), LONG __asm("d1"))) \
  (_PKCS12_item_i2d_encrypt__bn - 7212))(_PKCS12_item_i2d_encrypt__bn, _PKCS12_item_i2d_encrypt_algor, _PKCS12_item_i2d_encrypt_it, _PKCS12_item_i2d_encrypt_pass, _PKCS12_item_i2d_encrypt_passlen, _PKCS12_item_i2d_encrypt_obj, _PKCS12_item_i2d_encrypt_zbuf); \
});})

#define PKCS12_init(mode) ({ \
  LONG _PKCS12_init_mode = (mode); \
  ({ \
  register char * _PKCS12_init__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((PKCS12 * (*)(char * __asm("a6"), LONG __asm("d0"))) \
  (_PKCS12_init__bn - 7218))(_PKCS12_init__bn, _PKCS12_init_mode); \
});})

#define PKCS12_key_gen_asc(pass, passlen, salt, saltlen, id, iter, n, out, md_type) ({ \
  const char * _PKCS12_key_gen_asc_pass = (pass); \
  LONG _PKCS12_key_gen_asc_passlen = (passlen); \
  unsigned char * _PKCS12_key_gen_asc_salt = (salt); \
  LONG _PKCS12_key_gen_asc_saltlen = (saltlen); \
  LONG _PKCS12_key_gen_asc_id = (id); \
  LONG _PKCS12_key_gen_asc_iter = (iter); \
  LONG _PKCS12_key_gen_asc_n = (n); \
  unsigned char * _PKCS12_key_gen_asc_out = (out); \
  const EVP_MD * _PKCS12_key_gen_asc_md_type = (md_type); \
  ({ \
  register char * _PKCS12_key_gen_asc__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const char * __asm("a0"), LONG __asm("d0"), unsigned char * __asm("a1"), LONG __asm("d1"), LONG __asm("d2"), LONG __asm("d3"), LONG __asm("d4"), unsigned char * __asm("a2"), const EVP_MD * __asm("a3"))) \
  (_PKCS12_key_gen_asc__bn - 7224))(_PKCS12_key_gen_asc__bn, _PKCS12_key_gen_asc_pass, _PKCS12_key_gen_asc_passlen, _PKCS12_key_gen_asc_salt, _PKCS12_key_gen_asc_saltlen, _PKCS12_key_gen_asc_id, _PKCS12_key_gen_asc_iter, _PKCS12_key_gen_asc_n, _PKCS12_key_gen_asc_out, _PKCS12_key_gen_asc_md_type); \
});})

#define PKCS12_key_gen_uni(pass, passlen, salt, saltlen, id, iter, n, out, md_type) ({ \
  unsigned char * _PKCS12_key_gen_uni_pass = (pass); \
  LONG _PKCS12_key_gen_uni_passlen = (passlen); \
  unsigned char * _PKCS12_key_gen_uni_salt = (salt); \
  LONG _PKCS12_key_gen_uni_saltlen = (saltlen); \
  LONG _PKCS12_key_gen_uni_id = (id); \
  LONG _PKCS12_key_gen_uni_iter = (iter); \
  LONG _PKCS12_key_gen_uni_n = (n); \
  unsigned char * _PKCS12_key_gen_uni_out = (out); \
  const EVP_MD * _PKCS12_key_gen_uni_md_type = (md_type); \
  ({ \
  register char * _PKCS12_key_gen_uni__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), unsigned char * __asm("a0"), LONG __asm("d0"), unsigned char * __asm("a1"), LONG __asm("d1"), LONG __asm("d2"), LONG __asm("d3"), LONG __asm("d4"), unsigned char * __asm("a2"), const EVP_MD * __asm("a3"))) \
  (_PKCS12_key_gen_uni__bn - 7230))(_PKCS12_key_gen_uni__bn, _PKCS12_key_gen_uni_pass, _PKCS12_key_gen_uni_passlen, _PKCS12_key_gen_uni_salt, _PKCS12_key_gen_uni_saltlen, _PKCS12_key_gen_uni_id, _PKCS12_key_gen_uni_iter, _PKCS12_key_gen_uni_n, _PKCS12_key_gen_uni_out, _PKCS12_key_gen_uni_md_type); \
});})

#define PKCS12_PBE_keyivgen(ctx, pass, passlen, param, cipher, md_type, en_de) ({ \
  EVP_CIPHER_CTX * _PKCS12_PBE_keyivgen_ctx = (ctx); \
  const char * _PKCS12_PBE_keyivgen_pass = (pass); \
  LONG _PKCS12_PBE_keyivgen_passlen = (passlen); \
  ASN1_TYPE * _PKCS12_PBE_keyivgen_param = (param); \
  const EVP_CIPHER * _PKCS12_PBE_keyivgen_cipher = (cipher); \
  const EVP_MD * _PKCS12_PBE_keyivgen_md_type = (md_type); \
  LONG _PKCS12_PBE_keyivgen_en_de = (en_de); \
  ({ \
  register char * _PKCS12_PBE_keyivgen__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), EVP_CIPHER_CTX * __asm("a0"), const char * __asm("a1"), LONG __asm("d0"), ASN1_TYPE * __asm("a2"), const EVP_CIPHER * __asm("a3"), const EVP_MD * __asm("d1"), LONG __asm("d2"))) \
  (_PKCS12_PBE_keyivgen__bn - 7236))(_PKCS12_PBE_keyivgen__bn, _PKCS12_PBE_keyivgen_ctx, _PKCS12_PBE_keyivgen_pass, _PKCS12_PBE_keyivgen_passlen, _PKCS12_PBE_keyivgen_param, _PKCS12_PBE_keyivgen_cipher, _PKCS12_PBE_keyivgen_md_type, _PKCS12_PBE_keyivgen_en_de); \
});})

#define PKCS12_gen_mac(p12, pass, passlen, mac, maclen) ({ \
  PKCS12 * _PKCS12_gen_mac_p12 = (p12); \
  const char * _PKCS12_gen_mac_pass = (pass); \
  LONG _PKCS12_gen_mac_passlen = (passlen); \
  unsigned char * _PKCS12_gen_mac_mac = (mac); \
  unsigned int * _PKCS12_gen_mac_maclen = (maclen); \
  ({ \
  register char * _PKCS12_gen_mac__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), PKCS12 * __asm("a0"), const char * __asm("a1"), LONG __asm("d0"), unsigned char * __asm("a2"), unsigned int * __asm("a3"))) \
  (_PKCS12_gen_mac__bn - 7242))(_PKCS12_gen_mac__bn, _PKCS12_gen_mac_p12, _PKCS12_gen_mac_pass, _PKCS12_gen_mac_passlen, _PKCS12_gen_mac_mac, _PKCS12_gen_mac_maclen); \
});})

#define PKCS12_verify_mac(p12, pass, passlen) ({ \
  PKCS12 * _PKCS12_verify_mac_p12 = (p12); \
  const char * _PKCS12_verify_mac_pass = (pass); \
  LONG _PKCS12_verify_mac_passlen = (passlen); \
  ({ \
  register char * _PKCS12_verify_mac__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), PKCS12 * __asm("a0"), const char * __asm("a1"), LONG __asm("d0"))) \
  (_PKCS12_verify_mac__bn - 7248))(_PKCS12_verify_mac__bn, _PKCS12_verify_mac_p12, _PKCS12_verify_mac_pass, _PKCS12_verify_mac_passlen); \
});})

#define PKCS12_set_mac(p12, pass, passlen, salt, saltlen, iter, md_type) ({ \
  PKCS12 * _PKCS12_set_mac_p12 = (p12); \
  const char * _PKCS12_set_mac_pass = (pass); \
  LONG _PKCS12_set_mac_passlen = (passlen); \
  unsigned char * _PKCS12_set_mac_salt = (salt); \
  LONG _PKCS12_set_mac_saltlen = (saltlen); \
  LONG _PKCS12_set_mac_iter = (iter); \
  const EVP_MD * _PKCS12_set_mac_md_type = (md_type); \
  ({ \
  register char * _PKCS12_set_mac__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), PKCS12 * __asm("a0"), const char * __asm("a1"), LONG __asm("d0"), unsigned char * __asm("a2"), LONG __asm("d1"), LONG __asm("d2"), const EVP_MD * __asm("a3"))) \
  (_PKCS12_set_mac__bn - 7254))(_PKCS12_set_mac__bn, _PKCS12_set_mac_p12, _PKCS12_set_mac_pass, _PKCS12_set_mac_passlen, _PKCS12_set_mac_salt, _PKCS12_set_mac_saltlen, _PKCS12_set_mac_iter, _PKCS12_set_mac_md_type); \
});})

#define PKCS12_setup_mac(p12, iter, salt, saltlen, md_type) ({ \
  PKCS12 * _PKCS12_setup_mac_p12 = (p12); \
  LONG _PKCS12_setup_mac_iter = (iter); \
  unsigned char * _PKCS12_setup_mac_salt = (salt); \
  LONG _PKCS12_setup_mac_saltlen = (saltlen); \
  const EVP_MD * _PKCS12_setup_mac_md_type = (md_type); \
  ({ \
  register char * _PKCS12_setup_mac__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), PKCS12 * __asm("a0"), LONG __asm("d0"), unsigned char * __asm("a1"), LONG __asm("d1"), const EVP_MD * __asm("a2"))) \
  (_PKCS12_setup_mac__bn - 7260))(_PKCS12_setup_mac__bn, _PKCS12_setup_mac_p12, _PKCS12_setup_mac_iter, _PKCS12_setup_mac_salt, _PKCS12_setup_mac_saltlen, _PKCS12_setup_mac_md_type); \
});})

#define asc2uni(asc, asclen, uni, unilen) ({ \
  const char * _asc2uni_asc = (asc); \
  LONG _asc2uni_asclen = (asclen); \
  unsigned char ** _asc2uni_uni = (uni); \
  int * _asc2uni_unilen = (unilen); \
  ({ \
  register char * _asc2uni__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((unsigned char * (*)(char * __asm("a6"), const char * __asm("a0"), LONG __asm("d0"), unsigned char ** __asm("a1"), int * __asm("a2"))) \
  (_asc2uni__bn - 7266))(_asc2uni__bn, _asc2uni_asc, _asc2uni_asclen, _asc2uni_uni, _asc2uni_unilen); \
});})

#define uni2asc(uni, unilen) ({ \
  unsigned char * _uni2asc_uni = (uni); \
  LONG _uni2asc_unilen = (unilen); \
  ({ \
  register char * _uni2asc__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((char * (*)(char * __asm("a6"), unsigned char * __asm("a0"), LONG __asm("d0"))) \
  (_uni2asc__bn - 7272))(_uni2asc__bn, _uni2asc_uni, _uni2asc_unilen); \
});})

#define PKCS12_new() ({ \
  register char * _PKCS12_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((PKCS12 * (*)(char * __asm("a6"))) \
  (_PKCS12_new__bn - 7278))(_PKCS12_new__bn); \
})

#define PKCS12_free(a) ({ \
  PKCS12 * _PKCS12_free_a = (a); \
  ({ \
  register char * _PKCS12_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), PKCS12 * __asm("a0"))) \
  (_PKCS12_free__bn - 7284))(_PKCS12_free__bn, _PKCS12_free_a); \
});})

#define d2i_PKCS12(a, in, len) ({ \
  PKCS12 ** _d2i_PKCS12_a = (a); \
  unsigned char ** _d2i_PKCS12_in = (in); \
  long _d2i_PKCS12_len = (len); \
  ({ \
  register char * _d2i_PKCS12__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((PKCS12 * (*)(char * __asm("a6"), PKCS12 ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_PKCS12__bn - 7290))(_d2i_PKCS12__bn, _d2i_PKCS12_a, _d2i_PKCS12_in, _d2i_PKCS12_len); \
});})

#define i2d_PKCS12(a, out) ({ \
  PKCS12 * _i2d_PKCS12_a = (a); \
  unsigned char ** _i2d_PKCS12_out = (out); \
  ({ \
  register char * _i2d_PKCS12__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), PKCS12 * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_PKCS12__bn - 7296))(_i2d_PKCS12__bn, _i2d_PKCS12_a, _i2d_PKCS12_out); \
});})

#define PKCS12_it() ({ \
  register char * _PKCS12_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_PKCS12_it__bn - 7302))(_PKCS12_it__bn); \
})

#define PKCS12_MAC_DATA_new() ({ \
  register char * _PKCS12_MAC_DATA_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((PKCS12_MAC_DATA * (*)(char * __asm("a6"))) \
  (_PKCS12_MAC_DATA_new__bn - 7308))(_PKCS12_MAC_DATA_new__bn); \
})

#define PKCS12_MAC_DATA_free(a) ({ \
  PKCS12_MAC_DATA * _PKCS12_MAC_DATA_free_a = (a); \
  ({ \
  register char * _PKCS12_MAC_DATA_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), PKCS12_MAC_DATA * __asm("a0"))) \
  (_PKCS12_MAC_DATA_free__bn - 7314))(_PKCS12_MAC_DATA_free__bn, _PKCS12_MAC_DATA_free_a); \
});})

#define d2i_PKCS12_MAC_DATA(a, in, len) ({ \
  PKCS12_MAC_DATA ** _d2i_PKCS12_MAC_DATA_a = (a); \
  unsigned char ** _d2i_PKCS12_MAC_DATA_in = (in); \
  long _d2i_PKCS12_MAC_DATA_len = (len); \
  ({ \
  register char * _d2i_PKCS12_MAC_DATA__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((PKCS12_MAC_DATA * (*)(char * __asm("a6"), PKCS12_MAC_DATA ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_PKCS12_MAC_DATA__bn - 7320))(_d2i_PKCS12_MAC_DATA__bn, _d2i_PKCS12_MAC_DATA_a, _d2i_PKCS12_MAC_DATA_in, _d2i_PKCS12_MAC_DATA_len); \
});})

#define i2d_PKCS12_MAC_DATA(a, out) ({ \
  PKCS12_MAC_DATA * _i2d_PKCS12_MAC_DATA_a = (a); \
  unsigned char ** _i2d_PKCS12_MAC_DATA_out = (out); \
  ({ \
  register char * _i2d_PKCS12_MAC_DATA__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), PKCS12_MAC_DATA * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_PKCS12_MAC_DATA__bn - 7326))(_i2d_PKCS12_MAC_DATA__bn, _i2d_PKCS12_MAC_DATA_a, _i2d_PKCS12_MAC_DATA_out); \
});})

#define PKCS12_MAC_DATA_it() ({ \
  register char * _PKCS12_MAC_DATA_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_PKCS12_MAC_DATA_it__bn - 7332))(_PKCS12_MAC_DATA_it__bn); \
})

#define PKCS12_SAFEBAG_new() ({ \
  register char * _PKCS12_SAFEBAG_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((PKCS12_SAFEBAG * (*)(char * __asm("a6"))) \
  (_PKCS12_SAFEBAG_new__bn - 7338))(_PKCS12_SAFEBAG_new__bn); \
})

#define PKCS12_SAFEBAG_free(a) ({ \
  PKCS12_SAFEBAG * _PKCS12_SAFEBAG_free_a = (a); \
  ({ \
  register char * _PKCS12_SAFEBAG_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), PKCS12_SAFEBAG * __asm("a0"))) \
  (_PKCS12_SAFEBAG_free__bn - 7344))(_PKCS12_SAFEBAG_free__bn, _PKCS12_SAFEBAG_free_a); \
});})

#define d2i_PKCS12_SAFEBAG(a, in, len) ({ \
  PKCS12_SAFEBAG ** _d2i_PKCS12_SAFEBAG_a = (a); \
  unsigned char ** _d2i_PKCS12_SAFEBAG_in = (in); \
  long _d2i_PKCS12_SAFEBAG_len = (len); \
  ({ \
  register char * _d2i_PKCS12_SAFEBAG__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((PKCS12_SAFEBAG * (*)(char * __asm("a6"), PKCS12_SAFEBAG ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_PKCS12_SAFEBAG__bn - 7350))(_d2i_PKCS12_SAFEBAG__bn, _d2i_PKCS12_SAFEBAG_a, _d2i_PKCS12_SAFEBAG_in, _d2i_PKCS12_SAFEBAG_len); \
});})

#define i2d_PKCS12_SAFEBAG(a, out) ({ \
  PKCS12_SAFEBAG * _i2d_PKCS12_SAFEBAG_a = (a); \
  unsigned char ** _i2d_PKCS12_SAFEBAG_out = (out); \
  ({ \
  register char * _i2d_PKCS12_SAFEBAG__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), PKCS12_SAFEBAG * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_PKCS12_SAFEBAG__bn - 7356))(_i2d_PKCS12_SAFEBAG__bn, _i2d_PKCS12_SAFEBAG_a, _i2d_PKCS12_SAFEBAG_out); \
});})

#define PKCS12_SAFEBAG_it() ({ \
  register char * _PKCS12_SAFEBAG_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_PKCS12_SAFEBAG_it__bn - 7362))(_PKCS12_SAFEBAG_it__bn); \
})

#define PKCS12_BAGS_new() ({ \
  register char * _PKCS12_BAGS_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((PKCS12_BAGS * (*)(char * __asm("a6"))) \
  (_PKCS12_BAGS_new__bn - 7368))(_PKCS12_BAGS_new__bn); \
})

#define PKCS12_BAGS_free(a) ({ \
  PKCS12_BAGS * _PKCS12_BAGS_free_a = (a); \
  ({ \
  register char * _PKCS12_BAGS_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), PKCS12_BAGS * __asm("a0"))) \
  (_PKCS12_BAGS_free__bn - 7374))(_PKCS12_BAGS_free__bn, _PKCS12_BAGS_free_a); \
});})

#define d2i_PKCS12_BAGS(a, in, len) ({ \
  PKCS12_BAGS ** _d2i_PKCS12_BAGS_a = (a); \
  unsigned char ** _d2i_PKCS12_BAGS_in = (in); \
  long _d2i_PKCS12_BAGS_len = (len); \
  ({ \
  register char * _d2i_PKCS12_BAGS__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((PKCS12_BAGS * (*)(char * __asm("a6"), PKCS12_BAGS ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_PKCS12_BAGS__bn - 7380))(_d2i_PKCS12_BAGS__bn, _d2i_PKCS12_BAGS_a, _d2i_PKCS12_BAGS_in, _d2i_PKCS12_BAGS_len); \
});})

#define i2d_PKCS12_BAGS(a, out) ({ \
  PKCS12_BAGS * _i2d_PKCS12_BAGS_a = (a); \
  unsigned char ** _i2d_PKCS12_BAGS_out = (out); \
  ({ \
  register char * _i2d_PKCS12_BAGS__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), PKCS12_BAGS * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_PKCS12_BAGS__bn - 7386))(_i2d_PKCS12_BAGS__bn, _i2d_PKCS12_BAGS_a, _i2d_PKCS12_BAGS_out); \
});})

#define PKCS12_BAGS_it() ({ \
  register char * _PKCS12_BAGS_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_PKCS12_BAGS_it__bn - 7392))(_PKCS12_BAGS_it__bn); \
})

#define PKCS12_SAFEBAGS_it() ({ \
  register char * _PKCS12_SAFEBAGS_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_PKCS12_SAFEBAGS_it__bn - 7398))(_PKCS12_SAFEBAGS_it__bn); \
})

#define PKCS12_AUTHSAFES_it() ({ \
  register char * _PKCS12_AUTHSAFES_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_PKCS12_AUTHSAFES_it__bn - 7404))(_PKCS12_AUTHSAFES_it__bn); \
})

#define PKCS12_PBE_add() ({ \
  register char * _PKCS12_PBE_add__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"))) \
  (_PKCS12_PBE_add__bn - 7410))(_PKCS12_PBE_add__bn); \
})

#define PKCS12_parse(p12, pass, pkey, cert, ca) ({ \
  PKCS12 * _PKCS12_parse_p12 = (p12); \
  const char * _PKCS12_parse_pass = (pass); \
  EVP_PKEY ** _PKCS12_parse_pkey = (pkey); \
  X509 ** _PKCS12_parse_cert = (cert); \
  STACK_OF(X509) ** _PKCS12_parse_ca = (ca); \
  ({ \
  register char * _PKCS12_parse__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), PKCS12 * __asm("a0"), const char * __asm("a1"), EVP_PKEY ** __asm("a2"), X509 ** __asm("a3"), STACK_OF(X509) ** __asm("d0"))) \
  (_PKCS12_parse__bn - 7416))(_PKCS12_parse__bn, _PKCS12_parse_p12, _PKCS12_parse_pass, _PKCS12_parse_pkey, _PKCS12_parse_cert, _PKCS12_parse_ca); \
});})

#define PKCS12_create(pass, name, pkey, cert, ca, nid_key, nid_cert, iter, mac_iter, keytype) ({ \
  char * _PKCS12_create_pass = (pass); \
  char * _PKCS12_create_name = (name); \
  EVP_PKEY * _PKCS12_create_pkey = (pkey); \
  X509 * _PKCS12_create_cert = (cert); \
  STACK_OF(X509) * _PKCS12_create_ca = (ca); \
  LONG _PKCS12_create_nid_key = (nid_key); \
  LONG _PKCS12_create_nid_cert = (nid_cert); \
  LONG _PKCS12_create_iter = (iter); \
  LONG _PKCS12_create_mac_iter = (mac_iter); \
  LONG _PKCS12_create_keytype = (keytype); \
  ({ \
  register char * _PKCS12_create__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((PKCS12 * (*)(char * __asm("a6"), char * __asm("a0"), char * __asm("a1"), EVP_PKEY * __asm("a2"), X509 * __asm("a3"), STACK_OF(X509) * __asm("d0"), LONG __asm("d1"), LONG __asm("d2"), LONG __asm("d3"), LONG __asm("d4"), LONG __asm("d5"))) \
  (_PKCS12_create__bn - 7422))(_PKCS12_create__bn, _PKCS12_create_pass, _PKCS12_create_name, _PKCS12_create_pkey, _PKCS12_create_cert, _PKCS12_create_ca, _PKCS12_create_nid_key, _PKCS12_create_nid_cert, _PKCS12_create_iter, _PKCS12_create_mac_iter, _PKCS12_create_keytype); \
});})

#define i2d_PKCS12_bio(bp, p12) ({ \
  BIO * _i2d_PKCS12_bio_bp = (bp); \
  PKCS12 * _i2d_PKCS12_bio_p12 = (p12); \
  ({ \
  register char * _i2d_PKCS12_bio__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIO * __asm("a0"), PKCS12 * __asm("a1"))) \
  (_i2d_PKCS12_bio__bn - 7428))(_i2d_PKCS12_bio__bn, _i2d_PKCS12_bio_bp, _i2d_PKCS12_bio_p12); \
});})

#define d2i_PKCS12_bio(bp, p12) ({ \
  BIO * _d2i_PKCS12_bio_bp = (bp); \
  PKCS12 ** _d2i_PKCS12_bio_p12 = (p12); \
  ({ \
  register char * _d2i_PKCS12_bio__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((PKCS12 * (*)(char * __asm("a6"), BIO * __asm("a0"), PKCS12 ** __asm("a1"))) \
  (_d2i_PKCS12_bio__bn - 7434))(_d2i_PKCS12_bio__bn, _d2i_PKCS12_bio_bp, _d2i_PKCS12_bio_p12); \
});})

#define PKCS12_newpass(p12, oldpass, newpass) ({ \
  PKCS12 * _PKCS12_newpass_p12 = (p12); \
  char * _PKCS12_newpass_oldpass = (oldpass); \
  char * _PKCS12_newpass_newpass = (newpass); \
  ({ \
  register char * _PKCS12_newpass__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), PKCS12 * __asm("a0"), char * __asm("a1"), char * __asm("a2"))) \
  (_PKCS12_newpass__bn - 7440))(_PKCS12_newpass__bn, _PKCS12_newpass_p12, _PKCS12_newpass_oldpass, _PKCS12_newpass_newpass); \
});})

#define ERR_load_PKCS12_strings() ({ \
  register char * _ERR_load_PKCS12_strings__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"))) \
  (_ERR_load_PKCS12_strings__bn - 7446))(_ERR_load_PKCS12_strings__bn); \
})

#define PKCS7_ISSUER_AND_SERIAL_digest(data, type, md, len) ({ \
  PKCS7_ISSUER_AND_SERIAL * _PKCS7_ISSUER_AND_SERIAL_digest_data = (data); \
  const EVP_MD * _PKCS7_ISSUER_AND_SERIAL_digest_type = (type); \
  unsigned char * _PKCS7_ISSUER_AND_SERIAL_digest_md = (md); \
  unsigned int * _PKCS7_ISSUER_AND_SERIAL_digest_len = (len); \
  ({ \
  register char * _PKCS7_ISSUER_AND_SERIAL_digest__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), PKCS7_ISSUER_AND_SERIAL * __asm("a0"), const EVP_MD * __asm("a1"), unsigned char * __asm("a2"), unsigned int * __asm("a3"))) \
  (_PKCS7_ISSUER_AND_SERIAL_digest__bn - 7452))(_PKCS7_ISSUER_AND_SERIAL_digest__bn, _PKCS7_ISSUER_AND_SERIAL_digest_data, _PKCS7_ISSUER_AND_SERIAL_digest_type, _PKCS7_ISSUER_AND_SERIAL_digest_md, _PKCS7_ISSUER_AND_SERIAL_digest_len); \
});})

#define PKCS7_dup(p7) ({ \
  PKCS7 * _PKCS7_dup_p7 = (p7); \
  ({ \
  register char * _PKCS7_dup__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((PKCS7 * (*)(char * __asm("a6"), PKCS7 * __asm("a0"))) \
  (_PKCS7_dup__bn - 7458))(_PKCS7_dup__bn, _PKCS7_dup_p7); \
});})

#define d2i_PKCS7_bio(bp, p7) ({ \
  BIO * _d2i_PKCS7_bio_bp = (bp); \
  PKCS7 ** _d2i_PKCS7_bio_p7 = (p7); \
  ({ \
  register char * _d2i_PKCS7_bio__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((PKCS7 * (*)(char * __asm("a6"), BIO * __asm("a0"), PKCS7 ** __asm("a1"))) \
  (_d2i_PKCS7_bio__bn - 7464))(_d2i_PKCS7_bio__bn, _d2i_PKCS7_bio_bp, _d2i_PKCS7_bio_p7); \
});})

#define i2d_PKCS7_bio(bp, p7) ({ \
  BIO * _i2d_PKCS7_bio_bp = (bp); \
  PKCS7 * _i2d_PKCS7_bio_p7 = (p7); \
  ({ \
  register char * _i2d_PKCS7_bio__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIO * __asm("a0"), PKCS7 * __asm("a1"))) \
  (_i2d_PKCS7_bio__bn - 7470))(_i2d_PKCS7_bio__bn, _i2d_PKCS7_bio_bp, _i2d_PKCS7_bio_p7); \
});})

#define PKCS7_ISSUER_AND_SERIAL_new() ({ \
  register char * _PKCS7_ISSUER_AND_SERIAL_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((PKCS7_ISSUER_AND_SERIAL * (*)(char * __asm("a6"))) \
  (_PKCS7_ISSUER_AND_SERIAL_new__bn - 7476))(_PKCS7_ISSUER_AND_SERIAL_new__bn); \
})

#define PKCS7_ISSUER_AND_SERIAL_free(a) ({ \
  PKCS7_ISSUER_AND_SERIAL * _PKCS7_ISSUER_AND_SERIAL_free_a = (a); \
  ({ \
  register char * _PKCS7_ISSUER_AND_SERIAL_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), PKCS7_ISSUER_AND_SERIAL * __asm("a0"))) \
  (_PKCS7_ISSUER_AND_SERIAL_free__bn - 7482))(_PKCS7_ISSUER_AND_SERIAL_free__bn, _PKCS7_ISSUER_AND_SERIAL_free_a); \
});})

#define d2i_PKCS7_ISSUER_AND_SERIAL(a, in, len) ({ \
  PKCS7_ISSUER_AND_SERIAL ** _d2i_PKCS7_ISSUER_AND_SERIAL_a = (a); \
  unsigned char ** _d2i_PKCS7_ISSUER_AND_SERIAL_in = (in); \
  long _d2i_PKCS7_ISSUER_AND_SERIAL_len = (len); \
  ({ \
  register char * _d2i_PKCS7_ISSUER_AND_SERIAL__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((PKCS7_ISSUER_AND_SERIAL * (*)(char * __asm("a6"), PKCS7_ISSUER_AND_SERIAL ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_PKCS7_ISSUER_AND_SERIAL__bn - 7488))(_d2i_PKCS7_ISSUER_AND_SERIAL__bn, _d2i_PKCS7_ISSUER_AND_SERIAL_a, _d2i_PKCS7_ISSUER_AND_SERIAL_in, _d2i_PKCS7_ISSUER_AND_SERIAL_len); \
});})

#define i2d_PKCS7_ISSUER_AND_SERIAL(a, out) ({ \
  PKCS7_ISSUER_AND_SERIAL * _i2d_PKCS7_ISSUER_AND_SERIAL_a = (a); \
  unsigned char ** _i2d_PKCS7_ISSUER_AND_SERIAL_out = (out); \
  ({ \
  register char * _i2d_PKCS7_ISSUER_AND_SERIAL__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), PKCS7_ISSUER_AND_SERIAL * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_PKCS7_ISSUER_AND_SERIAL__bn - 7494))(_i2d_PKCS7_ISSUER_AND_SERIAL__bn, _i2d_PKCS7_ISSUER_AND_SERIAL_a, _i2d_PKCS7_ISSUER_AND_SERIAL_out); \
});})

#define PKCS7_ISSUER_AND_SERIAL_it() ({ \
  register char * _PKCS7_ISSUER_AND_SERIAL_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_PKCS7_ISSUER_AND_SERIAL_it__bn - 7500))(_PKCS7_ISSUER_AND_SERIAL_it__bn); \
})

#define PKCS7_SIGNER_INFO_new() ({ \
  register char * _PKCS7_SIGNER_INFO_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((PKCS7_SIGNER_INFO * (*)(char * __asm("a6"))) \
  (_PKCS7_SIGNER_INFO_new__bn - 7506))(_PKCS7_SIGNER_INFO_new__bn); \
})

#define PKCS7_SIGNER_INFO_free(a) ({ \
  PKCS7_SIGNER_INFO * _PKCS7_SIGNER_INFO_free_a = (a); \
  ({ \
  register char * _PKCS7_SIGNER_INFO_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), PKCS7_SIGNER_INFO * __asm("a0"))) \
  (_PKCS7_SIGNER_INFO_free__bn - 7512))(_PKCS7_SIGNER_INFO_free__bn, _PKCS7_SIGNER_INFO_free_a); \
});})

#define d2i_PKCS7_SIGNER_INFO(a, in, len) ({ \
  PKCS7_SIGNER_INFO ** _d2i_PKCS7_SIGNER_INFO_a = (a); \
  unsigned char ** _d2i_PKCS7_SIGNER_INFO_in = (in); \
  long _d2i_PKCS7_SIGNER_INFO_len = (len); \
  ({ \
  register char * _d2i_PKCS7_SIGNER_INFO__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((PKCS7_SIGNER_INFO * (*)(char * __asm("a6"), PKCS7_SIGNER_INFO ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_PKCS7_SIGNER_INFO__bn - 7518))(_d2i_PKCS7_SIGNER_INFO__bn, _d2i_PKCS7_SIGNER_INFO_a, _d2i_PKCS7_SIGNER_INFO_in, _d2i_PKCS7_SIGNER_INFO_len); \
});})

#define i2d_PKCS7_SIGNER_INFO(a, out) ({ \
  PKCS7_SIGNER_INFO * _i2d_PKCS7_SIGNER_INFO_a = (a); \
  unsigned char ** _i2d_PKCS7_SIGNER_INFO_out = (out); \
  ({ \
  register char * _i2d_PKCS7_SIGNER_INFO__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), PKCS7_SIGNER_INFO * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_PKCS7_SIGNER_INFO__bn - 7524))(_i2d_PKCS7_SIGNER_INFO__bn, _i2d_PKCS7_SIGNER_INFO_a, _i2d_PKCS7_SIGNER_INFO_out); \
});})

#define PKCS7_SIGNER_INFO_it() ({ \
  register char * _PKCS7_SIGNER_INFO_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_PKCS7_SIGNER_INFO_it__bn - 7530))(_PKCS7_SIGNER_INFO_it__bn); \
})

#define PKCS7_RECIP_INFO_new() ({ \
  register char * _PKCS7_RECIP_INFO_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((PKCS7_RECIP_INFO * (*)(char * __asm("a6"))) \
  (_PKCS7_RECIP_INFO_new__bn - 7536))(_PKCS7_RECIP_INFO_new__bn); \
})

#define PKCS7_RECIP_INFO_free(a) ({ \
  PKCS7_RECIP_INFO * _PKCS7_RECIP_INFO_free_a = (a); \
  ({ \
  register char * _PKCS7_RECIP_INFO_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), PKCS7_RECIP_INFO * __asm("a0"))) \
  (_PKCS7_RECIP_INFO_free__bn - 7542))(_PKCS7_RECIP_INFO_free__bn, _PKCS7_RECIP_INFO_free_a); \
});})

#define d2i_PKCS7_RECIP_INFO(a, in, len) ({ \
  PKCS7_RECIP_INFO ** _d2i_PKCS7_RECIP_INFO_a = (a); \
  unsigned char ** _d2i_PKCS7_RECIP_INFO_in = (in); \
  long _d2i_PKCS7_RECIP_INFO_len = (len); \
  ({ \
  register char * _d2i_PKCS7_RECIP_INFO__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((PKCS7_RECIP_INFO * (*)(char * __asm("a6"), PKCS7_RECIP_INFO ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_PKCS7_RECIP_INFO__bn - 7548))(_d2i_PKCS7_RECIP_INFO__bn, _d2i_PKCS7_RECIP_INFO_a, _d2i_PKCS7_RECIP_INFO_in, _d2i_PKCS7_RECIP_INFO_len); \
});})

#define i2d_PKCS7_RECIP_INFO(a, out) ({ \
  PKCS7_RECIP_INFO * _i2d_PKCS7_RECIP_INFO_a = (a); \
  unsigned char ** _i2d_PKCS7_RECIP_INFO_out = (out); \
  ({ \
  register char * _i2d_PKCS7_RECIP_INFO__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), PKCS7_RECIP_INFO * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_PKCS7_RECIP_INFO__bn - 7554))(_i2d_PKCS7_RECIP_INFO__bn, _i2d_PKCS7_RECIP_INFO_a, _i2d_PKCS7_RECIP_INFO_out); \
});})

#define PKCS7_RECIP_INFO_it() ({ \
  register char * _PKCS7_RECIP_INFO_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_PKCS7_RECIP_INFO_it__bn - 7560))(_PKCS7_RECIP_INFO_it__bn); \
})

#define PKCS7_SIGNED_new() ({ \
  register char * _PKCS7_SIGNED_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((PKCS7_SIGNED * (*)(char * __asm("a6"))) \
  (_PKCS7_SIGNED_new__bn - 7566))(_PKCS7_SIGNED_new__bn); \
})

#define PKCS7_SIGNED_free(a) ({ \
  PKCS7_SIGNED * _PKCS7_SIGNED_free_a = (a); \
  ({ \
  register char * _PKCS7_SIGNED_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), PKCS7_SIGNED * __asm("a0"))) \
  (_PKCS7_SIGNED_free__bn - 7572))(_PKCS7_SIGNED_free__bn, _PKCS7_SIGNED_free_a); \
});})

#define d2i_PKCS7_SIGNED(a, in, len) ({ \
  PKCS7_SIGNED ** _d2i_PKCS7_SIGNED_a = (a); \
  unsigned char ** _d2i_PKCS7_SIGNED_in = (in); \
  long _d2i_PKCS7_SIGNED_len = (len); \
  ({ \
  register char * _d2i_PKCS7_SIGNED__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((PKCS7_SIGNED * (*)(char * __asm("a6"), PKCS7_SIGNED ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_PKCS7_SIGNED__bn - 7578))(_d2i_PKCS7_SIGNED__bn, _d2i_PKCS7_SIGNED_a, _d2i_PKCS7_SIGNED_in, _d2i_PKCS7_SIGNED_len); \
});})

#define i2d_PKCS7_SIGNED(a, out) ({ \
  PKCS7_SIGNED * _i2d_PKCS7_SIGNED_a = (a); \
  unsigned char ** _i2d_PKCS7_SIGNED_out = (out); \
  ({ \
  register char * _i2d_PKCS7_SIGNED__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), PKCS7_SIGNED * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_PKCS7_SIGNED__bn - 7584))(_i2d_PKCS7_SIGNED__bn, _i2d_PKCS7_SIGNED_a, _i2d_PKCS7_SIGNED_out); \
});})

#define PKCS7_SIGNED_it() ({ \
  register char * _PKCS7_SIGNED_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_PKCS7_SIGNED_it__bn - 7590))(_PKCS7_SIGNED_it__bn); \
})

#define PKCS7_ENC_CONTENT_new() ({ \
  register char * _PKCS7_ENC_CONTENT_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((PKCS7_ENC_CONTENT * (*)(char * __asm("a6"))) \
  (_PKCS7_ENC_CONTENT_new__bn - 7596))(_PKCS7_ENC_CONTENT_new__bn); \
})

#define PKCS7_ENC_CONTENT_free(a) ({ \
  PKCS7_ENC_CONTENT * _PKCS7_ENC_CONTENT_free_a = (a); \
  ({ \
  register char * _PKCS7_ENC_CONTENT_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), PKCS7_ENC_CONTENT * __asm("a0"))) \
  (_PKCS7_ENC_CONTENT_free__bn - 7602))(_PKCS7_ENC_CONTENT_free__bn, _PKCS7_ENC_CONTENT_free_a); \
});})

#define d2i_PKCS7_ENC_CONTENT(a, in, len) ({ \
  PKCS7_ENC_CONTENT ** _d2i_PKCS7_ENC_CONTENT_a = (a); \
  unsigned char ** _d2i_PKCS7_ENC_CONTENT_in = (in); \
  long _d2i_PKCS7_ENC_CONTENT_len = (len); \
  ({ \
  register char * _d2i_PKCS7_ENC_CONTENT__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((PKCS7_ENC_CONTENT * (*)(char * __asm("a6"), PKCS7_ENC_CONTENT ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_PKCS7_ENC_CONTENT__bn - 7608))(_d2i_PKCS7_ENC_CONTENT__bn, _d2i_PKCS7_ENC_CONTENT_a, _d2i_PKCS7_ENC_CONTENT_in, _d2i_PKCS7_ENC_CONTENT_len); \
});})

#define i2d_PKCS7_ENC_CONTENT(a, out) ({ \
  PKCS7_ENC_CONTENT * _i2d_PKCS7_ENC_CONTENT_a = (a); \
  unsigned char ** _i2d_PKCS7_ENC_CONTENT_out = (out); \
  ({ \
  register char * _i2d_PKCS7_ENC_CONTENT__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), PKCS7_ENC_CONTENT * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_PKCS7_ENC_CONTENT__bn - 7614))(_i2d_PKCS7_ENC_CONTENT__bn, _i2d_PKCS7_ENC_CONTENT_a, _i2d_PKCS7_ENC_CONTENT_out); \
});})

#define PKCS7_ENC_CONTENT_it() ({ \
  register char * _PKCS7_ENC_CONTENT_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_PKCS7_ENC_CONTENT_it__bn - 7620))(_PKCS7_ENC_CONTENT_it__bn); \
})

#define PKCS7_ENVELOPE_new() ({ \
  register char * _PKCS7_ENVELOPE_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((PKCS7_ENVELOPE * (*)(char * __asm("a6"))) \
  (_PKCS7_ENVELOPE_new__bn - 7626))(_PKCS7_ENVELOPE_new__bn); \
})

#define PKCS7_ENVELOPE_free(a) ({ \
  PKCS7_ENVELOPE * _PKCS7_ENVELOPE_free_a = (a); \
  ({ \
  register char * _PKCS7_ENVELOPE_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), PKCS7_ENVELOPE * __asm("a0"))) \
  (_PKCS7_ENVELOPE_free__bn - 7632))(_PKCS7_ENVELOPE_free__bn, _PKCS7_ENVELOPE_free_a); \
});})

#define d2i_PKCS7_ENVELOPE(a, in, len) ({ \
  PKCS7_ENVELOPE ** _d2i_PKCS7_ENVELOPE_a = (a); \
  unsigned char ** _d2i_PKCS7_ENVELOPE_in = (in); \
  long _d2i_PKCS7_ENVELOPE_len = (len); \
  ({ \
  register char * _d2i_PKCS7_ENVELOPE__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((PKCS7_ENVELOPE * (*)(char * __asm("a6"), PKCS7_ENVELOPE ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_PKCS7_ENVELOPE__bn - 7638))(_d2i_PKCS7_ENVELOPE__bn, _d2i_PKCS7_ENVELOPE_a, _d2i_PKCS7_ENVELOPE_in, _d2i_PKCS7_ENVELOPE_len); \
});})

#define i2d_PKCS7_ENVELOPE(a, out) ({ \
  PKCS7_ENVELOPE * _i2d_PKCS7_ENVELOPE_a = (a); \
  unsigned char ** _i2d_PKCS7_ENVELOPE_out = (out); \
  ({ \
  register char * _i2d_PKCS7_ENVELOPE__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), PKCS7_ENVELOPE * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_PKCS7_ENVELOPE__bn - 7644))(_i2d_PKCS7_ENVELOPE__bn, _i2d_PKCS7_ENVELOPE_a, _i2d_PKCS7_ENVELOPE_out); \
});})

#define PKCS7_ENVELOPE_it() ({ \
  register char * _PKCS7_ENVELOPE_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_PKCS7_ENVELOPE_it__bn - 7650))(_PKCS7_ENVELOPE_it__bn); \
})

#define PKCS7_SIGN_ENVELOPE_new() ({ \
  register char * _PKCS7_SIGN_ENVELOPE_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((PKCS7_SIGN_ENVELOPE * (*)(char * __asm("a6"))) \
  (_PKCS7_SIGN_ENVELOPE_new__bn - 7656))(_PKCS7_SIGN_ENVELOPE_new__bn); \
})

#define PKCS7_SIGN_ENVELOPE_free(a) ({ \
  PKCS7_SIGN_ENVELOPE * _PKCS7_SIGN_ENVELOPE_free_a = (a); \
  ({ \
  register char * _PKCS7_SIGN_ENVELOPE_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), PKCS7_SIGN_ENVELOPE * __asm("a0"))) \
  (_PKCS7_SIGN_ENVELOPE_free__bn - 7662))(_PKCS7_SIGN_ENVELOPE_free__bn, _PKCS7_SIGN_ENVELOPE_free_a); \
});})

#define d2i_PKCS7_SIGN_ENVELOPE(a, in, len) ({ \
  PKCS7_SIGN_ENVELOPE ** _d2i_PKCS7_SIGN_ENVELOPE_a = (a); \
  unsigned char ** _d2i_PKCS7_SIGN_ENVELOPE_in = (in); \
  long _d2i_PKCS7_SIGN_ENVELOPE_len = (len); \
  ({ \
  register char * _d2i_PKCS7_SIGN_ENVELOPE__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((PKCS7_SIGN_ENVELOPE * (*)(char * __asm("a6"), PKCS7_SIGN_ENVELOPE ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_PKCS7_SIGN_ENVELOPE__bn - 7668))(_d2i_PKCS7_SIGN_ENVELOPE__bn, _d2i_PKCS7_SIGN_ENVELOPE_a, _d2i_PKCS7_SIGN_ENVELOPE_in, _d2i_PKCS7_SIGN_ENVELOPE_len); \
});})

#define i2d_PKCS7_SIGN_ENVELOPE(a, out) ({ \
  PKCS7_SIGN_ENVELOPE * _i2d_PKCS7_SIGN_ENVELOPE_a = (a); \
  unsigned char ** _i2d_PKCS7_SIGN_ENVELOPE_out = (out); \
  ({ \
  register char * _i2d_PKCS7_SIGN_ENVELOPE__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), PKCS7_SIGN_ENVELOPE * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_PKCS7_SIGN_ENVELOPE__bn - 7674))(_i2d_PKCS7_SIGN_ENVELOPE__bn, _i2d_PKCS7_SIGN_ENVELOPE_a, _i2d_PKCS7_SIGN_ENVELOPE_out); \
});})

#define PKCS7_SIGN_ENVELOPE_it() ({ \
  register char * _PKCS7_SIGN_ENVELOPE_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_PKCS7_SIGN_ENVELOPE_it__bn - 7680))(_PKCS7_SIGN_ENVELOPE_it__bn); \
})

#define PKCS7_DIGEST_new() ({ \
  register char * _PKCS7_DIGEST_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((PKCS7_DIGEST * (*)(char * __asm("a6"))) \
  (_PKCS7_DIGEST_new__bn - 7686))(_PKCS7_DIGEST_new__bn); \
})

#define PKCS7_DIGEST_free(a) ({ \
  PKCS7_DIGEST * _PKCS7_DIGEST_free_a = (a); \
  ({ \
  register char * _PKCS7_DIGEST_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), PKCS7_DIGEST * __asm("a0"))) \
  (_PKCS7_DIGEST_free__bn - 7692))(_PKCS7_DIGEST_free__bn, _PKCS7_DIGEST_free_a); \
});})

#define d2i_PKCS7_DIGEST(a, in, len) ({ \
  PKCS7_DIGEST ** _d2i_PKCS7_DIGEST_a = (a); \
  unsigned char ** _d2i_PKCS7_DIGEST_in = (in); \
  long _d2i_PKCS7_DIGEST_len = (len); \
  ({ \
  register char * _d2i_PKCS7_DIGEST__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((PKCS7_DIGEST * (*)(char * __asm("a6"), PKCS7_DIGEST ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_PKCS7_DIGEST__bn - 7698))(_d2i_PKCS7_DIGEST__bn, _d2i_PKCS7_DIGEST_a, _d2i_PKCS7_DIGEST_in, _d2i_PKCS7_DIGEST_len); \
});})

#define i2d_PKCS7_DIGEST(a, out) ({ \
  PKCS7_DIGEST * _i2d_PKCS7_DIGEST_a = (a); \
  unsigned char ** _i2d_PKCS7_DIGEST_out = (out); \
  ({ \
  register char * _i2d_PKCS7_DIGEST__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), PKCS7_DIGEST * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_PKCS7_DIGEST__bn - 7704))(_i2d_PKCS7_DIGEST__bn, _i2d_PKCS7_DIGEST_a, _i2d_PKCS7_DIGEST_out); \
});})

#define PKCS7_DIGEST_it() ({ \
  register char * _PKCS7_DIGEST_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_PKCS7_DIGEST_it__bn - 7710))(_PKCS7_DIGEST_it__bn); \
})

#define PKCS7_ENCRYPT_new() ({ \
  register char * _PKCS7_ENCRYPT_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((PKCS7_ENCRYPT * (*)(char * __asm("a6"))) \
  (_PKCS7_ENCRYPT_new__bn - 7716))(_PKCS7_ENCRYPT_new__bn); \
})

#define PKCS7_ENCRYPT_free(a) ({ \
  PKCS7_ENCRYPT * _PKCS7_ENCRYPT_free_a = (a); \
  ({ \
  register char * _PKCS7_ENCRYPT_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), PKCS7_ENCRYPT * __asm("a0"))) \
  (_PKCS7_ENCRYPT_free__bn - 7722))(_PKCS7_ENCRYPT_free__bn, _PKCS7_ENCRYPT_free_a); \
});})

#define d2i_PKCS7_ENCRYPT(a, in, len) ({ \
  PKCS7_ENCRYPT ** _d2i_PKCS7_ENCRYPT_a = (a); \
  unsigned char ** _d2i_PKCS7_ENCRYPT_in = (in); \
  long _d2i_PKCS7_ENCRYPT_len = (len); \
  ({ \
  register char * _d2i_PKCS7_ENCRYPT__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((PKCS7_ENCRYPT * (*)(char * __asm("a6"), PKCS7_ENCRYPT ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_PKCS7_ENCRYPT__bn - 7728))(_d2i_PKCS7_ENCRYPT__bn, _d2i_PKCS7_ENCRYPT_a, _d2i_PKCS7_ENCRYPT_in, _d2i_PKCS7_ENCRYPT_len); \
});})

#define i2d_PKCS7_ENCRYPT(a, out) ({ \
  PKCS7_ENCRYPT * _i2d_PKCS7_ENCRYPT_a = (a); \
  unsigned char ** _i2d_PKCS7_ENCRYPT_out = (out); \
  ({ \
  register char * _i2d_PKCS7_ENCRYPT__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), PKCS7_ENCRYPT * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_PKCS7_ENCRYPT__bn - 7734))(_i2d_PKCS7_ENCRYPT__bn, _i2d_PKCS7_ENCRYPT_a, _i2d_PKCS7_ENCRYPT_out); \
});})

#define PKCS7_ENCRYPT_it() ({ \
  register char * _PKCS7_ENCRYPT_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_PKCS7_ENCRYPT_it__bn - 7740))(_PKCS7_ENCRYPT_it__bn); \
})

#define PKCS7_new() ({ \
  register char * _PKCS7_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((PKCS7 * (*)(char * __asm("a6"))) \
  (_PKCS7_new__bn - 7746))(_PKCS7_new__bn); \
})

#define PKCS7_free(a) ({ \
  PKCS7 * _PKCS7_free_a = (a); \
  ({ \
  register char * _PKCS7_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), PKCS7 * __asm("a0"))) \
  (_PKCS7_free__bn - 7752))(_PKCS7_free__bn, _PKCS7_free_a); \
});})

#define d2i_PKCS7(a, in, len) ({ \
  PKCS7 ** _d2i_PKCS7_a = (a); \
  unsigned char ** _d2i_PKCS7_in = (in); \
  long _d2i_PKCS7_len = (len); \
  ({ \
  register char * _d2i_PKCS7__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((PKCS7 * (*)(char * __asm("a6"), PKCS7 ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_PKCS7__bn - 7758))(_d2i_PKCS7__bn, _d2i_PKCS7_a, _d2i_PKCS7_in, _d2i_PKCS7_len); \
});})

#define i2d_PKCS7(a, out) ({ \
  PKCS7 * _i2d_PKCS7_a = (a); \
  unsigned char ** _i2d_PKCS7_out = (out); \
  ({ \
  register char * _i2d_PKCS7__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), PKCS7 * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_PKCS7__bn - 7764))(_i2d_PKCS7__bn, _i2d_PKCS7_a, _i2d_PKCS7_out); \
});})

#define PKCS7_it() ({ \
  register char * _PKCS7_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_PKCS7_it__bn - 7770))(_PKCS7_it__bn); \
})

#define PKCS7_ATTR_SIGN_it() ({ \
  register char * _PKCS7_ATTR_SIGN_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_PKCS7_ATTR_SIGN_it__bn - 7776))(_PKCS7_ATTR_SIGN_it__bn); \
})

#define PKCS7_ATTR_VERIFY_it() ({ \
  register char * _PKCS7_ATTR_VERIFY_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_PKCS7_ATTR_VERIFY_it__bn - 7782))(_PKCS7_ATTR_VERIFY_it__bn); \
})

#define PKCS7_ctrl(p7, cmd, larg, parg) ({ \
  PKCS7 * _PKCS7_ctrl_p7 = (p7); \
  LONG _PKCS7_ctrl_cmd = (cmd); \
  long _PKCS7_ctrl_larg = (larg); \
  char * _PKCS7_ctrl_parg = (parg); \
  ({ \
  register char * _PKCS7_ctrl__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((long (*)(char * __asm("a6"), PKCS7 * __asm("a0"), LONG __asm("d0"), long __asm("d1"), char * __asm("a1"))) \
  (_PKCS7_ctrl__bn - 7788))(_PKCS7_ctrl__bn, _PKCS7_ctrl_p7, _PKCS7_ctrl_cmd, _PKCS7_ctrl_larg, _PKCS7_ctrl_parg); \
});})

#define PKCS7_set_type(p7, type) ({ \
  PKCS7 * _PKCS7_set_type_p7 = (p7); \
  LONG _PKCS7_set_type_type = (type); \
  ({ \
  register char * _PKCS7_set_type__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), PKCS7 * __asm("a0"), LONG __asm("d0"))) \
  (_PKCS7_set_type__bn - 7794))(_PKCS7_set_type__bn, _PKCS7_set_type_p7, _PKCS7_set_type_type); \
});})

#define PKCS7_set_content(p7, p7_data) ({ \
  PKCS7 * _PKCS7_set_content_p7 = (p7); \
  PKCS7 * _PKCS7_set_content_p7_data = (p7_data); \
  ({ \
  register char * _PKCS7_set_content__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), PKCS7 * __asm("a0"), PKCS7 * __asm("a1"))) \
  (_PKCS7_set_content__bn - 7800))(_PKCS7_set_content__bn, _PKCS7_set_content_p7, _PKCS7_set_content_p7_data); \
});})

#define PKCS7_SIGNER_INFO_set(p7i, x509, pkey, dgst) ({ \
  PKCS7_SIGNER_INFO * _PKCS7_SIGNER_INFO_set_p7i = (p7i); \
  X509 * _PKCS7_SIGNER_INFO_set_x509 = (x509); \
  EVP_PKEY * _PKCS7_SIGNER_INFO_set_pkey = (pkey); \
  const EVP_MD * _PKCS7_SIGNER_INFO_set_dgst = (dgst); \
  ({ \
  register char * _PKCS7_SIGNER_INFO_set__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), PKCS7_SIGNER_INFO * __asm("a0"), X509 * __asm("a1"), EVP_PKEY * __asm("a2"), const EVP_MD * __asm("a3"))) \
  (_PKCS7_SIGNER_INFO_set__bn - 7806))(_PKCS7_SIGNER_INFO_set__bn, _PKCS7_SIGNER_INFO_set_p7i, _PKCS7_SIGNER_INFO_set_x509, _PKCS7_SIGNER_INFO_set_pkey, _PKCS7_SIGNER_INFO_set_dgst); \
});})

#define PKCS7_add_signer(p7, p7i) ({ \
  PKCS7 * _PKCS7_add_signer_p7 = (p7); \
  PKCS7_SIGNER_INFO * _PKCS7_add_signer_p7i = (p7i); \
  ({ \
  register char * _PKCS7_add_signer__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), PKCS7 * __asm("a0"), PKCS7_SIGNER_INFO * __asm("a1"))) \
  (_PKCS7_add_signer__bn - 7812))(_PKCS7_add_signer__bn, _PKCS7_add_signer_p7, _PKCS7_add_signer_p7i); \
});})

#define PKCS7_add_certificate(p7, x509) ({ \
  PKCS7 * _PKCS7_add_certificate_p7 = (p7); \
  X509 * _PKCS7_add_certificate_x509 = (x509); \
  ({ \
  register char * _PKCS7_add_certificate__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), PKCS7 * __asm("a0"), X509 * __asm("a1"))) \
  (_PKCS7_add_certificate__bn - 7818))(_PKCS7_add_certificate__bn, _PKCS7_add_certificate_p7, _PKCS7_add_certificate_x509); \
});})

#define PKCS7_add_crl(p7, x509) ({ \
  PKCS7 * _PKCS7_add_crl_p7 = (p7); \
  X509_CRL * _PKCS7_add_crl_x509 = (x509); \
  ({ \
  register char * _PKCS7_add_crl__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), PKCS7 * __asm("a0"), X509_CRL * __asm("a1"))) \
  (_PKCS7_add_crl__bn - 7824))(_PKCS7_add_crl__bn, _PKCS7_add_crl_p7, _PKCS7_add_crl_x509); \
});})

#define PKCS7_content_new(p7, nid) ({ \
  PKCS7 * _PKCS7_content_new_p7 = (p7); \
  LONG _PKCS7_content_new_nid = (nid); \
  ({ \
  register char * _PKCS7_content_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), PKCS7 * __asm("a0"), LONG __asm("d0"))) \
  (_PKCS7_content_new__bn - 7830))(_PKCS7_content_new__bn, _PKCS7_content_new_p7, _PKCS7_content_new_nid); \
});})

#define PKCS7_dataVerify(cert_store, ctx, bio, p7, si) ({ \
  X509_STORE * _PKCS7_dataVerify_cert_store = (cert_store); \
  X509_STORE_CTX * _PKCS7_dataVerify_ctx = (ctx); \
  BIO * _PKCS7_dataVerify_bio = (bio); \
  PKCS7 * _PKCS7_dataVerify_p7 = (p7); \
  PKCS7_SIGNER_INFO * _PKCS7_dataVerify_si = (si); \
  ({ \
  register char * _PKCS7_dataVerify__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509_STORE * __asm("a0"), X509_STORE_CTX * __asm("a1"), BIO * __asm("a2"), PKCS7 * __asm("a3"), PKCS7_SIGNER_INFO * __asm("d0"))) \
  (_PKCS7_dataVerify__bn - 7836))(_PKCS7_dataVerify__bn, _PKCS7_dataVerify_cert_store, _PKCS7_dataVerify_ctx, _PKCS7_dataVerify_bio, _PKCS7_dataVerify_p7, _PKCS7_dataVerify_si); \
});})

#define PKCS7_signatureVerify(bio, p7, si, x509) ({ \
  BIO * _PKCS7_signatureVerify_bio = (bio); \
  PKCS7 * _PKCS7_signatureVerify_p7 = (p7); \
  PKCS7_SIGNER_INFO * _PKCS7_signatureVerify_si = (si); \
  X509 * _PKCS7_signatureVerify_x509 = (x509); \
  ({ \
  register char * _PKCS7_signatureVerify__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIO * __asm("a0"), PKCS7 * __asm("a1"), PKCS7_SIGNER_INFO * __asm("a2"), X509 * __asm("a3"))) \
  (_PKCS7_signatureVerify__bn - 7842))(_PKCS7_signatureVerify__bn, _PKCS7_signatureVerify_bio, _PKCS7_signatureVerify_p7, _PKCS7_signatureVerify_si, _PKCS7_signatureVerify_x509); \
});})

#define PKCS7_dataInit(p7, bio) ({ \
  PKCS7 * _PKCS7_dataInit_p7 = (p7); \
  BIO * _PKCS7_dataInit_bio = (bio); \
  ({ \
  register char * _PKCS7_dataInit__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((BIO * (*)(char * __asm("a6"), PKCS7 * __asm("a0"), BIO * __asm("a1"))) \
  (_PKCS7_dataInit__bn - 7848))(_PKCS7_dataInit__bn, _PKCS7_dataInit_p7, _PKCS7_dataInit_bio); \
});})

#define PKCS7_dataFinal(p7, bio) ({ \
  PKCS7 * _PKCS7_dataFinal_p7 = (p7); \
  BIO * _PKCS7_dataFinal_bio = (bio); \
  ({ \
  register char * _PKCS7_dataFinal__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), PKCS7 * __asm("a0"), BIO * __asm("a1"))) \
  (_PKCS7_dataFinal__bn - 7854))(_PKCS7_dataFinal__bn, _PKCS7_dataFinal_p7, _PKCS7_dataFinal_bio); \
});})

#define PKCS7_dataDecode(p7, pkey, in_bio, pcert) ({ \
  PKCS7 * _PKCS7_dataDecode_p7 = (p7); \
  EVP_PKEY * _PKCS7_dataDecode_pkey = (pkey); \
  BIO * _PKCS7_dataDecode_in_bio = (in_bio); \
  X509 * _PKCS7_dataDecode_pcert = (pcert); \
  ({ \
  register char * _PKCS7_dataDecode__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((BIO * (*)(char * __asm("a6"), PKCS7 * __asm("a0"), EVP_PKEY * __asm("a1"), BIO * __asm("a2"), X509 * __asm("a3"))) \
  (_PKCS7_dataDecode__bn - 7860))(_PKCS7_dataDecode__bn, _PKCS7_dataDecode_p7, _PKCS7_dataDecode_pkey, _PKCS7_dataDecode_in_bio, _PKCS7_dataDecode_pcert); \
});})

#define PKCS7_add_signature(p7, x509, pkey, dgst) ({ \
  PKCS7 * _PKCS7_add_signature_p7 = (p7); \
  X509 * _PKCS7_add_signature_x509 = (x509); \
  EVP_PKEY * _PKCS7_add_signature_pkey = (pkey); \
  const EVP_MD * _PKCS7_add_signature_dgst = (dgst); \
  ({ \
  register char * _PKCS7_add_signature__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((PKCS7_SIGNER_INFO * (*)(char * __asm("a6"), PKCS7 * __asm("a0"), X509 * __asm("a1"), EVP_PKEY * __asm("a2"), const EVP_MD * __asm("a3"))) \
  (_PKCS7_add_signature__bn - 7866))(_PKCS7_add_signature__bn, _PKCS7_add_signature_p7, _PKCS7_add_signature_x509, _PKCS7_add_signature_pkey, _PKCS7_add_signature_dgst); \
});})

#define PKCS7_cert_from_signer_info(p7, si) ({ \
  PKCS7 * _PKCS7_cert_from_signer_info_p7 = (p7); \
  PKCS7_SIGNER_INFO * _PKCS7_cert_from_signer_info_si = (si); \
  ({ \
  register char * _PKCS7_cert_from_signer_info__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509 * (*)(char * __asm("a6"), PKCS7 * __asm("a0"), PKCS7_SIGNER_INFO * __asm("a1"))) \
  (_PKCS7_cert_from_signer_info__bn - 7872))(_PKCS7_cert_from_signer_info__bn, _PKCS7_cert_from_signer_info_p7, _PKCS7_cert_from_signer_info_si); \
});})

#define PKCS7_get_signer_info(p7) ({ \
  PKCS7 * _PKCS7_get_signer_info_p7 = (p7); \
  ({ \
  register char * _PKCS7_get_signer_info__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((STACK_OF(PKCS7_SIGNER_INFO) * (*)(char * __asm("a6"), PKCS7 * __asm("a0"))) \
  (_PKCS7_get_signer_info__bn - 7878))(_PKCS7_get_signer_info__bn, _PKCS7_get_signer_info_p7); \
});})

#define PKCS7_add_recipient(p7, x509) ({ \
  PKCS7 * _PKCS7_add_recipient_p7 = (p7); \
  X509 * _PKCS7_add_recipient_x509 = (x509); \
  ({ \
  register char * _PKCS7_add_recipient__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((PKCS7_RECIP_INFO * (*)(char * __asm("a6"), PKCS7 * __asm("a0"), X509 * __asm("a1"))) \
  (_PKCS7_add_recipient__bn - 7884))(_PKCS7_add_recipient__bn, _PKCS7_add_recipient_p7, _PKCS7_add_recipient_x509); \
});})

#define PKCS7_add_recipient_info(p7, ri) ({ \
  PKCS7 * _PKCS7_add_recipient_info_p7 = (p7); \
  PKCS7_RECIP_INFO * _PKCS7_add_recipient_info_ri = (ri); \
  ({ \
  register char * _PKCS7_add_recipient_info__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), PKCS7 * __asm("a0"), PKCS7_RECIP_INFO * __asm("a1"))) \
  (_PKCS7_add_recipient_info__bn - 7890))(_PKCS7_add_recipient_info__bn, _PKCS7_add_recipient_info_p7, _PKCS7_add_recipient_info_ri); \
});})

#define PKCS7_RECIP_INFO_set(p7i, x509) ({ \
  PKCS7_RECIP_INFO * _PKCS7_RECIP_INFO_set_p7i = (p7i); \
  X509 * _PKCS7_RECIP_INFO_set_x509 = (x509); \
  ({ \
  register char * _PKCS7_RECIP_INFO_set__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), PKCS7_RECIP_INFO * __asm("a0"), X509 * __asm("a1"))) \
  (_PKCS7_RECIP_INFO_set__bn - 7896))(_PKCS7_RECIP_INFO_set__bn, _PKCS7_RECIP_INFO_set_p7i, _PKCS7_RECIP_INFO_set_x509); \
});})

#define PKCS7_set_cipher(p7, cipher) ({ \
  PKCS7 * _PKCS7_set_cipher_p7 = (p7); \
  const EVP_CIPHER * _PKCS7_set_cipher_cipher = (cipher); \
  ({ \
  register char * _PKCS7_set_cipher__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), PKCS7 * __asm("a0"), const EVP_CIPHER * __asm("a1"))) \
  (_PKCS7_set_cipher__bn - 7902))(_PKCS7_set_cipher__bn, _PKCS7_set_cipher_p7, _PKCS7_set_cipher_cipher); \
});})

#define PKCS7_get_issuer_and_serial(p7, idx) ({ \
  PKCS7 * _PKCS7_get_issuer_and_serial_p7 = (p7); \
  LONG _PKCS7_get_issuer_and_serial_idx = (idx); \
  ({ \
  register char * _PKCS7_get_issuer_and_serial__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((PKCS7_ISSUER_AND_SERIAL * (*)(char * __asm("a6"), PKCS7 * __asm("a0"), LONG __asm("d0"))) \
  (_PKCS7_get_issuer_and_serial__bn - 7908))(_PKCS7_get_issuer_and_serial__bn, _PKCS7_get_issuer_and_serial_p7, _PKCS7_get_issuer_and_serial_idx); \
});})

#define PKCS7_digest_from_attributes(sk) ({ \
  STACK_OF(X509_ATTRIBUTE) * _PKCS7_digest_from_attributes_sk = (sk); \
  ({ \
  register char * _PKCS7_digest_from_attributes__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((ASN1_OCTET_STRING * (*)(char * __asm("a6"), STACK_OF(X509_ATTRIBUTE) * __asm("a0"))) \
  (_PKCS7_digest_from_attributes__bn - 7914))(_PKCS7_digest_from_attributes__bn, _PKCS7_digest_from_attributes_sk); \
});})

#define PKCS7_add_signed_attribute(p7si, nid, type, data) ({ \
  PKCS7_SIGNER_INFO * _PKCS7_add_signed_attribute_p7si = (p7si); \
  LONG _PKCS7_add_signed_attribute_nid = (nid); \
  LONG _PKCS7_add_signed_attribute_type = (type); \
  void * _PKCS7_add_signed_attribute_data = (data); \
  ({ \
  register char * _PKCS7_add_signed_attribute__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), PKCS7_SIGNER_INFO * __asm("a0"), LONG __asm("d0"), LONG __asm("d1"), void * __asm("a1"))) \
  (_PKCS7_add_signed_attribute__bn - 7920))(_PKCS7_add_signed_attribute__bn, _PKCS7_add_signed_attribute_p7si, _PKCS7_add_signed_attribute_nid, _PKCS7_add_signed_attribute_type, _PKCS7_add_signed_attribute_data); \
});})

#define PKCS7_add_attribute(p7si, nid, atrtype, value) ({ \
  PKCS7_SIGNER_INFO * _PKCS7_add_attribute_p7si = (p7si); \
  LONG _PKCS7_add_attribute_nid = (nid); \
  LONG _PKCS7_add_attribute_atrtype = (atrtype); \
  void * _PKCS7_add_attribute_value = (value); \
  ({ \
  register char * _PKCS7_add_attribute__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), PKCS7_SIGNER_INFO * __asm("a0"), LONG __asm("d0"), LONG __asm("d1"), void * __asm("a1"))) \
  (_PKCS7_add_attribute__bn - 7926))(_PKCS7_add_attribute__bn, _PKCS7_add_attribute_p7si, _PKCS7_add_attribute_nid, _PKCS7_add_attribute_atrtype, _PKCS7_add_attribute_value); \
});})

#define PKCS7_get_attribute(si, nid) ({ \
  PKCS7_SIGNER_INFO * _PKCS7_get_attribute_si = (si); \
  LONG _PKCS7_get_attribute_nid = (nid); \
  ({ \
  register char * _PKCS7_get_attribute__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((ASN1_TYPE * (*)(char * __asm("a6"), PKCS7_SIGNER_INFO * __asm("a0"), LONG __asm("d0"))) \
  (_PKCS7_get_attribute__bn - 7932))(_PKCS7_get_attribute__bn, _PKCS7_get_attribute_si, _PKCS7_get_attribute_nid); \
});})

#define PKCS7_get_signed_attribute(si, nid) ({ \
  PKCS7_SIGNER_INFO * _PKCS7_get_signed_attribute_si = (si); \
  LONG _PKCS7_get_signed_attribute_nid = (nid); \
  ({ \
  register char * _PKCS7_get_signed_attribute__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((ASN1_TYPE * (*)(char * __asm("a6"), PKCS7_SIGNER_INFO * __asm("a0"), LONG __asm("d0"))) \
  (_PKCS7_get_signed_attribute__bn - 7938))(_PKCS7_get_signed_attribute__bn, _PKCS7_get_signed_attribute_si, _PKCS7_get_signed_attribute_nid); \
});})

#define PKCS7_set_signed_attributes(p7si, sk) ({ \
  PKCS7_SIGNER_INFO * _PKCS7_set_signed_attributes_p7si = (p7si); \
  STACK_OF(X509_ATTRIBUTE) * _PKCS7_set_signed_attributes_sk = (sk); \
  ({ \
  register char * _PKCS7_set_signed_attributes__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), PKCS7_SIGNER_INFO * __asm("a0"), STACK_OF(X509_ATTRIBUTE) * __asm("a1"))) \
  (_PKCS7_set_signed_attributes__bn - 7944))(_PKCS7_set_signed_attributes__bn, _PKCS7_set_signed_attributes_p7si, _PKCS7_set_signed_attributes_sk); \
});})

#define PKCS7_set_attributes(p7si, sk) ({ \
  PKCS7_SIGNER_INFO * _PKCS7_set_attributes_p7si = (p7si); \
  STACK_OF(X509_ATTRIBUTE) * _PKCS7_set_attributes_sk = (sk); \
  ({ \
  register char * _PKCS7_set_attributes__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), PKCS7_SIGNER_INFO * __asm("a0"), STACK_OF(X509_ATTRIBUTE) * __asm("a1"))) \
  (_PKCS7_set_attributes__bn - 7950))(_PKCS7_set_attributes__bn, _PKCS7_set_attributes_p7si, _PKCS7_set_attributes_sk); \
});})

#define PKCS7_sign(signcert, pkey, certs, data, flags) ({ \
  X509 * _PKCS7_sign_signcert = (signcert); \
  EVP_PKEY * _PKCS7_sign_pkey = (pkey); \
  STACK_OF(X509) * _PKCS7_sign_certs = (certs); \
  BIO * _PKCS7_sign_data = (data); \
  LONG _PKCS7_sign_flags = (flags); \
  ({ \
  register char * _PKCS7_sign__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((PKCS7 * (*)(char * __asm("a6"), X509 * __asm("a0"), EVP_PKEY * __asm("a1"), STACK_OF(X509) * __asm("a2"), BIO * __asm("a3"), LONG __asm("d0"))) \
  (_PKCS7_sign__bn - 7956))(_PKCS7_sign__bn, _PKCS7_sign_signcert, _PKCS7_sign_pkey, _PKCS7_sign_certs, _PKCS7_sign_data, _PKCS7_sign_flags); \
});})

#define PKCS7_verify(p7, certs, store, indata, out, flags) ({ \
  PKCS7 * _PKCS7_verify_p7 = (p7); \
  STACK_OF(X509) * _PKCS7_verify_certs = (certs); \
  X509_STORE * _PKCS7_verify_store = (store); \
  BIO * _PKCS7_verify_indata = (indata); \
  BIO * _PKCS7_verify_out = (out); \
  LONG _PKCS7_verify_flags = (flags); \
  ({ \
  register char * _PKCS7_verify__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), PKCS7 * __asm("a0"), STACK_OF(X509) * __asm("a1"), X509_STORE * __asm("a2"), BIO * __asm("a3"), BIO * __asm("d0"), LONG __asm("d1"))) \
  (_PKCS7_verify__bn - 7962))(_PKCS7_verify__bn, _PKCS7_verify_p7, _PKCS7_verify_certs, _PKCS7_verify_store, _PKCS7_verify_indata, _PKCS7_verify_out, _PKCS7_verify_flags); \
});})

#define PKCS7_get0_signers(p7, certs, flags) ({ \
  PKCS7 * _PKCS7_get0_signers_p7 = (p7); \
  STACK_OF(X509) * _PKCS7_get0_signers_certs = (certs); \
  LONG _PKCS7_get0_signers_flags = (flags); \
  ({ \
  register char * _PKCS7_get0_signers__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((STACK_OF(X509) * (*)(char * __asm("a6"), PKCS7 * __asm("a0"), STACK_OF(X509) * __asm("a1"), LONG __asm("d0"))) \
  (_PKCS7_get0_signers__bn - 7968))(_PKCS7_get0_signers__bn, _PKCS7_get0_signers_p7, _PKCS7_get0_signers_certs, _PKCS7_get0_signers_flags); \
});})

#define PKCS7_encrypt(certs, in, cipher, flags) ({ \
  STACK_OF(X509) * _PKCS7_encrypt_certs = (certs); \
  BIO * _PKCS7_encrypt_in = (in); \
  const EVP_CIPHER * _PKCS7_encrypt_cipher = (cipher); \
  LONG _PKCS7_encrypt_flags = (flags); \
  ({ \
  register char * _PKCS7_encrypt__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((PKCS7 * (*)(char * __asm("a6"), STACK_OF(X509) * __asm("a0"), BIO * __asm("a1"), const EVP_CIPHER * __asm("a2"), LONG __asm("d0"))) \
  (_PKCS7_encrypt__bn - 7974))(_PKCS7_encrypt__bn, _PKCS7_encrypt_certs, _PKCS7_encrypt_in, _PKCS7_encrypt_cipher, _PKCS7_encrypt_flags); \
});})

#define PKCS7_decrypt(p7, pkey, cert, data, flags) ({ \
  PKCS7 * _PKCS7_decrypt_p7 = (p7); \
  EVP_PKEY * _PKCS7_decrypt_pkey = (pkey); \
  X509 * _PKCS7_decrypt_cert = (cert); \
  BIO * _PKCS7_decrypt_data = (data); \
  LONG _PKCS7_decrypt_flags = (flags); \
  ({ \
  register char * _PKCS7_decrypt__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), PKCS7 * __asm("a0"), EVP_PKEY * __asm("a1"), X509 * __asm("a2"), BIO * __asm("a3"), LONG __asm("d0"))) \
  (_PKCS7_decrypt__bn - 7980))(_PKCS7_decrypt__bn, _PKCS7_decrypt_p7, _PKCS7_decrypt_pkey, _PKCS7_decrypt_cert, _PKCS7_decrypt_data, _PKCS7_decrypt_flags); \
});})

#define PKCS7_add_attrib_smimecap(si, cap) ({ \
  PKCS7_SIGNER_INFO * _PKCS7_add_attrib_smimecap_si = (si); \
  STACK_OF(X509_ALGOR) * _PKCS7_add_attrib_smimecap_cap = (cap); \
  ({ \
  register char * _PKCS7_add_attrib_smimecap__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), PKCS7_SIGNER_INFO * __asm("a0"), STACK_OF(X509_ALGOR) * __asm("a1"))) \
  (_PKCS7_add_attrib_smimecap__bn - 7986))(_PKCS7_add_attrib_smimecap__bn, _PKCS7_add_attrib_smimecap_si, _PKCS7_add_attrib_smimecap_cap); \
});})

#define PKCS7_get_smimecap(si) ({ \
  PKCS7_SIGNER_INFO * _PKCS7_get_smimecap_si = (si); \
  ({ \
  register char * _PKCS7_get_smimecap__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((STACK_OF(X509_ALGOR) * (*)(char * __asm("a6"), PKCS7_SIGNER_INFO * __asm("a0"))) \
  (_PKCS7_get_smimecap__bn - 7992))(_PKCS7_get_smimecap__bn, _PKCS7_get_smimecap_si); \
});})

#define PKCS7_simple_smimecap(sk, nid, arg) ({ \
  STACK_OF(X509_ALGOR) * _PKCS7_simple_smimecap_sk = (sk); \
  LONG _PKCS7_simple_smimecap_nid = (nid); \
  LONG _PKCS7_simple_smimecap_arg = (arg); \
  ({ \
  register char * _PKCS7_simple_smimecap__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), STACK_OF(X509_ALGOR) * __asm("a0"), LONG __asm("d0"), LONG __asm("d1"))) \
  (_PKCS7_simple_smimecap__bn - 7998))(_PKCS7_simple_smimecap__bn, _PKCS7_simple_smimecap_sk, _PKCS7_simple_smimecap_nid, _PKCS7_simple_smimecap_arg); \
});})

#define SMIME_write_PKCS7(bio, p7, data, flags) ({ \
  BIO * _SMIME_write_PKCS7_bio = (bio); \
  PKCS7 * _SMIME_write_PKCS7_p7 = (p7); \
  BIO * _SMIME_write_PKCS7_data = (data); \
  LONG _SMIME_write_PKCS7_flags = (flags); \
  ({ \
  register char * _SMIME_write_PKCS7__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIO * __asm("a0"), PKCS7 * __asm("a1"), BIO * __asm("a2"), LONG __asm("d0"))) \
  (_SMIME_write_PKCS7__bn - 8004))(_SMIME_write_PKCS7__bn, _SMIME_write_PKCS7_bio, _SMIME_write_PKCS7_p7, _SMIME_write_PKCS7_data, _SMIME_write_PKCS7_flags); \
});})

#define SMIME_read_PKCS7(bio, bcont) ({ \
  BIO * _SMIME_read_PKCS7_bio = (bio); \
  BIO ** _SMIME_read_PKCS7_bcont = (bcont); \
  ({ \
  register char * _SMIME_read_PKCS7__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((PKCS7 * (*)(char * __asm("a6"), BIO * __asm("a0"), BIO ** __asm("a1"))) \
  (_SMIME_read_PKCS7__bn - 8010))(_SMIME_read_PKCS7__bn, _SMIME_read_PKCS7_bio, _SMIME_read_PKCS7_bcont); \
});})

#define SMIME_crlf_copy(in, out, flags) ({ \
  BIO * _SMIME_crlf_copy_in = (in); \
  BIO * _SMIME_crlf_copy_out = (out); \
  LONG _SMIME_crlf_copy_flags = (flags); \
  ({ \
  register char * _SMIME_crlf_copy__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIO * __asm("a0"), BIO * __asm("a1"), LONG __asm("d0"))) \
  (_SMIME_crlf_copy__bn - 8016))(_SMIME_crlf_copy__bn, _SMIME_crlf_copy_in, _SMIME_crlf_copy_out, _SMIME_crlf_copy_flags); \
});})

#define SMIME_text(in, out) ({ \
  BIO * _SMIME_text_in = (in); \
  BIO * _SMIME_text_out = (out); \
  ({ \
  register char * _SMIME_text__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIO * __asm("a0"), BIO * __asm("a1"))) \
  (_SMIME_text__bn - 8022))(_SMIME_text__bn, _SMIME_text_in, _SMIME_text_out); \
});})

#define ERR_load_PKCS7_strings() ({ \
  register char * _ERR_load_PKCS7_strings__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"))) \
  (_ERR_load_PKCS7_strings__bn - 8028))(_ERR_load_PKCS7_strings__bn); \
})

#define RAND_set_rand_method(meth) ({ \
  const RAND_METHOD * _RAND_set_rand_method_meth = (meth); \
  ({ \
  register char * _RAND_set_rand_method__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const RAND_METHOD * __asm("a0"))) \
  (_RAND_set_rand_method__bn - 8034))(_RAND_set_rand_method__bn, _RAND_set_rand_method_meth); \
});})

#define RAND_get_rand_method() ({ \
  register char * _RAND_get_rand_method__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const RAND_METHOD * (*)(char * __asm("a6"))) \
  (_RAND_get_rand_method__bn - 8040))(_RAND_get_rand_method__bn); \
})

#define RAND_SSLeay() ({ \
  register char * _RAND_SSLeay__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((RAND_METHOD * (*)(char * __asm("a6"))) \
  (_RAND_SSLeay__bn - 8046))(_RAND_SSLeay__bn); \
})

#define RAND_cleanup() ({ \
  register char * _RAND_cleanup__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"))) \
  (_RAND_cleanup__bn - 8052))(_RAND_cleanup__bn); \
})

#define RAND_bytes(buf, num) ({ \
  unsigned char * _RAND_bytes_buf = (buf); \
  LONG _RAND_bytes_num = (num); \
  ({ \
  register char * _RAND_bytes__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), unsigned char * __asm("a0"), LONG __asm("d0"))) \
  (_RAND_bytes__bn - 8058))(_RAND_bytes__bn, _RAND_bytes_buf, _RAND_bytes_num); \
});})

#define RAND_pseudo_bytes(buf, num) ({ \
  unsigned char * _RAND_pseudo_bytes_buf = (buf); \
  LONG _RAND_pseudo_bytes_num = (num); \
  ({ \
  register char * _RAND_pseudo_bytes__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), unsigned char * __asm("a0"), LONG __asm("d0"))) \
  (_RAND_pseudo_bytes__bn - 8064))(_RAND_pseudo_bytes__bn, _RAND_pseudo_bytes_buf, _RAND_pseudo_bytes_num); \
});})

#define RAND_seed(buf, num) ({ \
  const void * _RAND_seed_buf = (buf); \
  LONG _RAND_seed_num = (num); \
  ({ \
  register char * _RAND_seed__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), const void * __asm("a0"), LONG __asm("d0"))) \
  (_RAND_seed__bn - 8070))(_RAND_seed__bn, _RAND_seed_buf, _RAND_seed_num); \
});})

#define RAND_add(buf, num, entropy) ({ \
  const void * _RAND_add_buf = (buf); \
  LONG _RAND_add_num = (num); \
  float _RAND_add_entropy = (entropy); \
  ({ \
  register char * _RAND_add__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), const void * __asm("a0"), LONG __asm("d0"), float __asm("d1"))) \
  (_RAND_add__bn - 8076))(_RAND_add__bn, _RAND_add_buf, _RAND_add_num, _RAND_add_entropy); \
});})

#define RAND_load_file(file, max_bytes) ({ \
  const char * _RAND_load_file_file = (file); \
  long _RAND_load_file_max_bytes = (max_bytes); \
  ({ \
  register char * _RAND_load_file__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const char * __asm("a0"), long __asm("d0"))) \
  (_RAND_load_file__bn - 8082))(_RAND_load_file__bn, _RAND_load_file_file, _RAND_load_file_max_bytes); \
});})

#define RAND_write_file(file) ({ \
  const char * _RAND_write_file_file = (file); \
  ({ \
  register char * _RAND_write_file__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const char * __asm("a0"))) \
  (_RAND_write_file__bn - 8088))(_RAND_write_file__bn, _RAND_write_file_file); \
});})

#define RAND_file_name(file, num) ({ \
  char * _RAND_file_name_file = (file); \
  ULONG _RAND_file_name_num = (num); \
  ({ \
  register char * _RAND_file_name__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const char * (*)(char * __asm("a6"), char * __asm("a0"), ULONG __asm("d0"))) \
  (_RAND_file_name__bn - 8094))(_RAND_file_name__bn, _RAND_file_name_file, _RAND_file_name_num); \
});})

#define RAND_status() ({ \
  register char * _RAND_status__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"))) \
  (_RAND_status__bn - 8100))(_RAND_status__bn); \
})

#define RAND_query_egd_bytes(path, buf, bytes) ({ \
  const char * _RAND_query_egd_bytes_path = (path); \
  unsigned char * _RAND_query_egd_bytes_buf = (buf); \
  LONG _RAND_query_egd_bytes_bytes = (bytes); \
  ({ \
  register char * _RAND_query_egd_bytes__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const char * __asm("a0"), unsigned char * __asm("a1"), LONG __asm("d0"))) \
  (_RAND_query_egd_bytes__bn - 8106))(_RAND_query_egd_bytes__bn, _RAND_query_egd_bytes_path, _RAND_query_egd_bytes_buf, _RAND_query_egd_bytes_bytes); \
});})

#define RAND_egd(path) ({ \
  const char * _RAND_egd_path = (path); \
  ({ \
  register char * _RAND_egd__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const char * __asm("a0"))) \
  (_RAND_egd__bn - 8112))(_RAND_egd__bn, _RAND_egd_path); \
});})

#define RAND_egd_bytes(path, bytes) ({ \
  const char * _RAND_egd_bytes_path = (path); \
  LONG _RAND_egd_bytes_bytes = (bytes); \
  ({ \
  register char * _RAND_egd_bytes__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const char * __asm("a0"), LONG __asm("d0"))) \
  (_RAND_egd_bytes__bn - 8118))(_RAND_egd_bytes__bn, _RAND_egd_bytes_path, _RAND_egd_bytes_bytes); \
});})

#define RAND_poll() ({ \
  register char * _RAND_poll__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"))) \
  (_RAND_poll__bn - 8124))(_RAND_poll__bn); \
})

#define ERR_load_RAND_strings() ({ \
  register char * _ERR_load_RAND_strings__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"))) \
  (_ERR_load_RAND_strings__bn - 8130))(_ERR_load_RAND_strings__bn); \
})

#define SSL_CTX_set_msg_callback(ctx, cb) ({ \
  SSL_CTX * _SSL_CTX_set_msg_callback_ctx = (ctx); \
  void (*_SSL_CTX_set_msg_callback_cb)(int write_p, int version, int content_type, const void *buf, size_t len, SSL *ssl, void *arg) = (cb); \
  ({ \
  register char * _SSL_CTX_set_msg_callback__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), SSL_CTX * __asm("a0"), void (*)(int write_p, int version, int content_type, const void *buf, size_t len, SSL *ssl, void *arg) __asm("a1"))) \
  (_SSL_CTX_set_msg_callback__bn - 8136))(_SSL_CTX_set_msg_callback__bn, _SSL_CTX_set_msg_callback_ctx, _SSL_CTX_set_msg_callback_cb); \
});})

#define SSL_set_msg_callback(ssl, cb) ({ \
  SSL * _SSL_set_msg_callback_ssl = (ssl); \
  void (*_SSL_set_msg_callback_cb)(int write_p, int version, int content_type, const void *buf, size_t len, SSL *ssl, void *arg) = (cb); \
  ({ \
  register char * _SSL_set_msg_callback__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), SSL * __asm("a0"), void (*)(int write_p, int version, int content_type, const void *buf, size_t len, SSL *ssl, void *arg) __asm("a1"))) \
  (_SSL_set_msg_callback__bn - 8142))(_SSL_set_msg_callback__bn, _SSL_set_msg_callback_ssl, _SSL_set_msg_callback_cb); \
});})

#define SSL_CTX_sessions(ctx) ({ \
  SSL_CTX * _SSL_CTX_sessions_ctx = (ctx); \
  ({ \
  register char * _SSL_CTX_sessions__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((struct lhash_st * (*)(char * __asm("a6"), SSL_CTX * __asm("a0"))) \
  (_SSL_CTX_sessions__bn - 8148))(_SSL_CTX_sessions__bn, _SSL_CTX_sessions_ctx); \
});})

#define SSL_get_finished(s, buf, count) ({ \
  const SSL * _SSL_get_finished_s = (s); \
  void * _SSL_get_finished_buf = (buf); \
  ULONG _SSL_get_finished_count = (count); \
  ({ \
  register char * _SSL_get_finished__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((size_t (*)(char * __asm("a6"), const SSL * __asm("a0"), void * __asm("a1"), ULONG __asm("d0"))) \
  (_SSL_get_finished__bn - 8154))(_SSL_get_finished__bn, _SSL_get_finished_s, _SSL_get_finished_buf, _SSL_get_finished_count); \
});})

#define SSL_get_peer_finished(s, buf, count) ({ \
  const SSL * _SSL_get_peer_finished_s = (s); \
  void * _SSL_get_peer_finished_buf = (buf); \
  ULONG _SSL_get_peer_finished_count = (count); \
  ({ \
  register char * _SSL_get_peer_finished__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((size_t (*)(char * __asm("a6"), const SSL * __asm("a0"), void * __asm("a1"), ULONG __asm("d0"))) \
  (_SSL_get_peer_finished__bn - 8160))(_SSL_get_peer_finished__bn, _SSL_get_peer_finished_s, _SSL_get_peer_finished_buf, _SSL_get_peer_finished_count); \
});})

#define BIO_f_ssl() ({ \
  register char * _BIO_f_ssl__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((BIO_METHOD * (*)(char * __asm("a6"))) \
  (_BIO_f_ssl__bn - 8166))(_BIO_f_ssl__bn); \
})

#define BIO_new_ssl(ctx, client) ({ \
  SSL_CTX * _BIO_new_ssl_ctx = (ctx); \
  LONG _BIO_new_ssl_client = (client); \
  ({ \
  register char * _BIO_new_ssl__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((BIO * (*)(char * __asm("a6"), SSL_CTX * __asm("a0"), LONG __asm("d0"))) \
  (_BIO_new_ssl__bn - 8172))(_BIO_new_ssl__bn, _BIO_new_ssl_ctx, _BIO_new_ssl_client); \
});})

#define BIO_new_ssl_connect(ctx) ({ \
  SSL_CTX * _BIO_new_ssl_connect_ctx = (ctx); \
  ({ \
  register char * _BIO_new_ssl_connect__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((BIO * (*)(char * __asm("a6"), SSL_CTX * __asm("a0"))) \
  (_BIO_new_ssl_connect__bn - 8178))(_BIO_new_ssl_connect__bn, _BIO_new_ssl_connect_ctx); \
});})

#define BIO_new_buffer_ssl_connect(ctx) ({ \
  SSL_CTX * _BIO_new_buffer_ssl_connect_ctx = (ctx); \
  ({ \
  register char * _BIO_new_buffer_ssl_connect__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((BIO * (*)(char * __asm("a6"), SSL_CTX * __asm("a0"))) \
  (_BIO_new_buffer_ssl_connect__bn - 8184))(_BIO_new_buffer_ssl_connect__bn, _BIO_new_buffer_ssl_connect_ctx); \
});})

#define BIO_ssl_copy_session_id(to, from) ({ \
  BIO * _BIO_ssl_copy_session_id_to = (to); \
  BIO * _BIO_ssl_copy_session_id_from = (from); \
  ({ \
  register char * _BIO_ssl_copy_session_id__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIO * __asm("a0"), BIO * __asm("a1"))) \
  (_BIO_ssl_copy_session_id__bn - 8190))(_BIO_ssl_copy_session_id__bn, _BIO_ssl_copy_session_id_to, _BIO_ssl_copy_session_id_from); \
});})

#define BIO_ssl_shutdown(ssl_bio) ({ \
  BIO * _BIO_ssl_shutdown_ssl_bio = (ssl_bio); \
  ({ \
  register char * _BIO_ssl_shutdown__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), BIO * __asm("a0"))) \
  (_BIO_ssl_shutdown__bn - 8196))(_BIO_ssl_shutdown__bn, _BIO_ssl_shutdown_ssl_bio); \
});})

#define SSL_CTX_set_cipher_list(a1, str) ({ \
  SSL_CTX * _SSL_CTX_set_cipher_list_a1 = (a1); \
  const char * _SSL_CTX_set_cipher_list_str = (str); \
  ({ \
  register char * _SSL_CTX_set_cipher_list__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), SSL_CTX * __asm("a0"), const char * __asm("a1"))) \
  (_SSL_CTX_set_cipher_list__bn - 8202))(_SSL_CTX_set_cipher_list__bn, _SSL_CTX_set_cipher_list_a1, _SSL_CTX_set_cipher_list_str); \
});})

#define SSL_CTX_new(meth) ({ \
  SSL_METHOD * _SSL_CTX_new_meth = (meth); \
  ({ \
  register char * _SSL_CTX_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((SSL_CTX * (*)(char * __asm("a6"), SSL_METHOD * __asm("a0"))) \
  (_SSL_CTX_new__bn - 8208))(_SSL_CTX_new__bn, _SSL_CTX_new_meth); \
});})

#define SSL_CTX_free(a) ({ \
  SSL_CTX * _SSL_CTX_free_a = (a); \
  ({ \
  register char * _SSL_CTX_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), SSL_CTX * __asm("a0"))) \
  (_SSL_CTX_free__bn - 8214))(_SSL_CTX_free__bn, _SSL_CTX_free_a); \
});})

#define SSL_CTX_set_timeout(ctx, t) ({ \
  SSL_CTX * _SSL_CTX_set_timeout_ctx = (ctx); \
  long _SSL_CTX_set_timeout_t = (t); \
  ({ \
  register char * _SSL_CTX_set_timeout__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((long (*)(char * __asm("a6"), SSL_CTX * __asm("a0"), long __asm("d0"))) \
  (_SSL_CTX_set_timeout__bn - 8220))(_SSL_CTX_set_timeout__bn, _SSL_CTX_set_timeout_ctx, _SSL_CTX_set_timeout_t); \
});})

#define SSL_CTX_get_timeout(ctx) ({ \
  const SSL_CTX * _SSL_CTX_get_timeout_ctx = (ctx); \
  ({ \
  register char * _SSL_CTX_get_timeout__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((long (*)(char * __asm("a6"), const SSL_CTX * __asm("a0"))) \
  (_SSL_CTX_get_timeout__bn - 8226))(_SSL_CTX_get_timeout__bn, _SSL_CTX_get_timeout_ctx); \
});})

#define SSL_CTX_get_cert_store(a) ({ \
  const SSL_CTX * _SSL_CTX_get_cert_store_a = (a); \
  ({ \
  register char * _SSL_CTX_get_cert_store__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509_STORE * (*)(char * __asm("a6"), const SSL_CTX * __asm("a0"))) \
  (_SSL_CTX_get_cert_store__bn - 8232))(_SSL_CTX_get_cert_store__bn, _SSL_CTX_get_cert_store_a); \
});})

#define SSL_CTX_set_cert_store(a, b) ({ \
  SSL_CTX * _SSL_CTX_set_cert_store_a = (a); \
  X509_STORE * _SSL_CTX_set_cert_store_b = (b); \
  ({ \
  register char * _SSL_CTX_set_cert_store__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), SSL_CTX * __asm("a0"), X509_STORE * __asm("a1"))) \
  (_SSL_CTX_set_cert_store__bn - 8238))(_SSL_CTX_set_cert_store__bn, _SSL_CTX_set_cert_store_a, _SSL_CTX_set_cert_store_b); \
});})

#define SSL_want(s) ({ \
  const SSL * _SSL_want_s = (s); \
  ({ \
  register char * _SSL_want__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const SSL * __asm("a0"))) \
  (_SSL_want__bn - 8244))(_SSL_want__bn, _SSL_want_s); \
});})

#define SSL_clear(s) ({ \
  SSL * _SSL_clear_s = (s); \
  ({ \
  register char * _SSL_clear__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), SSL * __asm("a0"))) \
  (_SSL_clear__bn - 8250))(_SSL_clear__bn, _SSL_clear_s); \
});})

#define SSL_CTX_flush_sessions(ctx, tm) ({ \
  SSL_CTX * _SSL_CTX_flush_sessions_ctx = (ctx); \
  long _SSL_CTX_flush_sessions_tm = (tm); \
  ({ \
  register char * _SSL_CTX_flush_sessions__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), SSL_CTX * __asm("a0"), long __asm("d0"))) \
  (_SSL_CTX_flush_sessions__bn - 8256))(_SSL_CTX_flush_sessions__bn, _SSL_CTX_flush_sessions_ctx, _SSL_CTX_flush_sessions_tm); \
});})

#define SSL_get_current_cipher(s) ({ \
  const SSL * _SSL_get_current_cipher_s = (s); \
  ({ \
  register char * _SSL_get_current_cipher__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((SSL_CIPHER * (*)(char * __asm("a6"), const SSL * __asm("a0"))) \
  (_SSL_get_current_cipher__bn - 8262))(_SSL_get_current_cipher__bn, _SSL_get_current_cipher_s); \
});})

#define SSL_CIPHER_get_bits(c, alg_bits) ({ \
  const SSL_CIPHER * _SSL_CIPHER_get_bits_c = (c); \
  int * _SSL_CIPHER_get_bits_alg_bits = (alg_bits); \
  ({ \
  register char * _SSL_CIPHER_get_bits__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const SSL_CIPHER * __asm("a0"), int * __asm("a1"))) \
  (_SSL_CIPHER_get_bits__bn - 8268))(_SSL_CIPHER_get_bits__bn, _SSL_CIPHER_get_bits_c, _SSL_CIPHER_get_bits_alg_bits); \
});})

#define SSL_CIPHER_get_version(c) ({ \
  const SSL_CIPHER * _SSL_CIPHER_get_version_c = (c); \
  ({ \
  register char * _SSL_CIPHER_get_version__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((char * (*)(char * __asm("a6"), const SSL_CIPHER * __asm("a0"))) \
  (_SSL_CIPHER_get_version__bn - 8274))(_SSL_CIPHER_get_version__bn, _SSL_CIPHER_get_version_c); \
});})

#define SSL_CIPHER_get_name(c) ({ \
  const SSL_CIPHER * _SSL_CIPHER_get_name_c = (c); \
  ({ \
  register char * _SSL_CIPHER_get_name__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const char * (*)(char * __asm("a6"), const SSL_CIPHER * __asm("a0"))) \
  (_SSL_CIPHER_get_name__bn - 8280))(_SSL_CIPHER_get_name__bn, _SSL_CIPHER_get_name_c); \
});})

#define SSL_CIPHER_get_mac(cipher) ({ \
  SSL_CIPHER * _SSL_CIPHER_get_mac_cipher = (cipher); \
  ({ \
  register char * _SSL_CIPHER_get_mac__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const char * (*)(char * __asm("a6"), SSL_CIPHER * __asm("a0"))) \
  (_SSL_CIPHER_get_mac__bn - 8286))(_SSL_CIPHER_get_mac__bn, _SSL_CIPHER_get_mac_cipher); \
});})

#define SSL_CIPHER_get_encryption(cipher) ({ \
  SSL_CIPHER * _SSL_CIPHER_get_encryption_cipher = (cipher); \
  ({ \
  register char * _SSL_CIPHER_get_encryption__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const char * (*)(char * __asm("a6"), SSL_CIPHER * __asm("a0"))) \
  (_SSL_CIPHER_get_encryption__bn - 8292))(_SSL_CIPHER_get_encryption__bn, _SSL_CIPHER_get_encryption_cipher); \
});})

#define SSL_CIPHER_get_authentication(cipher) ({ \
  SSL_CIPHER * _SSL_CIPHER_get_authentication_cipher = (cipher); \
  ({ \
  register char * _SSL_CIPHER_get_authentication__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const char * (*)(char * __asm("a6"), SSL_CIPHER * __asm("a0"))) \
  (_SSL_CIPHER_get_authentication__bn - 8298))(_SSL_CIPHER_get_authentication__bn, _SSL_CIPHER_get_authentication_cipher); \
});})

#define SSL_CIPHER_get_key_exchange(cipher) ({ \
  SSL_CIPHER * _SSL_CIPHER_get_key_exchange_cipher = (cipher); \
  ({ \
  register char * _SSL_CIPHER_get_key_exchange__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const char * (*)(char * __asm("a6"), SSL_CIPHER * __asm("a0"))) \
  (_SSL_CIPHER_get_key_exchange__bn - 8304))(_SSL_CIPHER_get_key_exchange__bn, _SSL_CIPHER_get_key_exchange_cipher); \
});})

#define SSL_CIPHER_get_export(cipher) ({ \
  SSL_CIPHER * _SSL_CIPHER_get_export_cipher = (cipher); \
  ({ \
  register char * _SSL_CIPHER_get_export__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const char * (*)(char * __asm("a6"), SSL_CIPHER * __asm("a0"))) \
  (_SSL_CIPHER_get_export__bn - 8310))(_SSL_CIPHER_get_export__bn, _SSL_CIPHER_get_export_cipher); \
});})

#define SSL_get_fd(s) ({ \
  const SSL * _SSL_get_fd_s = (s); \
  ({ \
  register char * _SSL_get_fd__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const SSL * __asm("a0"))) \
  (_SSL_get_fd__bn - 8316))(_SSL_get_fd__bn, _SSL_get_fd_s); \
});})

#define SSL_get_rfd(s) ({ \
  const SSL * _SSL_get_rfd_s = (s); \
  ({ \
  register char * _SSL_get_rfd__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const SSL * __asm("a0"))) \
  (_SSL_get_rfd__bn - 8322))(_SSL_get_rfd__bn, _SSL_get_rfd_s); \
});})

#define SSL_get_wfd(s) ({ \
  const SSL * _SSL_get_wfd_s = (s); \
  ({ \
  register char * _SSL_get_wfd__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const SSL * __asm("a0"))) \
  (_SSL_get_wfd__bn - 8328))(_SSL_get_wfd__bn, _SSL_get_wfd_s); \
});})

#define SSL_get_cipher_list(s, n) ({ \
  const SSL * _SSL_get_cipher_list_s = (s); \
  LONG _SSL_get_cipher_list_n = (n); \
  ({ \
  register char * _SSL_get_cipher_list__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const char * (*)(char * __asm("a6"), const SSL * __asm("a0"), LONG __asm("d0"))) \
  (_SSL_get_cipher_list__bn - 8334))(_SSL_get_cipher_list__bn, _SSL_get_cipher_list_s, _SSL_get_cipher_list_n); \
});})

#define SSL_get_shared_ciphers(s, buf, len) ({ \
  const SSL * _SSL_get_shared_ciphers_s = (s); \
  char * _SSL_get_shared_ciphers_buf = (buf); \
  LONG _SSL_get_shared_ciphers_len = (len); \
  ({ \
  register char * _SSL_get_shared_ciphers__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((char * (*)(char * __asm("a6"), const SSL * __asm("a0"), char * __asm("a1"), LONG __asm("d0"))) \
  (_SSL_get_shared_ciphers__bn - 8340))(_SSL_get_shared_ciphers__bn, _SSL_get_shared_ciphers_s, _SSL_get_shared_ciphers_buf, _SSL_get_shared_ciphers_len); \
});})

#define SSL_get_read_ahead(s) ({ \
  const SSL * _SSL_get_read_ahead_s = (s); \
  ({ \
  register char * _SSL_get_read_ahead__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const SSL * __asm("a0"))) \
  (_SSL_get_read_ahead__bn - 8346))(_SSL_get_read_ahead__bn, _SSL_get_read_ahead_s); \
});})

#define SSL_pending(s) ({ \
  const SSL * _SSL_pending_s = (s); \
  ({ \
  register char * _SSL_pending__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const SSL * __asm("a0"))) \
  (_SSL_pending__bn - 8352))(_SSL_pending__bn, _SSL_pending_s); \
});})

#define SSL_set_fd(s, fd) ({ \
  SSL * _SSL_set_fd_s = (s); \
  LONG _SSL_set_fd_fd = (fd); \
  ({ \
  register char * _SSL_set_fd__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), SSL * __asm("a0"), LONG __asm("d0"))) \
  (_SSL_set_fd__bn - 8358))(_SSL_set_fd__bn, _SSL_set_fd_s, _SSL_set_fd_fd); \
});})

#define SSL_set_rfd(s, fd) ({ \
  SSL * _SSL_set_rfd_s = (s); \
  LONG _SSL_set_rfd_fd = (fd); \
  ({ \
  register char * _SSL_set_rfd__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), SSL * __asm("a0"), LONG __asm("d0"))) \
  (_SSL_set_rfd__bn - 8364))(_SSL_set_rfd__bn, _SSL_set_rfd_s, _SSL_set_rfd_fd); \
});})

#define SSL_set_wfd(s, fd) ({ \
  SSL * _SSL_set_wfd_s = (s); \
  LONG _SSL_set_wfd_fd = (fd); \
  ({ \
  register char * _SSL_set_wfd__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), SSL * __asm("a0"), LONG __asm("d0"))) \
  (_SSL_set_wfd__bn - 8370))(_SSL_set_wfd__bn, _SSL_set_wfd_s, _SSL_set_wfd_fd); \
});})

#define SSL_set_bio(s, rbio, wbio) ({ \
  SSL * _SSL_set_bio_s = (s); \
  BIO * _SSL_set_bio_rbio = (rbio); \
  BIO * _SSL_set_bio_wbio = (wbio); \
  ({ \
  register char * _SSL_set_bio__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), SSL * __asm("a0"), BIO * __asm("a1"), BIO * __asm("a2"))) \
  (_SSL_set_bio__bn - 8376))(_SSL_set_bio__bn, _SSL_set_bio_s, _SSL_set_bio_rbio, _SSL_set_bio_wbio); \
});})

#define SSL_get_rbio(s) ({ \
  const SSL * _SSL_get_rbio_s = (s); \
  ({ \
  register char * _SSL_get_rbio__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((BIO * (*)(char * __asm("a6"), const SSL * __asm("a0"))) \
  (_SSL_get_rbio__bn - 8382))(_SSL_get_rbio__bn, _SSL_get_rbio_s); \
});})

#define SSL_get_wbio(s) ({ \
  const SSL * _SSL_get_wbio_s = (s); \
  ({ \
  register char * _SSL_get_wbio__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((BIO * (*)(char * __asm("a6"), const SSL * __asm("a0"))) \
  (_SSL_get_wbio__bn - 8388))(_SSL_get_wbio__bn, _SSL_get_wbio_s); \
});})

#define SSL_set_cipher_list(s, str) ({ \
  SSL * _SSL_set_cipher_list_s = (s); \
  const char * _SSL_set_cipher_list_str = (str); \
  ({ \
  register char * _SSL_set_cipher_list__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), SSL * __asm("a0"), const char * __asm("a1"))) \
  (_SSL_set_cipher_list__bn - 8394))(_SSL_set_cipher_list__bn, _SSL_set_cipher_list_s, _SSL_set_cipher_list_str); \
});})

#define SSL_set_read_ahead(s, yes) ({ \
  SSL * _SSL_set_read_ahead_s = (s); \
  LONG _SSL_set_read_ahead_yes = (yes); \
  ({ \
  register char * _SSL_set_read_ahead__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), SSL * __asm("a0"), LONG __asm("d0"))) \
  (_SSL_set_read_ahead__bn - 8400))(_SSL_set_read_ahead__bn, _SSL_set_read_ahead_s, _SSL_set_read_ahead_yes); \
});})

#define SSL_get_verify_mode(s) ({ \
  const SSL * _SSL_get_verify_mode_s = (s); \
  ({ \
  register char * _SSL_get_verify_mode__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const SSL * __asm("a0"))) \
  (_SSL_get_verify_mode__bn - 8406))(_SSL_get_verify_mode__bn, _SSL_get_verify_mode_s); \
});})

#define SSL_get_verify_depth(s) ({ \
  const SSL * _SSL_get_verify_depth_s = (s); \
  ({ \
  register char * _SSL_get_verify_depth__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const SSL * __asm("a0"))) \
  (_SSL_get_verify_depth__bn - 8412))(_SSL_get_verify_depth__bn, _SSL_get_verify_depth_s); \
});})

#define SSL_get_verify_callback(s) ({ \
  const SSL * _SSL_get_verify_callback_s = (s); \
  ({ \
  register char * _SSL_get_verify_callback__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(int, X509_STORE_CTX *) (*)(char * __asm("a6"), const SSL * __asm("a0"))) \
  (_SSL_get_verify_callback__bn - 8418))(_SSL_get_verify_callback__bn, _SSL_get_verify_callback_s); \
});})

#define SSL_set_verify(s, mode, callback) ({ \
  SSL * _SSL_set_verify_s = (s); \
  LONG _SSL_set_verify_mode = (mode); \
  int (*_SSL_set_verify_callback)(int ok, X509_STORE_CTX *ctx) = (callback); \
  ({ \
  register char * _SSL_set_verify__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), SSL * __asm("a0"), LONG __asm("d0"), int (*)(int ok, X509_STORE_CTX *ctx) __asm("a1"))) \
  (_SSL_set_verify__bn - 8424))(_SSL_set_verify__bn, _SSL_set_verify_s, _SSL_set_verify_mode, _SSL_set_verify_callback); \
});})

#define SSL_set_verify_depth(s, depth) ({ \
  SSL * _SSL_set_verify_depth_s = (s); \
  LONG _SSL_set_verify_depth_depth = (depth); \
  ({ \
  register char * _SSL_set_verify_depth__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), SSL * __asm("a0"), LONG __asm("d0"))) \
  (_SSL_set_verify_depth__bn - 8430))(_SSL_set_verify_depth__bn, _SSL_set_verify_depth_s, _SSL_set_verify_depth_depth); \
});})

#define SSL_use_RSAPrivateKey(ssl, rsa) ({ \
  SSL * _SSL_use_RSAPrivateKey_ssl = (ssl); \
  RSA * _SSL_use_RSAPrivateKey_rsa = (rsa); \
  ({ \
  register char * _SSL_use_RSAPrivateKey__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), SSL * __asm("a0"), RSA * __asm("a1"))) \
  (_SSL_use_RSAPrivateKey__bn - 8436))(_SSL_use_RSAPrivateKey__bn, _SSL_use_RSAPrivateKey_ssl, _SSL_use_RSAPrivateKey_rsa); \
});})

#define SSL_use_RSAPrivateKey_ASN1(ssl, d, len) ({ \
  SSL * _SSL_use_RSAPrivateKey_ASN1_ssl = (ssl); \
  unsigned char * _SSL_use_RSAPrivateKey_ASN1_d = (d); \
  long _SSL_use_RSAPrivateKey_ASN1_len = (len); \
  ({ \
  register char * _SSL_use_RSAPrivateKey_ASN1__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), SSL * __asm("a0"), unsigned char * __asm("a1"), long __asm("d0"))) \
  (_SSL_use_RSAPrivateKey_ASN1__bn - 8442))(_SSL_use_RSAPrivateKey_ASN1__bn, _SSL_use_RSAPrivateKey_ASN1_ssl, _SSL_use_RSAPrivateKey_ASN1_d, _SSL_use_RSAPrivateKey_ASN1_len); \
});})

#define SSL_use_PrivateKey(ssl, pkey) ({ \
  SSL * _SSL_use_PrivateKey_ssl = (ssl); \
  EVP_PKEY * _SSL_use_PrivateKey_pkey = (pkey); \
  ({ \
  register char * _SSL_use_PrivateKey__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), SSL * __asm("a0"), EVP_PKEY * __asm("a1"))) \
  (_SSL_use_PrivateKey__bn - 8448))(_SSL_use_PrivateKey__bn, _SSL_use_PrivateKey_ssl, _SSL_use_PrivateKey_pkey); \
});})

#define SSL_use_PrivateKey_ASN1(pk, ssl, d, len) ({ \
  LONG _SSL_use_PrivateKey_ASN1_pk = (pk); \
  SSL * _SSL_use_PrivateKey_ASN1_ssl = (ssl); \
  unsigned char * _SSL_use_PrivateKey_ASN1_d = (d); \
  long _SSL_use_PrivateKey_ASN1_len = (len); \
  ({ \
  register char * _SSL_use_PrivateKey_ASN1__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), LONG __asm("d0"), SSL * __asm("a0"), unsigned char * __asm("a1"), long __asm("d1"))) \
  (_SSL_use_PrivateKey_ASN1__bn - 8454))(_SSL_use_PrivateKey_ASN1__bn, _SSL_use_PrivateKey_ASN1_pk, _SSL_use_PrivateKey_ASN1_ssl, _SSL_use_PrivateKey_ASN1_d, _SSL_use_PrivateKey_ASN1_len); \
});})

#define SSL_use_certificate(ssl, x) ({ \
  SSL * _SSL_use_certificate_ssl = (ssl); \
  X509 * _SSL_use_certificate_x = (x); \
  ({ \
  register char * _SSL_use_certificate__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), SSL * __asm("a0"), X509 * __asm("a1"))) \
  (_SSL_use_certificate__bn - 8460))(_SSL_use_certificate__bn, _SSL_use_certificate_ssl, _SSL_use_certificate_x); \
});})

#define SSL_use_certificate_ASN1(ssl, d, len) ({ \
  SSL * _SSL_use_certificate_ASN1_ssl = (ssl); \
  unsigned char * _SSL_use_certificate_ASN1_d = (d); \
  LONG _SSL_use_certificate_ASN1_len = (len); \
  ({ \
  register char * _SSL_use_certificate_ASN1__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), SSL * __asm("a0"), unsigned char * __asm("a1"), LONG __asm("d0"))) \
  (_SSL_use_certificate_ASN1__bn - 8466))(_SSL_use_certificate_ASN1__bn, _SSL_use_certificate_ASN1_ssl, _SSL_use_certificate_ASN1_d, _SSL_use_certificate_ASN1_len); \
});})

#define SSL_use_RSAPrivateKey_file(ssl, file, type) ({ \
  SSL * _SSL_use_RSAPrivateKey_file_ssl = (ssl); \
  const char * _SSL_use_RSAPrivateKey_file_file = (file); \
  LONG _SSL_use_RSAPrivateKey_file_type = (type); \
  ({ \
  register char * _SSL_use_RSAPrivateKey_file__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), SSL * __asm("a0"), const char * __asm("a1"), LONG __asm("d0"))) \
  (_SSL_use_RSAPrivateKey_file__bn - 8472))(_SSL_use_RSAPrivateKey_file__bn, _SSL_use_RSAPrivateKey_file_ssl, _SSL_use_RSAPrivateKey_file_file, _SSL_use_RSAPrivateKey_file_type); \
});})

#define SSL_use_PrivateKey_file(ssl, file, type) ({ \
  SSL * _SSL_use_PrivateKey_file_ssl = (ssl); \
  const char * _SSL_use_PrivateKey_file_file = (file); \
  LONG _SSL_use_PrivateKey_file_type = (type); \
  ({ \
  register char * _SSL_use_PrivateKey_file__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), SSL * __asm("a0"), const char * __asm("a1"), LONG __asm("d0"))) \
  (_SSL_use_PrivateKey_file__bn - 8478))(_SSL_use_PrivateKey_file__bn, _SSL_use_PrivateKey_file_ssl, _SSL_use_PrivateKey_file_file, _SSL_use_PrivateKey_file_type); \
});})

#define SSL_use_certificate_file(ssl, file, type) ({ \
  SSL * _SSL_use_certificate_file_ssl = (ssl); \
  const char * _SSL_use_certificate_file_file = (file); \
  LONG _SSL_use_certificate_file_type = (type); \
  ({ \
  register char * _SSL_use_certificate_file__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), SSL * __asm("a0"), const char * __asm("a1"), LONG __asm("d0"))) \
  (_SSL_use_certificate_file__bn - 8484))(_SSL_use_certificate_file__bn, _SSL_use_certificate_file_ssl, _SSL_use_certificate_file_file, _SSL_use_certificate_file_type); \
});})

#define SSL_CTX_use_RSAPrivateKey_file(ctx, file, type) ({ \
  SSL_CTX * _SSL_CTX_use_RSAPrivateKey_file_ctx = (ctx); \
  const char * _SSL_CTX_use_RSAPrivateKey_file_file = (file); \
  LONG _SSL_CTX_use_RSAPrivateKey_file_type = (type); \
  ({ \
  register char * _SSL_CTX_use_RSAPrivateKey_file__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), SSL_CTX * __asm("a0"), const char * __asm("a1"), LONG __asm("d0"))) \
  (_SSL_CTX_use_RSAPrivateKey_file__bn - 8490))(_SSL_CTX_use_RSAPrivateKey_file__bn, _SSL_CTX_use_RSAPrivateKey_file_ctx, _SSL_CTX_use_RSAPrivateKey_file_file, _SSL_CTX_use_RSAPrivateKey_file_type); \
});})

#define SSL_CTX_use_PrivateKey_file(ctx, file, type) ({ \
  SSL_CTX * _SSL_CTX_use_PrivateKey_file_ctx = (ctx); \
  const char * _SSL_CTX_use_PrivateKey_file_file = (file); \
  LONG _SSL_CTX_use_PrivateKey_file_type = (type); \
  ({ \
  register char * _SSL_CTX_use_PrivateKey_file__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), SSL_CTX * __asm("a0"), const char * __asm("a1"), LONG __asm("d0"))) \
  (_SSL_CTX_use_PrivateKey_file__bn - 8496))(_SSL_CTX_use_PrivateKey_file__bn, _SSL_CTX_use_PrivateKey_file_ctx, _SSL_CTX_use_PrivateKey_file_file, _SSL_CTX_use_PrivateKey_file_type); \
});})

#define SSL_CTX_use_certificate_file(ctx, file, type) ({ \
  SSL_CTX * _SSL_CTX_use_certificate_file_ctx = (ctx); \
  const char * _SSL_CTX_use_certificate_file_file = (file); \
  LONG _SSL_CTX_use_certificate_file_type = (type); \
  ({ \
  register char * _SSL_CTX_use_certificate_file__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), SSL_CTX * __asm("a0"), const char * __asm("a1"), LONG __asm("d0"))) \
  (_SSL_CTX_use_certificate_file__bn - 8502))(_SSL_CTX_use_certificate_file__bn, _SSL_CTX_use_certificate_file_ctx, _SSL_CTX_use_certificate_file_file, _SSL_CTX_use_certificate_file_type); \
});})

#define SSL_CTX_use_certificate_chain_file(ctx, file) ({ \
  SSL_CTX * _SSL_CTX_use_certificate_chain_file_ctx = (ctx); \
  const char * _SSL_CTX_use_certificate_chain_file_file = (file); \
  ({ \
  register char * _SSL_CTX_use_certificate_chain_file__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), SSL_CTX * __asm("a0"), const char * __asm("a1"))) \
  (_SSL_CTX_use_certificate_chain_file__bn - 8508))(_SSL_CTX_use_certificate_chain_file__bn, _SSL_CTX_use_certificate_chain_file_ctx, _SSL_CTX_use_certificate_chain_file_file); \
});})

#define SSL_load_client_CA_file(file) ({ \
  const char * _SSL_load_client_CA_file_file = (file); \
  ({ \
  register char * _SSL_load_client_CA_file__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((STACK_OF(X509_NAME) * (*)(char * __asm("a6"), const char * __asm("a0"))) \
  (_SSL_load_client_CA_file__bn - 8514))(_SSL_load_client_CA_file__bn, _SSL_load_client_CA_file_file); \
});})

#define SSL_add_file_cert_subjects_to_stack(stackCAs, file) ({ \
  STACK_OF(X509_NAME) * _SSL_add_file_cert_subjects_to_stack_stackCAs = (stackCAs); \
  const char * _SSL_add_file_cert_subjects_to_stack_file = (file); \
  ({ \
  register char * _SSL_add_file_cert_subjects_to_stack__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), STACK_OF(X509_NAME) * __asm("a0"), const char * __asm("a1"))) \
  (_SSL_add_file_cert_subjects_to_stack__bn - 8520))(_SSL_add_file_cert_subjects_to_stack__bn, _SSL_add_file_cert_subjects_to_stack_stackCAs, _SSL_add_file_cert_subjects_to_stack_file); \
});})

#define SSL_add_dir_cert_subjects_to_stack(stackCAs, dir) ({ \
  STACK_OF(X509_NAME) * _SSL_add_dir_cert_subjects_to_stack_stackCAs = (stackCAs); \
  const char * _SSL_add_dir_cert_subjects_to_stack_dir = (dir); \
  ({ \
  register char * _SSL_add_dir_cert_subjects_to_stack__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), STACK_OF(X509_NAME) * __asm("a0"), const char * __asm("a1"))) \
  (_SSL_add_dir_cert_subjects_to_stack__bn - 8526))(_SSL_add_dir_cert_subjects_to_stack__bn, _SSL_add_dir_cert_subjects_to_stack_stackCAs, _SSL_add_dir_cert_subjects_to_stack_dir); \
});})

#define SSL_load_error_strings() ({ \
  register char * _SSL_load_error_strings__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"))) \
  (_SSL_load_error_strings__bn - 8532))(_SSL_load_error_strings__bn); \
})

#define SSL_state_string(s) ({ \
  const SSL * _SSL_state_string_s = (s); \
  ({ \
  register char * _SSL_state_string__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const char * (*)(char * __asm("a6"), const SSL * __asm("a0"))) \
  (_SSL_state_string__bn - 8538))(_SSL_state_string__bn, _SSL_state_string_s); \
});})

#define SSL_rstate_string(s) ({ \
  const SSL * _SSL_rstate_string_s = (s); \
  ({ \
  register char * _SSL_rstate_string__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const char * (*)(char * __asm("a6"), const SSL * __asm("a0"))) \
  (_SSL_rstate_string__bn - 8544))(_SSL_rstate_string__bn, _SSL_rstate_string_s); \
});})

#define SSL_state_string_long(s) ({ \
  const SSL * _SSL_state_string_long_s = (s); \
  ({ \
  register char * _SSL_state_string_long__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const char * (*)(char * __asm("a6"), const SSL * __asm("a0"))) \
  (_SSL_state_string_long__bn - 8550))(_SSL_state_string_long__bn, _SSL_state_string_long_s); \
});})

#define SSL_rstate_string_long(s) ({ \
  const SSL * _SSL_rstate_string_long_s = (s); \
  ({ \
  register char * _SSL_rstate_string_long__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const char * (*)(char * __asm("a6"), const SSL * __asm("a0"))) \
  (_SSL_rstate_string_long__bn - 8556))(_SSL_rstate_string_long__bn, _SSL_rstate_string_long_s); \
});})

#define SSL_SESSION_get_time(s) ({ \
  const SSL_SESSION * _SSL_SESSION_get_time_s = (s); \
  ({ \
  register char * _SSL_SESSION_get_time__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((long (*)(char * __asm("a6"), const SSL_SESSION * __asm("a0"))) \
  (_SSL_SESSION_get_time__bn - 8562))(_SSL_SESSION_get_time__bn, _SSL_SESSION_get_time_s); \
});})

#define SSL_SESSION_set_time(s, t) ({ \
  SSL_SESSION * _SSL_SESSION_set_time_s = (s); \
  long _SSL_SESSION_set_time_t = (t); \
  ({ \
  register char * _SSL_SESSION_set_time__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((long (*)(char * __asm("a6"), SSL_SESSION * __asm("a0"), long __asm("d0"))) \
  (_SSL_SESSION_set_time__bn - 8568))(_SSL_SESSION_set_time__bn, _SSL_SESSION_set_time_s, _SSL_SESSION_set_time_t); \
});})

#define SSL_SESSION_get_timeout(s) ({ \
  const SSL_SESSION * _SSL_SESSION_get_timeout_s = (s); \
  ({ \
  register char * _SSL_SESSION_get_timeout__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((long (*)(char * __asm("a6"), const SSL_SESSION * __asm("a0"))) \
  (_SSL_SESSION_get_timeout__bn - 8574))(_SSL_SESSION_get_timeout__bn, _SSL_SESSION_get_timeout_s); \
});})

#define SSL_SESSION_set_timeout(s, t) ({ \
  SSL_SESSION * _SSL_SESSION_set_timeout_s = (s); \
  long _SSL_SESSION_set_timeout_t = (t); \
  ({ \
  register char * _SSL_SESSION_set_timeout__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((long (*)(char * __asm("a6"), SSL_SESSION * __asm("a0"), long __asm("d0"))) \
  (_SSL_SESSION_set_timeout__bn - 8580))(_SSL_SESSION_set_timeout__bn, _SSL_SESSION_set_timeout_s, _SSL_SESSION_set_timeout_t); \
});})

#define SSL_copy_session_id(to, from) ({ \
  SSL * _SSL_copy_session_id_to = (to); \
  const SSL * _SSL_copy_session_id_from = (from); \
  ({ \
  register char * _SSL_copy_session_id__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), SSL * __asm("a0"), const SSL * __asm("a1"))) \
  (_SSL_copy_session_id__bn - 8586))(_SSL_copy_session_id__bn, _SSL_copy_session_id_to, _SSL_copy_session_id_from); \
});})

#define SSL_SESSION_new() ({ \
  register char * _SSL_SESSION_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((SSL_SESSION * (*)(char * __asm("a6"))) \
  (_SSL_SESSION_new__bn - 8592))(_SSL_SESSION_new__bn); \
})

#define SSL_SESSION_hash(a) ({ \
  const SSL_SESSION * _SSL_SESSION_hash_a = (a); \
  ({ \
  register char * _SSL_SESSION_hash__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((unsigned long (*)(char * __asm("a6"), const SSL_SESSION * __asm("a0"))) \
  (_SSL_SESSION_hash__bn - 8598))(_SSL_SESSION_hash__bn, _SSL_SESSION_hash_a); \
});})

#define SSL_SESSION_cmp(a, b) ({ \
  const SSL_SESSION * _SSL_SESSION_cmp_a = (a); \
  const SSL_SESSION * _SSL_SESSION_cmp_b = (b); \
  ({ \
  register char * _SSL_SESSION_cmp__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const SSL_SESSION * __asm("a0"), const SSL_SESSION * __asm("a1"))) \
  (_SSL_SESSION_cmp__bn - 8604))(_SSL_SESSION_cmp__bn, _SSL_SESSION_cmp_a, _SSL_SESSION_cmp_b); \
});})

#define SSL_SESSION_print(fp, ses) ({ \
  BIO * _SSL_SESSION_print_fp = (fp); \
  const SSL_SESSION * _SSL_SESSION_print_ses = (ses); \
  ({ \
  register char * _SSL_SESSION_print__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIO * __asm("a0"), const SSL_SESSION * __asm("a1"))) \
  (_SSL_SESSION_print__bn - 8610))(_SSL_SESSION_print__bn, _SSL_SESSION_print_fp, _SSL_SESSION_print_ses); \
});})

#define SSL_SESSION_free(ses) ({ \
  SSL_SESSION * _SSL_SESSION_free_ses = (ses); \
  ({ \
  register char * _SSL_SESSION_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), SSL_SESSION * __asm("a0"))) \
  (_SSL_SESSION_free__bn - 8616))(_SSL_SESSION_free__bn, _SSL_SESSION_free_ses); \
});})

#define i2d_SSL_SESSION(in, pp) ({ \
  SSL_SESSION * _i2d_SSL_SESSION_in = (in); \
  unsigned char ** _i2d_SSL_SESSION_pp = (pp); \
  ({ \
  register char * _i2d_SSL_SESSION__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), SSL_SESSION * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_SSL_SESSION__bn - 8622))(_i2d_SSL_SESSION__bn, _i2d_SSL_SESSION_in, _i2d_SSL_SESSION_pp); \
});})

#define SSL_set_session(to, session) ({ \
  SSL * _SSL_set_session_to = (to); \
  SSL_SESSION * _SSL_set_session_session = (session); \
  ({ \
  register char * _SSL_set_session__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), SSL * __asm("a0"), SSL_SESSION * __asm("a1"))) \
  (_SSL_set_session__bn - 8628))(_SSL_set_session__bn, _SSL_set_session_to, _SSL_set_session_session); \
});})

#define SSL_CTX_add_session(s, c) ({ \
  SSL_CTX * _SSL_CTX_add_session_s = (s); \
  SSL_SESSION * _SSL_CTX_add_session_c = (c); \
  ({ \
  register char * _SSL_CTX_add_session__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), SSL_CTX * __asm("a0"), SSL_SESSION * __asm("a1"))) \
  (_SSL_CTX_add_session__bn - 8634))(_SSL_CTX_add_session__bn, _SSL_CTX_add_session_s, _SSL_CTX_add_session_c); \
});})

#define SSL_CTX_remove_session(a1, c) ({ \
  SSL_CTX * _SSL_CTX_remove_session_a1 = (a1); \
  SSL_SESSION * _SSL_CTX_remove_session_c = (c); \
  ({ \
  register char * _SSL_CTX_remove_session__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), SSL_CTX * __asm("a0"), SSL_SESSION * __asm("a1"))) \
  (_SSL_CTX_remove_session__bn - 8640))(_SSL_CTX_remove_session__bn, _SSL_CTX_remove_session_a1, _SSL_CTX_remove_session_c); \
});})

#define SSL_CTX_set_generate_session_id(a, b) ({ \
  SSL_CTX * _SSL_CTX_set_generate_session_id_a = (a); \
  GEN_SESSION_CB _SSL_CTX_set_generate_session_id_b = (b); \
  ({ \
  register char * _SSL_CTX_set_generate_session_id__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), SSL_CTX * __asm("a0"), GEN_SESSION_CB __asm("d0"))) \
  (_SSL_CTX_set_generate_session_id__bn - 8646))(_SSL_CTX_set_generate_session_id__bn, _SSL_CTX_set_generate_session_id_a, _SSL_CTX_set_generate_session_id_b); \
});})

#define SSL_set_generate_session_id(a, b) ({ \
  SSL * _SSL_set_generate_session_id_a = (a); \
  GEN_SESSION_CB _SSL_set_generate_session_id_b = (b); \
  ({ \
  register char * _SSL_set_generate_session_id__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), SSL * __asm("a0"), GEN_SESSION_CB __asm("d0"))) \
  (_SSL_set_generate_session_id__bn - 8652))(_SSL_set_generate_session_id__bn, _SSL_set_generate_session_id_a, _SSL_set_generate_session_id_b); \
});})

#define SSL_has_matching_session_id(ssl, id, id_len) ({ \
  const SSL * _SSL_has_matching_session_id_ssl = (ssl); \
  const unsigned char * _SSL_has_matching_session_id_id = (id); \
  ULONG _SSL_has_matching_session_id_id_len = (id_len); \
  ({ \
  register char * _SSL_has_matching_session_id__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const SSL * __asm("a0"), const unsigned char * __asm("a1"), ULONG __asm("d0"))) \
  (_SSL_has_matching_session_id__bn - 8658))(_SSL_has_matching_session_id__bn, _SSL_has_matching_session_id_ssl, _SSL_has_matching_session_id_id, _SSL_has_matching_session_id_id_len); \
});})

#define d2i_SSL_SESSION(a, pp, length) ({ \
  SSL_SESSION ** _d2i_SSL_SESSION_a = (a); \
  const unsigned char *const * _d2i_SSL_SESSION_pp = (pp); \
  long _d2i_SSL_SESSION_length = (length); \
  ({ \
  register char * _d2i_SSL_SESSION__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((SSL_SESSION * (*)(char * __asm("a6"), SSL_SESSION ** __asm("a0"), const unsigned char *const * __asm("a1"), long __asm("d0"))) \
  (_d2i_SSL_SESSION__bn - 8664))(_d2i_SSL_SESSION__bn, _d2i_SSL_SESSION_a, _d2i_SSL_SESSION_pp, _d2i_SSL_SESSION_length); \
});})

#define SSL_get_peer_certificate(s) ({ \
  const SSL * _SSL_get_peer_certificate_s = (s); \
  ({ \
  register char * _SSL_get_peer_certificate__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509 * (*)(char * __asm("a6"), const SSL * __asm("a0"))) \
  (_SSL_get_peer_certificate__bn - 8670))(_SSL_get_peer_certificate__bn, _SSL_get_peer_certificate_s); \
});})

#define SSL_get_peer_cert_chain(s) ({ \
  const SSL * _SSL_get_peer_cert_chain_s = (s); \
  ({ \
  register char * _SSL_get_peer_cert_chain__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((STACK_OF(X509) * (*)(char * __asm("a6"), const SSL * __asm("a0"))) \
  (_SSL_get_peer_cert_chain__bn - 8676))(_SSL_get_peer_cert_chain__bn, _SSL_get_peer_cert_chain_s); \
});})

#define SSL_CTX_get_verify_mode(ctx) ({ \
  const SSL_CTX * _SSL_CTX_get_verify_mode_ctx = (ctx); \
  ({ \
  register char * _SSL_CTX_get_verify_mode__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const SSL_CTX * __asm("a0"))) \
  (_SSL_CTX_get_verify_mode__bn - 8682))(_SSL_CTX_get_verify_mode__bn, _SSL_CTX_get_verify_mode_ctx); \
});})

#define SSL_CTX_get_verify_depth(ctx) ({ \
  const SSL_CTX * _SSL_CTX_get_verify_depth_ctx = (ctx); \
  ({ \
  register char * _SSL_CTX_get_verify_depth__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const SSL_CTX * __asm("a0"))) \
  (_SSL_CTX_get_verify_depth__bn - 8688))(_SSL_CTX_get_verify_depth__bn, _SSL_CTX_get_verify_depth_ctx); \
});})

#define SSL_CTX_get_verify_callback(ctx) ({ \
  const SSL_CTX * _SSL_CTX_get_verify_callback_ctx = (ctx); \
  ({ \
  register char * _SSL_CTX_get_verify_callback__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(int, X509_STORE_CTX *) (*)(char * __asm("a6"), const SSL_CTX * __asm("a0"))) \
  (_SSL_CTX_get_verify_callback__bn - 8694))(_SSL_CTX_get_verify_callback__bn, _SSL_CTX_get_verify_callback_ctx); \
});})

#define SSL_CTX_set_verify(ctx, mode, callback) ({ \
  SSL_CTX * _SSL_CTX_set_verify_ctx = (ctx); \
  LONG _SSL_CTX_set_verify_mode = (mode); \
  int (*_SSL_CTX_set_verify_callback)(int, X509_STORE_CTX *) = (callback); \
  ({ \
  register char * _SSL_CTX_set_verify__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), SSL_CTX * __asm("a0"), LONG __asm("d0"), int (*)(int, X509_STORE_CTX *) __asm("a1"))) \
  (_SSL_CTX_set_verify__bn - 8700))(_SSL_CTX_set_verify__bn, _SSL_CTX_set_verify_ctx, _SSL_CTX_set_verify_mode, _SSL_CTX_set_verify_callback); \
});})

#define SSL_CTX_set_verify_depth(ctx, depth) ({ \
  SSL_CTX * _SSL_CTX_set_verify_depth_ctx = (ctx); \
  LONG _SSL_CTX_set_verify_depth_depth = (depth); \
  ({ \
  register char * _SSL_CTX_set_verify_depth__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), SSL_CTX * __asm("a0"), LONG __asm("d0"))) \
  (_SSL_CTX_set_verify_depth__bn - 8706))(_SSL_CTX_set_verify_depth__bn, _SSL_CTX_set_verify_depth_ctx, _SSL_CTX_set_verify_depth_depth); \
});})

#define SSL_CTX_set_cert_verify_callback(ctx, cb, arg) ({ \
  SSL_CTX * _SSL_CTX_set_cert_verify_callback_ctx = (ctx); \
  int (*_SSL_CTX_set_cert_verify_callback_cb)(X509_STORE_CTX *, void *) = (cb); \
  void * _SSL_CTX_set_cert_verify_callback_arg = (arg); \
  ({ \
  register char * _SSL_CTX_set_cert_verify_callback__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), SSL_CTX * __asm("a0"), int (*)(X509_STORE_CTX *, void *) __asm("a1"), void * __asm("a2"))) \
  (_SSL_CTX_set_cert_verify_callback__bn - 8712))(_SSL_CTX_set_cert_verify_callback__bn, _SSL_CTX_set_cert_verify_callback_ctx, _SSL_CTX_set_cert_verify_callback_cb, _SSL_CTX_set_cert_verify_callback_arg); \
});})

#define SSL_CTX_use_RSAPrivateKey(ctx, rsa) ({ \
  SSL_CTX * _SSL_CTX_use_RSAPrivateKey_ctx = (ctx); \
  RSA * _SSL_CTX_use_RSAPrivateKey_rsa = (rsa); \
  ({ \
  register char * _SSL_CTX_use_RSAPrivateKey__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), SSL_CTX * __asm("a0"), RSA * __asm("a1"))) \
  (_SSL_CTX_use_RSAPrivateKey__bn - 8718))(_SSL_CTX_use_RSAPrivateKey__bn, _SSL_CTX_use_RSAPrivateKey_ctx, _SSL_CTX_use_RSAPrivateKey_rsa); \
});})

#define SSL_CTX_use_RSAPrivateKey_ASN1(ctx, d, len) ({ \
  SSL_CTX * _SSL_CTX_use_RSAPrivateKey_ASN1_ctx = (ctx); \
  unsigned char * _SSL_CTX_use_RSAPrivateKey_ASN1_d = (d); \
  long _SSL_CTX_use_RSAPrivateKey_ASN1_len = (len); \
  ({ \
  register char * _SSL_CTX_use_RSAPrivateKey_ASN1__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), SSL_CTX * __asm("a0"), unsigned char * __asm("a1"), long __asm("d0"))) \
  (_SSL_CTX_use_RSAPrivateKey_ASN1__bn - 8724))(_SSL_CTX_use_RSAPrivateKey_ASN1__bn, _SSL_CTX_use_RSAPrivateKey_ASN1_ctx, _SSL_CTX_use_RSAPrivateKey_ASN1_d, _SSL_CTX_use_RSAPrivateKey_ASN1_len); \
});})

#define SSL_CTX_use_PrivateKey(ctx, pkey) ({ \
  SSL_CTX * _SSL_CTX_use_PrivateKey_ctx = (ctx); \
  EVP_PKEY * _SSL_CTX_use_PrivateKey_pkey = (pkey); \
  ({ \
  register char * _SSL_CTX_use_PrivateKey__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), SSL_CTX * __asm("a0"), EVP_PKEY * __asm("a1"))) \
  (_SSL_CTX_use_PrivateKey__bn - 8730))(_SSL_CTX_use_PrivateKey__bn, _SSL_CTX_use_PrivateKey_ctx, _SSL_CTX_use_PrivateKey_pkey); \
});})

#define SSL_CTX_use_PrivateKey_ASN1(pk, ctx, d, len) ({ \
  LONG _SSL_CTX_use_PrivateKey_ASN1_pk = (pk); \
  SSL_CTX * _SSL_CTX_use_PrivateKey_ASN1_ctx = (ctx); \
  unsigned char * _SSL_CTX_use_PrivateKey_ASN1_d = (d); \
  long _SSL_CTX_use_PrivateKey_ASN1_len = (len); \
  ({ \
  register char * _SSL_CTX_use_PrivateKey_ASN1__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), LONG __asm("d0"), SSL_CTX * __asm("a0"), unsigned char * __asm("a1"), long __asm("d1"))) \
  (_SSL_CTX_use_PrivateKey_ASN1__bn - 8736))(_SSL_CTX_use_PrivateKey_ASN1__bn, _SSL_CTX_use_PrivateKey_ASN1_pk, _SSL_CTX_use_PrivateKey_ASN1_ctx, _SSL_CTX_use_PrivateKey_ASN1_d, _SSL_CTX_use_PrivateKey_ASN1_len); \
});})

#define SSL_CTX_use_certificate(ctx, x) ({ \
  SSL_CTX * _SSL_CTX_use_certificate_ctx = (ctx); \
  X509 * _SSL_CTX_use_certificate_x = (x); \
  ({ \
  register char * _SSL_CTX_use_certificate__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), SSL_CTX * __asm("a0"), X509 * __asm("a1"))) \
  (_SSL_CTX_use_certificate__bn - 8742))(_SSL_CTX_use_certificate__bn, _SSL_CTX_use_certificate_ctx, _SSL_CTX_use_certificate_x); \
});})

#define SSL_CTX_use_certificate_ASN1(ctx, len, d) ({ \
  SSL_CTX * _SSL_CTX_use_certificate_ASN1_ctx = (ctx); \
  LONG _SSL_CTX_use_certificate_ASN1_len = (len); \
  unsigned char * _SSL_CTX_use_certificate_ASN1_d = (d); \
  ({ \
  register char * _SSL_CTX_use_certificate_ASN1__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), SSL_CTX * __asm("a0"), LONG __asm("d0"), unsigned char * __asm("a1"))) \
  (_SSL_CTX_use_certificate_ASN1__bn - 8748))(_SSL_CTX_use_certificate_ASN1__bn, _SSL_CTX_use_certificate_ASN1_ctx, _SSL_CTX_use_certificate_ASN1_len, _SSL_CTX_use_certificate_ASN1_d); \
});})

#define SSL_CTX_set_default_passwd_cb(ctx, cb) ({ \
  SSL_CTX * _SSL_CTX_set_default_passwd_cb_ctx = (ctx); \
  pem_password_cb * (*_SSL_CTX_set_default_passwd_cb_cb)(char *buf, int size, int rwflag, void *userdata) = (cb); \
  ({ \
  register char * _SSL_CTX_set_default_passwd_cb__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), SSL_CTX * __asm("a0"), pem_password_cb * (*)(char *buf, int size, int rwflag, void *userdata) __asm("a1"))) \
  (_SSL_CTX_set_default_passwd_cb__bn - 8754))(_SSL_CTX_set_default_passwd_cb__bn, _SSL_CTX_set_default_passwd_cb_ctx, _SSL_CTX_set_default_passwd_cb_cb); \
});})

#define SSL_CTX_set_default_passwd_cb_userdata(ctx, u) ({ \
  SSL_CTX * _SSL_CTX_set_default_passwd_cb_userdata_ctx = (ctx); \
  void * _SSL_CTX_set_default_passwd_cb_userdata_u = (u); \
  ({ \
  register char * _SSL_CTX_set_default_passwd_cb_userdata__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), SSL_CTX * __asm("a0"), void * __asm("a1"))) \
  (_SSL_CTX_set_default_passwd_cb_userdata__bn - 8760))(_SSL_CTX_set_default_passwd_cb_userdata__bn, _SSL_CTX_set_default_passwd_cb_userdata_ctx, _SSL_CTX_set_default_passwd_cb_userdata_u); \
});})

#define SSL_CTX_check_private_key(ctx) ({ \
  const SSL_CTX * _SSL_CTX_check_private_key_ctx = (ctx); \
  ({ \
  register char * _SSL_CTX_check_private_key__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const SSL_CTX * __asm("a0"))) \
  (_SSL_CTX_check_private_key__bn - 8766))(_SSL_CTX_check_private_key__bn, _SSL_CTX_check_private_key_ctx); \
});})

#define SSL_check_private_key(ctx) ({ \
  const SSL * _SSL_check_private_key_ctx = (ctx); \
  ({ \
  register char * _SSL_check_private_key__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const SSL * __asm("a0"))) \
  (_SSL_check_private_key__bn - 8772))(_SSL_check_private_key__bn, _SSL_check_private_key_ctx); \
});})

#define SSL_CTX_set_session_id_context(ctx, sid_ctx, sid_ctx_len) ({ \
  SSL_CTX * _SSL_CTX_set_session_id_context_ctx = (ctx); \
  const unsigned char * _SSL_CTX_set_session_id_context_sid_ctx = (sid_ctx); \
  ULONG _SSL_CTX_set_session_id_context_sid_ctx_len = (sid_ctx_len); \
  ({ \
  register char * _SSL_CTX_set_session_id_context__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), SSL_CTX * __asm("a0"), const unsigned char * __asm("a1"), ULONG __asm("d0"))) \
  (_SSL_CTX_set_session_id_context__bn - 8778))(_SSL_CTX_set_session_id_context__bn, _SSL_CTX_set_session_id_context_ctx, _SSL_CTX_set_session_id_context_sid_ctx, _SSL_CTX_set_session_id_context_sid_ctx_len); \
});})

#define SSL_new(ctx) ({ \
  SSL_CTX * _SSL_new_ctx = (ctx); \
  ({ \
  register char * _SSL_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((SSL * (*)(char * __asm("a6"), SSL_CTX * __asm("a0"))) \
  (_SSL_new__bn - 8784))(_SSL_new__bn, _SSL_new_ctx); \
});})

#define SSL_set_session_id_context(ssl, sid_ctx, sid_ctx_len) ({ \
  SSL * _SSL_set_session_id_context_ssl = (ssl); \
  const unsigned char * _SSL_set_session_id_context_sid_ctx = (sid_ctx); \
  ULONG _SSL_set_session_id_context_sid_ctx_len = (sid_ctx_len); \
  ({ \
  register char * _SSL_set_session_id_context__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), SSL * __asm("a0"), const unsigned char * __asm("a1"), ULONG __asm("d0"))) \
  (_SSL_set_session_id_context__bn - 8790))(_SSL_set_session_id_context__bn, _SSL_set_session_id_context_ssl, _SSL_set_session_id_context_sid_ctx, _SSL_set_session_id_context_sid_ctx_len); \
});})

#define SSL_CTX_set_purpose(s, purpose) ({ \
  SSL_CTX * _SSL_CTX_set_purpose_s = (s); \
  LONG _SSL_CTX_set_purpose_purpose = (purpose); \
  ({ \
  register char * _SSL_CTX_set_purpose__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), SSL_CTX * __asm("a0"), LONG __asm("d0"))) \
  (_SSL_CTX_set_purpose__bn - 8796))(_SSL_CTX_set_purpose__bn, _SSL_CTX_set_purpose_s, _SSL_CTX_set_purpose_purpose); \
});})

#define SSL_set_purpose(s, purpose) ({ \
  SSL * _SSL_set_purpose_s = (s); \
  LONG _SSL_set_purpose_purpose = (purpose); \
  ({ \
  register char * _SSL_set_purpose__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), SSL * __asm("a0"), LONG __asm("d0"))) \
  (_SSL_set_purpose__bn - 8802))(_SSL_set_purpose__bn, _SSL_set_purpose_s, _SSL_set_purpose_purpose); \
});})

#define SSL_CTX_set_trust(s, trust) ({ \
  SSL_CTX * _SSL_CTX_set_trust_s = (s); \
  LONG _SSL_CTX_set_trust_trust = (trust); \
  ({ \
  register char * _SSL_CTX_set_trust__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), SSL_CTX * __asm("a0"), LONG __asm("d0"))) \
  (_SSL_CTX_set_trust__bn - 8808))(_SSL_CTX_set_trust__bn, _SSL_CTX_set_trust_s, _SSL_CTX_set_trust_trust); \
});})

#define SSL_set_trust(s, trust) ({ \
  SSL * _SSL_set_trust_s = (s); \
  LONG _SSL_set_trust_trust = (trust); \
  ({ \
  register char * _SSL_set_trust__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), SSL * __asm("a0"), LONG __asm("d0"))) \
  (_SSL_set_trust__bn - 8814))(_SSL_set_trust__bn, _SSL_set_trust_s, _SSL_set_trust_trust); \
});})

#define SSL_free(ssl) ({ \
  SSL * _SSL_free_ssl = (ssl); \
  ({ \
  register char * _SSL_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), SSL * __asm("a0"))) \
  (_SSL_free__bn - 8820))(_SSL_free__bn, _SSL_free_ssl); \
});})

#define SSL_accept(ssl) ({ \
  SSL * _SSL_accept_ssl = (ssl); \
  ({ \
  register char * _SSL_accept__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), SSL * __asm("a0"))) \
  (_SSL_accept__bn - 8826))(_SSL_accept__bn, _SSL_accept_ssl); \
});})

#define SSL_connect(ssl) ({ \
  SSL * _SSL_connect_ssl = (ssl); \
  ({ \
  register char * _SSL_connect__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), SSL * __asm("a0"))) \
  (_SSL_connect__bn - 8832))(_SSL_connect__bn, _SSL_connect_ssl); \
});})

#define SSL_read(ssl, buf, num) ({ \
  SSL * _SSL_read_ssl = (ssl); \
  void * _SSL_read_buf = (buf); \
  LONG _SSL_read_num = (num); \
  ({ \
  register char * _SSL_read__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), SSL * __asm("a0"), void * __asm("a1"), LONG __asm("d0"))) \
  (_SSL_read__bn - 8838))(_SSL_read__bn, _SSL_read_ssl, _SSL_read_buf, _SSL_read_num); \
});})

#define SSL_peek(ssl, buf, num) ({ \
  SSL * _SSL_peek_ssl = (ssl); \
  void * _SSL_peek_buf = (buf); \
  LONG _SSL_peek_num = (num); \
  ({ \
  register char * _SSL_peek__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), SSL * __asm("a0"), void * __asm("a1"), LONG __asm("d0"))) \
  (_SSL_peek__bn - 8844))(_SSL_peek__bn, _SSL_peek_ssl, _SSL_peek_buf, _SSL_peek_num); \
});})

#define SSL_write(ssl, buf, num) ({ \
  SSL * _SSL_write_ssl = (ssl); \
  const void * _SSL_write_buf = (buf); \
  LONG _SSL_write_num = (num); \
  ({ \
  register char * _SSL_write__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), SSL * __asm("a0"), const void * __asm("a1"), LONG __asm("d0"))) \
  (_SSL_write__bn - 8850))(_SSL_write__bn, _SSL_write_ssl, _SSL_write_buf, _SSL_write_num); \
});})

#define SSL_ctrl(ssl, cmd, larg, parg) ({ \
  SSL * _SSL_ctrl_ssl = (ssl); \
  LONG _SSL_ctrl_cmd = (cmd); \
  long _SSL_ctrl_larg = (larg); \
  void * _SSL_ctrl_parg = (parg); \
  ({ \
  register char * _SSL_ctrl__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((long (*)(char * __asm("a6"), SSL * __asm("a0"), LONG __asm("d0"), long __asm("d1"), void * __asm("a1"))) \
  (_SSL_ctrl__bn - 8856))(_SSL_ctrl__bn, _SSL_ctrl_ssl, _SSL_ctrl_cmd, _SSL_ctrl_larg, _SSL_ctrl_parg); \
});})

#define SSL_callback_ctrl(a, a1, b) ({ \
  SSL * _SSL_callback_ctrl_a = (a); \
  LONG _SSL_callback_ctrl_a1 = (a1); \
  void (*_SSL_callback_ctrl_b)() = (b); \
  ({ \
  register char * _SSL_callback_ctrl__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((long (*)(char * __asm("a6"), SSL * __asm("a0"), LONG __asm("d0"), void (*)() __asm("a1"))) \
  (_SSL_callback_ctrl__bn - 8862))(_SSL_callback_ctrl__bn, _SSL_callback_ctrl_a, _SSL_callback_ctrl_a1, _SSL_callback_ctrl_b); \
});})

#define SSL_CTX_ctrl(ctx, cmd, larg, parg) ({ \
  SSL_CTX * _SSL_CTX_ctrl_ctx = (ctx); \
  LONG _SSL_CTX_ctrl_cmd = (cmd); \
  long _SSL_CTX_ctrl_larg = (larg); \
  void * _SSL_CTX_ctrl_parg = (parg); \
  ({ \
  register char * _SSL_CTX_ctrl__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((long (*)(char * __asm("a6"), SSL_CTX * __asm("a0"), LONG __asm("d0"), long __asm("d1"), void * __asm("a1"))) \
  (_SSL_CTX_ctrl__bn - 8868))(_SSL_CTX_ctrl__bn, _SSL_CTX_ctrl_ctx, _SSL_CTX_ctrl_cmd, _SSL_CTX_ctrl_larg, _SSL_CTX_ctrl_parg); \
});})

#define SSL_CTX_callback_ctrl(a1, a2, a3) ({ \
  SSL_CTX * _SSL_CTX_callback_ctrl_a1 = (a1); \
  LONG _SSL_CTX_callback_ctrl_a2 = (a2); \
  void (*_SSL_CTX_callback_ctrl_a3)() = (a3); \
  ({ \
  register char * _SSL_CTX_callback_ctrl__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((long (*)(char * __asm("a6"), SSL_CTX * __asm("a0"), LONG __asm("d0"), void (*)() __asm("a1"))) \
  (_SSL_CTX_callback_ctrl__bn - 8874))(_SSL_CTX_callback_ctrl__bn, _SSL_CTX_callback_ctrl_a1, _SSL_CTX_callback_ctrl_a2, _SSL_CTX_callback_ctrl_a3); \
});})

#define SSL_get_error(s, ret_code) ({ \
  const SSL * _SSL_get_error_s = (s); \
  LONG _SSL_get_error_ret_code = (ret_code); \
  ({ \
  register char * _SSL_get_error__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const SSL * __asm("a0"), LONG __asm("d0"))) \
  (_SSL_get_error__bn - 8880))(_SSL_get_error__bn, _SSL_get_error_s, _SSL_get_error_ret_code); \
});})

#define SSL_get_version(s) ({ \
  const SSL * _SSL_get_version_s = (s); \
  ({ \
  register char * _SSL_get_version__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const char * (*)(char * __asm("a6"), const SSL * __asm("a0"))) \
  (_SSL_get_version__bn - 8886))(_SSL_get_version__bn, _SSL_get_version_s); \
});})

#define SSL_CTX_set_ssl_version(ctx, meth) ({ \
  SSL_CTX * _SSL_CTX_set_ssl_version_ctx = (ctx); \
  SSL_METHOD * _SSL_CTX_set_ssl_version_meth = (meth); \
  ({ \
  register char * _SSL_CTX_set_ssl_version__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), SSL_CTX * __asm("a0"), SSL_METHOD * __asm("a1"))) \
  (_SSL_CTX_set_ssl_version__bn - 8892))(_SSL_CTX_set_ssl_version__bn, _SSL_CTX_set_ssl_version_ctx, _SSL_CTX_set_ssl_version_meth); \
});})

#define SSLv2_method() ({ \
  register char * _SSLv2_method__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((SSL_METHOD * (*)(char * __asm("a6"))) \
  (_SSLv2_method__bn - 8898))(_SSLv2_method__bn); \
})

#define SSLv2_server_method() ({ \
  register char * _SSLv2_server_method__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((SSL_METHOD * (*)(char * __asm("a6"))) \
  (_SSLv2_server_method__bn - 8904))(_SSLv2_server_method__bn); \
})

#define SSLv2_client_method() ({ \
  register char * _SSLv2_client_method__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((SSL_METHOD * (*)(char * __asm("a6"))) \
  (_SSLv2_client_method__bn - 8910))(_SSLv2_client_method__bn); \
})

#define SSLv3_method() ({ \
  register char * _SSLv3_method__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((SSL_METHOD * (*)(char * __asm("a6"))) \
  (_SSLv3_method__bn - 8916))(_SSLv3_method__bn); \
})

#define SSLv3_server_method() ({ \
  register char * _SSLv3_server_method__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((SSL_METHOD * (*)(char * __asm("a6"))) \
  (_SSLv3_server_method__bn - 8922))(_SSLv3_server_method__bn); \
})

#define SSLv3_client_method() ({ \
  register char * _SSLv3_client_method__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((SSL_METHOD * (*)(char * __asm("a6"))) \
  (_SSLv3_client_method__bn - 8928))(_SSLv3_client_method__bn); \
})

#define SSLv23_method() ({ \
  register char * _SSLv23_method__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((SSL_METHOD * (*)(char * __asm("a6"))) \
  (_SSLv23_method__bn - 8934))(_SSLv23_method__bn); \
})

#define SSLv23_server_method() ({ \
  register char * _SSLv23_server_method__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((SSL_METHOD * (*)(char * __asm("a6"))) \
  (_SSLv23_server_method__bn - 8940))(_SSLv23_server_method__bn); \
})

#define SSLv23_client_method() ({ \
  register char * _SSLv23_client_method__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((SSL_METHOD * (*)(char * __asm("a6"))) \
  (_SSLv23_client_method__bn - 8946))(_SSLv23_client_method__bn); \
})

#define TLSv1_method() ({ \
  register char * _TLSv1_method__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((SSL_METHOD * (*)(char * __asm("a6"))) \
  (_TLSv1_method__bn - 8952))(_TLSv1_method__bn); \
})

#define TLSv1_server_method() ({ \
  register char * _TLSv1_server_method__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((SSL_METHOD * (*)(char * __asm("a6"))) \
  (_TLSv1_server_method__bn - 8958))(_TLSv1_server_method__bn); \
})

#define TLSv1_client_method() ({ \
  register char * _TLSv1_client_method__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((SSL_METHOD * (*)(char * __asm("a6"))) \
  (_TLSv1_client_method__bn - 8964))(_TLSv1_client_method__bn); \
})

#define SSL_get_ciphers(s) ({ \
  const SSL * _SSL_get_ciphers_s = (s); \
  ({ \
  register char * _SSL_get_ciphers__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((STACK_OF(SSL_CIPHER) * (*)(char * __asm("a6"), const SSL * __asm("a0"))) \
  (_SSL_get_ciphers__bn - 8970))(_SSL_get_ciphers__bn, _SSL_get_ciphers_s); \
});})

#define SSL_do_handshake(s) ({ \
  SSL * _SSL_do_handshake_s = (s); \
  ({ \
  register char * _SSL_do_handshake__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), SSL * __asm("a0"))) \
  (_SSL_do_handshake__bn - 8976))(_SSL_do_handshake__bn, _SSL_do_handshake_s); \
});})

#define SSL_renegotiate(s) ({ \
  SSL * _SSL_renegotiate_s = (s); \
  ({ \
  register char * _SSL_renegotiate__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), SSL * __asm("a0"))) \
  (_SSL_renegotiate__bn - 8982))(_SSL_renegotiate__bn, _SSL_renegotiate_s); \
});})

#define SSL_renegotiate_pending(s) ({ \
  SSL * _SSL_renegotiate_pending_s = (s); \
  ({ \
  register char * _SSL_renegotiate_pending__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), SSL * __asm("a0"))) \
  (_SSL_renegotiate_pending__bn - 8988))(_SSL_renegotiate_pending__bn, _SSL_renegotiate_pending_s); \
});})

#define SSL_shutdown(s) ({ \
  SSL * _SSL_shutdown_s = (s); \
  ({ \
  register char * _SSL_shutdown__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), SSL * __asm("a0"))) \
  (_SSL_shutdown__bn - 8994))(_SSL_shutdown__bn, _SSL_shutdown_s); \
});})

#define SSL_get_ssl_method(s) ({ \
  SSL * _SSL_get_ssl_method_s = (s); \
  ({ \
  register char * _SSL_get_ssl_method__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((SSL_METHOD * (*)(char * __asm("a6"), SSL * __asm("a0"))) \
  (_SSL_get_ssl_method__bn - 9000))(_SSL_get_ssl_method__bn, _SSL_get_ssl_method_s); \
});})

#define SSL_set_ssl_method(s, method) ({ \
  SSL * _SSL_set_ssl_method_s = (s); \
  SSL_METHOD * _SSL_set_ssl_method_method = (method); \
  ({ \
  register char * _SSL_set_ssl_method__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), SSL * __asm("a0"), SSL_METHOD * __asm("a1"))) \
  (_SSL_set_ssl_method__bn - 9006))(_SSL_set_ssl_method__bn, _SSL_set_ssl_method_s, _SSL_set_ssl_method_method); \
});})

#define SSL_alert_type_string_long(value) ({ \
  LONG _SSL_alert_type_string_long_value = (value); \
  ({ \
  register char * _SSL_alert_type_string_long__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const char * (*)(char * __asm("a6"), LONG __asm("d0"))) \
  (_SSL_alert_type_string_long__bn - 9012))(_SSL_alert_type_string_long__bn, _SSL_alert_type_string_long_value); \
});})

#define SSL_alert_type_string(value) ({ \
  LONG _SSL_alert_type_string_value = (value); \
  ({ \
  register char * _SSL_alert_type_string__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const char * (*)(char * __asm("a6"), LONG __asm("d0"))) \
  (_SSL_alert_type_string__bn - 9018))(_SSL_alert_type_string__bn, _SSL_alert_type_string_value); \
});})

#define SSL_alert_desc_string_long(value) ({ \
  LONG _SSL_alert_desc_string_long_value = (value); \
  ({ \
  register char * _SSL_alert_desc_string_long__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const char * (*)(char * __asm("a6"), LONG __asm("d0"))) \
  (_SSL_alert_desc_string_long__bn - 9024))(_SSL_alert_desc_string_long__bn, _SSL_alert_desc_string_long_value); \
});})

#define SSL_alert_desc_string(value) ({ \
  LONG _SSL_alert_desc_string_value = (value); \
  ({ \
  register char * _SSL_alert_desc_string__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const char * (*)(char * __asm("a6"), LONG __asm("d0"))) \
  (_SSL_alert_desc_string__bn - 9030))(_SSL_alert_desc_string__bn, _SSL_alert_desc_string_value); \
});})

#define SSL_set_client_CA_list(s, name_list) ({ \
  SSL * _SSL_set_client_CA_list_s = (s); \
  STACK_OF(X509_NAME) * _SSL_set_client_CA_list_name_list = (name_list); \
  ({ \
  register char * _SSL_set_client_CA_list__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), SSL * __asm("a0"), STACK_OF(X509_NAME) * __asm("a1"))) \
  (_SSL_set_client_CA_list__bn - 9036))(_SSL_set_client_CA_list__bn, _SSL_set_client_CA_list_s, _SSL_set_client_CA_list_name_list); \
});})

#define SSL_CTX_set_client_CA_list(ctx, name_list) ({ \
  SSL_CTX * _SSL_CTX_set_client_CA_list_ctx = (ctx); \
  STACK_OF(X509_NAME) * _SSL_CTX_set_client_CA_list_name_list = (name_list); \
  ({ \
  register char * _SSL_CTX_set_client_CA_list__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), SSL_CTX * __asm("a0"), STACK_OF(X509_NAME) * __asm("a1"))) \
  (_SSL_CTX_set_client_CA_list__bn - 9042))(_SSL_CTX_set_client_CA_list__bn, _SSL_CTX_set_client_CA_list_ctx, _SSL_CTX_set_client_CA_list_name_list); \
});})

#define SSL_get_client_CA_list(s) ({ \
  const SSL * _SSL_get_client_CA_list_s = (s); \
  ({ \
  register char * _SSL_get_client_CA_list__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((STACK_OF(X509_NAME) * (*)(char * __asm("a6"), const SSL * __asm("a0"))) \
  (_SSL_get_client_CA_list__bn - 9048))(_SSL_get_client_CA_list__bn, _SSL_get_client_CA_list_s); \
});})

#define SSL_CTX_get_client_CA_list(s) ({ \
  const SSL_CTX * _SSL_CTX_get_client_CA_list_s = (s); \
  ({ \
  register char * _SSL_CTX_get_client_CA_list__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((STACK_OF(X509_NAME) * (*)(char * __asm("a6"), const SSL_CTX * __asm("a0"))) \
  (_SSL_CTX_get_client_CA_list__bn - 9054))(_SSL_CTX_get_client_CA_list__bn, _SSL_CTX_get_client_CA_list_s); \
});})

#define SSL_add_client_CA(ssl, x) ({ \
  SSL * _SSL_add_client_CA_ssl = (ssl); \
  X509 * _SSL_add_client_CA_x = (x); \
  ({ \
  register char * _SSL_add_client_CA__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), SSL * __asm("a0"), X509 * __asm("a1"))) \
  (_SSL_add_client_CA__bn - 9060))(_SSL_add_client_CA__bn, _SSL_add_client_CA_ssl, _SSL_add_client_CA_x); \
});})

#define SSL_CTX_add_client_CA(ctx, x) ({ \
  SSL_CTX * _SSL_CTX_add_client_CA_ctx = (ctx); \
  X509 * _SSL_CTX_add_client_CA_x = (x); \
  ({ \
  register char * _SSL_CTX_add_client_CA__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), SSL_CTX * __asm("a0"), X509 * __asm("a1"))) \
  (_SSL_CTX_add_client_CA__bn - 9066))(_SSL_CTX_add_client_CA__bn, _SSL_CTX_add_client_CA_ctx, _SSL_CTX_add_client_CA_x); \
});})

#define SSL_set_connect_state(s) ({ \
  SSL * _SSL_set_connect_state_s = (s); \
  ({ \
  register char * _SSL_set_connect_state__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), SSL * __asm("a0"))) \
  (_SSL_set_connect_state__bn - 9072))(_SSL_set_connect_state__bn, _SSL_set_connect_state_s); \
});})

#define SSL_set_accept_state(s) ({ \
  SSL * _SSL_set_accept_state_s = (s); \
  ({ \
  register char * _SSL_set_accept_state__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), SSL * __asm("a0"))) \
  (_SSL_set_accept_state__bn - 9078))(_SSL_set_accept_state__bn, _SSL_set_accept_state_s); \
});})

#define SSL_get_default_timeout(s) ({ \
  const SSL * _SSL_get_default_timeout_s = (s); \
  ({ \
  register char * _SSL_get_default_timeout__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((long (*)(char * __asm("a6"), const SSL * __asm("a0"))) \
  (_SSL_get_default_timeout__bn - 9084))(_SSL_get_default_timeout__bn, _SSL_get_default_timeout_s); \
});})

#define SSL_library_init() ({ \
  register char * _SSL_library_init__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"))) \
  (_SSL_library_init__bn - 9090))(_SSL_library_init__bn); \
})

#define SSL_CIPHER_description(a1, buf, size) ({ \
  SSL_CIPHER * _SSL_CIPHER_description_a1 = (a1); \
  char * _SSL_CIPHER_description_buf = (buf); \
  LONG _SSL_CIPHER_description_size = (size); \
  ({ \
  register char * _SSL_CIPHER_description__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((char * (*)(char * __asm("a6"), SSL_CIPHER * __asm("a0"), char * __asm("a1"), LONG __asm("d0"))) \
  (_SSL_CIPHER_description__bn - 9096))(_SSL_CIPHER_description__bn, _SSL_CIPHER_description_a1, _SSL_CIPHER_description_buf, _SSL_CIPHER_description_size); \
});})

#define SSL_dup_CA_list(sk) ({ \
  STACK_OF(X509_NAME) * _SSL_dup_CA_list_sk = (sk); \
  ({ \
  register char * _SSL_dup_CA_list__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((STACK_OF(X509_NAME) * (*)(char * __asm("a6"), STACK_OF(X509_NAME) * __asm("a0"))) \
  (_SSL_dup_CA_list__bn - 9102))(_SSL_dup_CA_list__bn, _SSL_dup_CA_list_sk); \
});})

#define SSL_dup(ssl) ({ \
  SSL * _SSL_dup_ssl = (ssl); \
  ({ \
  register char * _SSL_dup__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((SSL * (*)(char * __asm("a6"), SSL * __asm("a0"))) \
  (_SSL_dup__bn - 9108))(_SSL_dup__bn, _SSL_dup_ssl); \
});})

#define SSL_get_certificate(ssl) ({ \
  const SSL * _SSL_get_certificate_ssl = (ssl); \
  ({ \
  register char * _SSL_get_certificate__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509 * (*)(char * __asm("a6"), const SSL * __asm("a0"))) \
  (_SSL_get_certificate__bn - 9114))(_SSL_get_certificate__bn, _SSL_get_certificate_ssl); \
});})

#define SSL_get_privatekey(ssl) ({ \
  SSL * _SSL_get_privatekey_ssl = (ssl); \
  ({ \
  register char * _SSL_get_privatekey__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((struct evp_pkey_st * (*)(char * __asm("a6"), SSL * __asm("a0"))) \
  (_SSL_get_privatekey__bn - 9120))(_SSL_get_privatekey__bn, _SSL_get_privatekey_ssl); \
});})

#define SSL_CTX_set_quiet_shutdown(ctx, mode) ({ \
  SSL_CTX * _SSL_CTX_set_quiet_shutdown_ctx = (ctx); \
  LONG _SSL_CTX_set_quiet_shutdown_mode = (mode); \
  ({ \
  register char * _SSL_CTX_set_quiet_shutdown__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), SSL_CTX * __asm("a0"), LONG __asm("d0"))) \
  (_SSL_CTX_set_quiet_shutdown__bn - 9126))(_SSL_CTX_set_quiet_shutdown__bn, _SSL_CTX_set_quiet_shutdown_ctx, _SSL_CTX_set_quiet_shutdown_mode); \
});})

#define SSL_CTX_get_quiet_shutdown(ctx) ({ \
  const SSL_CTX * _SSL_CTX_get_quiet_shutdown_ctx = (ctx); \
  ({ \
  register char * _SSL_CTX_get_quiet_shutdown__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const SSL_CTX * __asm("a0"))) \
  (_SSL_CTX_get_quiet_shutdown__bn - 9132))(_SSL_CTX_get_quiet_shutdown__bn, _SSL_CTX_get_quiet_shutdown_ctx); \
});})

#define SSL_set_quiet_shutdown(ssl, mode) ({ \
  SSL * _SSL_set_quiet_shutdown_ssl = (ssl); \
  LONG _SSL_set_quiet_shutdown_mode = (mode); \
  ({ \
  register char * _SSL_set_quiet_shutdown__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), SSL * __asm("a0"), LONG __asm("d0"))) \
  (_SSL_set_quiet_shutdown__bn - 9138))(_SSL_set_quiet_shutdown__bn, _SSL_set_quiet_shutdown_ssl, _SSL_set_quiet_shutdown_mode); \
});})

#define SSL_get_quiet_shutdown(ssl) ({ \
  const SSL * _SSL_get_quiet_shutdown_ssl = (ssl); \
  ({ \
  register char * _SSL_get_quiet_shutdown__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const SSL * __asm("a0"))) \
  (_SSL_get_quiet_shutdown__bn - 9144))(_SSL_get_quiet_shutdown__bn, _SSL_get_quiet_shutdown_ssl); \
});})

#define SSL_set_shutdown(ssl, mode) ({ \
  SSL * _SSL_set_shutdown_ssl = (ssl); \
  LONG _SSL_set_shutdown_mode = (mode); \
  ({ \
  register char * _SSL_set_shutdown__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), SSL * __asm("a0"), LONG __asm("d0"))) \
  (_SSL_set_shutdown__bn - 9150))(_SSL_set_shutdown__bn, _SSL_set_shutdown_ssl, _SSL_set_shutdown_mode); \
});})

#define SSL_get_shutdown(ssl) ({ \
  const SSL * _SSL_get_shutdown_ssl = (ssl); \
  ({ \
  register char * _SSL_get_shutdown__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const SSL * __asm("a0"))) \
  (_SSL_get_shutdown__bn - 9156))(_SSL_get_shutdown__bn, _SSL_get_shutdown_ssl); \
});})

#define SSL_version(ssl) ({ \
  const SSL * _SSL_version_ssl = (ssl); \
  ({ \
  register char * _SSL_version__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const SSL * __asm("a0"))) \
  (_SSL_version__bn - 9162))(_SSL_version__bn, _SSL_version_ssl); \
});})

#define SSL_CTX_set_default_verify_paths(ctx) ({ \
  SSL_CTX * _SSL_CTX_set_default_verify_paths_ctx = (ctx); \
  ({ \
  register char * _SSL_CTX_set_default_verify_paths__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), SSL_CTX * __asm("a0"))) \
  (_SSL_CTX_set_default_verify_paths__bn - 9168))(_SSL_CTX_set_default_verify_paths__bn, _SSL_CTX_set_default_verify_paths_ctx); \
});})

#define SSL_CTX_load_verify_locations(ctx, CAfile, CApath) ({ \
  SSL_CTX * _SSL_CTX_load_verify_locations_ctx = (ctx); \
  const char * _SSL_CTX_load_verify_locations_CAfile = (CAfile); \
  const char * _SSL_CTX_load_verify_locations_CApath = (CApath); \
  ({ \
  register char * _SSL_CTX_load_verify_locations__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), SSL_CTX * __asm("a0"), const char * __asm("a1"), const char * __asm("a2"))) \
  (_SSL_CTX_load_verify_locations__bn - 9174))(_SSL_CTX_load_verify_locations__bn, _SSL_CTX_load_verify_locations_ctx, _SSL_CTX_load_verify_locations_CAfile, _SSL_CTX_load_verify_locations_CApath); \
});})

#define SSL_get_session(ssl) ({ \
  const SSL * _SSL_get_session_ssl = (ssl); \
  ({ \
  register char * _SSL_get_session__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((SSL_SESSION * (*)(char * __asm("a6"), const SSL * __asm("a0"))) \
  (_SSL_get_session__bn - 9180))(_SSL_get_session__bn, _SSL_get_session_ssl); \
});})

#define SSL_get1_session(ssl) ({ \
  SSL * _SSL_get1_session_ssl = (ssl); \
  ({ \
  register char * _SSL_get1_session__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((SSL_SESSION * (*)(char * __asm("a6"), SSL * __asm("a0"))) \
  (_SSL_get1_session__bn - 9186))(_SSL_get1_session__bn, _SSL_get1_session_ssl); \
});})

#define SSL_get_SSL_CTX(ssl) ({ \
  const SSL * _SSL_get_SSL_CTX_ssl = (ssl); \
  ({ \
  register char * _SSL_get_SSL_CTX__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((SSL_CTX * (*)(char * __asm("a6"), const SSL * __asm("a0"))) \
  (_SSL_get_SSL_CTX__bn - 9192))(_SSL_get_SSL_CTX__bn, _SSL_get_SSL_CTX_ssl); \
});})

#define SSL_set_info_callback(ssl, cb) ({ \
  SSL * _SSL_set_info_callback_ssl = (ssl); \
  void (*_SSL_set_info_callback_cb)(const SSL *ssl, int type, int val) = (cb); \
  ({ \
  register char * _SSL_set_info_callback__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), SSL * __asm("a0"), void (*)(const SSL *ssl, int type, int val) __asm("a1"))) \
  (_SSL_set_info_callback__bn - 9198))(_SSL_set_info_callback__bn, _SSL_set_info_callback_ssl, _SSL_set_info_callback_cb); \
});})

#define SSL_get_info_callback(ssl) ({ \
  const SSL * _SSL_get_info_callback_ssl = (ssl); \
  ({ \
  register char * _SSL_get_info_callback__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(const SSL *ssl, int type, int val) (*)(char * __asm("a6"), const SSL * __asm("a0"))) \
  (_SSL_get_info_callback__bn - 9204))(_SSL_get_info_callback__bn, _SSL_get_info_callback_ssl); \
});})

#define SSL_state(ssl) ({ \
  const SSL * _SSL_state_ssl = (ssl); \
  ({ \
  register char * _SSL_state__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const SSL * __asm("a0"))) \
  (_SSL_state__bn - 9210))(_SSL_state__bn, _SSL_state_ssl); \
});})

#define SSL_set_verify_result(ssl, v) ({ \
  SSL * _SSL_set_verify_result_ssl = (ssl); \
  long _SSL_set_verify_result_v = (v); \
  ({ \
  register char * _SSL_set_verify_result__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), SSL * __asm("a0"), long __asm("d0"))) \
  (_SSL_set_verify_result__bn - 9216))(_SSL_set_verify_result__bn, _SSL_set_verify_result_ssl, _SSL_set_verify_result_v); \
});})

#define SSL_get_verify_result(ssl) ({ \
  const SSL * _SSL_get_verify_result_ssl = (ssl); \
  ({ \
  register char * _SSL_get_verify_result__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((long (*)(char * __asm("a6"), const SSL * __asm("a0"))) \
  (_SSL_get_verify_result__bn - 9222))(_SSL_get_verify_result__bn, _SSL_get_verify_result_ssl); \
});})

#define SSL_set_ex_data(ssl, idx, data) ({ \
  SSL * _SSL_set_ex_data_ssl = (ssl); \
  LONG _SSL_set_ex_data_idx = (idx); \
  void * _SSL_set_ex_data_data = (data); \
  ({ \
  register char * _SSL_set_ex_data__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), SSL * __asm("a0"), LONG __asm("d0"), void * __asm("a1"))) \
  (_SSL_set_ex_data__bn - 9228))(_SSL_set_ex_data__bn, _SSL_set_ex_data_ssl, _SSL_set_ex_data_idx, _SSL_set_ex_data_data); \
});})

#define SSL_get_ex_data(ssl, idx) ({ \
  const SSL * _SSL_get_ex_data_ssl = (ssl); \
  LONG _SSL_get_ex_data_idx = (idx); \
  ({ \
  register char * _SSL_get_ex_data__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void * (*)(char * __asm("a6"), const SSL * __asm("a0"), LONG __asm("d0"))) \
  (_SSL_get_ex_data__bn - 9234))(_SSL_get_ex_data__bn, _SSL_get_ex_data_ssl, _SSL_get_ex_data_idx); \
});})

#define SSL_get_ex_new_index(argl, argp, new_func, dup_func, free_func) ({ \
  long _SSL_get_ex_new_index_argl = (argl); \
  void * _SSL_get_ex_new_index_argp = (argp); \
  CRYPTO_EX_new * (*_SSL_get_ex_new_index_new_func)() = (new_func); \
  CRYPTO_EX_dup * (*_SSL_get_ex_new_index_dup_func)() = (dup_func); \
  CRYPTO_EX_free * (*_SSL_get_ex_new_index_free_func)() = (free_func); \
  ({ \
  register char * _SSL_get_ex_new_index__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), long __asm("d0"), void * __asm("a0"), CRYPTO_EX_new * (*)() __asm("a1"), CRYPTO_EX_dup * (*)() __asm("a2"), CRYPTO_EX_free * (*)() __asm("a3"))) \
  (_SSL_get_ex_new_index__bn - 9240))(_SSL_get_ex_new_index__bn, _SSL_get_ex_new_index_argl, _SSL_get_ex_new_index_argp, _SSL_get_ex_new_index_new_func, _SSL_get_ex_new_index_dup_func, _SSL_get_ex_new_index_free_func); \
});})

#define SSL_SESSION_set_ex_data(ss, idx, data) ({ \
  SSL_SESSION * _SSL_SESSION_set_ex_data_ss = (ss); \
  LONG _SSL_SESSION_set_ex_data_idx = (idx); \
  void * _SSL_SESSION_set_ex_data_data = (data); \
  ({ \
  register char * _SSL_SESSION_set_ex_data__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), SSL_SESSION * __asm("a0"), LONG __asm("d0"), void * __asm("a1"))) \
  (_SSL_SESSION_set_ex_data__bn - 9246))(_SSL_SESSION_set_ex_data__bn, _SSL_SESSION_set_ex_data_ss, _SSL_SESSION_set_ex_data_idx, _SSL_SESSION_set_ex_data_data); \
});})

#define SSL_SESSION_get_ex_data(ss, idx) ({ \
  const SSL_SESSION * _SSL_SESSION_get_ex_data_ss = (ss); \
  LONG _SSL_SESSION_get_ex_data_idx = (idx); \
  ({ \
  register char * _SSL_SESSION_get_ex_data__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void * (*)(char * __asm("a6"), const SSL_SESSION * __asm("a0"), LONG __asm("d0"))) \
  (_SSL_SESSION_get_ex_data__bn - 9252))(_SSL_SESSION_get_ex_data__bn, _SSL_SESSION_get_ex_data_ss, _SSL_SESSION_get_ex_data_idx); \
});})

#define SSL_SESSION_get_ex_new_index(argl, argp, new_func, dup_func, free_func) ({ \
  long _SSL_SESSION_get_ex_new_index_argl = (argl); \
  void * _SSL_SESSION_get_ex_new_index_argp = (argp); \
  CRYPTO_EX_new * (*_SSL_SESSION_get_ex_new_index_new_func)() = (new_func); \
  CRYPTO_EX_dup * (*_SSL_SESSION_get_ex_new_index_dup_func)() = (dup_func); \
  CRYPTO_EX_free * (*_SSL_SESSION_get_ex_new_index_free_func)() = (free_func); \
  ({ \
  register char * _SSL_SESSION_get_ex_new_index__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), long __asm("d0"), void * __asm("a0"), CRYPTO_EX_new * (*)() __asm("a1"), CRYPTO_EX_dup * (*)() __asm("a2"), CRYPTO_EX_free * (*)() __asm("a3"))) \
  (_SSL_SESSION_get_ex_new_index__bn - 9258))(_SSL_SESSION_get_ex_new_index__bn, _SSL_SESSION_get_ex_new_index_argl, _SSL_SESSION_get_ex_new_index_argp, _SSL_SESSION_get_ex_new_index_new_func, _SSL_SESSION_get_ex_new_index_dup_func, _SSL_SESSION_get_ex_new_index_free_func); \
});})

#define SSL_CTX_set_ex_data(ssl, idx, data) ({ \
  SSL_CTX * _SSL_CTX_set_ex_data_ssl = (ssl); \
  LONG _SSL_CTX_set_ex_data_idx = (idx); \
  void * _SSL_CTX_set_ex_data_data = (data); \
  ({ \
  register char * _SSL_CTX_set_ex_data__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), SSL_CTX * __asm("a0"), LONG __asm("d0"), void * __asm("a1"))) \
  (_SSL_CTX_set_ex_data__bn - 9264))(_SSL_CTX_set_ex_data__bn, _SSL_CTX_set_ex_data_ssl, _SSL_CTX_set_ex_data_idx, _SSL_CTX_set_ex_data_data); \
});})

#define SSL_CTX_get_ex_data(ssl, idx) ({ \
  const SSL_CTX * _SSL_CTX_get_ex_data_ssl = (ssl); \
  LONG _SSL_CTX_get_ex_data_idx = (idx); \
  ({ \
  register char * _SSL_CTX_get_ex_data__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void * (*)(char * __asm("a6"), const SSL_CTX * __asm("a0"), LONG __asm("d0"))) \
  (_SSL_CTX_get_ex_data__bn - 9270))(_SSL_CTX_get_ex_data__bn, _SSL_CTX_get_ex_data_ssl, _SSL_CTX_get_ex_data_idx); \
});})

#define SSL_CTX_get_ex_new_index(argl, argp, new_func, dup_func, free_func) ({ \
  long _SSL_CTX_get_ex_new_index_argl = (argl); \
  void * _SSL_CTX_get_ex_new_index_argp = (argp); \
  CRYPTO_EX_new * (*_SSL_CTX_get_ex_new_index_new_func)() = (new_func); \
  CRYPTO_EX_dup * (*_SSL_CTX_get_ex_new_index_dup_func)() = (dup_func); \
  CRYPTO_EX_free * (*_SSL_CTX_get_ex_new_index_free_func)() = (free_func); \
  ({ \
  register char * _SSL_CTX_get_ex_new_index__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), long __asm("d0"), void * __asm("a0"), CRYPTO_EX_new * (*)() __asm("a1"), CRYPTO_EX_dup * (*)() __asm("a2"), CRYPTO_EX_free * (*)() __asm("a3"))) \
  (_SSL_CTX_get_ex_new_index__bn - 9276))(_SSL_CTX_get_ex_new_index__bn, _SSL_CTX_get_ex_new_index_argl, _SSL_CTX_get_ex_new_index_argp, _SSL_CTX_get_ex_new_index_new_func, _SSL_CTX_get_ex_new_index_dup_func, _SSL_CTX_get_ex_new_index_free_func); \
});})

#define SSL_get_ex_data_X509_STORE_CTX_idx() ({ \
  register char * _SSL_get_ex_data_X509_STORE_CTX_idx__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"))) \
  (_SSL_get_ex_data_X509_STORE_CTX_idx__bn - 9282))(_SSL_get_ex_data_X509_STORE_CTX_idx__bn); \
})

#define SSL_CTX_set_tmp_rsa_callback(ctx, cb) ({ \
  SSL_CTX * _SSL_CTX_set_tmp_rsa_callback_ctx = (ctx); \
  RSA * (*_SSL_CTX_set_tmp_rsa_callback_cb)(SSL *ssl, int is_export, int keylength) = (cb); \
  ({ \
  register char * _SSL_CTX_set_tmp_rsa_callback__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), SSL_CTX * __asm("a0"), RSA * (*)(SSL *ssl, int is_export, int keylength) __asm("a1"))) \
  (_SSL_CTX_set_tmp_rsa_callback__bn - 9288))(_SSL_CTX_set_tmp_rsa_callback__bn, _SSL_CTX_set_tmp_rsa_callback_ctx, _SSL_CTX_set_tmp_rsa_callback_cb); \
});})

#define SSL_set_tmp_rsa_callback(ssl, cb) ({ \
  SSL * _SSL_set_tmp_rsa_callback_ssl = (ssl); \
  RSA * (*_SSL_set_tmp_rsa_callback_cb)(SSL *ssl, int is_export, int keylength) = (cb); \
  ({ \
  register char * _SSL_set_tmp_rsa_callback__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), SSL * __asm("a0"), RSA * (*)(SSL *ssl, int is_export, int keylength) __asm("a1"))) \
  (_SSL_set_tmp_rsa_callback__bn - 9294))(_SSL_set_tmp_rsa_callback__bn, _SSL_set_tmp_rsa_callback_ssl, _SSL_set_tmp_rsa_callback_cb); \
});})

#define SSL_CTX_set_tmp_dh_callback(ctx, dh) ({ \
  SSL_CTX * _SSL_CTX_set_tmp_dh_callback_ctx = (ctx); \
  DH * (*_SSL_CTX_set_tmp_dh_callback_dh)(SSL *ssl, int is_export, int keylength) = (dh); \
  ({ \
  register char * _SSL_CTX_set_tmp_dh_callback__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), SSL_CTX * __asm("a0"), DH * (*)(SSL *ssl, int is_export, int keylength) __asm("a1"))) \
  (_SSL_CTX_set_tmp_dh_callback__bn - 9300))(_SSL_CTX_set_tmp_dh_callback__bn, _SSL_CTX_set_tmp_dh_callback_ctx, _SSL_CTX_set_tmp_dh_callback_dh); \
});})

#define SSL_set_tmp_dh_callback(ssl, dh) ({ \
  SSL * _SSL_set_tmp_dh_callback_ssl = (ssl); \
  DH * (*_SSL_set_tmp_dh_callback_dh)(SSL *ssl, int is_export, int keylength) = (dh); \
  ({ \
  register char * _SSL_set_tmp_dh_callback__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), SSL * __asm("a0"), DH * (*)(SSL *ssl, int is_export, int keylength) __asm("a1"))) \
  (_SSL_set_tmp_dh_callback__bn - 9306))(_SSL_set_tmp_dh_callback__bn, _SSL_set_tmp_dh_callback_ssl, _SSL_set_tmp_dh_callback_dh); \
});})

#define SSL_COMP_add_compression_method(id, cm) ({ \
  LONG _SSL_COMP_add_compression_method_id = (id); \
  COMP_METHOD * _SSL_COMP_add_compression_method_cm = (cm); \
  ({ \
  register char * _SSL_COMP_add_compression_method__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), LONG __asm("d0"), COMP_METHOD * __asm("a0"))) \
  (_SSL_COMP_add_compression_method__bn - 9312))(_SSL_COMP_add_compression_method__bn, _SSL_COMP_add_compression_method_id, _SSL_COMP_add_compression_method_cm); \
});})

#define ERR_load_SSL_strings() ({ \
  register char * _ERR_load_SSL_strings__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"))) \
  (_ERR_load_SSL_strings__bn - 9318))(_ERR_load_SSL_strings__bn); \
})

#define sk_num(a) ({ \
  const STACK * _sk_num_a = (a); \
  ({ \
  register char * _sk_num__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const STACK * __asm("a0"))) \
  (_sk_num__bn - 9324))(_sk_num__bn, _sk_num_a); \
});})

#define sk_value(a, b) ({ \
  const STACK * _sk_value_a = (a); \
  LONG _sk_value_b = (b); \
  ({ \
  register char * _sk_value__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((char * (*)(char * __asm("a6"), const STACK * __asm("a0"), LONG __asm("d0"))) \
  (_sk_value__bn - 9330))(_sk_value__bn, _sk_value_a, _sk_value_b); \
});})

#define sk_set(a, b, c) ({ \
  STACK * _sk_set_a = (a); \
  LONG _sk_set_b = (b); \
  char * _sk_set_c = (c); \
  ({ \
  register char * _sk_set__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((char * (*)(char * __asm("a6"), STACK * __asm("a0"), LONG __asm("d0"), char * __asm("a1"))) \
  (_sk_set__bn - 9336))(_sk_set__bn, _sk_set_a, _sk_set_b, _sk_set_c); \
});})

#define sk_new(cmp) ({ \
  int (*_sk_new_cmp)(const char *const *, const char *const *) = (cmp); \
  ({ \
  register char * _sk_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((STACK * (*)(char * __asm("a6"), int (*)(const char *const *, const char *const *) __asm("a0"))) \
  (_sk_new__bn - 9342))(_sk_new__bn, _sk_new_cmp); \
});})

#define sk_new_null() ({ \
  register char * _sk_new_null__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((STACK * (*)(char * __asm("a6"))) \
  (_sk_new_null__bn - 9348))(_sk_new_null__bn); \
})

#define sk_free(a) ({ \
  STACK * _sk_free_a = (a); \
  ({ \
  register char * _sk_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), STACK * __asm("a0"))) \
  (_sk_free__bn - 9354))(_sk_free__bn, _sk_free_a); \
});})

#define sk_pop_free(st, func) ({ \
  STACK * _sk_pop_free_st = (st); \
  void (*_sk_pop_free_func)(void *) = (func); \
  ({ \
  register char * _sk_pop_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), STACK * __asm("a0"), void (*)(void *) __asm("a1"))) \
  (_sk_pop_free__bn - 9360))(_sk_pop_free__bn, _sk_pop_free_st, _sk_pop_free_func); \
});})

#define sk_insert(sk, data, where) ({ \
  STACK * _sk_insert_sk = (sk); \
  char * _sk_insert_data = (data); \
  LONG _sk_insert_where = (where); \
  ({ \
  register char * _sk_insert__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), STACK * __asm("a0"), char * __asm("a1"), LONG __asm("d0"))) \
  (_sk_insert__bn - 9366))(_sk_insert__bn, _sk_insert_sk, _sk_insert_data, _sk_insert_where); \
});})

#define sk_delete(st, loc) ({ \
  STACK * _sk_delete_st = (st); \
  LONG _sk_delete_loc = (loc); \
  ({ \
  register char * _sk_delete__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((char * (*)(char * __asm("a6"), STACK * __asm("a0"), LONG __asm("d0"))) \
  (_sk_delete__bn - 9372))(_sk_delete__bn, _sk_delete_st, _sk_delete_loc); \
});})

#define sk_delete_ptr(st, p) ({ \
  STACK * _sk_delete_ptr_st = (st); \
  char * _sk_delete_ptr_p = (p); \
  ({ \
  register char * _sk_delete_ptr__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((char * (*)(char * __asm("a6"), STACK * __asm("a0"), char * __asm("a1"))) \
  (_sk_delete_ptr__bn - 9378))(_sk_delete_ptr__bn, _sk_delete_ptr_st, _sk_delete_ptr_p); \
});})

#define sk_find(st, data) ({ \
  STACK * _sk_find_st = (st); \
  char * _sk_find_data = (data); \
  ({ \
  register char * _sk_find__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), STACK * __asm("a0"), char * __asm("a1"))) \
  (_sk_find__bn - 9384))(_sk_find__bn, _sk_find_st, _sk_find_data); \
});})

#define sk_push(st, data) ({ \
  STACK * _sk_push_st = (st); \
  char * _sk_push_data = (data); \
  ({ \
  register char * _sk_push__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), STACK * __asm("a0"), char * __asm("a1"))) \
  (_sk_push__bn - 9390))(_sk_push__bn, _sk_push_st, _sk_push_data); \
});})

#define sk_unshift(st, data) ({ \
  STACK * _sk_unshift_st = (st); \
  char * _sk_unshift_data = (data); \
  ({ \
  register char * _sk_unshift__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), STACK * __asm("a0"), char * __asm("a1"))) \
  (_sk_unshift__bn - 9396))(_sk_unshift__bn, _sk_unshift_st, _sk_unshift_data); \
});})

#define sk_shift(st) ({ \
  STACK * _sk_shift_st = (st); \
  ({ \
  register char * _sk_shift__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((char * (*)(char * __asm("a6"), STACK * __asm("a0"))) \
  (_sk_shift__bn - 9402))(_sk_shift__bn, _sk_shift_st); \
});})

#define sk_pop(st) ({ \
  STACK * _sk_pop_st = (st); \
  ({ \
  register char * _sk_pop__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((char * (*)(char * __asm("a6"), STACK * __asm("a0"))) \
  (_sk_pop__bn - 9408))(_sk_pop__bn, _sk_pop_st); \
});})

#define sk_zero(st) ({ \
  STACK * _sk_zero_st = (st); \
  ({ \
  register char * _sk_zero__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), STACK * __asm("a0"))) \
  (_sk_zero__bn - 9414))(_sk_zero__bn, _sk_zero_st); \
});})

#define sk_set_cmp_func(sk, c) ({ \
  STACK * _sk_set_cmp_func_sk = (sk); \
  int (*_sk_set_cmp_func_c)(const char *const *, const char *const *) = (c); \
  ({ \
  register char * _sk_set_cmp_func__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(const char *const *, const char *const *) (*)(char * __asm("a6"), STACK * __asm("a0"), int (*)(const char *const *, const char *const *) __asm("a1"))) \
  (_sk_set_cmp_func__bn - 9420))(_sk_set_cmp_func__bn, _sk_set_cmp_func_sk, _sk_set_cmp_func_c); \
});})

#define sk_dup(st) ({ \
  STACK * _sk_dup_st = (st); \
  ({ \
  register char * _sk_dup__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((STACK * (*)(char * __asm("a6"), STACK * __asm("a0"))) \
  (_sk_dup__bn - 9426))(_sk_dup__bn, _sk_dup_st); \
});})

#define sk_sort(st) ({ \
  STACK * _sk_sort_st = (st); \
  ({ \
  register char * _sk_sort__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), STACK * __asm("a0"))) \
  (_sk_sort__bn - 9432))(_sk_sort__bn, _sk_sort_st); \
});})

#define sk_is_sorted(st) ({ \
  const STACK * _sk_is_sorted_st = (st); \
  ({ \
  register char * _sk_is_sorted__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const STACK * __asm("a0"))) \
  (_sk_is_sorted__bn - 9438))(_sk_is_sorted__bn, _sk_is_sorted_st); \
});})

#define ms_time_new() ({ \
  register char * _ms_time_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((char * (*)(char * __asm("a6"))) \
  (_ms_time_new__bn - 9444))(_ms_time_new__bn); \
})

#define ms_time_free(a) ({ \
  char * _ms_time_free_a = (a); \
  ({ \
  register char * _ms_time_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), char * __asm("a0"))) \
  (_ms_time_free__bn - 9450))(_ms_time_free__bn, _ms_time_free_a); \
});})

#define ms_time_get(a) ({ \
  char * _ms_time_get_a = (a); \
  ({ \
  register char * _ms_time_get__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), char * __asm("a0"))) \
  (_ms_time_get__bn - 9456))(_ms_time_get__bn, _ms_time_get_a); \
});})

#define ms_time_diff(start, end) ({ \
  char * _ms_time_diff_start = (start); \
  char * _ms_time_diff_end = (end); \
  ({ \
  register char * _ms_time_diff__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((double (*)(char * __asm("a6"), char * __asm("a0"), char * __asm("a1"))) \
  (_ms_time_diff__bn - 9462))(_ms_time_diff__bn, _ms_time_diff_start, _ms_time_diff_end); \
});})

#define ms_time_cmp(ap, bp) ({ \
  char * _ms_time_cmp_ap = (ap); \
  char * _ms_time_cmp_bp = (bp); \
  ({ \
  register char * _ms_time_cmp__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), char * __asm("a0"), char * __asm("a1"))) \
  (_ms_time_cmp__bn - 9468))(_ms_time_cmp__bn, _ms_time_cmp_ap, _ms_time_cmp_bp); \
});})

#define TXT_DB_read(in, num) ({ \
  BIO * _TXT_DB_read_in = (in); \
  LONG _TXT_DB_read_num = (num); \
  ({ \
  register char * _TXT_DB_read__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((TXT_DB * (*)(char * __asm("a6"), BIO * __asm("a0"), LONG __asm("d0"))) \
  (_TXT_DB_read__bn - 9474))(_TXT_DB_read__bn, _TXT_DB_read_in, _TXT_DB_read_num); \
});})

#define TXT_DB_write(out, db) ({ \
  BIO * _TXT_DB_write_out = (out); \
  TXT_DB * _TXT_DB_write_db = (db); \
  ({ \
  register char * _TXT_DB_write__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((long (*)(char * __asm("a6"), BIO * __asm("a0"), TXT_DB * __asm("a1"))) \
  (_TXT_DB_write__bn - 9480))(_TXT_DB_write__bn, _TXT_DB_write_out, _TXT_DB_write_db); \
});})

#define TXT_DB_create_index(db, field, qual, hash, cmp) ({ \
  TXT_DB * _TXT_DB_create_index_db = (db); \
  LONG _TXT_DB_create_index_field = (field); \
  int (*_TXT_DB_create_index_qual)() = (qual); \
  LHASH_HASH_FN_TYPE _TXT_DB_create_index_hash = (hash); \
  LHASH_COMP_FN_TYPE _TXT_DB_create_index_cmp = (cmp); \
  ({ \
  register char * _TXT_DB_create_index__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), TXT_DB * __asm("a0"), LONG __asm("d0"), int (*)() __asm("a1"), LHASH_HASH_FN_TYPE __asm("d1"), LHASH_COMP_FN_TYPE __asm("d2"))) \
  (_TXT_DB_create_index__bn - 9486))(_TXT_DB_create_index__bn, _TXT_DB_create_index_db, _TXT_DB_create_index_field, _TXT_DB_create_index_qual, _TXT_DB_create_index_hash, _TXT_DB_create_index_cmp); \
});})

#define TXT_DB_free(db) ({ \
  TXT_DB * _TXT_DB_free_db = (db); \
  ({ \
  register char * _TXT_DB_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), TXT_DB * __asm("a0"))) \
  (_TXT_DB_free__bn - 9492))(_TXT_DB_free__bn, _TXT_DB_free_db); \
});})

#define TXT_DB_get_by_index(db, idx, value) ({ \
  TXT_DB * _TXT_DB_get_by_index_db = (db); \
  LONG _TXT_DB_get_by_index_idx = (idx); \
  char ** _TXT_DB_get_by_index_value = (value); \
  ({ \
  register char * _TXT_DB_get_by_index__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((char ** (*)(char * __asm("a6"), TXT_DB * __asm("a0"), LONG __asm("d0"), char ** __asm("a1"))) \
  (_TXT_DB_get_by_index__bn - 9498))(_TXT_DB_get_by_index__bn, _TXT_DB_get_by_index_db, _TXT_DB_get_by_index_idx, _TXT_DB_get_by_index_value); \
});})

#define TXT_DB_insert(db, value) ({ \
  TXT_DB * _TXT_DB_insert_db = (db); \
  char ** _TXT_DB_insert_value = (value); \
  ({ \
  register char * _TXT_DB_insert__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), TXT_DB * __asm("a0"), char ** __asm("a1"))) \
  (_TXT_DB_insert__bn - 9504))(_TXT_DB_insert__bn, _TXT_DB_insert_db, _TXT_DB_insert_value); \
});})

#define UI_new() ({ \
  register char * _UI_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((UI * (*)(char * __asm("a6"))) \
  (_UI_new__bn - 9510))(_UI_new__bn); \
})

#define UI_new_method(method) ({ \
  const UI_METHOD * _UI_new_method_method = (method); \
  ({ \
  register char * _UI_new_method__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((UI * (*)(char * __asm("a6"), const UI_METHOD * __asm("a0"))) \
  (_UI_new_method__bn - 9516))(_UI_new_method__bn, _UI_new_method_method); \
});})

#define UI_free(ui) ({ \
  UI * _UI_free_ui = (ui); \
  ({ \
  register char * _UI_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), UI * __asm("a0"))) \
  (_UI_free__bn - 9522))(_UI_free__bn, _UI_free_ui); \
});})

#define UI_add_input_string(ui, prompt, flags, result_buf, minsize, maxsize) ({ \
  UI * _UI_add_input_string_ui = (ui); \
  const char * _UI_add_input_string_prompt = (prompt); \
  LONG _UI_add_input_string_flags = (flags); \
  char * _UI_add_input_string_result_buf = (result_buf); \
  LONG _UI_add_input_string_minsize = (minsize); \
  LONG _UI_add_input_string_maxsize = (maxsize); \
  ({ \
  register char * _UI_add_input_string__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), UI * __asm("a0"), const char * __asm("a1"), LONG __asm("d0"), char * __asm("a2"), LONG __asm("d1"), LONG __asm("d2"))) \
  (_UI_add_input_string__bn - 9528))(_UI_add_input_string__bn, _UI_add_input_string_ui, _UI_add_input_string_prompt, _UI_add_input_string_flags, _UI_add_input_string_result_buf, _UI_add_input_string_minsize, _UI_add_input_string_maxsize); \
});})

#define UI_dup_input_string(ui, prompt, flags, result_buf, minsize, maxsize) ({ \
  UI * _UI_dup_input_string_ui = (ui); \
  const char * _UI_dup_input_string_prompt = (prompt); \
  LONG _UI_dup_input_string_flags = (flags); \
  char * _UI_dup_input_string_result_buf = (result_buf); \
  LONG _UI_dup_input_string_minsize = (minsize); \
  LONG _UI_dup_input_string_maxsize = (maxsize); \
  ({ \
  register char * _UI_dup_input_string__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), UI * __asm("a0"), const char * __asm("a1"), LONG __asm("d0"), char * __asm("a2"), LONG __asm("d1"), LONG __asm("d2"))) \
  (_UI_dup_input_string__bn - 9534))(_UI_dup_input_string__bn, _UI_dup_input_string_ui, _UI_dup_input_string_prompt, _UI_dup_input_string_flags, _UI_dup_input_string_result_buf, _UI_dup_input_string_minsize, _UI_dup_input_string_maxsize); \
});})

#define UI_add_verify_string(ui, prompt, flags, result_buf, minsize, maxsize, test_buf) ({ \
  UI * _UI_add_verify_string_ui = (ui); \
  const char * _UI_add_verify_string_prompt = (prompt); \
  LONG _UI_add_verify_string_flags = (flags); \
  char * _UI_add_verify_string_result_buf = (result_buf); \
  LONG _UI_add_verify_string_minsize = (minsize); \
  LONG _UI_add_verify_string_maxsize = (maxsize); \
  const char * _UI_add_verify_string_test_buf = (test_buf); \
  ({ \
  register char * _UI_add_verify_string__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), UI * __asm("a0"), const char * __asm("a1"), LONG __asm("d0"), char * __asm("a2"), LONG __asm("d1"), LONG __asm("d2"), const char * __asm("a3"))) \
  (_UI_add_verify_string__bn - 9540))(_UI_add_verify_string__bn, _UI_add_verify_string_ui, _UI_add_verify_string_prompt, _UI_add_verify_string_flags, _UI_add_verify_string_result_buf, _UI_add_verify_string_minsize, _UI_add_verify_string_maxsize, _UI_add_verify_string_test_buf); \
});})

#define UI_dup_verify_string(ui, prompt, flags, result_buf, minsize, maxsize, test_buf) ({ \
  UI * _UI_dup_verify_string_ui = (ui); \
  const char * _UI_dup_verify_string_prompt = (prompt); \
  LONG _UI_dup_verify_string_flags = (flags); \
  char * _UI_dup_verify_string_result_buf = (result_buf); \
  LONG _UI_dup_verify_string_minsize = (minsize); \
  LONG _UI_dup_verify_string_maxsize = (maxsize); \
  const char * _UI_dup_verify_string_test_buf = (test_buf); \
  ({ \
  register char * _UI_dup_verify_string__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), UI * __asm("a0"), const char * __asm("a1"), LONG __asm("d0"), char * __asm("a2"), LONG __asm("d1"), LONG __asm("d2"), const char * __asm("a3"))) \
  (_UI_dup_verify_string__bn - 9546))(_UI_dup_verify_string__bn, _UI_dup_verify_string_ui, _UI_dup_verify_string_prompt, _UI_dup_verify_string_flags, _UI_dup_verify_string_result_buf, _UI_dup_verify_string_minsize, _UI_dup_verify_string_maxsize, _UI_dup_verify_string_test_buf); \
});})

#define UI_add_input_boolean(ui, prompt, action_desc, ok_chars, cancel_chars, flags, result_buf) ({ \
  UI * _UI_add_input_boolean_ui = (ui); \
  const char * _UI_add_input_boolean_prompt = (prompt); \
  const char * _UI_add_input_boolean_action_desc = (action_desc); \
  const char * _UI_add_input_boolean_ok_chars = (ok_chars); \
  const char * _UI_add_input_boolean_cancel_chars = (cancel_chars); \
  LONG _UI_add_input_boolean_flags = (flags); \
  char * _UI_add_input_boolean_result_buf = (result_buf); \
  ({ \
  register char * _UI_add_input_boolean__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), UI * __asm("a0"), const char * __asm("a1"), const char * __asm("a2"), const char * __asm("a3"), const char * __asm("d0"), LONG __asm("d1"), char * __asm("d2"))) \
  (_UI_add_input_boolean__bn - 9552))(_UI_add_input_boolean__bn, _UI_add_input_boolean_ui, _UI_add_input_boolean_prompt, _UI_add_input_boolean_action_desc, _UI_add_input_boolean_ok_chars, _UI_add_input_boolean_cancel_chars, _UI_add_input_boolean_flags, _UI_add_input_boolean_result_buf); \
});})

#define UI_dup_input_boolean(ui, prompt, action_desc, ok_chars, cancel_chars, flags, result_buf) ({ \
  UI * _UI_dup_input_boolean_ui = (ui); \
  const char * _UI_dup_input_boolean_prompt = (prompt); \
  const char * _UI_dup_input_boolean_action_desc = (action_desc); \
  const char * _UI_dup_input_boolean_ok_chars = (ok_chars); \
  const char * _UI_dup_input_boolean_cancel_chars = (cancel_chars); \
  LONG _UI_dup_input_boolean_flags = (flags); \
  char * _UI_dup_input_boolean_result_buf = (result_buf); \
  ({ \
  register char * _UI_dup_input_boolean__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), UI * __asm("a0"), const char * __asm("a1"), const char * __asm("a2"), const char * __asm("a3"), const char * __asm("d0"), LONG __asm("d1"), char * __asm("d2"))) \
  (_UI_dup_input_boolean__bn - 9558))(_UI_dup_input_boolean__bn, _UI_dup_input_boolean_ui, _UI_dup_input_boolean_prompt, _UI_dup_input_boolean_action_desc, _UI_dup_input_boolean_ok_chars, _UI_dup_input_boolean_cancel_chars, _UI_dup_input_boolean_flags, _UI_dup_input_boolean_result_buf); \
});})

#define UI_add_info_string(ui, text) ({ \
  UI * _UI_add_info_string_ui = (ui); \
  const char * _UI_add_info_string_text = (text); \
  ({ \
  register char * _UI_add_info_string__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), UI * __asm("a0"), const char * __asm("a1"))) \
  (_UI_add_info_string__bn - 9564))(_UI_add_info_string__bn, _UI_add_info_string_ui, _UI_add_info_string_text); \
});})

#define UI_dup_info_string(ui, text) ({ \
  UI * _UI_dup_info_string_ui = (ui); \
  const char * _UI_dup_info_string_text = (text); \
  ({ \
  register char * _UI_dup_info_string__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), UI * __asm("a0"), const char * __asm("a1"))) \
  (_UI_dup_info_string__bn - 9570))(_UI_dup_info_string__bn, _UI_dup_info_string_ui, _UI_dup_info_string_text); \
});})

#define UI_add_error_string(ui, text) ({ \
  UI * _UI_add_error_string_ui = (ui); \
  const char * _UI_add_error_string_text = (text); \
  ({ \
  register char * _UI_add_error_string__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), UI * __asm("a0"), const char * __asm("a1"))) \
  (_UI_add_error_string__bn - 9576))(_UI_add_error_string__bn, _UI_add_error_string_ui, _UI_add_error_string_text); \
});})

#define UI_dup_error_string(ui, text) ({ \
  UI * _UI_dup_error_string_ui = (ui); \
  const char * _UI_dup_error_string_text = (text); \
  ({ \
  register char * _UI_dup_error_string__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), UI * __asm("a0"), const char * __asm("a1"))) \
  (_UI_dup_error_string__bn - 9582))(_UI_dup_error_string__bn, _UI_dup_error_string_ui, _UI_dup_error_string_text); \
});})

#define UI_construct_prompt(ui_method, object_desc, object_name) ({ \
  UI * _UI_construct_prompt_ui_method = (ui_method); \
  const char * _UI_construct_prompt_object_desc = (object_desc); \
  const char * _UI_construct_prompt_object_name = (object_name); \
  ({ \
  register char * _UI_construct_prompt__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((char * (*)(char * __asm("a6"), UI * __asm("a0"), const char * __asm("a1"), const char * __asm("a2"))) \
  (_UI_construct_prompt__bn - 9588))(_UI_construct_prompt__bn, _UI_construct_prompt_ui_method, _UI_construct_prompt_object_desc, _UI_construct_prompt_object_name); \
});})

#define UI_add_user_data(ui, user_data) ({ \
  UI * _UI_add_user_data_ui = (ui); \
  void * _UI_add_user_data_user_data = (user_data); \
  ({ \
  register char * _UI_add_user_data__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void * (*)(char * __asm("a6"), UI * __asm("a0"), void * __asm("a1"))) \
  (_UI_add_user_data__bn - 9594))(_UI_add_user_data__bn, _UI_add_user_data_ui, _UI_add_user_data_user_data); \
});})

#define UI_get0_user_data(ui) ({ \
  UI * _UI_get0_user_data_ui = (ui); \
  ({ \
  register char * _UI_get0_user_data__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void * (*)(char * __asm("a6"), UI * __asm("a0"))) \
  (_UI_get0_user_data__bn - 9600))(_UI_get0_user_data__bn, _UI_get0_user_data_ui); \
});})

#define UI_get0_result(ui, i) ({ \
  UI * _UI_get0_result_ui = (ui); \
  LONG _UI_get0_result_i = (i); \
  ({ \
  register char * _UI_get0_result__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const char * (*)(char * __asm("a6"), UI * __asm("a0"), LONG __asm("d0"))) \
  (_UI_get0_result__bn - 9606))(_UI_get0_result__bn, _UI_get0_result_ui, _UI_get0_result_i); \
});})

#define UI_process(ui) ({ \
  UI * _UI_process_ui = (ui); \
  ({ \
  register char * _UI_process__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), UI * __asm("a0"))) \
  (_UI_process__bn - 9612))(_UI_process__bn, _UI_process_ui); \
});})

#define UI_ctrl(ui, cmd, i, p, f) ({ \
  UI * _UI_ctrl_ui = (ui); \
  LONG _UI_ctrl_cmd = (cmd); \
  long _UI_ctrl_i = (i); \
  void * _UI_ctrl_p = (p); \
  void (*_UI_ctrl_f)() = (f); \
  ({ \
  register char * _UI_ctrl__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), UI * __asm("a0"), LONG __asm("d0"), long __asm("d1"), void * __asm("a1"), void (*)() __asm("a2"))) \
  (_UI_ctrl__bn - 9618))(_UI_ctrl__bn, _UI_ctrl_ui, _UI_ctrl_cmd, _UI_ctrl_i, _UI_ctrl_p, _UI_ctrl_f); \
});})

#define UI_get_ex_new_index(argl, argp, new_func, dup_func, free_func) ({ \
  long _UI_get_ex_new_index_argl = (argl); \
  void * _UI_get_ex_new_index_argp = (argp); \
  CRYPTO_EX_new * (*_UI_get_ex_new_index_new_func)() = (new_func); \
  CRYPTO_EX_dup * (*_UI_get_ex_new_index_dup_func)() = (dup_func); \
  CRYPTO_EX_free * (*_UI_get_ex_new_index_free_func)() = (free_func); \
  ({ \
  register char * _UI_get_ex_new_index__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), long __asm("d0"), void * __asm("a0"), CRYPTO_EX_new * (*)() __asm("a1"), CRYPTO_EX_dup * (*)() __asm("a2"), CRYPTO_EX_free * (*)() __asm("a3"))) \
  (_UI_get_ex_new_index__bn - 9624))(_UI_get_ex_new_index__bn, _UI_get_ex_new_index_argl, _UI_get_ex_new_index_argp, _UI_get_ex_new_index_new_func, _UI_get_ex_new_index_dup_func, _UI_get_ex_new_index_free_func); \
});})

#define UI_set_ex_data(r, idx, arg) ({ \
  UI * _UI_set_ex_data_r = (r); \
  LONG _UI_set_ex_data_idx = (idx); \
  void * _UI_set_ex_data_arg = (arg); \
  ({ \
  register char * _UI_set_ex_data__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), UI * __asm("a0"), LONG __asm("d0"), void * __asm("a1"))) \
  (_UI_set_ex_data__bn - 9630))(_UI_set_ex_data__bn, _UI_set_ex_data_r, _UI_set_ex_data_idx, _UI_set_ex_data_arg); \
});})

#define UI_get_ex_data(r, idx) ({ \
  UI * _UI_get_ex_data_r = (r); \
  LONG _UI_get_ex_data_idx = (idx); \
  ({ \
  register char * _UI_get_ex_data__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void * (*)(char * __asm("a6"), UI * __asm("a0"), LONG __asm("d0"))) \
  (_UI_get_ex_data__bn - 9636))(_UI_get_ex_data__bn, _UI_get_ex_data_r, _UI_get_ex_data_idx); \
});})

#define UI_set_default_method(meth) ({ \
  const UI_METHOD * _UI_set_default_method_meth = (meth); \
  ({ \
  register char * _UI_set_default_method__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), const UI_METHOD * __asm("a0"))) \
  (_UI_set_default_method__bn - 9642))(_UI_set_default_method__bn, _UI_set_default_method_meth); \
});})

#define UI_get_default_method() ({ \
  register char * _UI_get_default_method__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const UI_METHOD * (*)(char * __asm("a6"))) \
  (_UI_get_default_method__bn - 9648))(_UI_get_default_method__bn); \
})

#define UI_get_method(ui) ({ \
  UI * _UI_get_method_ui = (ui); \
  ({ \
  register char * _UI_get_method__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const UI_METHOD * (*)(char * __asm("a6"), UI * __asm("a0"))) \
  (_UI_get_method__bn - 9654))(_UI_get_method__bn, _UI_get_method_ui); \
});})

#define UI_set_method(ui, meth) ({ \
  UI * _UI_set_method_ui = (ui); \
  const UI_METHOD * _UI_set_method_meth = (meth); \
  ({ \
  register char * _UI_set_method__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const UI_METHOD * (*)(char * __asm("a6"), UI * __asm("a0"), const UI_METHOD * __asm("a1"))) \
  (_UI_set_method__bn - 9660))(_UI_set_method__bn, _UI_set_method_ui, _UI_set_method_meth); \
});})

#define UI_OpenSSL() ({ \
  register char * _UI_OpenSSL__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((UI_METHOD * (*)(char * __asm("a6"))) \
  (_UI_OpenSSL__bn - 9666))(_UI_OpenSSL__bn); \
})

#define UI_create_method(name) ({ \
  char * _UI_create_method_name = (name); \
  ({ \
  register char * _UI_create_method__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((UI_METHOD * (*)(char * __asm("a6"), char * __asm("a0"))) \
  (_UI_create_method__bn - 9672))(_UI_create_method__bn, _UI_create_method_name); \
});})

#define UI_destroy_method(ui_method) ({ \
  UI_METHOD * _UI_destroy_method_ui_method = (ui_method); \
  ({ \
  register char * _UI_destroy_method__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), UI_METHOD * __asm("a0"))) \
  (_UI_destroy_method__bn - 9678))(_UI_destroy_method__bn, _UI_destroy_method_ui_method); \
});})

#define UI_method_set_opener(method, opener) ({ \
  UI_METHOD * _UI_method_set_opener_method = (method); \
  int (*_UI_method_set_opener_opener)(UI *ui) = (opener); \
  ({ \
  register char * _UI_method_set_opener__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), UI_METHOD * __asm("a0"), int (*)(UI *ui) __asm("a1"))) \
  (_UI_method_set_opener__bn - 9684))(_UI_method_set_opener__bn, _UI_method_set_opener_method, _UI_method_set_opener_opener); \
});})

#define UI_method_set_writer(method, writer) ({ \
  UI_METHOD * _UI_method_set_writer_method = (method); \
  int (*_UI_method_set_writer_writer)(UI *ui, UI_STRING *uis) = (writer); \
  ({ \
  register char * _UI_method_set_writer__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), UI_METHOD * __asm("a0"), int (*)(UI *ui, UI_STRING *uis) __asm("a1"))) \
  (_UI_method_set_writer__bn - 9690))(_UI_method_set_writer__bn, _UI_method_set_writer_method, _UI_method_set_writer_writer); \
});})

#define UI_method_set_flusher(method, flusher) ({ \
  UI_METHOD * _UI_method_set_flusher_method = (method); \
  int (*_UI_method_set_flusher_flusher)(UI *ui) = (flusher); \
  ({ \
  register char * _UI_method_set_flusher__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), UI_METHOD * __asm("a0"), int (*)(UI *ui) __asm("a1"))) \
  (_UI_method_set_flusher__bn - 9696))(_UI_method_set_flusher__bn, _UI_method_set_flusher_method, _UI_method_set_flusher_flusher); \
});})

#define UI_method_set_reader(method, reader) ({ \
  UI_METHOD * _UI_method_set_reader_method = (method); \
  int (*_UI_method_set_reader_reader)(UI *ui, UI_STRING *uis) = (reader); \
  ({ \
  register char * _UI_method_set_reader__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), UI_METHOD * __asm("a0"), int (*)(UI *ui, UI_STRING *uis) __asm("a1"))) \
  (_UI_method_set_reader__bn - 9702))(_UI_method_set_reader__bn, _UI_method_set_reader_method, _UI_method_set_reader_reader); \
});})

#define UI_method_set_closer(method, closer) ({ \
  UI_METHOD * _UI_method_set_closer_method = (method); \
  int (*_UI_method_set_closer_closer)(UI *ui) = (closer); \
  ({ \
  register char * _UI_method_set_closer__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), UI_METHOD * __asm("a0"), int (*)(UI *ui) __asm("a1"))) \
  (_UI_method_set_closer__bn - 9708))(_UI_method_set_closer__bn, _UI_method_set_closer_method, _UI_method_set_closer_closer); \
});})

#define UI_method_get_opener(method) ({ \
  UI_METHOD * _UI_method_get_opener_method = (method); \
  ({ \
  register char * _UI_method_get_opener__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(UI*) (*)(char * __asm("a6"), UI_METHOD * __asm("a0"))) \
  (_UI_method_get_opener__bn - 9714))(_UI_method_get_opener__bn, _UI_method_get_opener_method); \
});})

#define UI_method_get_writer(method) ({ \
  UI_METHOD * _UI_method_get_writer_method = (method); \
  ({ \
  register char * _UI_method_get_writer__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(UI*, UI_STRING*) (*)(char * __asm("a6"), UI_METHOD * __asm("a0"))) \
  (_UI_method_get_writer__bn - 9720))(_UI_method_get_writer__bn, _UI_method_get_writer_method); \
});})

#define UI_method_get_flusher(method) ({ \
  UI_METHOD * _UI_method_get_flusher_method = (method); \
  ({ \
  register char * _UI_method_get_flusher__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(UI*) (*)(char * __asm("a6"), UI_METHOD * __asm("a0"))) \
  (_UI_method_get_flusher__bn - 9726))(_UI_method_get_flusher__bn, _UI_method_get_flusher_method); \
});})

#define UI_method_get_reader(method) ({ \
  UI_METHOD * _UI_method_get_reader_method = (method); \
  ({ \
  register char * _UI_method_get_reader__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(UI*, UI_STRING*) (*)(char * __asm("a6"), UI_METHOD * __asm("a0"))) \
  (_UI_method_get_reader__bn - 9732))(_UI_method_get_reader__bn, _UI_method_get_reader_method); \
});})

#define UI_method_get_closer(method) ({ \
  UI_METHOD * _UI_method_get_closer_method = (method); \
  ({ \
  register char * _UI_method_get_closer__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(UI*) (*)(char * __asm("a6"), UI_METHOD * __asm("a0"))) \
  (_UI_method_get_closer__bn - 9738))(_UI_method_get_closer__bn, _UI_method_get_closer_method); \
});})

#define UI_get_string_type(uis) ({ \
  UI_STRING * _UI_get_string_type_uis = (uis); \
  ({ \
  register char * _UI_get_string_type__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((enum UI_string_types (*)(char * __asm("a6"), UI_STRING * __asm("a0"))) \
  (_UI_get_string_type__bn - 9744))(_UI_get_string_type__bn, _UI_get_string_type_uis); \
});})

#define UI_get_input_flags(uis) ({ \
  UI_STRING * _UI_get_input_flags_uis = (uis); \
  ({ \
  register char * _UI_get_input_flags__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), UI_STRING * __asm("a0"))) \
  (_UI_get_input_flags__bn - 9750))(_UI_get_input_flags__bn, _UI_get_input_flags_uis); \
});})

#define UI_get0_output_string(uis) ({ \
  UI_STRING * _UI_get0_output_string_uis = (uis); \
  ({ \
  register char * _UI_get0_output_string__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const char * (*)(char * __asm("a6"), UI_STRING * __asm("a0"))) \
  (_UI_get0_output_string__bn - 9756))(_UI_get0_output_string__bn, _UI_get0_output_string_uis); \
});})

#define UI_get0_action_string(uis) ({ \
  UI_STRING * _UI_get0_action_string_uis = (uis); \
  ({ \
  register char * _UI_get0_action_string__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const char * (*)(char * __asm("a6"), UI_STRING * __asm("a0"))) \
  (_UI_get0_action_string__bn - 9762))(_UI_get0_action_string__bn, _UI_get0_action_string_uis); \
});})

#define UI_get0_result_string(uis) ({ \
  UI_STRING * _UI_get0_result_string_uis = (uis); \
  ({ \
  register char * _UI_get0_result_string__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const char * (*)(char * __asm("a6"), UI_STRING * __asm("a0"))) \
  (_UI_get0_result_string__bn - 9768))(_UI_get0_result_string__bn, _UI_get0_result_string_uis); \
});})

#define UI_get0_test_string(uis) ({ \
  UI_STRING * _UI_get0_test_string_uis = (uis); \
  ({ \
  register char * _UI_get0_test_string__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const char * (*)(char * __asm("a6"), UI_STRING * __asm("a0"))) \
  (_UI_get0_test_string__bn - 9774))(_UI_get0_test_string__bn, _UI_get0_test_string_uis); \
});})

#define UI_get_result_minsize(uis) ({ \
  UI_STRING * _UI_get_result_minsize_uis = (uis); \
  ({ \
  register char * _UI_get_result_minsize__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), UI_STRING * __asm("a0"))) \
  (_UI_get_result_minsize__bn - 9780))(_UI_get_result_minsize__bn, _UI_get_result_minsize_uis); \
});})

#define UI_get_result_maxsize(uis) ({ \
  UI_STRING * _UI_get_result_maxsize_uis = (uis); \
  ({ \
  register char * _UI_get_result_maxsize__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), UI_STRING * __asm("a0"))) \
  (_UI_get_result_maxsize__bn - 9786))(_UI_get_result_maxsize__bn, _UI_get_result_maxsize_uis); \
});})

#define UI_set_result(ui, uis, result) ({ \
  UI * _UI_set_result_ui = (ui); \
  UI_STRING * _UI_set_result_uis = (uis); \
  const char * _UI_set_result_result = (result); \
  ({ \
  register char * _UI_set_result__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), UI * __asm("a0"), UI_STRING * __asm("a1"), const char * __asm("a2"))) \
  (_UI_set_result__bn - 9792))(_UI_set_result__bn, _UI_set_result_ui, _UI_set_result_uis, _UI_set_result_result); \
});})

#define UI_UTIL_read_pw_string(buf, length, prompt, verify) ({ \
  char * _UI_UTIL_read_pw_string_buf = (buf); \
  LONG _UI_UTIL_read_pw_string_length = (length); \
  const char * _UI_UTIL_read_pw_string_prompt = (prompt); \
  LONG _UI_UTIL_read_pw_string_verify = (verify); \
  ({ \
  register char * _UI_UTIL_read_pw_string__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), char * __asm("a0"), LONG __asm("d0"), const char * __asm("a1"), LONG __asm("d1"))) \
  (_UI_UTIL_read_pw_string__bn - 9798))(_UI_UTIL_read_pw_string__bn, _UI_UTIL_read_pw_string_buf, _UI_UTIL_read_pw_string_length, _UI_UTIL_read_pw_string_prompt, _UI_UTIL_read_pw_string_verify); \
});})

#define UI_UTIL_read_pw(buf, buff, size, prompt, verify) ({ \
  char * _UI_UTIL_read_pw_buf = (buf); \
  char * _UI_UTIL_read_pw_buff = (buff); \
  LONG _UI_UTIL_read_pw_size = (size); \
  const char * _UI_UTIL_read_pw_prompt = (prompt); \
  LONG _UI_UTIL_read_pw_verify = (verify); \
  ({ \
  register char * _UI_UTIL_read_pw__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), char * __asm("a0"), char * __asm("a1"), LONG __asm("d0"), const char * __asm("a2"), LONG __asm("d1"))) \
  (_UI_UTIL_read_pw__bn - 9804))(_UI_UTIL_read_pw__bn, _UI_UTIL_read_pw_buf, _UI_UTIL_read_pw_buff, _UI_UTIL_read_pw_size, _UI_UTIL_read_pw_prompt, _UI_UTIL_read_pw_verify); \
});})

#define ERR_load_UI_strings() ({ \
  register char * _ERR_load_UI_strings__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"))) \
  (_ERR_load_UI_strings__bn - 9810))(_ERR_load_UI_strings__bn); \
})

#define _ossl_old_des_read_pw_string(buf, length, prompt, verify) ({ \
  char * __ossl_old_des_read_pw_string_buf = (buf); \
  LONG __ossl_old_des_read_pw_string_length = (length); \
  const char * __ossl_old_des_read_pw_string_prompt = (prompt); \
  LONG __ossl_old_des_read_pw_string_verify = (verify); \
  ({ \
  register char * __ossl_old_des_read_pw_string__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), char * __asm("a0"), LONG __asm("d0"), const char * __asm("a1"), LONG __asm("d1"))) \
  (__ossl_old_des_read_pw_string__bn - 9816))(__ossl_old_des_read_pw_string__bn, __ossl_old_des_read_pw_string_buf, __ossl_old_des_read_pw_string_length, __ossl_old_des_read_pw_string_prompt, __ossl_old_des_read_pw_string_verify); \
});})

#define _ossl_old_des_read_pw(buf, buff, size, prompt, verify) ({ \
  char * __ossl_old_des_read_pw_buf = (buf); \
  char * __ossl_old_des_read_pw_buff = (buff); \
  LONG __ossl_old_des_read_pw_size = (size); \
  const char * __ossl_old_des_read_pw_prompt = (prompt); \
  LONG __ossl_old_des_read_pw_verify = (verify); \
  ({ \
  register char * __ossl_old_des_read_pw__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), char * __asm("a0"), char * __asm("a1"), LONG __asm("d0"), const char * __asm("a2"), LONG __asm("d1"))) \
  (__ossl_old_des_read_pw__bn - 9822))(__ossl_old_des_read_pw__bn, __ossl_old_des_read_pw_buf, __ossl_old_des_read_pw_buff, __ossl_old_des_read_pw_size, __ossl_old_des_read_pw_prompt, __ossl_old_des_read_pw_verify); \
});})

#define X509_verify_cert_error_string(n) ({ \
  long _X509_verify_cert_error_string_n = (n); \
  ({ \
  register char * _X509_verify_cert_error_string__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const char * (*)(char * __asm("a6"), long __asm("d0"))) \
  (_X509_verify_cert_error_string__bn - 9828))(_X509_verify_cert_error_string__bn, _X509_verify_cert_error_string_n); \
});})

#define X509_verify(a, r) ({ \
  X509 * _X509_verify_a = (a); \
  EVP_PKEY * _X509_verify_r = (r); \
  ({ \
  register char * _X509_verify__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509 * __asm("a0"), EVP_PKEY * __asm("a1"))) \
  (_X509_verify__bn - 9834))(_X509_verify__bn, _X509_verify_a, _X509_verify_r); \
});})

#define X509_REQ_verify(a, r) ({ \
  X509_REQ * _X509_REQ_verify_a = (a); \
  EVP_PKEY * _X509_REQ_verify_r = (r); \
  ({ \
  register char * _X509_REQ_verify__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509_REQ * __asm("a0"), EVP_PKEY * __asm("a1"))) \
  (_X509_REQ_verify__bn - 9840))(_X509_REQ_verify__bn, _X509_REQ_verify_a, _X509_REQ_verify_r); \
});})

#define X509_CRL_verify(a, r) ({ \
  X509_CRL * _X509_CRL_verify_a = (a); \
  EVP_PKEY * _X509_CRL_verify_r = (r); \
  ({ \
  register char * _X509_CRL_verify__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509_CRL * __asm("a0"), EVP_PKEY * __asm("a1"))) \
  (_X509_CRL_verify__bn - 9846))(_X509_CRL_verify__bn, _X509_CRL_verify_a, _X509_CRL_verify_r); \
});})

#define NETSCAPE_SPKI_verify(a, r) ({ \
  NETSCAPE_SPKI * _NETSCAPE_SPKI_verify_a = (a); \
  EVP_PKEY * _NETSCAPE_SPKI_verify_r = (r); \
  ({ \
  register char * _NETSCAPE_SPKI_verify__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), NETSCAPE_SPKI * __asm("a0"), EVP_PKEY * __asm("a1"))) \
  (_NETSCAPE_SPKI_verify__bn - 9852))(_NETSCAPE_SPKI_verify__bn, _NETSCAPE_SPKI_verify_a, _NETSCAPE_SPKI_verify_r); \
});})

#define NETSCAPE_SPKI_b64_decode(str, len) ({ \
  const char * _NETSCAPE_SPKI_b64_decode_str = (str); \
  LONG _NETSCAPE_SPKI_b64_decode_len = (len); \
  ({ \
  register char * _NETSCAPE_SPKI_b64_decode__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((NETSCAPE_SPKI * (*)(char * __asm("a6"), const char * __asm("a0"), LONG __asm("d0"))) \
  (_NETSCAPE_SPKI_b64_decode__bn - 9858))(_NETSCAPE_SPKI_b64_decode__bn, _NETSCAPE_SPKI_b64_decode_str, _NETSCAPE_SPKI_b64_decode_len); \
});})

#define NETSCAPE_SPKI_b64_encode(x) ({ \
  NETSCAPE_SPKI * _NETSCAPE_SPKI_b64_encode_x = (x); \
  ({ \
  register char * _NETSCAPE_SPKI_b64_encode__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((char * (*)(char * __asm("a6"), NETSCAPE_SPKI * __asm("a0"))) \
  (_NETSCAPE_SPKI_b64_encode__bn - 9864))(_NETSCAPE_SPKI_b64_encode__bn, _NETSCAPE_SPKI_b64_encode_x); \
});})

#define NETSCAPE_SPKI_get_pubkey(x) ({ \
  NETSCAPE_SPKI * _NETSCAPE_SPKI_get_pubkey_x = (x); \
  ({ \
  register char * _NETSCAPE_SPKI_get_pubkey__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((EVP_PKEY * (*)(char * __asm("a6"), NETSCAPE_SPKI * __asm("a0"))) \
  (_NETSCAPE_SPKI_get_pubkey__bn - 9870))(_NETSCAPE_SPKI_get_pubkey__bn, _NETSCAPE_SPKI_get_pubkey_x); \
});})

#define NETSCAPE_SPKI_set_pubkey(x, pkey) ({ \
  NETSCAPE_SPKI * _NETSCAPE_SPKI_set_pubkey_x = (x); \
  EVP_PKEY * _NETSCAPE_SPKI_set_pubkey_pkey = (pkey); \
  ({ \
  register char * _NETSCAPE_SPKI_set_pubkey__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), NETSCAPE_SPKI * __asm("a0"), EVP_PKEY * __asm("a1"))) \
  (_NETSCAPE_SPKI_set_pubkey__bn - 9876))(_NETSCAPE_SPKI_set_pubkey__bn, _NETSCAPE_SPKI_set_pubkey_x, _NETSCAPE_SPKI_set_pubkey_pkey); \
});})

#define NETSCAPE_SPKI_print(out, spki) ({ \
  BIO * _NETSCAPE_SPKI_print_out = (out); \
  NETSCAPE_SPKI * _NETSCAPE_SPKI_print_spki = (spki); \
  ({ \
  register char * _NETSCAPE_SPKI_print__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIO * __asm("a0"), NETSCAPE_SPKI * __asm("a1"))) \
  (_NETSCAPE_SPKI_print__bn - 9882))(_NETSCAPE_SPKI_print__bn, _NETSCAPE_SPKI_print_out, _NETSCAPE_SPKI_print_spki); \
});})

#define X509_signature_print(bp, alg, sig) ({ \
  BIO * _X509_signature_print_bp = (bp); \
  X509_ALGOR * _X509_signature_print_alg = (alg); \
  ASN1_STRING * _X509_signature_print_sig = (sig); \
  ({ \
  register char * _X509_signature_print__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIO * __asm("a0"), X509_ALGOR * __asm("a1"), ASN1_STRING * __asm("a2"))) \
  (_X509_signature_print__bn - 9888))(_X509_signature_print__bn, _X509_signature_print_bp, _X509_signature_print_alg, _X509_signature_print_sig); \
});})

#define X509_sign(x, pkey, md) ({ \
  X509 * _X509_sign_x = (x); \
  EVP_PKEY * _X509_sign_pkey = (pkey); \
  const EVP_MD * _X509_sign_md = (md); \
  ({ \
  register char * _X509_sign__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509 * __asm("a0"), EVP_PKEY * __asm("a1"), const EVP_MD * __asm("a2"))) \
  (_X509_sign__bn - 9894))(_X509_sign__bn, _X509_sign_x, _X509_sign_pkey, _X509_sign_md); \
});})

#define X509_REQ_sign(x, pkey, md) ({ \
  X509_REQ * _X509_REQ_sign_x = (x); \
  EVP_PKEY * _X509_REQ_sign_pkey = (pkey); \
  const EVP_MD * _X509_REQ_sign_md = (md); \
  ({ \
  register char * _X509_REQ_sign__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509_REQ * __asm("a0"), EVP_PKEY * __asm("a1"), const EVP_MD * __asm("a2"))) \
  (_X509_REQ_sign__bn - 9900))(_X509_REQ_sign__bn, _X509_REQ_sign_x, _X509_REQ_sign_pkey, _X509_REQ_sign_md); \
});})

#define X509_CRL_sign(x, pkey, md) ({ \
  X509_CRL * _X509_CRL_sign_x = (x); \
  EVP_PKEY * _X509_CRL_sign_pkey = (pkey); \
  const EVP_MD * _X509_CRL_sign_md = (md); \
  ({ \
  register char * _X509_CRL_sign__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509_CRL * __asm("a0"), EVP_PKEY * __asm("a1"), const EVP_MD * __asm("a2"))) \
  (_X509_CRL_sign__bn - 9906))(_X509_CRL_sign__bn, _X509_CRL_sign_x, _X509_CRL_sign_pkey, _X509_CRL_sign_md); \
});})

#define NETSCAPE_SPKI_sign(x, pkey, md) ({ \
  NETSCAPE_SPKI * _NETSCAPE_SPKI_sign_x = (x); \
  EVP_PKEY * _NETSCAPE_SPKI_sign_pkey = (pkey); \
  const EVP_MD * _NETSCAPE_SPKI_sign_md = (md); \
  ({ \
  register char * _NETSCAPE_SPKI_sign__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), NETSCAPE_SPKI * __asm("a0"), EVP_PKEY * __asm("a1"), const EVP_MD * __asm("a2"))) \
  (_NETSCAPE_SPKI_sign__bn - 9912))(_NETSCAPE_SPKI_sign__bn, _NETSCAPE_SPKI_sign_x, _NETSCAPE_SPKI_sign_pkey, _NETSCAPE_SPKI_sign_md); \
});})

#define X509_pubkey_digest(data, type, md, len) ({ \
  const X509 * _X509_pubkey_digest_data = (data); \
  const EVP_MD * _X509_pubkey_digest_type = (type); \
  unsigned char * _X509_pubkey_digest_md = (md); \
  unsigned int * _X509_pubkey_digest_len = (len); \
  ({ \
  register char * _X509_pubkey_digest__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const X509 * __asm("a0"), const EVP_MD * __asm("a1"), unsigned char * __asm("a2"), unsigned int * __asm("a3"))) \
  (_X509_pubkey_digest__bn - 9918))(_X509_pubkey_digest__bn, _X509_pubkey_digest_data, _X509_pubkey_digest_type, _X509_pubkey_digest_md, _X509_pubkey_digest_len); \
});})

#define X509_digest(data, type, md, len) ({ \
  const X509 * _X509_digest_data = (data); \
  const EVP_MD * _X509_digest_type = (type); \
  unsigned char * _X509_digest_md = (md); \
  unsigned int * _X509_digest_len = (len); \
  ({ \
  register char * _X509_digest__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const X509 * __asm("a0"), const EVP_MD * __asm("a1"), unsigned char * __asm("a2"), unsigned int * __asm("a3"))) \
  (_X509_digest__bn - 9924))(_X509_digest__bn, _X509_digest_data, _X509_digest_type, _X509_digest_md, _X509_digest_len); \
});})

#define X509_CRL_digest(data, type, md, len) ({ \
  const X509_CRL * _X509_CRL_digest_data = (data); \
  const EVP_MD * _X509_CRL_digest_type = (type); \
  unsigned char * _X509_CRL_digest_md = (md); \
  unsigned int * _X509_CRL_digest_len = (len); \
  ({ \
  register char * _X509_CRL_digest__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const X509_CRL * __asm("a0"), const EVP_MD * __asm("a1"), unsigned char * __asm("a2"), unsigned int * __asm("a3"))) \
  (_X509_CRL_digest__bn - 9930))(_X509_CRL_digest__bn, _X509_CRL_digest_data, _X509_CRL_digest_type, _X509_CRL_digest_md, _X509_CRL_digest_len); \
});})

#define X509_REQ_digest(data, type, md, len) ({ \
  const X509_REQ * _X509_REQ_digest_data = (data); \
  const EVP_MD * _X509_REQ_digest_type = (type); \
  unsigned char * _X509_REQ_digest_md = (md); \
  unsigned int * _X509_REQ_digest_len = (len); \
  ({ \
  register char * _X509_REQ_digest__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const X509_REQ * __asm("a0"), const EVP_MD * __asm("a1"), unsigned char * __asm("a2"), unsigned int * __asm("a3"))) \
  (_X509_REQ_digest__bn - 9936))(_X509_REQ_digest__bn, _X509_REQ_digest_data, _X509_REQ_digest_type, _X509_REQ_digest_md, _X509_REQ_digest_len); \
});})

#define X509_NAME_digest(data, type, md, len) ({ \
  const X509_NAME * _X509_NAME_digest_data = (data); \
  const EVP_MD * _X509_NAME_digest_type = (type); \
  unsigned char * _X509_NAME_digest_md = (md); \
  unsigned int * _X509_NAME_digest_len = (len); \
  ({ \
  register char * _X509_NAME_digest__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const X509_NAME * __asm("a0"), const EVP_MD * __asm("a1"), unsigned char * __asm("a2"), unsigned int * __asm("a3"))) \
  (_X509_NAME_digest__bn - 9942))(_X509_NAME_digest__bn, _X509_NAME_digest_data, _X509_NAME_digest_type, _X509_NAME_digest_md, _X509_NAME_digest_len); \
});})

#define d2i_X509_bio(bp, x509) ({ \
  BIO * _d2i_X509_bio_bp = (bp); \
  X509 ** _d2i_X509_bio_x509 = (x509); \
  ({ \
  register char * _d2i_X509_bio__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509 * (*)(char * __asm("a6"), BIO * __asm("a0"), X509 ** __asm("a1"))) \
  (_d2i_X509_bio__bn - 9948))(_d2i_X509_bio__bn, _d2i_X509_bio_bp, _d2i_X509_bio_x509); \
});})

#define i2d_X509_bio(bp, x509) ({ \
  BIO * _i2d_X509_bio_bp = (bp); \
  X509 * _i2d_X509_bio_x509 = (x509); \
  ({ \
  register char * _i2d_X509_bio__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIO * __asm("a0"), X509 * __asm("a1"))) \
  (_i2d_X509_bio__bn - 9954))(_i2d_X509_bio__bn, _i2d_X509_bio_bp, _i2d_X509_bio_x509); \
});})

#define d2i_X509_CRL_bio(bp, crl) ({ \
  BIO * _d2i_X509_CRL_bio_bp = (bp); \
  X509_CRL ** _d2i_X509_CRL_bio_crl = (crl); \
  ({ \
  register char * _d2i_X509_CRL_bio__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509_CRL * (*)(char * __asm("a6"), BIO * __asm("a0"), X509_CRL ** __asm("a1"))) \
  (_d2i_X509_CRL_bio__bn - 9960))(_d2i_X509_CRL_bio__bn, _d2i_X509_CRL_bio_bp, _d2i_X509_CRL_bio_crl); \
});})

#define i2d_X509_CRL_bio(bp, crl) ({ \
  BIO * _i2d_X509_CRL_bio_bp = (bp); \
  X509_CRL * _i2d_X509_CRL_bio_crl = (crl); \
  ({ \
  register char * _i2d_X509_CRL_bio__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIO * __asm("a0"), X509_CRL * __asm("a1"))) \
  (_i2d_X509_CRL_bio__bn - 9966))(_i2d_X509_CRL_bio__bn, _i2d_X509_CRL_bio_bp, _i2d_X509_CRL_bio_crl); \
});})

#define d2i_X509_REQ_bio(bp, req) ({ \
  BIO * _d2i_X509_REQ_bio_bp = (bp); \
  X509_REQ ** _d2i_X509_REQ_bio_req = (req); \
  ({ \
  register char * _d2i_X509_REQ_bio__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509_REQ * (*)(char * __asm("a6"), BIO * __asm("a0"), X509_REQ ** __asm("a1"))) \
  (_d2i_X509_REQ_bio__bn - 9972))(_d2i_X509_REQ_bio__bn, _d2i_X509_REQ_bio_bp, _d2i_X509_REQ_bio_req); \
});})

#define i2d_X509_REQ_bio(bp, req) ({ \
  BIO * _i2d_X509_REQ_bio_bp = (bp); \
  X509_REQ * _i2d_X509_REQ_bio_req = (req); \
  ({ \
  register char * _i2d_X509_REQ_bio__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIO * __asm("a0"), X509_REQ * __asm("a1"))) \
  (_i2d_X509_REQ_bio__bn - 9978))(_i2d_X509_REQ_bio__bn, _i2d_X509_REQ_bio_bp, _i2d_X509_REQ_bio_req); \
});})

#define d2i_RSAPrivateKey_bio(bp, rsa) ({ \
  BIO * _d2i_RSAPrivateKey_bio_bp = (bp); \
  RSA ** _d2i_RSAPrivateKey_bio_rsa = (rsa); \
  ({ \
  register char * _d2i_RSAPrivateKey_bio__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((RSA * (*)(char * __asm("a6"), BIO * __asm("a0"), RSA ** __asm("a1"))) \
  (_d2i_RSAPrivateKey_bio__bn - 9984))(_d2i_RSAPrivateKey_bio__bn, _d2i_RSAPrivateKey_bio_bp, _d2i_RSAPrivateKey_bio_rsa); \
});})

#define i2d_RSAPrivateKey_bio(bp, rsa) ({ \
  BIO * _i2d_RSAPrivateKey_bio_bp = (bp); \
  RSA * _i2d_RSAPrivateKey_bio_rsa = (rsa); \
  ({ \
  register char * _i2d_RSAPrivateKey_bio__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIO * __asm("a0"), RSA * __asm("a1"))) \
  (_i2d_RSAPrivateKey_bio__bn - 9990))(_i2d_RSAPrivateKey_bio__bn, _i2d_RSAPrivateKey_bio_bp, _i2d_RSAPrivateKey_bio_rsa); \
});})

#define d2i_RSAPublicKey_bio(bp, rsa) ({ \
  BIO * _d2i_RSAPublicKey_bio_bp = (bp); \
  RSA ** _d2i_RSAPublicKey_bio_rsa = (rsa); \
  ({ \
  register char * _d2i_RSAPublicKey_bio__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((RSA * (*)(char * __asm("a6"), BIO * __asm("a0"), RSA ** __asm("a1"))) \
  (_d2i_RSAPublicKey_bio__bn - 9996))(_d2i_RSAPublicKey_bio__bn, _d2i_RSAPublicKey_bio_bp, _d2i_RSAPublicKey_bio_rsa); \
});})

#define i2d_RSAPublicKey_bio(bp, rsa) ({ \
  BIO * _i2d_RSAPublicKey_bio_bp = (bp); \
  RSA * _i2d_RSAPublicKey_bio_rsa = (rsa); \
  ({ \
  register char * _i2d_RSAPublicKey_bio__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIO * __asm("a0"), RSA * __asm("a1"))) \
  (_i2d_RSAPublicKey_bio__bn - 10002))(_i2d_RSAPublicKey_bio__bn, _i2d_RSAPublicKey_bio_bp, _i2d_RSAPublicKey_bio_rsa); \
});})

#define d2i_RSA_PUBKEY_bio(bp, rsa) ({ \
  BIO * _d2i_RSA_PUBKEY_bio_bp = (bp); \
  RSA ** _d2i_RSA_PUBKEY_bio_rsa = (rsa); \
  ({ \
  register char * _d2i_RSA_PUBKEY_bio__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((RSA * (*)(char * __asm("a6"), BIO * __asm("a0"), RSA ** __asm("a1"))) \
  (_d2i_RSA_PUBKEY_bio__bn - 10008))(_d2i_RSA_PUBKEY_bio__bn, _d2i_RSA_PUBKEY_bio_bp, _d2i_RSA_PUBKEY_bio_rsa); \
});})

#define i2d_RSA_PUBKEY_bio(bp, rsa) ({ \
  BIO * _i2d_RSA_PUBKEY_bio_bp = (bp); \
  RSA * _i2d_RSA_PUBKEY_bio_rsa = (rsa); \
  ({ \
  register char * _i2d_RSA_PUBKEY_bio__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIO * __asm("a0"), RSA * __asm("a1"))) \
  (_i2d_RSA_PUBKEY_bio__bn - 10014))(_i2d_RSA_PUBKEY_bio__bn, _i2d_RSA_PUBKEY_bio_bp, _i2d_RSA_PUBKEY_bio_rsa); \
});})

#define d2i_DSA_PUBKEY_bio(bp, dsa) ({ \
  BIO * _d2i_DSA_PUBKEY_bio_bp = (bp); \
  DSA ** _d2i_DSA_PUBKEY_bio_dsa = (dsa); \
  ({ \
  register char * _d2i_DSA_PUBKEY_bio__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((DSA * (*)(char * __asm("a6"), BIO * __asm("a0"), DSA ** __asm("a1"))) \
  (_d2i_DSA_PUBKEY_bio__bn - 10020))(_d2i_DSA_PUBKEY_bio__bn, _d2i_DSA_PUBKEY_bio_bp, _d2i_DSA_PUBKEY_bio_dsa); \
});})

#define i2d_DSA_PUBKEY_bio(bp, dsa) ({ \
  BIO * _i2d_DSA_PUBKEY_bio_bp = (bp); \
  DSA * _i2d_DSA_PUBKEY_bio_dsa = (dsa); \
  ({ \
  register char * _i2d_DSA_PUBKEY_bio__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIO * __asm("a0"), DSA * __asm("a1"))) \
  (_i2d_DSA_PUBKEY_bio__bn - 10026))(_i2d_DSA_PUBKEY_bio__bn, _i2d_DSA_PUBKEY_bio_bp, _i2d_DSA_PUBKEY_bio_dsa); \
});})

#define d2i_DSAPrivateKey_bio(bp, dsa) ({ \
  BIO * _d2i_DSAPrivateKey_bio_bp = (bp); \
  DSA ** _d2i_DSAPrivateKey_bio_dsa = (dsa); \
  ({ \
  register char * _d2i_DSAPrivateKey_bio__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((DSA * (*)(char * __asm("a6"), BIO * __asm("a0"), DSA ** __asm("a1"))) \
  (_d2i_DSAPrivateKey_bio__bn - 10032))(_d2i_DSAPrivateKey_bio__bn, _d2i_DSAPrivateKey_bio_bp, _d2i_DSAPrivateKey_bio_dsa); \
});})

#define i2d_DSAPrivateKey_bio(bp, dsa) ({ \
  BIO * _i2d_DSAPrivateKey_bio_bp = (bp); \
  DSA * _i2d_DSAPrivateKey_bio_dsa = (dsa); \
  ({ \
  register char * _i2d_DSAPrivateKey_bio__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIO * __asm("a0"), DSA * __asm("a1"))) \
  (_i2d_DSAPrivateKey_bio__bn - 10038))(_i2d_DSAPrivateKey_bio__bn, _i2d_DSAPrivateKey_bio_bp, _i2d_DSAPrivateKey_bio_dsa); \
});})

#define d2i_PKCS8_bio(bp, p8) ({ \
  BIO * _d2i_PKCS8_bio_bp = (bp); \
  X509_SIG ** _d2i_PKCS8_bio_p8 = (p8); \
  ({ \
  register char * _d2i_PKCS8_bio__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509_SIG * (*)(char * __asm("a6"), BIO * __asm("a0"), X509_SIG ** __asm("a1"))) \
  (_d2i_PKCS8_bio__bn - 10044))(_d2i_PKCS8_bio__bn, _d2i_PKCS8_bio_bp, _d2i_PKCS8_bio_p8); \
});})

#define i2d_PKCS8_bio(bp, p8) ({ \
  BIO * _i2d_PKCS8_bio_bp = (bp); \
  X509_SIG * _i2d_PKCS8_bio_p8 = (p8); \
  ({ \
  register char * _i2d_PKCS8_bio__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIO * __asm("a0"), X509_SIG * __asm("a1"))) \
  (_i2d_PKCS8_bio__bn - 10050))(_i2d_PKCS8_bio__bn, _i2d_PKCS8_bio_bp, _i2d_PKCS8_bio_p8); \
});})

#define d2i_PKCS8_PRIV_KEY_INFO_bio(bp, p8inf) ({ \
  BIO * _d2i_PKCS8_PRIV_KEY_INFO_bio_bp = (bp); \
  PKCS8_PRIV_KEY_INFO ** _d2i_PKCS8_PRIV_KEY_INFO_bio_p8inf = (p8inf); \
  ({ \
  register char * _d2i_PKCS8_PRIV_KEY_INFO_bio__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((PKCS8_PRIV_KEY_INFO * (*)(char * __asm("a6"), BIO * __asm("a0"), PKCS8_PRIV_KEY_INFO ** __asm("a1"))) \
  (_d2i_PKCS8_PRIV_KEY_INFO_bio__bn - 10056))(_d2i_PKCS8_PRIV_KEY_INFO_bio__bn, _d2i_PKCS8_PRIV_KEY_INFO_bio_bp, _d2i_PKCS8_PRIV_KEY_INFO_bio_p8inf); \
});})

#define i2d_PKCS8_PRIV_KEY_INFO_bio(bp, p8inf) ({ \
  BIO * _i2d_PKCS8_PRIV_KEY_INFO_bio_bp = (bp); \
  PKCS8_PRIV_KEY_INFO * _i2d_PKCS8_PRIV_KEY_INFO_bio_p8inf = (p8inf); \
  ({ \
  register char * _i2d_PKCS8_PRIV_KEY_INFO_bio__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIO * __asm("a0"), PKCS8_PRIV_KEY_INFO * __asm("a1"))) \
  (_i2d_PKCS8_PRIV_KEY_INFO_bio__bn - 10062))(_i2d_PKCS8_PRIV_KEY_INFO_bio__bn, _i2d_PKCS8_PRIV_KEY_INFO_bio_bp, _i2d_PKCS8_PRIV_KEY_INFO_bio_p8inf); \
});})

#define i2d_PKCS8PrivateKeyInfo_bio(bp, key) ({ \
  BIO * _i2d_PKCS8PrivateKeyInfo_bio_bp = (bp); \
  EVP_PKEY * _i2d_PKCS8PrivateKeyInfo_bio_key = (key); \
  ({ \
  register char * _i2d_PKCS8PrivateKeyInfo_bio__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIO * __asm("a0"), EVP_PKEY * __asm("a1"))) \
  (_i2d_PKCS8PrivateKeyInfo_bio__bn - 10068))(_i2d_PKCS8PrivateKeyInfo_bio__bn, _i2d_PKCS8PrivateKeyInfo_bio_bp, _i2d_PKCS8PrivateKeyInfo_bio_key); \
});})

#define i2d_PrivateKey_bio(bp, pkey) ({ \
  BIO * _i2d_PrivateKey_bio_bp = (bp); \
  EVP_PKEY * _i2d_PrivateKey_bio_pkey = (pkey); \
  ({ \
  register char * _i2d_PrivateKey_bio__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIO * __asm("a0"), EVP_PKEY * __asm("a1"))) \
  (_i2d_PrivateKey_bio__bn - 10074))(_i2d_PrivateKey_bio__bn, _i2d_PrivateKey_bio_bp, _i2d_PrivateKey_bio_pkey); \
});})

#define d2i_PrivateKey_bio(bp, a) ({ \
  BIO * _d2i_PrivateKey_bio_bp = (bp); \
  EVP_PKEY ** _d2i_PrivateKey_bio_a = (a); \
  ({ \
  register char * _d2i_PrivateKey_bio__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((EVP_PKEY * (*)(char * __asm("a6"), BIO * __asm("a0"), EVP_PKEY ** __asm("a1"))) \
  (_d2i_PrivateKey_bio__bn - 10080))(_d2i_PrivateKey_bio__bn, _d2i_PrivateKey_bio_bp, _d2i_PrivateKey_bio_a); \
});})

#define i2d_PUBKEY_bio(bp, pkey) ({ \
  BIO * _i2d_PUBKEY_bio_bp = (bp); \
  EVP_PKEY * _i2d_PUBKEY_bio_pkey = (pkey); \
  ({ \
  register char * _i2d_PUBKEY_bio__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIO * __asm("a0"), EVP_PKEY * __asm("a1"))) \
  (_i2d_PUBKEY_bio__bn - 10086))(_i2d_PUBKEY_bio__bn, _i2d_PUBKEY_bio_bp, _i2d_PUBKEY_bio_pkey); \
});})

#define d2i_PUBKEY_bio(bp, a) ({ \
  BIO * _d2i_PUBKEY_bio_bp = (bp); \
  EVP_PKEY ** _d2i_PUBKEY_bio_a = (a); \
  ({ \
  register char * _d2i_PUBKEY_bio__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((EVP_PKEY * (*)(char * __asm("a6"), BIO * __asm("a0"), EVP_PKEY ** __asm("a1"))) \
  (_d2i_PUBKEY_bio__bn - 10092))(_d2i_PUBKEY_bio__bn, _d2i_PUBKEY_bio_bp, _d2i_PUBKEY_bio_a); \
});})

#define X509_dup(x509) ({ \
  X509 * _X509_dup_x509 = (x509); \
  ({ \
  register char * _X509_dup__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509 * (*)(char * __asm("a6"), X509 * __asm("a0"))) \
  (_X509_dup__bn - 10098))(_X509_dup__bn, _X509_dup_x509); \
});})

#define X509_ATTRIBUTE_dup(xa) ({ \
  X509_ATTRIBUTE * _X509_ATTRIBUTE_dup_xa = (xa); \
  ({ \
  register char * _X509_ATTRIBUTE_dup__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509_ATTRIBUTE * (*)(char * __asm("a6"), X509_ATTRIBUTE * __asm("a0"))) \
  (_X509_ATTRIBUTE_dup__bn - 10104))(_X509_ATTRIBUTE_dup__bn, _X509_ATTRIBUTE_dup_xa); \
});})

#define X509_EXTENSION_dup(ex) ({ \
  X509_EXTENSION * _X509_EXTENSION_dup_ex = (ex); \
  ({ \
  register char * _X509_EXTENSION_dup__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509_EXTENSION * (*)(char * __asm("a6"), X509_EXTENSION * __asm("a0"))) \
  (_X509_EXTENSION_dup__bn - 10110))(_X509_EXTENSION_dup__bn, _X509_EXTENSION_dup_ex); \
});})

#define X509_CRL_dup(crl) ({ \
  X509_CRL * _X509_CRL_dup_crl = (crl); \
  ({ \
  register char * _X509_CRL_dup__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509_CRL * (*)(char * __asm("a6"), X509_CRL * __asm("a0"))) \
  (_X509_CRL_dup__bn - 10116))(_X509_CRL_dup__bn, _X509_CRL_dup_crl); \
});})

#define X509_REQ_dup(req) ({ \
  X509_REQ * _X509_REQ_dup_req = (req); \
  ({ \
  register char * _X509_REQ_dup__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509_REQ * (*)(char * __asm("a6"), X509_REQ * __asm("a0"))) \
  (_X509_REQ_dup__bn - 10122))(_X509_REQ_dup__bn, _X509_REQ_dup_req); \
});})

#define X509_ALGOR_dup(xn) ({ \
  X509_ALGOR * _X509_ALGOR_dup_xn = (xn); \
  ({ \
  register char * _X509_ALGOR_dup__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509_ALGOR * (*)(char * __asm("a6"), X509_ALGOR * __asm("a0"))) \
  (_X509_ALGOR_dup__bn - 10128))(_X509_ALGOR_dup__bn, _X509_ALGOR_dup_xn); \
});})

#define X509_NAME_dup(xn) ({ \
  X509_NAME * _X509_NAME_dup_xn = (xn); \
  ({ \
  register char * _X509_NAME_dup__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509_NAME * (*)(char * __asm("a6"), X509_NAME * __asm("a0"))) \
  (_X509_NAME_dup__bn - 10134))(_X509_NAME_dup__bn, _X509_NAME_dup_xn); \
});})

#define X509_NAME_ENTRY_dup(ne) ({ \
  X509_NAME_ENTRY * _X509_NAME_ENTRY_dup_ne = (ne); \
  ({ \
  register char * _X509_NAME_ENTRY_dup__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509_NAME_ENTRY * (*)(char * __asm("a6"), X509_NAME_ENTRY * __asm("a0"))) \
  (_X509_NAME_ENTRY_dup__bn - 10140))(_X509_NAME_ENTRY_dup__bn, _X509_NAME_ENTRY_dup_ne); \
});})

#define X509_cmp_time(s, t) ({ \
  ASN1_TIME * _X509_cmp_time_s = (s); \
  time_t * _X509_cmp_time_t = (t); \
  ({ \
  register char * _X509_cmp_time__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), ASN1_TIME * __asm("a0"), time_t * __asm("a1"))) \
  (_X509_cmp_time__bn - 10146))(_X509_cmp_time__bn, _X509_cmp_time_s, _X509_cmp_time_t); \
});})

#define X509_cmp_current_time(s) ({ \
  ASN1_TIME * _X509_cmp_current_time_s = (s); \
  ({ \
  register char * _X509_cmp_current_time__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), ASN1_TIME * __asm("a0"))) \
  (_X509_cmp_current_time__bn - 10152))(_X509_cmp_current_time__bn, _X509_cmp_current_time_s); \
});})

#define X509_time_adj(s, adj, t) ({ \
  ASN1_TIME * _X509_time_adj_s = (s); \
  long _X509_time_adj_adj = (adj); \
  time_t * _X509_time_adj_t = (t); \
  ({ \
  register char * _X509_time_adj__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((ASN1_TIME * (*)(char * __asm("a6"), ASN1_TIME * __asm("a0"), long __asm("d0"), time_t * __asm("a1"))) \
  (_X509_time_adj__bn - 10158))(_X509_time_adj__bn, _X509_time_adj_s, _X509_time_adj_adj, _X509_time_adj_t); \
});})

#define X509_gmtime_adj(s, adj) ({ \
  ASN1_TIME * _X509_gmtime_adj_s = (s); \
  long _X509_gmtime_adj_adj = (adj); \
  ({ \
  register char * _X509_gmtime_adj__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((ASN1_TIME * (*)(char * __asm("a6"), ASN1_TIME * __asm("a0"), long __asm("d0"))) \
  (_X509_gmtime_adj__bn - 10164))(_X509_gmtime_adj__bn, _X509_gmtime_adj_s, _X509_gmtime_adj_adj); \
});})

#define X509_get_default_cert_area() ({ \
  register char * _X509_get_default_cert_area__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const char * (*)(char * __asm("a6"))) \
  (_X509_get_default_cert_area__bn - 10170))(_X509_get_default_cert_area__bn); \
})

#define X509_get_default_cert_dir() ({ \
  register char * _X509_get_default_cert_dir__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const char * (*)(char * __asm("a6"))) \
  (_X509_get_default_cert_dir__bn - 10176))(_X509_get_default_cert_dir__bn); \
})

#define X509_get_default_cert_file() ({ \
  register char * _X509_get_default_cert_file__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const char * (*)(char * __asm("a6"))) \
  (_X509_get_default_cert_file__bn - 10182))(_X509_get_default_cert_file__bn); \
})

#define X509_get_default_cert_dir_env() ({ \
  register char * _X509_get_default_cert_dir_env__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const char * (*)(char * __asm("a6"))) \
  (_X509_get_default_cert_dir_env__bn - 10188))(_X509_get_default_cert_dir_env__bn); \
})

#define X509_get_default_cert_file_env() ({ \
  register char * _X509_get_default_cert_file_env__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const char * (*)(char * __asm("a6"))) \
  (_X509_get_default_cert_file_env__bn - 10194))(_X509_get_default_cert_file_env__bn); \
})

#define X509_get_default_private_dir() ({ \
  register char * _X509_get_default_private_dir__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const char * (*)(char * __asm("a6"))) \
  (_X509_get_default_private_dir__bn - 10200))(_X509_get_default_private_dir__bn); \
})

#define X509_to_X509_REQ(x, pkey, md) ({ \
  X509 * _X509_to_X509_REQ_x = (x); \
  EVP_PKEY * _X509_to_X509_REQ_pkey = (pkey); \
  const EVP_MD * _X509_to_X509_REQ_md = (md); \
  ({ \
  register char * _X509_to_X509_REQ__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509_REQ * (*)(char * __asm("a6"), X509 * __asm("a0"), EVP_PKEY * __asm("a1"), const EVP_MD * __asm("a2"))) \
  (_X509_to_X509_REQ__bn - 10206))(_X509_to_X509_REQ__bn, _X509_to_X509_REQ_x, _X509_to_X509_REQ_pkey, _X509_to_X509_REQ_md); \
});})

#define X509_REQ_to_X509(r, days, pkey) ({ \
  X509_REQ * _X509_REQ_to_X509_r = (r); \
  LONG _X509_REQ_to_X509_days = (days); \
  EVP_PKEY * _X509_REQ_to_X509_pkey = (pkey); \
  ({ \
  register char * _X509_REQ_to_X509__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509 * (*)(char * __asm("a6"), X509_REQ * __asm("a0"), LONG __asm("d0"), EVP_PKEY * __asm("a1"))) \
  (_X509_REQ_to_X509__bn - 10212))(_X509_REQ_to_X509__bn, _X509_REQ_to_X509_r, _X509_REQ_to_X509_days, _X509_REQ_to_X509_pkey); \
});})

#define X509_ALGOR_new() ({ \
  register char * _X509_ALGOR_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509_ALGOR * (*)(char * __asm("a6"))) \
  (_X509_ALGOR_new__bn - 10218))(_X509_ALGOR_new__bn); \
})

#define X509_ALGOR_free(a) ({ \
  X509_ALGOR * _X509_ALGOR_free_a = (a); \
  ({ \
  register char * _X509_ALGOR_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), X509_ALGOR * __asm("a0"))) \
  (_X509_ALGOR_free__bn - 10224))(_X509_ALGOR_free__bn, _X509_ALGOR_free_a); \
});})

#define d2i_X509_ALGOR(a, in, len) ({ \
  X509_ALGOR ** _d2i_X509_ALGOR_a = (a); \
  unsigned char ** _d2i_X509_ALGOR_in = (in); \
  long _d2i_X509_ALGOR_len = (len); \
  ({ \
  register char * _d2i_X509_ALGOR__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509_ALGOR * (*)(char * __asm("a6"), X509_ALGOR ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_X509_ALGOR__bn - 10230))(_d2i_X509_ALGOR__bn, _d2i_X509_ALGOR_a, _d2i_X509_ALGOR_in, _d2i_X509_ALGOR_len); \
});})

#define i2d_X509_ALGOR(a, out) ({ \
  X509_ALGOR * _i2d_X509_ALGOR_a = (a); \
  unsigned char ** _i2d_X509_ALGOR_out = (out); \
  ({ \
  register char * _i2d_X509_ALGOR__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509_ALGOR * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_X509_ALGOR__bn - 10236))(_i2d_X509_ALGOR__bn, _i2d_X509_ALGOR_a, _i2d_X509_ALGOR_out); \
});})

#define X509_ALGOR_it() ({ \
  register char * _X509_ALGOR_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_X509_ALGOR_it__bn - 10242))(_X509_ALGOR_it__bn); \
})

#define X509_VAL_new() ({ \
  register char * _X509_VAL_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509_VAL * (*)(char * __asm("a6"))) \
  (_X509_VAL_new__bn - 10248))(_X509_VAL_new__bn); \
})

#define X509_VAL_free(a) ({ \
  X509_VAL * _X509_VAL_free_a = (a); \
  ({ \
  register char * _X509_VAL_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), X509_VAL * __asm("a0"))) \
  (_X509_VAL_free__bn - 10254))(_X509_VAL_free__bn, _X509_VAL_free_a); \
});})

#define d2i_X509_VAL(a, in, len) ({ \
  X509_VAL ** _d2i_X509_VAL_a = (a); \
  unsigned char ** _d2i_X509_VAL_in = (in); \
  long _d2i_X509_VAL_len = (len); \
  ({ \
  register char * _d2i_X509_VAL__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509_VAL * (*)(char * __asm("a6"), X509_VAL ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_X509_VAL__bn - 10260))(_d2i_X509_VAL__bn, _d2i_X509_VAL_a, _d2i_X509_VAL_in, _d2i_X509_VAL_len); \
});})

#define i2d_X509_VAL(a, out) ({ \
  X509_VAL * _i2d_X509_VAL_a = (a); \
  unsigned char ** _i2d_X509_VAL_out = (out); \
  ({ \
  register char * _i2d_X509_VAL__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509_VAL * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_X509_VAL__bn - 10266))(_i2d_X509_VAL__bn, _i2d_X509_VAL_a, _i2d_X509_VAL_out); \
});})

#define X509_VAL_it() ({ \
  register char * _X509_VAL_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_X509_VAL_it__bn - 10272))(_X509_VAL_it__bn); \
})

#define X509_PUBKEY_new() ({ \
  register char * _X509_PUBKEY_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509_PUBKEY * (*)(char * __asm("a6"))) \
  (_X509_PUBKEY_new__bn - 10278))(_X509_PUBKEY_new__bn); \
})

#define X509_PUBKEY_free(a) ({ \
  X509_PUBKEY * _X509_PUBKEY_free_a = (a); \
  ({ \
  register char * _X509_PUBKEY_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), X509_PUBKEY * __asm("a0"))) \
  (_X509_PUBKEY_free__bn - 10284))(_X509_PUBKEY_free__bn, _X509_PUBKEY_free_a); \
});})

#define d2i_X509_PUBKEY(a, in, len) ({ \
  X509_PUBKEY ** _d2i_X509_PUBKEY_a = (a); \
  unsigned char ** _d2i_X509_PUBKEY_in = (in); \
  long _d2i_X509_PUBKEY_len = (len); \
  ({ \
  register char * _d2i_X509_PUBKEY__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509_PUBKEY * (*)(char * __asm("a6"), X509_PUBKEY ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_X509_PUBKEY__bn - 10290))(_d2i_X509_PUBKEY__bn, _d2i_X509_PUBKEY_a, _d2i_X509_PUBKEY_in, _d2i_X509_PUBKEY_len); \
});})

#define i2d_X509_PUBKEY(a, out) ({ \
  X509_PUBKEY * _i2d_X509_PUBKEY_a = (a); \
  unsigned char ** _i2d_X509_PUBKEY_out = (out); \
  ({ \
  register char * _i2d_X509_PUBKEY__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509_PUBKEY * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_X509_PUBKEY__bn - 10296))(_i2d_X509_PUBKEY__bn, _i2d_X509_PUBKEY_a, _i2d_X509_PUBKEY_out); \
});})

#define X509_PUBKEY_it() ({ \
  register char * _X509_PUBKEY_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_X509_PUBKEY_it__bn - 10302))(_X509_PUBKEY_it__bn); \
})

#define X509_PUBKEY_set(x, pkey) ({ \
  X509_PUBKEY ** _X509_PUBKEY_set_x = (x); \
  EVP_PKEY * _X509_PUBKEY_set_pkey = (pkey); \
  ({ \
  register char * _X509_PUBKEY_set__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509_PUBKEY ** __asm("a0"), EVP_PKEY * __asm("a1"))) \
  (_X509_PUBKEY_set__bn - 10308))(_X509_PUBKEY_set__bn, _X509_PUBKEY_set_x, _X509_PUBKEY_set_pkey); \
});})

#define X509_PUBKEY_get(key) ({ \
  X509_PUBKEY * _X509_PUBKEY_get_key = (key); \
  ({ \
  register char * _X509_PUBKEY_get__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((EVP_PKEY * (*)(char * __asm("a6"), X509_PUBKEY * __asm("a0"))) \
  (_X509_PUBKEY_get__bn - 10314))(_X509_PUBKEY_get__bn, _X509_PUBKEY_get_key); \
});})

#define X509_get_pubkey_parameters(pkey, chain) ({ \
  EVP_PKEY * _X509_get_pubkey_parameters_pkey = (pkey); \
  STACK_OF(X509) * _X509_get_pubkey_parameters_chain = (chain); \
  ({ \
  register char * _X509_get_pubkey_parameters__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), EVP_PKEY * __asm("a0"), STACK_OF(X509) * __asm("a1"))) \
  (_X509_get_pubkey_parameters__bn - 10320))(_X509_get_pubkey_parameters__bn, _X509_get_pubkey_parameters_pkey, _X509_get_pubkey_parameters_chain); \
});})

#define i2d_PUBKEY(a, pp) ({ \
  EVP_PKEY * _i2d_PUBKEY_a = (a); \
  unsigned char ** _i2d_PUBKEY_pp = (pp); \
  ({ \
  register char * _i2d_PUBKEY__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), EVP_PKEY * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_PUBKEY__bn - 10326))(_i2d_PUBKEY__bn, _i2d_PUBKEY_a, _i2d_PUBKEY_pp); \
});})

#define d2i_PUBKEY(a, pp, length) ({ \
  EVP_PKEY ** _d2i_PUBKEY_a = (a); \
  unsigned char ** _d2i_PUBKEY_pp = (pp); \
  long _d2i_PUBKEY_length = (length); \
  ({ \
  register char * _d2i_PUBKEY__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((EVP_PKEY * (*)(char * __asm("a6"), EVP_PKEY ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_PUBKEY__bn - 10332))(_d2i_PUBKEY__bn, _d2i_PUBKEY_a, _d2i_PUBKEY_pp, _d2i_PUBKEY_length); \
});})

#define i2d_RSA_PUBKEY(a, pp) ({ \
  RSA * _i2d_RSA_PUBKEY_a = (a); \
  unsigned char ** _i2d_RSA_PUBKEY_pp = (pp); \
  ({ \
  register char * _i2d_RSA_PUBKEY__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), RSA * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_RSA_PUBKEY__bn - 10338))(_i2d_RSA_PUBKEY__bn, _i2d_RSA_PUBKEY_a, _i2d_RSA_PUBKEY_pp); \
});})

#define d2i_RSA_PUBKEY(a, pp, length) ({ \
  RSA ** _d2i_RSA_PUBKEY_a = (a); \
  unsigned char ** _d2i_RSA_PUBKEY_pp = (pp); \
  long _d2i_RSA_PUBKEY_length = (length); \
  ({ \
  register char * _d2i_RSA_PUBKEY__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((RSA * (*)(char * __asm("a6"), RSA ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_RSA_PUBKEY__bn - 10344))(_d2i_RSA_PUBKEY__bn, _d2i_RSA_PUBKEY_a, _d2i_RSA_PUBKEY_pp, _d2i_RSA_PUBKEY_length); \
});})

#define i2d_DSA_PUBKEY(a, pp) ({ \
  DSA * _i2d_DSA_PUBKEY_a = (a); \
  unsigned char ** _i2d_DSA_PUBKEY_pp = (pp); \
  ({ \
  register char * _i2d_DSA_PUBKEY__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), DSA * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_DSA_PUBKEY__bn - 10350))(_i2d_DSA_PUBKEY__bn, _i2d_DSA_PUBKEY_a, _i2d_DSA_PUBKEY_pp); \
});})

#define d2i_DSA_PUBKEY(a, pp, length) ({ \
  DSA ** _d2i_DSA_PUBKEY_a = (a); \
  unsigned char ** _d2i_DSA_PUBKEY_pp = (pp); \
  long _d2i_DSA_PUBKEY_length = (length); \
  ({ \
  register char * _d2i_DSA_PUBKEY__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((DSA * (*)(char * __asm("a6"), DSA ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_DSA_PUBKEY__bn - 10356))(_d2i_DSA_PUBKEY__bn, _d2i_DSA_PUBKEY_a, _d2i_DSA_PUBKEY_pp, _d2i_DSA_PUBKEY_length); \
});})

#define X509_SIG_new() ({ \
  register char * _X509_SIG_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509_SIG * (*)(char * __asm("a6"))) \
  (_X509_SIG_new__bn - 10362))(_X509_SIG_new__bn); \
})

#define X509_SIG_free(a) ({ \
  X509_SIG * _X509_SIG_free_a = (a); \
  ({ \
  register char * _X509_SIG_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), X509_SIG * __asm("a0"))) \
  (_X509_SIG_free__bn - 10368))(_X509_SIG_free__bn, _X509_SIG_free_a); \
});})

#define d2i_X509_SIG(a, in, len) ({ \
  X509_SIG ** _d2i_X509_SIG_a = (a); \
  unsigned char ** _d2i_X509_SIG_in = (in); \
  long _d2i_X509_SIG_len = (len); \
  ({ \
  register char * _d2i_X509_SIG__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509_SIG * (*)(char * __asm("a6"), X509_SIG ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_X509_SIG__bn - 10374))(_d2i_X509_SIG__bn, _d2i_X509_SIG_a, _d2i_X509_SIG_in, _d2i_X509_SIG_len); \
});})

#define i2d_X509_SIG(a, out) ({ \
  X509_SIG * _i2d_X509_SIG_a = (a); \
  unsigned char ** _i2d_X509_SIG_out = (out); \
  ({ \
  register char * _i2d_X509_SIG__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509_SIG * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_X509_SIG__bn - 10380))(_i2d_X509_SIG__bn, _i2d_X509_SIG_a, _i2d_X509_SIG_out); \
});})

#define X509_SIG_it() ({ \
  register char * _X509_SIG_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_X509_SIG_it__bn - 10386))(_X509_SIG_it__bn); \
})

#define X509_REQ_INFO_new() ({ \
  register char * _X509_REQ_INFO_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509_REQ_INFO * (*)(char * __asm("a6"))) \
  (_X509_REQ_INFO_new__bn - 10392))(_X509_REQ_INFO_new__bn); \
})

#define X509_REQ_INFO_free(a) ({ \
  X509_REQ_INFO * _X509_REQ_INFO_free_a = (a); \
  ({ \
  register char * _X509_REQ_INFO_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), X509_REQ_INFO * __asm("a0"))) \
  (_X509_REQ_INFO_free__bn - 10398))(_X509_REQ_INFO_free__bn, _X509_REQ_INFO_free_a); \
});})

#define d2i_X509_REQ_INFO(a, in, len) ({ \
  X509_REQ_INFO ** _d2i_X509_REQ_INFO_a = (a); \
  unsigned char ** _d2i_X509_REQ_INFO_in = (in); \
  long _d2i_X509_REQ_INFO_len = (len); \
  ({ \
  register char * _d2i_X509_REQ_INFO__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509_REQ_INFO * (*)(char * __asm("a6"), X509_REQ_INFO ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_X509_REQ_INFO__bn - 10404))(_d2i_X509_REQ_INFO__bn, _d2i_X509_REQ_INFO_a, _d2i_X509_REQ_INFO_in, _d2i_X509_REQ_INFO_len); \
});})

#define i2d_X509_REQ_INFO(a, out) ({ \
  X509_REQ_INFO * _i2d_X509_REQ_INFO_a = (a); \
  unsigned char ** _i2d_X509_REQ_INFO_out = (out); \
  ({ \
  register char * _i2d_X509_REQ_INFO__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509_REQ_INFO * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_X509_REQ_INFO__bn - 10410))(_i2d_X509_REQ_INFO__bn, _i2d_X509_REQ_INFO_a, _i2d_X509_REQ_INFO_out); \
});})

#define X509_REQ_INFO_it() ({ \
  register char * _X509_REQ_INFO_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_X509_REQ_INFO_it__bn - 10416))(_X509_REQ_INFO_it__bn); \
})

#define X509_REQ_new() ({ \
  register char * _X509_REQ_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509_REQ * (*)(char * __asm("a6"))) \
  (_X509_REQ_new__bn - 10422))(_X509_REQ_new__bn); \
})

#define X509_REQ_free(a) ({ \
  X509_REQ * _X509_REQ_free_a = (a); \
  ({ \
  register char * _X509_REQ_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), X509_REQ * __asm("a0"))) \
  (_X509_REQ_free__bn - 10428))(_X509_REQ_free__bn, _X509_REQ_free_a); \
});})

#define d2i_X509_REQ(a, in, len) ({ \
  X509_REQ ** _d2i_X509_REQ_a = (a); \
  unsigned char ** _d2i_X509_REQ_in = (in); \
  long _d2i_X509_REQ_len = (len); \
  ({ \
  register char * _d2i_X509_REQ__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509_REQ * (*)(char * __asm("a6"), X509_REQ ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_X509_REQ__bn - 10434))(_d2i_X509_REQ__bn, _d2i_X509_REQ_a, _d2i_X509_REQ_in, _d2i_X509_REQ_len); \
});})

#define i2d_X509_REQ(a, out) ({ \
  X509_REQ * _i2d_X509_REQ_a = (a); \
  unsigned char ** _i2d_X509_REQ_out = (out); \
  ({ \
  register char * _i2d_X509_REQ__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509_REQ * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_X509_REQ__bn - 10440))(_i2d_X509_REQ__bn, _i2d_X509_REQ_a, _i2d_X509_REQ_out); \
});})

#define X509_REQ_it() ({ \
  register char * _X509_REQ_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_X509_REQ_it__bn - 10446))(_X509_REQ_it__bn); \
})

#define X509_ATTRIBUTE_new() ({ \
  register char * _X509_ATTRIBUTE_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509_ATTRIBUTE * (*)(char * __asm("a6"))) \
  (_X509_ATTRIBUTE_new__bn - 10452))(_X509_ATTRIBUTE_new__bn); \
})

#define X509_ATTRIBUTE_free(a) ({ \
  X509_ATTRIBUTE * _X509_ATTRIBUTE_free_a = (a); \
  ({ \
  register char * _X509_ATTRIBUTE_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), X509_ATTRIBUTE * __asm("a0"))) \
  (_X509_ATTRIBUTE_free__bn - 10458))(_X509_ATTRIBUTE_free__bn, _X509_ATTRIBUTE_free_a); \
});})

#define d2i_X509_ATTRIBUTE(a, in, len) ({ \
  X509_ATTRIBUTE ** _d2i_X509_ATTRIBUTE_a = (a); \
  unsigned char ** _d2i_X509_ATTRIBUTE_in = (in); \
  long _d2i_X509_ATTRIBUTE_len = (len); \
  ({ \
  register char * _d2i_X509_ATTRIBUTE__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509_ATTRIBUTE * (*)(char * __asm("a6"), X509_ATTRIBUTE ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_X509_ATTRIBUTE__bn - 10464))(_d2i_X509_ATTRIBUTE__bn, _d2i_X509_ATTRIBUTE_a, _d2i_X509_ATTRIBUTE_in, _d2i_X509_ATTRIBUTE_len); \
});})

#define i2d_X509_ATTRIBUTE(a, out) ({ \
  X509_ATTRIBUTE * _i2d_X509_ATTRIBUTE_a = (a); \
  unsigned char ** _i2d_X509_ATTRIBUTE_out = (out); \
  ({ \
  register char * _i2d_X509_ATTRIBUTE__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509_ATTRIBUTE * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_X509_ATTRIBUTE__bn - 10470))(_i2d_X509_ATTRIBUTE__bn, _i2d_X509_ATTRIBUTE_a, _i2d_X509_ATTRIBUTE_out); \
});})

#define X509_ATTRIBUTE_it() ({ \
  register char * _X509_ATTRIBUTE_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_X509_ATTRIBUTE_it__bn - 10476))(_X509_ATTRIBUTE_it__bn); \
})

#define X509_ATTRIBUTE_create(nid, atrtype, value) ({ \
  LONG _X509_ATTRIBUTE_create_nid = (nid); \
  LONG _X509_ATTRIBUTE_create_atrtype = (atrtype); \
  void * _X509_ATTRIBUTE_create_value = (value); \
  ({ \
  register char * _X509_ATTRIBUTE_create__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509_ATTRIBUTE * (*)(char * __asm("a6"), LONG __asm("d0"), LONG __asm("d1"), void * __asm("a0"))) \
  (_X509_ATTRIBUTE_create__bn - 10482))(_X509_ATTRIBUTE_create__bn, _X509_ATTRIBUTE_create_nid, _X509_ATTRIBUTE_create_atrtype, _X509_ATTRIBUTE_create_value); \
});})

#define X509_EXTENSION_new() ({ \
  register char * _X509_EXTENSION_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509_EXTENSION * (*)(char * __asm("a6"))) \
  (_X509_EXTENSION_new__bn - 10488))(_X509_EXTENSION_new__bn); \
})

#define X509_EXTENSION_free(a) ({ \
  X509_EXTENSION * _X509_EXTENSION_free_a = (a); \
  ({ \
  register char * _X509_EXTENSION_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), X509_EXTENSION * __asm("a0"))) \
  (_X509_EXTENSION_free__bn - 10494))(_X509_EXTENSION_free__bn, _X509_EXTENSION_free_a); \
});})

#define d2i_X509_EXTENSION(a, in, len) ({ \
  X509_EXTENSION ** _d2i_X509_EXTENSION_a = (a); \
  unsigned char ** _d2i_X509_EXTENSION_in = (in); \
  long _d2i_X509_EXTENSION_len = (len); \
  ({ \
  register char * _d2i_X509_EXTENSION__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509_EXTENSION * (*)(char * __asm("a6"), X509_EXTENSION ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_X509_EXTENSION__bn - 10500))(_d2i_X509_EXTENSION__bn, _d2i_X509_EXTENSION_a, _d2i_X509_EXTENSION_in, _d2i_X509_EXTENSION_len); \
});})

#define i2d_X509_EXTENSION(a, out) ({ \
  X509_EXTENSION * _i2d_X509_EXTENSION_a = (a); \
  unsigned char ** _i2d_X509_EXTENSION_out = (out); \
  ({ \
  register char * _i2d_X509_EXTENSION__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509_EXTENSION * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_X509_EXTENSION__bn - 10506))(_i2d_X509_EXTENSION__bn, _i2d_X509_EXTENSION_a, _i2d_X509_EXTENSION_out); \
});})

#define X509_EXTENSION_it() ({ \
  register char * _X509_EXTENSION_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_X509_EXTENSION_it__bn - 10512))(_X509_EXTENSION_it__bn); \
})

#define X509_NAME_ENTRY_new() ({ \
  register char * _X509_NAME_ENTRY_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509_NAME_ENTRY * (*)(char * __asm("a6"))) \
  (_X509_NAME_ENTRY_new__bn - 10518))(_X509_NAME_ENTRY_new__bn); \
})

#define X509_NAME_ENTRY_free(a) ({ \
  X509_NAME_ENTRY * _X509_NAME_ENTRY_free_a = (a); \
  ({ \
  register char * _X509_NAME_ENTRY_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), X509_NAME_ENTRY * __asm("a0"))) \
  (_X509_NAME_ENTRY_free__bn - 10524))(_X509_NAME_ENTRY_free__bn, _X509_NAME_ENTRY_free_a); \
});})

#define d2i_X509_NAME_ENTRY(a, in, len) ({ \
  X509_NAME_ENTRY ** _d2i_X509_NAME_ENTRY_a = (a); \
  unsigned char ** _d2i_X509_NAME_ENTRY_in = (in); \
  long _d2i_X509_NAME_ENTRY_len = (len); \
  ({ \
  register char * _d2i_X509_NAME_ENTRY__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509_NAME_ENTRY * (*)(char * __asm("a6"), X509_NAME_ENTRY ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_X509_NAME_ENTRY__bn - 10530))(_d2i_X509_NAME_ENTRY__bn, _d2i_X509_NAME_ENTRY_a, _d2i_X509_NAME_ENTRY_in, _d2i_X509_NAME_ENTRY_len); \
});})

#define i2d_X509_NAME_ENTRY(a, out) ({ \
  X509_NAME_ENTRY * _i2d_X509_NAME_ENTRY_a = (a); \
  unsigned char ** _i2d_X509_NAME_ENTRY_out = (out); \
  ({ \
  register char * _i2d_X509_NAME_ENTRY__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509_NAME_ENTRY * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_X509_NAME_ENTRY__bn - 10536))(_i2d_X509_NAME_ENTRY__bn, _i2d_X509_NAME_ENTRY_a, _i2d_X509_NAME_ENTRY_out); \
});})

#define X509_NAME_ENTRY_it() ({ \
  register char * _X509_NAME_ENTRY_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_X509_NAME_ENTRY_it__bn - 10542))(_X509_NAME_ENTRY_it__bn); \
})

#define X509_NAME_new() ({ \
  register char * _X509_NAME_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509_NAME * (*)(char * __asm("a6"))) \
  (_X509_NAME_new__bn - 10548))(_X509_NAME_new__bn); \
})

#define X509_NAME_free(a) ({ \
  X509_NAME * _X509_NAME_free_a = (a); \
  ({ \
  register char * _X509_NAME_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), X509_NAME * __asm("a0"))) \
  (_X509_NAME_free__bn - 10554))(_X509_NAME_free__bn, _X509_NAME_free_a); \
});})

#define d2i_X509_NAME(a, in, len) ({ \
  X509_NAME ** _d2i_X509_NAME_a = (a); \
  unsigned char ** _d2i_X509_NAME_in = (in); \
  long _d2i_X509_NAME_len = (len); \
  ({ \
  register char * _d2i_X509_NAME__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509_NAME * (*)(char * __asm("a6"), X509_NAME ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_X509_NAME__bn - 10560))(_d2i_X509_NAME__bn, _d2i_X509_NAME_a, _d2i_X509_NAME_in, _d2i_X509_NAME_len); \
});})

#define i2d_X509_NAME(a, out) ({ \
  X509_NAME * _i2d_X509_NAME_a = (a); \
  unsigned char ** _i2d_X509_NAME_out = (out); \
  ({ \
  register char * _i2d_X509_NAME__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509_NAME * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_X509_NAME__bn - 10566))(_i2d_X509_NAME__bn, _i2d_X509_NAME_a, _i2d_X509_NAME_out); \
});})

#define X509_NAME_it() ({ \
  register char * _X509_NAME_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_X509_NAME_it__bn - 10572))(_X509_NAME_it__bn); \
})

#define X509_NAME_set(xn, name) ({ \
  X509_NAME ** _X509_NAME_set_xn = (xn); \
  X509_NAME * _X509_NAME_set_name = (name); \
  ({ \
  register char * _X509_NAME_set__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509_NAME ** __asm("a0"), X509_NAME * __asm("a1"))) \
  (_X509_NAME_set__bn - 10578))(_X509_NAME_set__bn, _X509_NAME_set_xn, _X509_NAME_set_name); \
});})

#define X509_CINF_new() ({ \
  register char * _X509_CINF_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509_CINF * (*)(char * __asm("a6"))) \
  (_X509_CINF_new__bn - 10584))(_X509_CINF_new__bn); \
})

#define X509_CINF_free(a) ({ \
  X509_CINF * _X509_CINF_free_a = (a); \
  ({ \
  register char * _X509_CINF_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), X509_CINF * __asm("a0"))) \
  (_X509_CINF_free__bn - 10590))(_X509_CINF_free__bn, _X509_CINF_free_a); \
});})

#define d2i_X509_CINF(a, in, len) ({ \
  X509_CINF ** _d2i_X509_CINF_a = (a); \
  unsigned char ** _d2i_X509_CINF_in = (in); \
  long _d2i_X509_CINF_len = (len); \
  ({ \
  register char * _d2i_X509_CINF__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509_CINF * (*)(char * __asm("a6"), X509_CINF ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_X509_CINF__bn - 10596))(_d2i_X509_CINF__bn, _d2i_X509_CINF_a, _d2i_X509_CINF_in, _d2i_X509_CINF_len); \
});})

#define i2d_X509_CINF(a, out) ({ \
  X509_CINF * _i2d_X509_CINF_a = (a); \
  unsigned char ** _i2d_X509_CINF_out = (out); \
  ({ \
  register char * _i2d_X509_CINF__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509_CINF * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_X509_CINF__bn - 10602))(_i2d_X509_CINF__bn, _i2d_X509_CINF_a, _i2d_X509_CINF_out); \
});})

#define X509_CINF_it() ({ \
  register char * _X509_CINF_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_X509_CINF_it__bn - 10608))(_X509_CINF_it__bn); \
})

#define X509_new() ({ \
  register char * _X509_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509 * (*)(char * __asm("a6"))) \
  (_X509_new__bn - 10614))(_X509_new__bn); \
})

#define X509_free(a) ({ \
  X509 * _X509_free_a = (a); \
  ({ \
  register char * _X509_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), X509 * __asm("a0"))) \
  (_X509_free__bn - 10620))(_X509_free__bn, _X509_free_a); \
});})

#define d2i_X509(a, in, len) ({ \
  X509 ** _d2i_X509_a = (a); \
  unsigned char ** _d2i_X509_in = (in); \
  long _d2i_X509_len = (len); \
  ({ \
  register char * _d2i_X509__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509 * (*)(char * __asm("a6"), X509 ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_X509__bn - 10626))(_d2i_X509__bn, _d2i_X509_a, _d2i_X509_in, _d2i_X509_len); \
});})

#define i2d_X509(a, out) ({ \
  X509 * _i2d_X509_a = (a); \
  unsigned char ** _i2d_X509_out = (out); \
  ({ \
  register char * _i2d_X509__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509 * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_X509__bn - 10632))(_i2d_X509__bn, _i2d_X509_a, _i2d_X509_out); \
});})

#define X509_it() ({ \
  register char * _X509_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_X509_it__bn - 10638))(_X509_it__bn); \
})

#define X509_CERT_AUX_new() ({ \
  register char * _X509_CERT_AUX_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509_CERT_AUX * (*)(char * __asm("a6"))) \
  (_X509_CERT_AUX_new__bn - 10644))(_X509_CERT_AUX_new__bn); \
})

#define X509_CERT_AUX_free(a) ({ \
  X509_CERT_AUX * _X509_CERT_AUX_free_a = (a); \
  ({ \
  register char * _X509_CERT_AUX_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), X509_CERT_AUX * __asm("a0"))) \
  (_X509_CERT_AUX_free__bn - 10650))(_X509_CERT_AUX_free__bn, _X509_CERT_AUX_free_a); \
});})

#define d2i_X509_CERT_AUX(a, in, len) ({ \
  X509_CERT_AUX ** _d2i_X509_CERT_AUX_a = (a); \
  unsigned char ** _d2i_X509_CERT_AUX_in = (in); \
  long _d2i_X509_CERT_AUX_len = (len); \
  ({ \
  register char * _d2i_X509_CERT_AUX__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509_CERT_AUX * (*)(char * __asm("a6"), X509_CERT_AUX ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_X509_CERT_AUX__bn - 10656))(_d2i_X509_CERT_AUX__bn, _d2i_X509_CERT_AUX_a, _d2i_X509_CERT_AUX_in, _d2i_X509_CERT_AUX_len); \
});})

#define i2d_X509_CERT_AUX(a, out) ({ \
  X509_CERT_AUX * _i2d_X509_CERT_AUX_a = (a); \
  unsigned char ** _i2d_X509_CERT_AUX_out = (out); \
  ({ \
  register char * _i2d_X509_CERT_AUX__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509_CERT_AUX * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_X509_CERT_AUX__bn - 10662))(_i2d_X509_CERT_AUX__bn, _i2d_X509_CERT_AUX_a, _i2d_X509_CERT_AUX_out); \
});})

#define X509_CERT_AUX_it() ({ \
  register char * _X509_CERT_AUX_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_X509_CERT_AUX_it__bn - 10668))(_X509_CERT_AUX_it__bn); \
})

#define X509_get_ex_new_index(argl, argp, new_func, dup_func, free_func) ({ \
  long _X509_get_ex_new_index_argl = (argl); \
  void * _X509_get_ex_new_index_argp = (argp); \
  CRYPTO_EX_new * (*_X509_get_ex_new_index_new_func)() = (new_func); \
  CRYPTO_EX_dup * (*_X509_get_ex_new_index_dup_func)() = (dup_func); \
  CRYPTO_EX_free * (*_X509_get_ex_new_index_free_func)() = (free_func); \
  ({ \
  register char * _X509_get_ex_new_index__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), long __asm("d0"), void * __asm("a0"), CRYPTO_EX_new * (*)() __asm("a1"), CRYPTO_EX_dup * (*)() __asm("a2"), CRYPTO_EX_free * (*)() __asm("a3"))) \
  (_X509_get_ex_new_index__bn - 10674))(_X509_get_ex_new_index__bn, _X509_get_ex_new_index_argl, _X509_get_ex_new_index_argp, _X509_get_ex_new_index_new_func, _X509_get_ex_new_index_dup_func, _X509_get_ex_new_index_free_func); \
});})

#define X509_set_ex_data(r, idx, arg) ({ \
  X509 * _X509_set_ex_data_r = (r); \
  LONG _X509_set_ex_data_idx = (idx); \
  void * _X509_set_ex_data_arg = (arg); \
  ({ \
  register char * _X509_set_ex_data__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509 * __asm("a0"), LONG __asm("d0"), void * __asm("a1"))) \
  (_X509_set_ex_data__bn - 10680))(_X509_set_ex_data__bn, _X509_set_ex_data_r, _X509_set_ex_data_idx, _X509_set_ex_data_arg); \
});})

#define X509_get_ex_data(r, idx) ({ \
  X509 * _X509_get_ex_data_r = (r); \
  LONG _X509_get_ex_data_idx = (idx); \
  ({ \
  register char * _X509_get_ex_data__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void * (*)(char * __asm("a6"), X509 * __asm("a0"), LONG __asm("d0"))) \
  (_X509_get_ex_data__bn - 10686))(_X509_get_ex_data__bn, _X509_get_ex_data_r, _X509_get_ex_data_idx); \
});})

#define i2d_X509_AUX(a, pp) ({ \
  X509 * _i2d_X509_AUX_a = (a); \
  unsigned char ** _i2d_X509_AUX_pp = (pp); \
  ({ \
  register char * _i2d_X509_AUX__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509 * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_X509_AUX__bn - 10692))(_i2d_X509_AUX__bn, _i2d_X509_AUX_a, _i2d_X509_AUX_pp); \
});})

#define d2i_X509_AUX(a, pp, length) ({ \
  X509 ** _d2i_X509_AUX_a = (a); \
  unsigned char ** _d2i_X509_AUX_pp = (pp); \
  long _d2i_X509_AUX_length = (length); \
  ({ \
  register char * _d2i_X509_AUX__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509 * (*)(char * __asm("a6"), X509 ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_X509_AUX__bn - 10698))(_d2i_X509_AUX__bn, _d2i_X509_AUX_a, _d2i_X509_AUX_pp, _d2i_X509_AUX_length); \
});})

#define X509_alias_set1(x, name, len) ({ \
  X509 * _X509_alias_set1_x = (x); \
  unsigned char * _X509_alias_set1_name = (name); \
  LONG _X509_alias_set1_len = (len); \
  ({ \
  register char * _X509_alias_set1__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509 * __asm("a0"), unsigned char * __asm("a1"), LONG __asm("d0"))) \
  (_X509_alias_set1__bn - 10704))(_X509_alias_set1__bn, _X509_alias_set1_x, _X509_alias_set1_name, _X509_alias_set1_len); \
});})

#define X509_keyid_set1(x, id, len) ({ \
  X509 * _X509_keyid_set1_x = (x); \
  unsigned char * _X509_keyid_set1_id = (id); \
  LONG _X509_keyid_set1_len = (len); \
  ({ \
  register char * _X509_keyid_set1__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509 * __asm("a0"), unsigned char * __asm("a1"), LONG __asm("d0"))) \
  (_X509_keyid_set1__bn - 10710))(_X509_keyid_set1__bn, _X509_keyid_set1_x, _X509_keyid_set1_id, _X509_keyid_set1_len); \
});})

#define X509_alias_get0(x, len) ({ \
  X509 * _X509_alias_get0_x = (x); \
  int * _X509_alias_get0_len = (len); \
  ({ \
  register char * _X509_alias_get0__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((unsigned char * (*)(char * __asm("a6"), X509 * __asm("a0"), int * __asm("a1"))) \
  (_X509_alias_get0__bn - 10716))(_X509_alias_get0__bn, _X509_alias_get0_x, _X509_alias_get0_len); \
});})

#define X509_TRUST_set_default(trust) ({ \
  int (*_X509_TRUST_set_default_trust)(int, X509 *, int) = (trust); \
  ({ \
  register char * _X509_TRUST_set_default__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(int, X509 *, int) (*)(char * __asm("a6"), int (*)(int, X509 *, int) __asm("a0"))) \
  (_X509_TRUST_set_default__bn - 10722))(_X509_TRUST_set_default__bn, _X509_TRUST_set_default_trust); \
});})

#define X509_TRUST_set(t, trust) ({ \
  int * _X509_TRUST_set_t = (t); \
  LONG _X509_TRUST_set_trust = (trust); \
  ({ \
  register char * _X509_TRUST_set__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), int * __asm("a0"), LONG __asm("d0"))) \
  (_X509_TRUST_set__bn - 10728))(_X509_TRUST_set__bn, _X509_TRUST_set_t, _X509_TRUST_set_trust); \
});})

#define X509_add1_trust_object(x, obj) ({ \
  X509 * _X509_add1_trust_object_x = (x); \
  ASN1_OBJECT * _X509_add1_trust_object_obj = (obj); \
  ({ \
  register char * _X509_add1_trust_object__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509 * __asm("a0"), ASN1_OBJECT * __asm("a1"))) \
  (_X509_add1_trust_object__bn - 10734))(_X509_add1_trust_object__bn, _X509_add1_trust_object_x, _X509_add1_trust_object_obj); \
});})

#define X509_add1_reject_object(x, obj) ({ \
  X509 * _X509_add1_reject_object_x = (x); \
  ASN1_OBJECT * _X509_add1_reject_object_obj = (obj); \
  ({ \
  register char * _X509_add1_reject_object__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509 * __asm("a0"), ASN1_OBJECT * __asm("a1"))) \
  (_X509_add1_reject_object__bn - 10740))(_X509_add1_reject_object__bn, _X509_add1_reject_object_x, _X509_add1_reject_object_obj); \
});})

#define X509_trust_clear(x) ({ \
  X509 * _X509_trust_clear_x = (x); \
  ({ \
  register char * _X509_trust_clear__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), X509 * __asm("a0"))) \
  (_X509_trust_clear__bn - 10746))(_X509_trust_clear__bn, _X509_trust_clear_x); \
});})

#define X509_reject_clear(x) ({ \
  X509 * _X509_reject_clear_x = (x); \
  ({ \
  register char * _X509_reject_clear__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), X509 * __asm("a0"))) \
  (_X509_reject_clear__bn - 10752))(_X509_reject_clear__bn, _X509_reject_clear_x); \
});})

#define X509_REVOKED_new() ({ \
  register char * _X509_REVOKED_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509_REVOKED * (*)(char * __asm("a6"))) \
  (_X509_REVOKED_new__bn - 10758))(_X509_REVOKED_new__bn); \
})

#define X509_REVOKED_free(a) ({ \
  X509_REVOKED * _X509_REVOKED_free_a = (a); \
  ({ \
  register char * _X509_REVOKED_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), X509_REVOKED * __asm("a0"))) \
  (_X509_REVOKED_free__bn - 10764))(_X509_REVOKED_free__bn, _X509_REVOKED_free_a); \
});})

#define d2i_X509_REVOKED(a, in, len) ({ \
  X509_REVOKED ** _d2i_X509_REVOKED_a = (a); \
  unsigned char ** _d2i_X509_REVOKED_in = (in); \
  long _d2i_X509_REVOKED_len = (len); \
  ({ \
  register char * _d2i_X509_REVOKED__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509_REVOKED * (*)(char * __asm("a6"), X509_REVOKED ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_X509_REVOKED__bn - 10770))(_d2i_X509_REVOKED__bn, _d2i_X509_REVOKED_a, _d2i_X509_REVOKED_in, _d2i_X509_REVOKED_len); \
});})

#define i2d_X509_REVOKED(a, out) ({ \
  X509_REVOKED * _i2d_X509_REVOKED_a = (a); \
  unsigned char ** _i2d_X509_REVOKED_out = (out); \
  ({ \
  register char * _i2d_X509_REVOKED__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509_REVOKED * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_X509_REVOKED__bn - 10776))(_i2d_X509_REVOKED__bn, _i2d_X509_REVOKED_a, _i2d_X509_REVOKED_out); \
});})

#define X509_REVOKED_it() ({ \
  register char * _X509_REVOKED_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_X509_REVOKED_it__bn - 10782))(_X509_REVOKED_it__bn); \
})

#define X509_CRL_INFO_new() ({ \
  register char * _X509_CRL_INFO_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509_CRL_INFO * (*)(char * __asm("a6"))) \
  (_X509_CRL_INFO_new__bn - 10788))(_X509_CRL_INFO_new__bn); \
})

#define X509_CRL_INFO_free(a) ({ \
  X509_CRL_INFO * _X509_CRL_INFO_free_a = (a); \
  ({ \
  register char * _X509_CRL_INFO_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), X509_CRL_INFO * __asm("a0"))) \
  (_X509_CRL_INFO_free__bn - 10794))(_X509_CRL_INFO_free__bn, _X509_CRL_INFO_free_a); \
});})

#define d2i_X509_CRL_INFO(a, in, len) ({ \
  X509_CRL_INFO ** _d2i_X509_CRL_INFO_a = (a); \
  unsigned char ** _d2i_X509_CRL_INFO_in = (in); \
  long _d2i_X509_CRL_INFO_len = (len); \
  ({ \
  register char * _d2i_X509_CRL_INFO__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509_CRL_INFO * (*)(char * __asm("a6"), X509_CRL_INFO ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_X509_CRL_INFO__bn - 10800))(_d2i_X509_CRL_INFO__bn, _d2i_X509_CRL_INFO_a, _d2i_X509_CRL_INFO_in, _d2i_X509_CRL_INFO_len); \
});})

#define i2d_X509_CRL_INFO(a, out) ({ \
  X509_CRL_INFO * _i2d_X509_CRL_INFO_a = (a); \
  unsigned char ** _i2d_X509_CRL_INFO_out = (out); \
  ({ \
  register char * _i2d_X509_CRL_INFO__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509_CRL_INFO * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_X509_CRL_INFO__bn - 10806))(_i2d_X509_CRL_INFO__bn, _i2d_X509_CRL_INFO_a, _i2d_X509_CRL_INFO_out); \
});})

#define X509_CRL_INFO_it() ({ \
  register char * _X509_CRL_INFO_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_X509_CRL_INFO_it__bn - 10812))(_X509_CRL_INFO_it__bn); \
})

#define X509_CRL_new() ({ \
  register char * _X509_CRL_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509_CRL * (*)(char * __asm("a6"))) \
  (_X509_CRL_new__bn - 10818))(_X509_CRL_new__bn); \
})

#define X509_CRL_free(a) ({ \
  X509_CRL * _X509_CRL_free_a = (a); \
  ({ \
  register char * _X509_CRL_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), X509_CRL * __asm("a0"))) \
  (_X509_CRL_free__bn - 10824))(_X509_CRL_free__bn, _X509_CRL_free_a); \
});})

#define d2i_X509_CRL(a, in, len) ({ \
  X509_CRL ** _d2i_X509_CRL_a = (a); \
  unsigned char ** _d2i_X509_CRL_in = (in); \
  long _d2i_X509_CRL_len = (len); \
  ({ \
  register char * _d2i_X509_CRL__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509_CRL * (*)(char * __asm("a6"), X509_CRL ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_X509_CRL__bn - 10830))(_d2i_X509_CRL__bn, _d2i_X509_CRL_a, _d2i_X509_CRL_in, _d2i_X509_CRL_len); \
});})

#define i2d_X509_CRL(a, out) ({ \
  X509_CRL * _i2d_X509_CRL_a = (a); \
  unsigned char ** _i2d_X509_CRL_out = (out); \
  ({ \
  register char * _i2d_X509_CRL__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509_CRL * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_X509_CRL__bn - 10836))(_i2d_X509_CRL__bn, _i2d_X509_CRL_a, _i2d_X509_CRL_out); \
});})

#define X509_CRL_it() ({ \
  register char * _X509_CRL_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_X509_CRL_it__bn - 10842))(_X509_CRL_it__bn); \
})

#define X509_CRL_add0_revoked(crl, rev) ({ \
  X509_CRL * _X509_CRL_add0_revoked_crl = (crl); \
  X509_REVOKED * _X509_CRL_add0_revoked_rev = (rev); \
  ({ \
  register char * _X509_CRL_add0_revoked__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509_CRL * __asm("a0"), X509_REVOKED * __asm("a1"))) \
  (_X509_CRL_add0_revoked__bn - 10848))(_X509_CRL_add0_revoked__bn, _X509_CRL_add0_revoked_crl, _X509_CRL_add0_revoked_rev); \
});})

#define X509_PKEY_new() ({ \
  register char * _X509_PKEY_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509_PKEY * (*)(char * __asm("a6"))) \
  (_X509_PKEY_new__bn - 10854))(_X509_PKEY_new__bn); \
})

#define X509_PKEY_free(a) ({ \
  X509_PKEY * _X509_PKEY_free_a = (a); \
  ({ \
  register char * _X509_PKEY_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), X509_PKEY * __asm("a0"))) \
  (_X509_PKEY_free__bn - 10860))(_X509_PKEY_free__bn, _X509_PKEY_free_a); \
});})

#define i2d_X509_PKEY(a, pp) ({ \
  X509_PKEY * _i2d_X509_PKEY_a = (a); \
  unsigned char ** _i2d_X509_PKEY_pp = (pp); \
  ({ \
  register char * _i2d_X509_PKEY__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509_PKEY * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_X509_PKEY__bn - 10866))(_i2d_X509_PKEY__bn, _i2d_X509_PKEY_a, _i2d_X509_PKEY_pp); \
});})

#define d2i_X509_PKEY(a, pp, length) ({ \
  X509_PKEY ** _d2i_X509_PKEY_a = (a); \
  unsigned char ** _d2i_X509_PKEY_pp = (pp); \
  long _d2i_X509_PKEY_length = (length); \
  ({ \
  register char * _d2i_X509_PKEY__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509_PKEY * (*)(char * __asm("a6"), X509_PKEY ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_X509_PKEY__bn - 10872))(_d2i_X509_PKEY__bn, _d2i_X509_PKEY_a, _d2i_X509_PKEY_pp, _d2i_X509_PKEY_length); \
});})

#define NETSCAPE_SPKI_new() ({ \
  register char * _NETSCAPE_SPKI_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((NETSCAPE_SPKI * (*)(char * __asm("a6"))) \
  (_NETSCAPE_SPKI_new__bn - 10878))(_NETSCAPE_SPKI_new__bn); \
})

#define NETSCAPE_SPKI_free(a) ({ \
  NETSCAPE_SPKI * _NETSCAPE_SPKI_free_a = (a); \
  ({ \
  register char * _NETSCAPE_SPKI_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), NETSCAPE_SPKI * __asm("a0"))) \
  (_NETSCAPE_SPKI_free__bn - 10884))(_NETSCAPE_SPKI_free__bn, _NETSCAPE_SPKI_free_a); \
});})

#define d2i_NETSCAPE_SPKI(a, in, len) ({ \
  NETSCAPE_SPKI ** _d2i_NETSCAPE_SPKI_a = (a); \
  unsigned char ** _d2i_NETSCAPE_SPKI_in = (in); \
  long _d2i_NETSCAPE_SPKI_len = (len); \
  ({ \
  register char * _d2i_NETSCAPE_SPKI__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((NETSCAPE_SPKI * (*)(char * __asm("a6"), NETSCAPE_SPKI ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_NETSCAPE_SPKI__bn - 10890))(_d2i_NETSCAPE_SPKI__bn, _d2i_NETSCAPE_SPKI_a, _d2i_NETSCAPE_SPKI_in, _d2i_NETSCAPE_SPKI_len); \
});})

#define i2d_NETSCAPE_SPKI(a, out) ({ \
  NETSCAPE_SPKI * _i2d_NETSCAPE_SPKI_a = (a); \
  unsigned char ** _i2d_NETSCAPE_SPKI_out = (out); \
  ({ \
  register char * _i2d_NETSCAPE_SPKI__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), NETSCAPE_SPKI * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_NETSCAPE_SPKI__bn - 10896))(_i2d_NETSCAPE_SPKI__bn, _i2d_NETSCAPE_SPKI_a, _i2d_NETSCAPE_SPKI_out); \
});})

#define NETSCAPE_SPKI_it() ({ \
  register char * _NETSCAPE_SPKI_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_NETSCAPE_SPKI_it__bn - 10902))(_NETSCAPE_SPKI_it__bn); \
})

#define NETSCAPE_SPKAC_new() ({ \
  register char * _NETSCAPE_SPKAC_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((NETSCAPE_SPKAC * (*)(char * __asm("a6"))) \
  (_NETSCAPE_SPKAC_new__bn - 10908))(_NETSCAPE_SPKAC_new__bn); \
})

#define NETSCAPE_SPKAC_free(a) ({ \
  NETSCAPE_SPKAC * _NETSCAPE_SPKAC_free_a = (a); \
  ({ \
  register char * _NETSCAPE_SPKAC_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), NETSCAPE_SPKAC * __asm("a0"))) \
  (_NETSCAPE_SPKAC_free__bn - 10914))(_NETSCAPE_SPKAC_free__bn, _NETSCAPE_SPKAC_free_a); \
});})

#define d2i_NETSCAPE_SPKAC(a, in, len) ({ \
  NETSCAPE_SPKAC ** _d2i_NETSCAPE_SPKAC_a = (a); \
  unsigned char ** _d2i_NETSCAPE_SPKAC_in = (in); \
  long _d2i_NETSCAPE_SPKAC_len = (len); \
  ({ \
  register char * _d2i_NETSCAPE_SPKAC__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((NETSCAPE_SPKAC * (*)(char * __asm("a6"), NETSCAPE_SPKAC ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_NETSCAPE_SPKAC__bn - 10920))(_d2i_NETSCAPE_SPKAC__bn, _d2i_NETSCAPE_SPKAC_a, _d2i_NETSCAPE_SPKAC_in, _d2i_NETSCAPE_SPKAC_len); \
});})

#define i2d_NETSCAPE_SPKAC(a, out) ({ \
  NETSCAPE_SPKAC * _i2d_NETSCAPE_SPKAC_a = (a); \
  unsigned char ** _i2d_NETSCAPE_SPKAC_out = (out); \
  ({ \
  register char * _i2d_NETSCAPE_SPKAC__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), NETSCAPE_SPKAC * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_NETSCAPE_SPKAC__bn - 10926))(_i2d_NETSCAPE_SPKAC__bn, _i2d_NETSCAPE_SPKAC_a, _i2d_NETSCAPE_SPKAC_out); \
});})

#define NETSCAPE_SPKAC_it() ({ \
  register char * _NETSCAPE_SPKAC_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_NETSCAPE_SPKAC_it__bn - 10932))(_NETSCAPE_SPKAC_it__bn); \
})

#define NETSCAPE_CERT_SEQUENCE_new() ({ \
  register char * _NETSCAPE_CERT_SEQUENCE_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((NETSCAPE_CERT_SEQUENCE * (*)(char * __asm("a6"))) \
  (_NETSCAPE_CERT_SEQUENCE_new__bn - 10938))(_NETSCAPE_CERT_SEQUENCE_new__bn); \
})

#define NETSCAPE_CERT_SEQUENCE_free(a) ({ \
  NETSCAPE_CERT_SEQUENCE * _NETSCAPE_CERT_SEQUENCE_free_a = (a); \
  ({ \
  register char * _NETSCAPE_CERT_SEQUENCE_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), NETSCAPE_CERT_SEQUENCE * __asm("a0"))) \
  (_NETSCAPE_CERT_SEQUENCE_free__bn - 10944))(_NETSCAPE_CERT_SEQUENCE_free__bn, _NETSCAPE_CERT_SEQUENCE_free_a); \
});})

#define d2i_NETSCAPE_CERT_SEQUENCE(a, in, len) ({ \
  NETSCAPE_CERT_SEQUENCE ** _d2i_NETSCAPE_CERT_SEQUENCE_a = (a); \
  unsigned char ** _d2i_NETSCAPE_CERT_SEQUENCE_in = (in); \
  long _d2i_NETSCAPE_CERT_SEQUENCE_len = (len); \
  ({ \
  register char * _d2i_NETSCAPE_CERT_SEQUENCE__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((NETSCAPE_CERT_SEQUENCE * (*)(char * __asm("a6"), NETSCAPE_CERT_SEQUENCE ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_NETSCAPE_CERT_SEQUENCE__bn - 10950))(_d2i_NETSCAPE_CERT_SEQUENCE__bn, _d2i_NETSCAPE_CERT_SEQUENCE_a, _d2i_NETSCAPE_CERT_SEQUENCE_in, _d2i_NETSCAPE_CERT_SEQUENCE_len); \
});})

#define i2d_NETSCAPE_CERT_SEQUENCE(a, out) ({ \
  NETSCAPE_CERT_SEQUENCE * _i2d_NETSCAPE_CERT_SEQUENCE_a = (a); \
  unsigned char ** _i2d_NETSCAPE_CERT_SEQUENCE_out = (out); \
  ({ \
  register char * _i2d_NETSCAPE_CERT_SEQUENCE__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), NETSCAPE_CERT_SEQUENCE * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_NETSCAPE_CERT_SEQUENCE__bn - 10956))(_i2d_NETSCAPE_CERT_SEQUENCE__bn, _i2d_NETSCAPE_CERT_SEQUENCE_a, _i2d_NETSCAPE_CERT_SEQUENCE_out); \
});})

#define NETSCAPE_CERT_SEQUENCE_it() ({ \
  register char * _NETSCAPE_CERT_SEQUENCE_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_NETSCAPE_CERT_SEQUENCE_it__bn - 10962))(_NETSCAPE_CERT_SEQUENCE_it__bn); \
})

#define X509_INFO_new() ({ \
  register char * _X509_INFO_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509_INFO * (*)(char * __asm("a6"))) \
  (_X509_INFO_new__bn - 10968))(_X509_INFO_new__bn); \
})

#define X509_INFO_free(a) ({ \
  X509_INFO * _X509_INFO_free_a = (a); \
  ({ \
  register char * _X509_INFO_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), X509_INFO * __asm("a0"))) \
  (_X509_INFO_free__bn - 10974))(_X509_INFO_free__bn, _X509_INFO_free_a); \
});})

#define X509_NAME_oneline(a, buf, size) ({ \
  X509_NAME * _X509_NAME_oneline_a = (a); \
  char * _X509_NAME_oneline_buf = (buf); \
  LONG _X509_NAME_oneline_size = (size); \
  ({ \
  register char * _X509_NAME_oneline__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((char * (*)(char * __asm("a6"), X509_NAME * __asm("a0"), char * __asm("a1"), LONG __asm("d0"))) \
  (_X509_NAME_oneline__bn - 10980))(_X509_NAME_oneline__bn, _X509_NAME_oneline_a, _X509_NAME_oneline_buf, _X509_NAME_oneline_size); \
});})

#define ASN1_verify(i2d, algor1, signature, data, pkey) ({ \
  int (*_ASN1_verify_i2d)() = (i2d); \
  X509_ALGOR * _ASN1_verify_algor1 = (algor1); \
  ASN1_BIT_STRING * _ASN1_verify_signature = (signature); \
  char * _ASN1_verify_data = (data); \
  EVP_PKEY * _ASN1_verify_pkey = (pkey); \
  ({ \
  register char * _ASN1_verify__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), int (*)() __asm("a0"), X509_ALGOR * __asm("a1"), ASN1_BIT_STRING * __asm("a2"), char * __asm("a3"), EVP_PKEY * __asm("d0"))) \
  (_ASN1_verify__bn - 10986))(_ASN1_verify__bn, _ASN1_verify_i2d, _ASN1_verify_algor1, _ASN1_verify_signature, _ASN1_verify_data, _ASN1_verify_pkey); \
});})

#define ASN1_digest(i2d, type, data, md, len) ({ \
  int (*_ASN1_digest_i2d)() = (i2d); \
  const EVP_MD * _ASN1_digest_type = (type); \
  char * _ASN1_digest_data = (data); \
  unsigned char * _ASN1_digest_md = (md); \
  unsigned int * _ASN1_digest_len = (len); \
  ({ \
  register char * _ASN1_digest__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), int (*)() __asm("a0"), const EVP_MD * __asm("a1"), char * __asm("a2"), unsigned char * __asm("a3"), unsigned int * __asm("d0"))) \
  (_ASN1_digest__bn - 10992))(_ASN1_digest__bn, _ASN1_digest_i2d, _ASN1_digest_type, _ASN1_digest_data, _ASN1_digest_md, _ASN1_digest_len); \
});})

#define ASN1_sign(i2d, algor1, algor2, signature, data, pkey, type) ({ \
  int (*_ASN1_sign_i2d)() = (i2d); \
  X509_ALGOR * _ASN1_sign_algor1 = (algor1); \
  X509_ALGOR * _ASN1_sign_algor2 = (algor2); \
  ASN1_BIT_STRING * _ASN1_sign_signature = (signature); \
  char * _ASN1_sign_data = (data); \
  EVP_PKEY * _ASN1_sign_pkey = (pkey); \
  const EVP_MD * _ASN1_sign_type = (type); \
  ({ \
  register char * _ASN1_sign__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), int (*)() __asm("a0"), X509_ALGOR * __asm("a1"), X509_ALGOR * __asm("a2"), ASN1_BIT_STRING * __asm("a3"), char * __asm("d0"), EVP_PKEY * __asm("d1"), const EVP_MD * __asm("d2"))) \
  (_ASN1_sign__bn - 10998))(_ASN1_sign__bn, _ASN1_sign_i2d, _ASN1_sign_algor1, _ASN1_sign_algor2, _ASN1_sign_signature, _ASN1_sign_data, _ASN1_sign_pkey, _ASN1_sign_type); \
});})

#define ASN1_item_digest(it, type, data, md, len) ({ \
  const ASN1_ITEM * _ASN1_item_digest_it = (it); \
  const EVP_MD * _ASN1_item_digest_type = (type); \
  void * _ASN1_item_digest_data = (data); \
  unsigned char * _ASN1_item_digest_md = (md); \
  unsigned int * _ASN1_item_digest_len = (len); \
  ({ \
  register char * _ASN1_item_digest__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const ASN1_ITEM * __asm("a0"), const EVP_MD * __asm("a1"), void * __asm("a2"), unsigned char * __asm("a3"), unsigned int * __asm("d0"))) \
  (_ASN1_item_digest__bn - 11004))(_ASN1_item_digest__bn, _ASN1_item_digest_it, _ASN1_item_digest_type, _ASN1_item_digest_data, _ASN1_item_digest_md, _ASN1_item_digest_len); \
});})

#define ASN1_item_verify(it, algor1, signature, data, pkey) ({ \
  const ASN1_ITEM * _ASN1_item_verify_it = (it); \
  X509_ALGOR * _ASN1_item_verify_algor1 = (algor1); \
  ASN1_BIT_STRING * _ASN1_item_verify_signature = (signature); \
  void * _ASN1_item_verify_data = (data); \
  EVP_PKEY * _ASN1_item_verify_pkey = (pkey); \
  ({ \
  register char * _ASN1_item_verify__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const ASN1_ITEM * __asm("a0"), X509_ALGOR * __asm("a1"), ASN1_BIT_STRING * __asm("a2"), void * __asm("a3"), EVP_PKEY * __asm("d0"))) \
  (_ASN1_item_verify__bn - 11010))(_ASN1_item_verify__bn, _ASN1_item_verify_it, _ASN1_item_verify_algor1, _ASN1_item_verify_signature, _ASN1_item_verify_data, _ASN1_item_verify_pkey); \
});})

#define ASN1_item_sign(it, algor1, algor2, signature, data, pkey, type) ({ \
  const ASN1_ITEM * _ASN1_item_sign_it = (it); \
  X509_ALGOR * _ASN1_item_sign_algor1 = (algor1); \
  X509_ALGOR * _ASN1_item_sign_algor2 = (algor2); \
  ASN1_BIT_STRING * _ASN1_item_sign_signature = (signature); \
  void * _ASN1_item_sign_data = (data); \
  EVP_PKEY * _ASN1_item_sign_pkey = (pkey); \
  const EVP_MD * _ASN1_item_sign_type = (type); \
  ({ \
  register char * _ASN1_item_sign__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const ASN1_ITEM * __asm("a0"), X509_ALGOR * __asm("a1"), X509_ALGOR * __asm("a2"), ASN1_BIT_STRING * __asm("a3"), void * __asm("d0"), EVP_PKEY * __asm("d1"), const EVP_MD * __asm("d2"))) \
  (_ASN1_item_sign__bn - 11016))(_ASN1_item_sign__bn, _ASN1_item_sign_it, _ASN1_item_sign_algor1, _ASN1_item_sign_algor2, _ASN1_item_sign_signature, _ASN1_item_sign_data, _ASN1_item_sign_pkey, _ASN1_item_sign_type); \
});})

#define X509_set_version(x, version) ({ \
  X509 * _X509_set_version_x = (x); \
  long _X509_set_version_version = (version); \
  ({ \
  register char * _X509_set_version__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509 * __asm("a0"), long __asm("d0"))) \
  (_X509_set_version__bn - 11022))(_X509_set_version__bn, _X509_set_version_x, _X509_set_version_version); \
});})

#define X509_set_serialNumber(x, serial) ({ \
  X509 * _X509_set_serialNumber_x = (x); \
  ASN1_INTEGER * _X509_set_serialNumber_serial = (serial); \
  ({ \
  register char * _X509_set_serialNumber__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509 * __asm("a0"), ASN1_INTEGER * __asm("a1"))) \
  (_X509_set_serialNumber__bn - 11028))(_X509_set_serialNumber__bn, _X509_set_serialNumber_x, _X509_set_serialNumber_serial); \
});})

#define X509_get_serialNumber(x) ({ \
  X509 * _X509_get_serialNumber_x = (x); \
  ({ \
  register char * _X509_get_serialNumber__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((ASN1_INTEGER * (*)(char * __asm("a6"), X509 * __asm("a0"))) \
  (_X509_get_serialNumber__bn - 11034))(_X509_get_serialNumber__bn, _X509_get_serialNumber_x); \
});})

#define X509_set_issuer_name(x, name) ({ \
  X509 * _X509_set_issuer_name_x = (x); \
  X509_NAME * _X509_set_issuer_name_name = (name); \
  ({ \
  register char * _X509_set_issuer_name__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509 * __asm("a0"), X509_NAME * __asm("a1"))) \
  (_X509_set_issuer_name__bn - 11040))(_X509_set_issuer_name__bn, _X509_set_issuer_name_x, _X509_set_issuer_name_name); \
});})

#define X509_get_issuer_name(a) ({ \
  X509 * _X509_get_issuer_name_a = (a); \
  ({ \
  register char * _X509_get_issuer_name__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509_NAME * (*)(char * __asm("a6"), X509 * __asm("a0"))) \
  (_X509_get_issuer_name__bn - 11046))(_X509_get_issuer_name__bn, _X509_get_issuer_name_a); \
});})

#define X509_set_subject_name(x, name) ({ \
  X509 * _X509_set_subject_name_x = (x); \
  X509_NAME * _X509_set_subject_name_name = (name); \
  ({ \
  register char * _X509_set_subject_name__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509 * __asm("a0"), X509_NAME * __asm("a1"))) \
  (_X509_set_subject_name__bn - 11052))(_X509_set_subject_name__bn, _X509_set_subject_name_x, _X509_set_subject_name_name); \
});})

#define X509_get_subject_name(a) ({ \
  X509 * _X509_get_subject_name_a = (a); \
  ({ \
  register char * _X509_get_subject_name__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509_NAME * (*)(char * __asm("a6"), X509 * __asm("a0"))) \
  (_X509_get_subject_name__bn - 11058))(_X509_get_subject_name__bn, _X509_get_subject_name_a); \
});})

#define X509_set_notBefore(x, tm) ({ \
  X509 * _X509_set_notBefore_x = (x); \
  ASN1_TIME * _X509_set_notBefore_tm = (tm); \
  ({ \
  register char * _X509_set_notBefore__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509 * __asm("a0"), ASN1_TIME * __asm("a1"))) \
  (_X509_set_notBefore__bn - 11064))(_X509_set_notBefore__bn, _X509_set_notBefore_x, _X509_set_notBefore_tm); \
});})

#define X509_set_notAfter(x, tm) ({ \
  X509 * _X509_set_notAfter_x = (x); \
  ASN1_TIME * _X509_set_notAfter_tm = (tm); \
  ({ \
  register char * _X509_set_notAfter__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509 * __asm("a0"), ASN1_TIME * __asm("a1"))) \
  (_X509_set_notAfter__bn - 11070))(_X509_set_notAfter__bn, _X509_set_notAfter_x, _X509_set_notAfter_tm); \
});})

#define X509_set_pubkey(x, pkey) ({ \
  X509 * _X509_set_pubkey_x = (x); \
  EVP_PKEY * _X509_set_pubkey_pkey = (pkey); \
  ({ \
  register char * _X509_set_pubkey__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509 * __asm("a0"), EVP_PKEY * __asm("a1"))) \
  (_X509_set_pubkey__bn - 11076))(_X509_set_pubkey__bn, _X509_set_pubkey_x, _X509_set_pubkey_pkey); \
});})

#define X509_get_pubkey(x) ({ \
  X509 * _X509_get_pubkey_x = (x); \
  ({ \
  register char * _X509_get_pubkey__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((EVP_PKEY * (*)(char * __asm("a6"), X509 * __asm("a0"))) \
  (_X509_get_pubkey__bn - 11082))(_X509_get_pubkey__bn, _X509_get_pubkey_x); \
});})

#define X509_get0_pubkey_bitstr(x) ({ \
  const X509 * _X509_get0_pubkey_bitstr_x = (x); \
  ({ \
  register char * _X509_get0_pubkey_bitstr__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((ASN1_BIT_STRING * (*)(char * __asm("a6"), const X509 * __asm("a0"))) \
  (_X509_get0_pubkey_bitstr__bn - 11088))(_X509_get0_pubkey_bitstr__bn, _X509_get0_pubkey_bitstr_x); \
});})

#define X509_certificate_type(x, pubkey) ({ \
  X509 * _X509_certificate_type_x = (x); \
  EVP_PKEY * _X509_certificate_type_pubkey = (pubkey); \
  ({ \
  register char * _X509_certificate_type__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509 * __asm("a0"), EVP_PKEY * __asm("a1"))) \
  (_X509_certificate_type__bn - 11094))(_X509_certificate_type__bn, _X509_certificate_type_x, _X509_certificate_type_pubkey); \
});})

#define X509_REQ_set_version(x, version) ({ \
  X509_REQ * _X509_REQ_set_version_x = (x); \
  long _X509_REQ_set_version_version = (version); \
  ({ \
  register char * _X509_REQ_set_version__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509_REQ * __asm("a0"), long __asm("d0"))) \
  (_X509_REQ_set_version__bn - 11100))(_X509_REQ_set_version__bn, _X509_REQ_set_version_x, _X509_REQ_set_version_version); \
});})

#define X509_REQ_set_subject_name(req, name) ({ \
  X509_REQ * _X509_REQ_set_subject_name_req = (req); \
  X509_NAME * _X509_REQ_set_subject_name_name = (name); \
  ({ \
  register char * _X509_REQ_set_subject_name__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509_REQ * __asm("a0"), X509_NAME * __asm("a1"))) \
  (_X509_REQ_set_subject_name__bn - 11106))(_X509_REQ_set_subject_name__bn, _X509_REQ_set_subject_name_req, _X509_REQ_set_subject_name_name); \
});})

#define X509_REQ_set_pubkey(x, pkey) ({ \
  X509_REQ * _X509_REQ_set_pubkey_x = (x); \
  EVP_PKEY * _X509_REQ_set_pubkey_pkey = (pkey); \
  ({ \
  register char * _X509_REQ_set_pubkey__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509_REQ * __asm("a0"), EVP_PKEY * __asm("a1"))) \
  (_X509_REQ_set_pubkey__bn - 11112))(_X509_REQ_set_pubkey__bn, _X509_REQ_set_pubkey_x, _X509_REQ_set_pubkey_pkey); \
});})

#define X509_REQ_get_pubkey(req) ({ \
  X509_REQ * _X509_REQ_get_pubkey_req = (req); \
  ({ \
  register char * _X509_REQ_get_pubkey__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((EVP_PKEY * (*)(char * __asm("a6"), X509_REQ * __asm("a0"))) \
  (_X509_REQ_get_pubkey__bn - 11118))(_X509_REQ_get_pubkey__bn, _X509_REQ_get_pubkey_req); \
});})

#define X509_REQ_extension_nid(nid) ({ \
  LONG _X509_REQ_extension_nid_nid = (nid); \
  ({ \
  register char * _X509_REQ_extension_nid__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), LONG __asm("d0"))) \
  (_X509_REQ_extension_nid__bn - 11124))(_X509_REQ_extension_nid__bn, _X509_REQ_extension_nid_nid); \
});})

#define X509_REQ_get_extension_nids() ({ \
  register char * _X509_REQ_get_extension_nids__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int * (*)(char * __asm("a6"))) \
  (_X509_REQ_get_extension_nids__bn - 11130))(_X509_REQ_get_extension_nids__bn); \
})

#define X509_REQ_set_extension_nids(nids) ({ \
  int * _X509_REQ_set_extension_nids_nids = (nids); \
  ({ \
  register char * _X509_REQ_set_extension_nids__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), int * __asm("a0"))) \
  (_X509_REQ_set_extension_nids__bn - 11136))(_X509_REQ_set_extension_nids__bn, _X509_REQ_set_extension_nids_nids); \
});})

#define X509_REQ_get_extensions(req) ({ \
  X509_REQ * _X509_REQ_get_extensions_req = (req); \
  ({ \
  register char * _X509_REQ_get_extensions__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((STACK_OF(X509_EXTENSION) * (*)(char * __asm("a6"), X509_REQ * __asm("a0"))) \
  (_X509_REQ_get_extensions__bn - 11142))(_X509_REQ_get_extensions__bn, _X509_REQ_get_extensions_req); \
});})

#define X509_REQ_add_extensions_nid(req, exts, nid) ({ \
  X509_REQ * _X509_REQ_add_extensions_nid_req = (req); \
  STACK_OF(X509_EXTENSION) * _X509_REQ_add_extensions_nid_exts = (exts); \
  LONG _X509_REQ_add_extensions_nid_nid = (nid); \
  ({ \
  register char * _X509_REQ_add_extensions_nid__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509_REQ * __asm("a0"), STACK_OF(X509_EXTENSION) * __asm("a1"), LONG __asm("d0"))) \
  (_X509_REQ_add_extensions_nid__bn - 11148))(_X509_REQ_add_extensions_nid__bn, _X509_REQ_add_extensions_nid_req, _X509_REQ_add_extensions_nid_exts, _X509_REQ_add_extensions_nid_nid); \
});})

#define X509_REQ_add_extensions(req, exts) ({ \
  X509_REQ * _X509_REQ_add_extensions_req = (req); \
  STACK_OF(X509_EXTENSION) * _X509_REQ_add_extensions_exts = (exts); \
  ({ \
  register char * _X509_REQ_add_extensions__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509_REQ * __asm("a0"), STACK_OF(X509_EXTENSION) * __asm("a1"))) \
  (_X509_REQ_add_extensions__bn - 11154))(_X509_REQ_add_extensions__bn, _X509_REQ_add_extensions_req, _X509_REQ_add_extensions_exts); \
});})

#define X509_REQ_get_attr_count(req) ({ \
  const X509_REQ * _X509_REQ_get_attr_count_req = (req); \
  ({ \
  register char * _X509_REQ_get_attr_count__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const X509_REQ * __asm("a0"))) \
  (_X509_REQ_get_attr_count__bn - 11160))(_X509_REQ_get_attr_count__bn, _X509_REQ_get_attr_count_req); \
});})

#define X509_REQ_get_attr_by_NID(req, nid, lastpos) ({ \
  const X509_REQ * _X509_REQ_get_attr_by_NID_req = (req); \
  LONG _X509_REQ_get_attr_by_NID_nid = (nid); \
  LONG _X509_REQ_get_attr_by_NID_lastpos = (lastpos); \
  ({ \
  register char * _X509_REQ_get_attr_by_NID__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const X509_REQ * __asm("a0"), LONG __asm("d0"), LONG __asm("d1"))) \
  (_X509_REQ_get_attr_by_NID__bn - 11166))(_X509_REQ_get_attr_by_NID__bn, _X509_REQ_get_attr_by_NID_req, _X509_REQ_get_attr_by_NID_nid, _X509_REQ_get_attr_by_NID_lastpos); \
});})

#define X509_REQ_get_attr_by_OBJ(req, obj, lastpos) ({ \
  const X509_REQ * _X509_REQ_get_attr_by_OBJ_req = (req); \
  ASN1_OBJECT * _X509_REQ_get_attr_by_OBJ_obj = (obj); \
  LONG _X509_REQ_get_attr_by_OBJ_lastpos = (lastpos); \
  ({ \
  register char * _X509_REQ_get_attr_by_OBJ__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const X509_REQ * __asm("a0"), ASN1_OBJECT * __asm("a1"), LONG __asm("d0"))) \
  (_X509_REQ_get_attr_by_OBJ__bn - 11172))(_X509_REQ_get_attr_by_OBJ__bn, _X509_REQ_get_attr_by_OBJ_req, _X509_REQ_get_attr_by_OBJ_obj, _X509_REQ_get_attr_by_OBJ_lastpos); \
});})

#define X509_REQ_get_attr(req, loc) ({ \
  const X509_REQ * _X509_REQ_get_attr_req = (req); \
  LONG _X509_REQ_get_attr_loc = (loc); \
  ({ \
  register char * _X509_REQ_get_attr__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509_ATTRIBUTE * (*)(char * __asm("a6"), const X509_REQ * __asm("a0"), LONG __asm("d0"))) \
  (_X509_REQ_get_attr__bn - 11178))(_X509_REQ_get_attr__bn, _X509_REQ_get_attr_req, _X509_REQ_get_attr_loc); \
});})

#define X509_REQ_delete_attr(req, loc) ({ \
  X509_REQ * _X509_REQ_delete_attr_req = (req); \
  LONG _X509_REQ_delete_attr_loc = (loc); \
  ({ \
  register char * _X509_REQ_delete_attr__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509_ATTRIBUTE * (*)(char * __asm("a6"), X509_REQ * __asm("a0"), LONG __asm("d0"))) \
  (_X509_REQ_delete_attr__bn - 11184))(_X509_REQ_delete_attr__bn, _X509_REQ_delete_attr_req, _X509_REQ_delete_attr_loc); \
});})

#define X509_REQ_add1_attr(req, attr) ({ \
  X509_REQ * _X509_REQ_add1_attr_req = (req); \
  X509_ATTRIBUTE * _X509_REQ_add1_attr_attr = (attr); \
  ({ \
  register char * _X509_REQ_add1_attr__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509_REQ * __asm("a0"), X509_ATTRIBUTE * __asm("a1"))) \
  (_X509_REQ_add1_attr__bn - 11190))(_X509_REQ_add1_attr__bn, _X509_REQ_add1_attr_req, _X509_REQ_add1_attr_attr); \
});})

#define X509_REQ_add1_attr_by_OBJ(req, obj, type, bytes, len) ({ \
  X509_REQ * _X509_REQ_add1_attr_by_OBJ_req = (req); \
  const ASN1_OBJECT * _X509_REQ_add1_attr_by_OBJ_obj = (obj); \
  LONG _X509_REQ_add1_attr_by_OBJ_type = (type); \
  const unsigned char * _X509_REQ_add1_attr_by_OBJ_bytes = (bytes); \
  LONG _X509_REQ_add1_attr_by_OBJ_len = (len); \
  ({ \
  register char * _X509_REQ_add1_attr_by_OBJ__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509_REQ * __asm("a0"), const ASN1_OBJECT * __asm("a1"), LONG __asm("d0"), const unsigned char * __asm("a2"), LONG __asm("d1"))) \
  (_X509_REQ_add1_attr_by_OBJ__bn - 11196))(_X509_REQ_add1_attr_by_OBJ__bn, _X509_REQ_add1_attr_by_OBJ_req, _X509_REQ_add1_attr_by_OBJ_obj, _X509_REQ_add1_attr_by_OBJ_type, _X509_REQ_add1_attr_by_OBJ_bytes, _X509_REQ_add1_attr_by_OBJ_len); \
});})

#define X509_REQ_add1_attr_by_NID(req, nid, type, bytes, len) ({ \
  X509_REQ * _X509_REQ_add1_attr_by_NID_req = (req); \
  LONG _X509_REQ_add1_attr_by_NID_nid = (nid); \
  LONG _X509_REQ_add1_attr_by_NID_type = (type); \
  const unsigned char * _X509_REQ_add1_attr_by_NID_bytes = (bytes); \
  LONG _X509_REQ_add1_attr_by_NID_len = (len); \
  ({ \
  register char * _X509_REQ_add1_attr_by_NID__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509_REQ * __asm("a0"), LONG __asm("d0"), LONG __asm("d1"), const unsigned char * __asm("a1"), LONG __asm("d2"))) \
  (_X509_REQ_add1_attr_by_NID__bn - 11202))(_X509_REQ_add1_attr_by_NID__bn, _X509_REQ_add1_attr_by_NID_req, _X509_REQ_add1_attr_by_NID_nid, _X509_REQ_add1_attr_by_NID_type, _X509_REQ_add1_attr_by_NID_bytes, _X509_REQ_add1_attr_by_NID_len); \
});})

#define X509_REQ_add1_attr_by_txt(req, attrname, type, bytes, len) ({ \
  X509_REQ * _X509_REQ_add1_attr_by_txt_req = (req); \
  const char * _X509_REQ_add1_attr_by_txt_attrname = (attrname); \
  LONG _X509_REQ_add1_attr_by_txt_type = (type); \
  const unsigned char * _X509_REQ_add1_attr_by_txt_bytes = (bytes); \
  LONG _X509_REQ_add1_attr_by_txt_len = (len); \
  ({ \
  register char * _X509_REQ_add1_attr_by_txt__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509_REQ * __asm("a0"), const char * __asm("a1"), LONG __asm("d0"), const unsigned char * __asm("a2"), LONG __asm("d1"))) \
  (_X509_REQ_add1_attr_by_txt__bn - 11208))(_X509_REQ_add1_attr_by_txt__bn, _X509_REQ_add1_attr_by_txt_req, _X509_REQ_add1_attr_by_txt_attrname, _X509_REQ_add1_attr_by_txt_type, _X509_REQ_add1_attr_by_txt_bytes, _X509_REQ_add1_attr_by_txt_len); \
});})

#define X509_CRL_set_version(x, version) ({ \
  X509_CRL * _X509_CRL_set_version_x = (x); \
  long _X509_CRL_set_version_version = (version); \
  ({ \
  register char * _X509_CRL_set_version__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509_CRL * __asm("a0"), long __asm("d0"))) \
  (_X509_CRL_set_version__bn - 11214))(_X509_CRL_set_version__bn, _X509_CRL_set_version_x, _X509_CRL_set_version_version); \
});})

#define X509_CRL_set_issuer_name(x, name) ({ \
  X509_CRL * _X509_CRL_set_issuer_name_x = (x); \
  X509_NAME * _X509_CRL_set_issuer_name_name = (name); \
  ({ \
  register char * _X509_CRL_set_issuer_name__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509_CRL * __asm("a0"), X509_NAME * __asm("a1"))) \
  (_X509_CRL_set_issuer_name__bn - 11220))(_X509_CRL_set_issuer_name__bn, _X509_CRL_set_issuer_name_x, _X509_CRL_set_issuer_name_name); \
});})

#define X509_CRL_set_lastUpdate(x, tm) ({ \
  X509_CRL * _X509_CRL_set_lastUpdate_x = (x); \
  ASN1_TIME * _X509_CRL_set_lastUpdate_tm = (tm); \
  ({ \
  register char * _X509_CRL_set_lastUpdate__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509_CRL * __asm("a0"), ASN1_TIME * __asm("a1"))) \
  (_X509_CRL_set_lastUpdate__bn - 11226))(_X509_CRL_set_lastUpdate__bn, _X509_CRL_set_lastUpdate_x, _X509_CRL_set_lastUpdate_tm); \
});})

#define X509_CRL_set_nextUpdate(x, tm) ({ \
  X509_CRL * _X509_CRL_set_nextUpdate_x = (x); \
  ASN1_TIME * _X509_CRL_set_nextUpdate_tm = (tm); \
  ({ \
  register char * _X509_CRL_set_nextUpdate__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509_CRL * __asm("a0"), ASN1_TIME * __asm("a1"))) \
  (_X509_CRL_set_nextUpdate__bn - 11232))(_X509_CRL_set_nextUpdate__bn, _X509_CRL_set_nextUpdate_x, _X509_CRL_set_nextUpdate_tm); \
});})

#define X509_CRL_sort(crl) ({ \
  X509_CRL * _X509_CRL_sort_crl = (crl); \
  ({ \
  register char * _X509_CRL_sort__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509_CRL * __asm("a0"))) \
  (_X509_CRL_sort__bn - 11238))(_X509_CRL_sort__bn, _X509_CRL_sort_crl); \
});})

#define X509_REVOKED_set_serialNumber(x, serial) ({ \
  X509_REVOKED * _X509_REVOKED_set_serialNumber_x = (x); \
  ASN1_INTEGER * _X509_REVOKED_set_serialNumber_serial = (serial); \
  ({ \
  register char * _X509_REVOKED_set_serialNumber__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509_REVOKED * __asm("a0"), ASN1_INTEGER * __asm("a1"))) \
  (_X509_REVOKED_set_serialNumber__bn - 11244))(_X509_REVOKED_set_serialNumber__bn, _X509_REVOKED_set_serialNumber_x, _X509_REVOKED_set_serialNumber_serial); \
});})

#define X509_REVOKED_set_revocationDate(r, tm) ({ \
  X509_REVOKED * _X509_REVOKED_set_revocationDate_r = (r); \
  ASN1_TIME * _X509_REVOKED_set_revocationDate_tm = (tm); \
  ({ \
  register char * _X509_REVOKED_set_revocationDate__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509_REVOKED * __asm("a0"), ASN1_TIME * __asm("a1"))) \
  (_X509_REVOKED_set_revocationDate__bn - 11250))(_X509_REVOKED_set_revocationDate__bn, _X509_REVOKED_set_revocationDate_r, _X509_REVOKED_set_revocationDate_tm); \
});})

#define X509_check_private_key(x509, pkey) ({ \
  X509 * _X509_check_private_key_x509 = (x509); \
  EVP_PKEY * _X509_check_private_key_pkey = (pkey); \
  ({ \
  register char * _X509_check_private_key__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509 * __asm("a0"), EVP_PKEY * __asm("a1"))) \
  (_X509_check_private_key__bn - 11256))(_X509_check_private_key__bn, _X509_check_private_key_x509, _X509_check_private_key_pkey); \
});})

#define X509_issuer_and_serial_cmp(a, b) ({ \
  const X509 * _X509_issuer_and_serial_cmp_a = (a); \
  const X509 * _X509_issuer_and_serial_cmp_b = (b); \
  ({ \
  register char * _X509_issuer_and_serial_cmp__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const X509 * __asm("a0"), const X509 * __asm("a1"))) \
  (_X509_issuer_and_serial_cmp__bn - 11262))(_X509_issuer_and_serial_cmp__bn, _X509_issuer_and_serial_cmp_a, _X509_issuer_and_serial_cmp_b); \
});})

#define X509_issuer_and_serial_hash(a) ({ \
  X509 * _X509_issuer_and_serial_hash_a = (a); \
  ({ \
  register char * _X509_issuer_and_serial_hash__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((unsigned long (*)(char * __asm("a6"), X509 * __asm("a0"))) \
  (_X509_issuer_and_serial_hash__bn - 11268))(_X509_issuer_and_serial_hash__bn, _X509_issuer_and_serial_hash_a); \
});})

#define X509_issuer_name_cmp(a, b) ({ \
  const X509 * _X509_issuer_name_cmp_a = (a); \
  const X509 * _X509_issuer_name_cmp_b = (b); \
  ({ \
  register char * _X509_issuer_name_cmp__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const X509 * __asm("a0"), const X509 * __asm("a1"))) \
  (_X509_issuer_name_cmp__bn - 11274))(_X509_issuer_name_cmp__bn, _X509_issuer_name_cmp_a, _X509_issuer_name_cmp_b); \
});})

#define X509_issuer_name_hash(a) ({ \
  X509 * _X509_issuer_name_hash_a = (a); \
  ({ \
  register char * _X509_issuer_name_hash__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((unsigned long (*)(char * __asm("a6"), X509 * __asm("a0"))) \
  (_X509_issuer_name_hash__bn - 11280))(_X509_issuer_name_hash__bn, _X509_issuer_name_hash_a); \
});})

#define X509_subject_name_cmp(a, b) ({ \
  const X509 * _X509_subject_name_cmp_a = (a); \
  const X509 * _X509_subject_name_cmp_b = (b); \
  ({ \
  register char * _X509_subject_name_cmp__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const X509 * __asm("a0"), const X509 * __asm("a1"))) \
  (_X509_subject_name_cmp__bn - 11286))(_X509_subject_name_cmp__bn, _X509_subject_name_cmp_a, _X509_subject_name_cmp_b); \
});})

#define X509_subject_name_hash(x) ({ \
  X509 * _X509_subject_name_hash_x = (x); \
  ({ \
  register char * _X509_subject_name_hash__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((unsigned long (*)(char * __asm("a6"), X509 * __asm("a0"))) \
  (_X509_subject_name_hash__bn - 11292))(_X509_subject_name_hash__bn, _X509_subject_name_hash_x); \
});})

#define X509_cmp(a, b) ({ \
  const X509 * _X509_cmp_a = (a); \
  const X509 * _X509_cmp_b = (b); \
  ({ \
  register char * _X509_cmp__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const X509 * __asm("a0"), const X509 * __asm("a1"))) \
  (_X509_cmp__bn - 11298))(_X509_cmp__bn, _X509_cmp_a, _X509_cmp_b); \
});})

#define X509_NAME_cmp(a, b) ({ \
  const X509_NAME * _X509_NAME_cmp_a = (a); \
  const X509_NAME * _X509_NAME_cmp_b = (b); \
  ({ \
  register char * _X509_NAME_cmp__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const X509_NAME * __asm("a0"), const X509_NAME * __asm("a1"))) \
  (_X509_NAME_cmp__bn - 11304))(_X509_NAME_cmp__bn, _X509_NAME_cmp_a, _X509_NAME_cmp_b); \
});})

#define X509_NAME_hash(x) ({ \
  X509_NAME * _X509_NAME_hash_x = (x); \
  ({ \
  register char * _X509_NAME_hash__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((unsigned long (*)(char * __asm("a6"), X509_NAME * __asm("a0"))) \
  (_X509_NAME_hash__bn - 11310))(_X509_NAME_hash__bn, _X509_NAME_hash_x); \
});})

#define X509_CRL_cmp(a, b) ({ \
  const X509_CRL * _X509_CRL_cmp_a = (a); \
  const X509_CRL * _X509_CRL_cmp_b = (b); \
  ({ \
  register char * _X509_CRL_cmp__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const X509_CRL * __asm("a0"), const X509_CRL * __asm("a1"))) \
  (_X509_CRL_cmp__bn - 11316))(_X509_CRL_cmp__bn, _X509_CRL_cmp_a, _X509_CRL_cmp_b); \
});})

#define X509_NAME_print(bp, name, obase) ({ \
  BIO * _X509_NAME_print_bp = (bp); \
  X509_NAME * _X509_NAME_print_name = (name); \
  LONG _X509_NAME_print_obase = (obase); \
  ({ \
  register char * _X509_NAME_print__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIO * __asm("a0"), X509_NAME * __asm("a1"), LONG __asm("d0"))) \
  (_X509_NAME_print__bn - 11322))(_X509_NAME_print__bn, _X509_NAME_print_bp, _X509_NAME_print_name, _X509_NAME_print_obase); \
});})

#define X509_NAME_print_ex(out, nm, indent, flags) ({ \
  BIO * _X509_NAME_print_ex_out = (out); \
  X509_NAME * _X509_NAME_print_ex_nm = (nm); \
  LONG _X509_NAME_print_ex_indent = (indent); \
  unsigned long _X509_NAME_print_ex_flags = (flags); \
  ({ \
  register char * _X509_NAME_print_ex__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIO * __asm("a0"), X509_NAME * __asm("a1"), LONG __asm("d0"), unsigned long __asm("d1"))) \
  (_X509_NAME_print_ex__bn - 11328))(_X509_NAME_print_ex__bn, _X509_NAME_print_ex_out, _X509_NAME_print_ex_nm, _X509_NAME_print_ex_indent, _X509_NAME_print_ex_flags); \
});})

#define X509_print_ex(bp, x, nmflag, cflag) ({ \
  BIO * _X509_print_ex_bp = (bp); \
  X509 * _X509_print_ex_x = (x); \
  unsigned long _X509_print_ex_nmflag = (nmflag); \
  unsigned long _X509_print_ex_cflag = (cflag); \
  ({ \
  register char * _X509_print_ex__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIO * __asm("a0"), X509 * __asm("a1"), unsigned long __asm("d0"), unsigned long __asm("d1"))) \
  (_X509_print_ex__bn - 11334))(_X509_print_ex__bn, _X509_print_ex_bp, _X509_print_ex_x, _X509_print_ex_nmflag, _X509_print_ex_cflag); \
});})

#define X509_print(bp, x) ({ \
  BIO * _X509_print_bp = (bp); \
  X509 * _X509_print_x = (x); \
  ({ \
  register char * _X509_print__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIO * __asm("a0"), X509 * __asm("a1"))) \
  (_X509_print__bn - 11340))(_X509_print__bn, _X509_print_bp, _X509_print_x); \
});})

#define X509_ocspid_print(bp, x) ({ \
  BIO * _X509_ocspid_print_bp = (bp); \
  X509 * _X509_ocspid_print_x = (x); \
  ({ \
  register char * _X509_ocspid_print__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIO * __asm("a0"), X509 * __asm("a1"))) \
  (_X509_ocspid_print__bn - 11346))(_X509_ocspid_print__bn, _X509_ocspid_print_bp, _X509_ocspid_print_x); \
});})

#define X509_CERT_AUX_print(bp, x, indent) ({ \
  BIO * _X509_CERT_AUX_print_bp = (bp); \
  X509_CERT_AUX * _X509_CERT_AUX_print_x = (x); \
  LONG _X509_CERT_AUX_print_indent = (indent); \
  ({ \
  register char * _X509_CERT_AUX_print__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIO * __asm("a0"), X509_CERT_AUX * __asm("a1"), LONG __asm("d0"))) \
  (_X509_CERT_AUX_print__bn - 11352))(_X509_CERT_AUX_print__bn, _X509_CERT_AUX_print_bp, _X509_CERT_AUX_print_x, _X509_CERT_AUX_print_indent); \
});})

#define X509_CRL_print(bp, x) ({ \
  BIO * _X509_CRL_print_bp = (bp); \
  X509_CRL * _X509_CRL_print_x = (x); \
  ({ \
  register char * _X509_CRL_print__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIO * __asm("a0"), X509_CRL * __asm("a1"))) \
  (_X509_CRL_print__bn - 11358))(_X509_CRL_print__bn, _X509_CRL_print_bp, _X509_CRL_print_x); \
});})

#define X509_REQ_print_ex(bp, x, nmflag, cflag) ({ \
  BIO * _X509_REQ_print_ex_bp = (bp); \
  X509_REQ * _X509_REQ_print_ex_x = (x); \
  unsigned long _X509_REQ_print_ex_nmflag = (nmflag); \
  unsigned long _X509_REQ_print_ex_cflag = (cflag); \
  ({ \
  register char * _X509_REQ_print_ex__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIO * __asm("a0"), X509_REQ * __asm("a1"), unsigned long __asm("d0"), unsigned long __asm("d1"))) \
  (_X509_REQ_print_ex__bn - 11364))(_X509_REQ_print_ex__bn, _X509_REQ_print_ex_bp, _X509_REQ_print_ex_x, _X509_REQ_print_ex_nmflag, _X509_REQ_print_ex_cflag); \
});})

#define X509_REQ_print(bp, req) ({ \
  BIO * _X509_REQ_print_bp = (bp); \
  X509_REQ * _X509_REQ_print_req = (req); \
  ({ \
  register char * _X509_REQ_print__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIO * __asm("a0"), X509_REQ * __asm("a1"))) \
  (_X509_REQ_print__bn - 11370))(_X509_REQ_print__bn, _X509_REQ_print_bp, _X509_REQ_print_req); \
});})

#define X509_NAME_entry_count(name) ({ \
  X509_NAME * _X509_NAME_entry_count_name = (name); \
  ({ \
  register char * _X509_NAME_entry_count__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509_NAME * __asm("a0"))) \
  (_X509_NAME_entry_count__bn - 11376))(_X509_NAME_entry_count__bn, _X509_NAME_entry_count_name); \
});})

#define X509_NAME_get_text_by_NID(name, nid, buf, len) ({ \
  X509_NAME * _X509_NAME_get_text_by_NID_name = (name); \
  LONG _X509_NAME_get_text_by_NID_nid = (nid); \
  char * _X509_NAME_get_text_by_NID_buf = (buf); \
  LONG _X509_NAME_get_text_by_NID_len = (len); \
  ({ \
  register char * _X509_NAME_get_text_by_NID__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509_NAME * __asm("a0"), LONG __asm("d0"), char * __asm("a1"), LONG __asm("d1"))) \
  (_X509_NAME_get_text_by_NID__bn - 11382))(_X509_NAME_get_text_by_NID__bn, _X509_NAME_get_text_by_NID_name, _X509_NAME_get_text_by_NID_nid, _X509_NAME_get_text_by_NID_buf, _X509_NAME_get_text_by_NID_len); \
});})

#define X509_NAME_get_text_by_OBJ(name, obj, buf, len) ({ \
  X509_NAME * _X509_NAME_get_text_by_OBJ_name = (name); \
  ASN1_OBJECT * _X509_NAME_get_text_by_OBJ_obj = (obj); \
  char * _X509_NAME_get_text_by_OBJ_buf = (buf); \
  LONG _X509_NAME_get_text_by_OBJ_len = (len); \
  ({ \
  register char * _X509_NAME_get_text_by_OBJ__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509_NAME * __asm("a0"), ASN1_OBJECT * __asm("a1"), char * __asm("a2"), LONG __asm("d0"))) \
  (_X509_NAME_get_text_by_OBJ__bn - 11388))(_X509_NAME_get_text_by_OBJ__bn, _X509_NAME_get_text_by_OBJ_name, _X509_NAME_get_text_by_OBJ_obj, _X509_NAME_get_text_by_OBJ_buf, _X509_NAME_get_text_by_OBJ_len); \
});})

#define X509_NAME_get_index_by_NID(name, nid, lastpos) ({ \
  X509_NAME * _X509_NAME_get_index_by_NID_name = (name); \
  LONG _X509_NAME_get_index_by_NID_nid = (nid); \
  LONG _X509_NAME_get_index_by_NID_lastpos = (lastpos); \
  ({ \
  register char * _X509_NAME_get_index_by_NID__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509_NAME * __asm("a0"), LONG __asm("d0"), LONG __asm("d1"))) \
  (_X509_NAME_get_index_by_NID__bn - 11394))(_X509_NAME_get_index_by_NID__bn, _X509_NAME_get_index_by_NID_name, _X509_NAME_get_index_by_NID_nid, _X509_NAME_get_index_by_NID_lastpos); \
});})

#define X509_NAME_get_index_by_OBJ(name, obj, lastpos) ({ \
  X509_NAME * _X509_NAME_get_index_by_OBJ_name = (name); \
  ASN1_OBJECT * _X509_NAME_get_index_by_OBJ_obj = (obj); \
  LONG _X509_NAME_get_index_by_OBJ_lastpos = (lastpos); \
  ({ \
  register char * _X509_NAME_get_index_by_OBJ__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509_NAME * __asm("a0"), ASN1_OBJECT * __asm("a1"), LONG __asm("d0"))) \
  (_X509_NAME_get_index_by_OBJ__bn - 11400))(_X509_NAME_get_index_by_OBJ__bn, _X509_NAME_get_index_by_OBJ_name, _X509_NAME_get_index_by_OBJ_obj, _X509_NAME_get_index_by_OBJ_lastpos); \
});})

#define X509_NAME_get_entry(name, loc) ({ \
  X509_NAME * _X509_NAME_get_entry_name = (name); \
  LONG _X509_NAME_get_entry_loc = (loc); \
  ({ \
  register char * _X509_NAME_get_entry__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509_NAME_ENTRY * (*)(char * __asm("a6"), X509_NAME * __asm("a0"), LONG __asm("d0"))) \
  (_X509_NAME_get_entry__bn - 11406))(_X509_NAME_get_entry__bn, _X509_NAME_get_entry_name, _X509_NAME_get_entry_loc); \
});})

#define X509_NAME_delete_entry(name, loc) ({ \
  X509_NAME * _X509_NAME_delete_entry_name = (name); \
  LONG _X509_NAME_delete_entry_loc = (loc); \
  ({ \
  register char * _X509_NAME_delete_entry__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509_NAME_ENTRY * (*)(char * __asm("a6"), X509_NAME * __asm("a0"), LONG __asm("d0"))) \
  (_X509_NAME_delete_entry__bn - 11412))(_X509_NAME_delete_entry__bn, _X509_NAME_delete_entry_name, _X509_NAME_delete_entry_loc); \
});})

#define X509_NAME_add_entry(name, ne, loc, set) ({ \
  X509_NAME * _X509_NAME_add_entry_name = (name); \
  X509_NAME_ENTRY * _X509_NAME_add_entry_ne = (ne); \
  LONG _X509_NAME_add_entry_loc = (loc); \
  LONG _X509_NAME_add_entry_set = (set); \
  ({ \
  register char * _X509_NAME_add_entry__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509_NAME * __asm("a0"), X509_NAME_ENTRY * __asm("a1"), LONG __asm("d0"), LONG __asm("d1"))) \
  (_X509_NAME_add_entry__bn - 11418))(_X509_NAME_add_entry__bn, _X509_NAME_add_entry_name, _X509_NAME_add_entry_ne, _X509_NAME_add_entry_loc, _X509_NAME_add_entry_set); \
});})

#define X509_NAME_add_entry_by_OBJ(name, obj, type, bytes, len, loc, set) ({ \
  X509_NAME * _X509_NAME_add_entry_by_OBJ_name = (name); \
  ASN1_OBJECT * _X509_NAME_add_entry_by_OBJ_obj = (obj); \
  LONG _X509_NAME_add_entry_by_OBJ_type = (type); \
  unsigned char * _X509_NAME_add_entry_by_OBJ_bytes = (bytes); \
  LONG _X509_NAME_add_entry_by_OBJ_len = (len); \
  LONG _X509_NAME_add_entry_by_OBJ_loc = (loc); \
  LONG _X509_NAME_add_entry_by_OBJ_set = (set); \
  ({ \
  register char * _X509_NAME_add_entry_by_OBJ__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509_NAME * __asm("a0"), ASN1_OBJECT * __asm("a1"), LONG __asm("d0"), unsigned char * __asm("a2"), LONG __asm("d1"), LONG __asm("d2"), LONG __asm("d3"))) \
  (_X509_NAME_add_entry_by_OBJ__bn - 11424))(_X509_NAME_add_entry_by_OBJ__bn, _X509_NAME_add_entry_by_OBJ_name, _X509_NAME_add_entry_by_OBJ_obj, _X509_NAME_add_entry_by_OBJ_type, _X509_NAME_add_entry_by_OBJ_bytes, _X509_NAME_add_entry_by_OBJ_len, _X509_NAME_add_entry_by_OBJ_loc, _X509_NAME_add_entry_by_OBJ_set); \
});})

#define X509_NAME_add_entry_by_NID(name, nid, type, bytes, len, loc, set) ({ \
  X509_NAME * _X509_NAME_add_entry_by_NID_name = (name); \
  LONG _X509_NAME_add_entry_by_NID_nid = (nid); \
  LONG _X509_NAME_add_entry_by_NID_type = (type); \
  unsigned char * _X509_NAME_add_entry_by_NID_bytes = (bytes); \
  LONG _X509_NAME_add_entry_by_NID_len = (len); \
  LONG _X509_NAME_add_entry_by_NID_loc = (loc); \
  LONG _X509_NAME_add_entry_by_NID_set = (set); \
  ({ \
  register char * _X509_NAME_add_entry_by_NID__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509_NAME * __asm("a0"), LONG __asm("d0"), LONG __asm("d1"), unsigned char * __asm("a1"), LONG __asm("d2"), LONG __asm("d3"), LONG __asm("d4"))) \
  (_X509_NAME_add_entry_by_NID__bn - 11430))(_X509_NAME_add_entry_by_NID__bn, _X509_NAME_add_entry_by_NID_name, _X509_NAME_add_entry_by_NID_nid, _X509_NAME_add_entry_by_NID_type, _X509_NAME_add_entry_by_NID_bytes, _X509_NAME_add_entry_by_NID_len, _X509_NAME_add_entry_by_NID_loc, _X509_NAME_add_entry_by_NID_set); \
});})

#define X509_NAME_ENTRY_create_by_txt(ne, field, type, bytes, len) ({ \
  X509_NAME_ENTRY ** _X509_NAME_ENTRY_create_by_txt_ne = (ne); \
  const char * _X509_NAME_ENTRY_create_by_txt_field = (field); \
  LONG _X509_NAME_ENTRY_create_by_txt_type = (type); \
  const unsigned char * _X509_NAME_ENTRY_create_by_txt_bytes = (bytes); \
  LONG _X509_NAME_ENTRY_create_by_txt_len = (len); \
  ({ \
  register char * _X509_NAME_ENTRY_create_by_txt__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509_NAME_ENTRY * (*)(char * __asm("a6"), X509_NAME_ENTRY ** __asm("a0"), const char * __asm("a1"), LONG __asm("d0"), const unsigned char * __asm("a2"), LONG __asm("d1"))) \
  (_X509_NAME_ENTRY_create_by_txt__bn - 11436))(_X509_NAME_ENTRY_create_by_txt__bn, _X509_NAME_ENTRY_create_by_txt_ne, _X509_NAME_ENTRY_create_by_txt_field, _X509_NAME_ENTRY_create_by_txt_type, _X509_NAME_ENTRY_create_by_txt_bytes, _X509_NAME_ENTRY_create_by_txt_len); \
});})

#define X509_NAME_ENTRY_create_by_NID(ne, nid, type, bytes, len) ({ \
  X509_NAME_ENTRY ** _X509_NAME_ENTRY_create_by_NID_ne = (ne); \
  LONG _X509_NAME_ENTRY_create_by_NID_nid = (nid); \
  LONG _X509_NAME_ENTRY_create_by_NID_type = (type); \
  unsigned char * _X509_NAME_ENTRY_create_by_NID_bytes = (bytes); \
  LONG _X509_NAME_ENTRY_create_by_NID_len = (len); \
  ({ \
  register char * _X509_NAME_ENTRY_create_by_NID__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509_NAME_ENTRY * (*)(char * __asm("a6"), X509_NAME_ENTRY ** __asm("a0"), LONG __asm("d0"), LONG __asm("d1"), unsigned char * __asm("a1"), LONG __asm("d2"))) \
  (_X509_NAME_ENTRY_create_by_NID__bn - 11442))(_X509_NAME_ENTRY_create_by_NID__bn, _X509_NAME_ENTRY_create_by_NID_ne, _X509_NAME_ENTRY_create_by_NID_nid, _X509_NAME_ENTRY_create_by_NID_type, _X509_NAME_ENTRY_create_by_NID_bytes, _X509_NAME_ENTRY_create_by_NID_len); \
});})

#define X509_NAME_add_entry_by_txt(name, field, type, bytes, len, loc, set) ({ \
  X509_NAME * _X509_NAME_add_entry_by_txt_name = (name); \
  const char * _X509_NAME_add_entry_by_txt_field = (field); \
  LONG _X509_NAME_add_entry_by_txt_type = (type); \
  const unsigned char * _X509_NAME_add_entry_by_txt_bytes = (bytes); \
  LONG _X509_NAME_add_entry_by_txt_len = (len); \
  LONG _X509_NAME_add_entry_by_txt_loc = (loc); \
  LONG _X509_NAME_add_entry_by_txt_set = (set); \
  ({ \
  register char * _X509_NAME_add_entry_by_txt__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509_NAME * __asm("a0"), const char * __asm("a1"), LONG __asm("d0"), const unsigned char * __asm("a2"), LONG __asm("d1"), LONG __asm("d2"), LONG __asm("d3"))) \
  (_X509_NAME_add_entry_by_txt__bn - 11448))(_X509_NAME_add_entry_by_txt__bn, _X509_NAME_add_entry_by_txt_name, _X509_NAME_add_entry_by_txt_field, _X509_NAME_add_entry_by_txt_type, _X509_NAME_add_entry_by_txt_bytes, _X509_NAME_add_entry_by_txt_len, _X509_NAME_add_entry_by_txt_loc, _X509_NAME_add_entry_by_txt_set); \
});})

#define X509_NAME_ENTRY_create_by_OBJ(ne, obj, type, bytes, len) ({ \
  X509_NAME_ENTRY ** _X509_NAME_ENTRY_create_by_OBJ_ne = (ne); \
  ASN1_OBJECT * _X509_NAME_ENTRY_create_by_OBJ_obj = (obj); \
  LONG _X509_NAME_ENTRY_create_by_OBJ_type = (type); \
  const unsigned char * _X509_NAME_ENTRY_create_by_OBJ_bytes = (bytes); \
  LONG _X509_NAME_ENTRY_create_by_OBJ_len = (len); \
  ({ \
  register char * _X509_NAME_ENTRY_create_by_OBJ__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509_NAME_ENTRY * (*)(char * __asm("a6"), X509_NAME_ENTRY ** __asm("a0"), ASN1_OBJECT * __asm("a1"), LONG __asm("d0"), const unsigned char * __asm("a2"), LONG __asm("d1"))) \
  (_X509_NAME_ENTRY_create_by_OBJ__bn - 11454))(_X509_NAME_ENTRY_create_by_OBJ__bn, _X509_NAME_ENTRY_create_by_OBJ_ne, _X509_NAME_ENTRY_create_by_OBJ_obj, _X509_NAME_ENTRY_create_by_OBJ_type, _X509_NAME_ENTRY_create_by_OBJ_bytes, _X509_NAME_ENTRY_create_by_OBJ_len); \
});})

#define X509_NAME_ENTRY_set_object(ne, obj) ({ \
  X509_NAME_ENTRY * _X509_NAME_ENTRY_set_object_ne = (ne); \
  ASN1_OBJECT * _X509_NAME_ENTRY_set_object_obj = (obj); \
  ({ \
  register char * _X509_NAME_ENTRY_set_object__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509_NAME_ENTRY * __asm("a0"), ASN1_OBJECT * __asm("a1"))) \
  (_X509_NAME_ENTRY_set_object__bn - 11460))(_X509_NAME_ENTRY_set_object__bn, _X509_NAME_ENTRY_set_object_ne, _X509_NAME_ENTRY_set_object_obj); \
});})

#define X509_NAME_ENTRY_set_data(ne, type, bytes, len) ({ \
  X509_NAME_ENTRY * _X509_NAME_ENTRY_set_data_ne = (ne); \
  LONG _X509_NAME_ENTRY_set_data_type = (type); \
  const unsigned char * _X509_NAME_ENTRY_set_data_bytes = (bytes); \
  LONG _X509_NAME_ENTRY_set_data_len = (len); \
  ({ \
  register char * _X509_NAME_ENTRY_set_data__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509_NAME_ENTRY * __asm("a0"), LONG __asm("d0"), const unsigned char * __asm("a1"), LONG __asm("d1"))) \
  (_X509_NAME_ENTRY_set_data__bn - 11466))(_X509_NAME_ENTRY_set_data__bn, _X509_NAME_ENTRY_set_data_ne, _X509_NAME_ENTRY_set_data_type, _X509_NAME_ENTRY_set_data_bytes, _X509_NAME_ENTRY_set_data_len); \
});})

#define X509_NAME_ENTRY_get_object(ne) ({ \
  X509_NAME_ENTRY * _X509_NAME_ENTRY_get_object_ne = (ne); \
  ({ \
  register char * _X509_NAME_ENTRY_get_object__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((ASN1_OBJECT * (*)(char * __asm("a6"), X509_NAME_ENTRY * __asm("a0"))) \
  (_X509_NAME_ENTRY_get_object__bn - 11472))(_X509_NAME_ENTRY_get_object__bn, _X509_NAME_ENTRY_get_object_ne); \
});})

#define X509_NAME_ENTRY_get_data(ne) ({ \
  X509_NAME_ENTRY * _X509_NAME_ENTRY_get_data_ne = (ne); \
  ({ \
  register char * _X509_NAME_ENTRY_get_data__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((ASN1_STRING * (*)(char * __asm("a6"), X509_NAME_ENTRY * __asm("a0"))) \
  (_X509_NAME_ENTRY_get_data__bn - 11478))(_X509_NAME_ENTRY_get_data__bn, _X509_NAME_ENTRY_get_data_ne); \
});})

#define X509v3_get_ext_count(x) ({ \
  const STACK_OF(X509_EXTENSION) * _X509v3_get_ext_count_x = (x); \
  ({ \
  register char * _X509v3_get_ext_count__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const STACK_OF(X509_EXTENSION) * __asm("a0"))) \
  (_X509v3_get_ext_count__bn - 11484))(_X509v3_get_ext_count__bn, _X509v3_get_ext_count_x); \
});})

#define X509v3_get_ext_by_NID(x, nid, lastpos) ({ \
  const STACK_OF(X509_EXTENSION) * _X509v3_get_ext_by_NID_x = (x); \
  LONG _X509v3_get_ext_by_NID_nid = (nid); \
  LONG _X509v3_get_ext_by_NID_lastpos = (lastpos); \
  ({ \
  register char * _X509v3_get_ext_by_NID__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const STACK_OF(X509_EXTENSION) * __asm("a0"), LONG __asm("d0"), LONG __asm("d1"))) \
  (_X509v3_get_ext_by_NID__bn - 11490))(_X509v3_get_ext_by_NID__bn, _X509v3_get_ext_by_NID_x, _X509v3_get_ext_by_NID_nid, _X509v3_get_ext_by_NID_lastpos); \
});})

#define X509v3_get_ext_by_OBJ(x, obj, lastpos) ({ \
  const STACK_OF(X509_EXTENSION) * _X509v3_get_ext_by_OBJ_x = (x); \
  ASN1_OBJECT * _X509v3_get_ext_by_OBJ_obj = (obj); \
  LONG _X509v3_get_ext_by_OBJ_lastpos = (lastpos); \
  ({ \
  register char * _X509v3_get_ext_by_OBJ__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const STACK_OF(X509_EXTENSION) * __asm("a0"), ASN1_OBJECT * __asm("a1"), LONG __asm("d0"))) \
  (_X509v3_get_ext_by_OBJ__bn - 11496))(_X509v3_get_ext_by_OBJ__bn, _X509v3_get_ext_by_OBJ_x, _X509v3_get_ext_by_OBJ_obj, _X509v3_get_ext_by_OBJ_lastpos); \
});})

#define X509v3_get_ext_by_critical(x, crit, lastpos) ({ \
  const STACK_OF(X509_EXTENSION) * _X509v3_get_ext_by_critical_x = (x); \
  LONG _X509v3_get_ext_by_critical_crit = (crit); \
  LONG _X509v3_get_ext_by_critical_lastpos = (lastpos); \
  ({ \
  register char * _X509v3_get_ext_by_critical__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const STACK_OF(X509_EXTENSION) * __asm("a0"), LONG __asm("d0"), LONG __asm("d1"))) \
  (_X509v3_get_ext_by_critical__bn - 11502))(_X509v3_get_ext_by_critical__bn, _X509v3_get_ext_by_critical_x, _X509v3_get_ext_by_critical_crit, _X509v3_get_ext_by_critical_lastpos); \
});})

#define X509v3_get_ext(x, loc) ({ \
  const STACK_OF(X509_EXTENSION) * _X509v3_get_ext_x = (x); \
  LONG _X509v3_get_ext_loc = (loc); \
  ({ \
  register char * _X509v3_get_ext__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509_EXTENSION * (*)(char * __asm("a6"), const STACK_OF(X509_EXTENSION) * __asm("a0"), LONG __asm("d0"))) \
  (_X509v3_get_ext__bn - 11508))(_X509v3_get_ext__bn, _X509v3_get_ext_x, _X509v3_get_ext_loc); \
});})

#define X509v3_delete_ext(x, loc) ({ \
  STACK_OF(X509_EXTENSION) * _X509v3_delete_ext_x = (x); \
  LONG _X509v3_delete_ext_loc = (loc); \
  ({ \
  register char * _X509v3_delete_ext__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509_EXTENSION * (*)(char * __asm("a6"), STACK_OF(X509_EXTENSION) * __asm("a0"), LONG __asm("d0"))) \
  (_X509v3_delete_ext__bn - 11514))(_X509v3_delete_ext__bn, _X509v3_delete_ext_x, _X509v3_delete_ext_loc); \
});})

#define X509v3_add_ext(x, ex, loc) ({ \
  STACK_OF(X509_EXTENSION) ** _X509v3_add_ext_x = (x); \
  X509_EXTENSION * _X509v3_add_ext_ex = (ex); \
  LONG _X509v3_add_ext_loc = (loc); \
  ({ \
  register char * _X509v3_add_ext__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((STACK_OF(X509_EXTENSION) * (*)(char * __asm("a6"), STACK_OF(X509_EXTENSION) ** __asm("a0"), X509_EXTENSION * __asm("a1"), LONG __asm("d0"))) \
  (_X509v3_add_ext__bn - 11520))(_X509v3_add_ext__bn, _X509v3_add_ext_x, _X509v3_add_ext_ex, _X509v3_add_ext_loc); \
});})

#define X509_get_ext_count(x) ({ \
  X509 * _X509_get_ext_count_x = (x); \
  ({ \
  register char * _X509_get_ext_count__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509 * __asm("a0"))) \
  (_X509_get_ext_count__bn - 11526))(_X509_get_ext_count__bn, _X509_get_ext_count_x); \
});})

#define X509_get_ext_by_NID(x, nid, lastpos) ({ \
  X509 * _X509_get_ext_by_NID_x = (x); \
  LONG _X509_get_ext_by_NID_nid = (nid); \
  LONG _X509_get_ext_by_NID_lastpos = (lastpos); \
  ({ \
  register char * _X509_get_ext_by_NID__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509 * __asm("a0"), LONG __asm("d0"), LONG __asm("d1"))) \
  (_X509_get_ext_by_NID__bn - 11532))(_X509_get_ext_by_NID__bn, _X509_get_ext_by_NID_x, _X509_get_ext_by_NID_nid, _X509_get_ext_by_NID_lastpos); \
});})

#define X509_get_ext_by_OBJ(x, obj, lastpos) ({ \
  X509 * _X509_get_ext_by_OBJ_x = (x); \
  ASN1_OBJECT * _X509_get_ext_by_OBJ_obj = (obj); \
  LONG _X509_get_ext_by_OBJ_lastpos = (lastpos); \
  ({ \
  register char * _X509_get_ext_by_OBJ__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509 * __asm("a0"), ASN1_OBJECT * __asm("a1"), LONG __asm("d0"))) \
  (_X509_get_ext_by_OBJ__bn - 11538))(_X509_get_ext_by_OBJ__bn, _X509_get_ext_by_OBJ_x, _X509_get_ext_by_OBJ_obj, _X509_get_ext_by_OBJ_lastpos); \
});})

#define X509_get_ext_by_critical(x, crit, lastpos) ({ \
  X509 * _X509_get_ext_by_critical_x = (x); \
  LONG _X509_get_ext_by_critical_crit = (crit); \
  LONG _X509_get_ext_by_critical_lastpos = (lastpos); \
  ({ \
  register char * _X509_get_ext_by_critical__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509 * __asm("a0"), LONG __asm("d0"), LONG __asm("d1"))) \
  (_X509_get_ext_by_critical__bn - 11544))(_X509_get_ext_by_critical__bn, _X509_get_ext_by_critical_x, _X509_get_ext_by_critical_crit, _X509_get_ext_by_critical_lastpos); \
});})

#define X509_get_ext(x, loc) ({ \
  X509 * _X509_get_ext_x = (x); \
  LONG _X509_get_ext_loc = (loc); \
  ({ \
  register char * _X509_get_ext__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509_EXTENSION * (*)(char * __asm("a6"), X509 * __asm("a0"), LONG __asm("d0"))) \
  (_X509_get_ext__bn - 11550))(_X509_get_ext__bn, _X509_get_ext_x, _X509_get_ext_loc); \
});})

#define X509_delete_ext(x, loc) ({ \
  X509 * _X509_delete_ext_x = (x); \
  LONG _X509_delete_ext_loc = (loc); \
  ({ \
  register char * _X509_delete_ext__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509_EXTENSION * (*)(char * __asm("a6"), X509 * __asm("a0"), LONG __asm("d0"))) \
  (_X509_delete_ext__bn - 11556))(_X509_delete_ext__bn, _X509_delete_ext_x, _X509_delete_ext_loc); \
});})

#define X509_add_ext(x, ex, loc) ({ \
  X509 * _X509_add_ext_x = (x); \
  X509_EXTENSION * _X509_add_ext_ex = (ex); \
  LONG _X509_add_ext_loc = (loc); \
  ({ \
  register char * _X509_add_ext__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509 * __asm("a0"), X509_EXTENSION * __asm("a1"), LONG __asm("d0"))) \
  (_X509_add_ext__bn - 11562))(_X509_add_ext__bn, _X509_add_ext_x, _X509_add_ext_ex, _X509_add_ext_loc); \
});})

#define X509_get_ext_d2i(x, nid, crit, idx) ({ \
  X509 * _X509_get_ext_d2i_x = (x); \
  LONG _X509_get_ext_d2i_nid = (nid); \
  int * _X509_get_ext_d2i_crit = (crit); \
  int * _X509_get_ext_d2i_idx = (idx); \
  ({ \
  register char * _X509_get_ext_d2i__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void * (*)(char * __asm("a6"), X509 * __asm("a0"), LONG __asm("d0"), int * __asm("a1"), int * __asm("a2"))) \
  (_X509_get_ext_d2i__bn - 11568))(_X509_get_ext_d2i__bn, _X509_get_ext_d2i_x, _X509_get_ext_d2i_nid, _X509_get_ext_d2i_crit, _X509_get_ext_d2i_idx); \
});})

#define X509_add1_ext_i2d(x, nid, value, crit, flags) ({ \
  X509 * _X509_add1_ext_i2d_x = (x); \
  LONG _X509_add1_ext_i2d_nid = (nid); \
  void * _X509_add1_ext_i2d_value = (value); \
  LONG _X509_add1_ext_i2d_crit = (crit); \
  unsigned long _X509_add1_ext_i2d_flags = (flags); \
  ({ \
  register char * _X509_add1_ext_i2d__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509 * __asm("a0"), LONG __asm("d0"), void * __asm("a1"), LONG __asm("d1"), unsigned long __asm("d2"))) \
  (_X509_add1_ext_i2d__bn - 11574))(_X509_add1_ext_i2d__bn, _X509_add1_ext_i2d_x, _X509_add1_ext_i2d_nid, _X509_add1_ext_i2d_value, _X509_add1_ext_i2d_crit, _X509_add1_ext_i2d_flags); \
});})

#define X509_CRL_get_ext_count(x) ({ \
  X509_CRL * _X509_CRL_get_ext_count_x = (x); \
  ({ \
  register char * _X509_CRL_get_ext_count__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509_CRL * __asm("a0"))) \
  (_X509_CRL_get_ext_count__bn - 11580))(_X509_CRL_get_ext_count__bn, _X509_CRL_get_ext_count_x); \
});})

#define X509_CRL_get_ext_by_NID(x, nid, lastpos) ({ \
  X509_CRL * _X509_CRL_get_ext_by_NID_x = (x); \
  LONG _X509_CRL_get_ext_by_NID_nid = (nid); \
  LONG _X509_CRL_get_ext_by_NID_lastpos = (lastpos); \
  ({ \
  register char * _X509_CRL_get_ext_by_NID__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509_CRL * __asm("a0"), LONG __asm("d0"), LONG __asm("d1"))) \
  (_X509_CRL_get_ext_by_NID__bn - 11586))(_X509_CRL_get_ext_by_NID__bn, _X509_CRL_get_ext_by_NID_x, _X509_CRL_get_ext_by_NID_nid, _X509_CRL_get_ext_by_NID_lastpos); \
});})

#define X509_CRL_get_ext_by_OBJ(x, obj, lastpos) ({ \
  X509_CRL * _X509_CRL_get_ext_by_OBJ_x = (x); \
  ASN1_OBJECT * _X509_CRL_get_ext_by_OBJ_obj = (obj); \
  LONG _X509_CRL_get_ext_by_OBJ_lastpos = (lastpos); \
  ({ \
  register char * _X509_CRL_get_ext_by_OBJ__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509_CRL * __asm("a0"), ASN1_OBJECT * __asm("a1"), LONG __asm("d0"))) \
  (_X509_CRL_get_ext_by_OBJ__bn - 11592))(_X509_CRL_get_ext_by_OBJ__bn, _X509_CRL_get_ext_by_OBJ_x, _X509_CRL_get_ext_by_OBJ_obj, _X509_CRL_get_ext_by_OBJ_lastpos); \
});})

#define X509_CRL_get_ext_by_critical(x, crit, lastpos) ({ \
  X509_CRL * _X509_CRL_get_ext_by_critical_x = (x); \
  LONG _X509_CRL_get_ext_by_critical_crit = (crit); \
  LONG _X509_CRL_get_ext_by_critical_lastpos = (lastpos); \
  ({ \
  register char * _X509_CRL_get_ext_by_critical__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509_CRL * __asm("a0"), LONG __asm("d0"), LONG __asm("d1"))) \
  (_X509_CRL_get_ext_by_critical__bn - 11598))(_X509_CRL_get_ext_by_critical__bn, _X509_CRL_get_ext_by_critical_x, _X509_CRL_get_ext_by_critical_crit, _X509_CRL_get_ext_by_critical_lastpos); \
});})

#define X509_CRL_get_ext(x, loc) ({ \
  X509_CRL * _X509_CRL_get_ext_x = (x); \
  LONG _X509_CRL_get_ext_loc = (loc); \
  ({ \
  register char * _X509_CRL_get_ext__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509_EXTENSION * (*)(char * __asm("a6"), X509_CRL * __asm("a0"), LONG __asm("d0"))) \
  (_X509_CRL_get_ext__bn - 11604))(_X509_CRL_get_ext__bn, _X509_CRL_get_ext_x, _X509_CRL_get_ext_loc); \
});})

#define X509_CRL_delete_ext(x, loc) ({ \
  X509_CRL * _X509_CRL_delete_ext_x = (x); \
  LONG _X509_CRL_delete_ext_loc = (loc); \
  ({ \
  register char * _X509_CRL_delete_ext__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509_EXTENSION * (*)(char * __asm("a6"), X509_CRL * __asm("a0"), LONG __asm("d0"))) \
  (_X509_CRL_delete_ext__bn - 11610))(_X509_CRL_delete_ext__bn, _X509_CRL_delete_ext_x, _X509_CRL_delete_ext_loc); \
});})

#define X509_CRL_add_ext(x, ex, loc) ({ \
  X509_CRL * _X509_CRL_add_ext_x = (x); \
  X509_EXTENSION * _X509_CRL_add_ext_ex = (ex); \
  LONG _X509_CRL_add_ext_loc = (loc); \
  ({ \
  register char * _X509_CRL_add_ext__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509_CRL * __asm("a0"), X509_EXTENSION * __asm("a1"), LONG __asm("d0"))) \
  (_X509_CRL_add_ext__bn - 11616))(_X509_CRL_add_ext__bn, _X509_CRL_add_ext_x, _X509_CRL_add_ext_ex, _X509_CRL_add_ext_loc); \
});})

#define X509_CRL_get_ext_d2i(x, nid, crit, idx) ({ \
  X509_CRL * _X509_CRL_get_ext_d2i_x = (x); \
  LONG _X509_CRL_get_ext_d2i_nid = (nid); \
  int * _X509_CRL_get_ext_d2i_crit = (crit); \
  int * _X509_CRL_get_ext_d2i_idx = (idx); \
  ({ \
  register char * _X509_CRL_get_ext_d2i__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void * (*)(char * __asm("a6"), X509_CRL * __asm("a0"), LONG __asm("d0"), int * __asm("a1"), int * __asm("a2"))) \
  (_X509_CRL_get_ext_d2i__bn - 11622))(_X509_CRL_get_ext_d2i__bn, _X509_CRL_get_ext_d2i_x, _X509_CRL_get_ext_d2i_nid, _X509_CRL_get_ext_d2i_crit, _X509_CRL_get_ext_d2i_idx); \
});})

#define X509_CRL_add1_ext_i2d(x, nid, value, crit, flags) ({ \
  X509_CRL * _X509_CRL_add1_ext_i2d_x = (x); \
  LONG _X509_CRL_add1_ext_i2d_nid = (nid); \
  void * _X509_CRL_add1_ext_i2d_value = (value); \
  LONG _X509_CRL_add1_ext_i2d_crit = (crit); \
  unsigned long _X509_CRL_add1_ext_i2d_flags = (flags); \
  ({ \
  register char * _X509_CRL_add1_ext_i2d__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509_CRL * __asm("a0"), LONG __asm("d0"), void * __asm("a1"), LONG __asm("d1"), unsigned long __asm("d2"))) \
  (_X509_CRL_add1_ext_i2d__bn - 11628))(_X509_CRL_add1_ext_i2d__bn, _X509_CRL_add1_ext_i2d_x, _X509_CRL_add1_ext_i2d_nid, _X509_CRL_add1_ext_i2d_value, _X509_CRL_add1_ext_i2d_crit, _X509_CRL_add1_ext_i2d_flags); \
});})

#define X509_REVOKED_get_ext_count(x) ({ \
  X509_REVOKED * _X509_REVOKED_get_ext_count_x = (x); \
  ({ \
  register char * _X509_REVOKED_get_ext_count__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509_REVOKED * __asm("a0"))) \
  (_X509_REVOKED_get_ext_count__bn - 11634))(_X509_REVOKED_get_ext_count__bn, _X509_REVOKED_get_ext_count_x); \
});})

#define X509_REVOKED_get_ext_by_NID(x, nid, lastpos) ({ \
  X509_REVOKED * _X509_REVOKED_get_ext_by_NID_x = (x); \
  LONG _X509_REVOKED_get_ext_by_NID_nid = (nid); \
  LONG _X509_REVOKED_get_ext_by_NID_lastpos = (lastpos); \
  ({ \
  register char * _X509_REVOKED_get_ext_by_NID__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509_REVOKED * __asm("a0"), LONG __asm("d0"), LONG __asm("d1"))) \
  (_X509_REVOKED_get_ext_by_NID__bn - 11640))(_X509_REVOKED_get_ext_by_NID__bn, _X509_REVOKED_get_ext_by_NID_x, _X509_REVOKED_get_ext_by_NID_nid, _X509_REVOKED_get_ext_by_NID_lastpos); \
});})

#define X509_REVOKED_get_ext_by_OBJ(x, obj, lastpos) ({ \
  X509_REVOKED * _X509_REVOKED_get_ext_by_OBJ_x = (x); \
  ASN1_OBJECT * _X509_REVOKED_get_ext_by_OBJ_obj = (obj); \
  LONG _X509_REVOKED_get_ext_by_OBJ_lastpos = (lastpos); \
  ({ \
  register char * _X509_REVOKED_get_ext_by_OBJ__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509_REVOKED * __asm("a0"), ASN1_OBJECT * __asm("a1"), LONG __asm("d0"))) \
  (_X509_REVOKED_get_ext_by_OBJ__bn - 11646))(_X509_REVOKED_get_ext_by_OBJ__bn, _X509_REVOKED_get_ext_by_OBJ_x, _X509_REVOKED_get_ext_by_OBJ_obj, _X509_REVOKED_get_ext_by_OBJ_lastpos); \
});})

#define X509_REVOKED_get_ext_by_critical(x, crit, lastpos) ({ \
  X509_REVOKED * _X509_REVOKED_get_ext_by_critical_x = (x); \
  LONG _X509_REVOKED_get_ext_by_critical_crit = (crit); \
  LONG _X509_REVOKED_get_ext_by_critical_lastpos = (lastpos); \
  ({ \
  register char * _X509_REVOKED_get_ext_by_critical__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509_REVOKED * __asm("a0"), LONG __asm("d0"), LONG __asm("d1"))) \
  (_X509_REVOKED_get_ext_by_critical__bn - 11652))(_X509_REVOKED_get_ext_by_critical__bn, _X509_REVOKED_get_ext_by_critical_x, _X509_REVOKED_get_ext_by_critical_crit, _X509_REVOKED_get_ext_by_critical_lastpos); \
});})

#define X509_REVOKED_get_ext(x, loc) ({ \
  X509_REVOKED * _X509_REVOKED_get_ext_x = (x); \
  LONG _X509_REVOKED_get_ext_loc = (loc); \
  ({ \
  register char * _X509_REVOKED_get_ext__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509_EXTENSION * (*)(char * __asm("a6"), X509_REVOKED * __asm("a0"), LONG __asm("d0"))) \
  (_X509_REVOKED_get_ext__bn - 11658))(_X509_REVOKED_get_ext__bn, _X509_REVOKED_get_ext_x, _X509_REVOKED_get_ext_loc); \
});})

#define X509_REVOKED_delete_ext(x, loc) ({ \
  X509_REVOKED * _X509_REVOKED_delete_ext_x = (x); \
  LONG _X509_REVOKED_delete_ext_loc = (loc); \
  ({ \
  register char * _X509_REVOKED_delete_ext__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509_EXTENSION * (*)(char * __asm("a6"), X509_REVOKED * __asm("a0"), LONG __asm("d0"))) \
  (_X509_REVOKED_delete_ext__bn - 11664))(_X509_REVOKED_delete_ext__bn, _X509_REVOKED_delete_ext_x, _X509_REVOKED_delete_ext_loc); \
});})

#define X509_REVOKED_add_ext(x, ex, loc) ({ \
  X509_REVOKED * _X509_REVOKED_add_ext_x = (x); \
  X509_EXTENSION * _X509_REVOKED_add_ext_ex = (ex); \
  LONG _X509_REVOKED_add_ext_loc = (loc); \
  ({ \
  register char * _X509_REVOKED_add_ext__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509_REVOKED * __asm("a0"), X509_EXTENSION * __asm("a1"), LONG __asm("d0"))) \
  (_X509_REVOKED_add_ext__bn - 11670))(_X509_REVOKED_add_ext__bn, _X509_REVOKED_add_ext_x, _X509_REVOKED_add_ext_ex, _X509_REVOKED_add_ext_loc); \
});})

#define X509_REVOKED_get_ext_d2i(x, nid, crit, idx) ({ \
  X509_REVOKED * _X509_REVOKED_get_ext_d2i_x = (x); \
  LONG _X509_REVOKED_get_ext_d2i_nid = (nid); \
  int * _X509_REVOKED_get_ext_d2i_crit = (crit); \
  int * _X509_REVOKED_get_ext_d2i_idx = (idx); \
  ({ \
  register char * _X509_REVOKED_get_ext_d2i__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void * (*)(char * __asm("a6"), X509_REVOKED * __asm("a0"), LONG __asm("d0"), int * __asm("a1"), int * __asm("a2"))) \
  (_X509_REVOKED_get_ext_d2i__bn - 11676))(_X509_REVOKED_get_ext_d2i__bn, _X509_REVOKED_get_ext_d2i_x, _X509_REVOKED_get_ext_d2i_nid, _X509_REVOKED_get_ext_d2i_crit, _X509_REVOKED_get_ext_d2i_idx); \
});})

#define X509_REVOKED_add1_ext_i2d(x, nid, value, crit, flags) ({ \
  X509_REVOKED * _X509_REVOKED_add1_ext_i2d_x = (x); \
  LONG _X509_REVOKED_add1_ext_i2d_nid = (nid); \
  void * _X509_REVOKED_add1_ext_i2d_value = (value); \
  LONG _X509_REVOKED_add1_ext_i2d_crit = (crit); \
  unsigned long _X509_REVOKED_add1_ext_i2d_flags = (flags); \
  ({ \
  register char * _X509_REVOKED_add1_ext_i2d__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509_REVOKED * __asm("a0"), LONG __asm("d0"), void * __asm("a1"), LONG __asm("d1"), unsigned long __asm("d2"))) \
  (_X509_REVOKED_add1_ext_i2d__bn - 11682))(_X509_REVOKED_add1_ext_i2d__bn, _X509_REVOKED_add1_ext_i2d_x, _X509_REVOKED_add1_ext_i2d_nid, _X509_REVOKED_add1_ext_i2d_value, _X509_REVOKED_add1_ext_i2d_crit, _X509_REVOKED_add1_ext_i2d_flags); \
});})

#define X509_EXTENSION_create_by_NID(ex, nid, crit, data) ({ \
  X509_EXTENSION ** _X509_EXTENSION_create_by_NID_ex = (ex); \
  LONG _X509_EXTENSION_create_by_NID_nid = (nid); \
  LONG _X509_EXTENSION_create_by_NID_crit = (crit); \
  ASN1_OCTET_STRING * _X509_EXTENSION_create_by_NID_data = (data); \
  ({ \
  register char * _X509_EXTENSION_create_by_NID__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509_EXTENSION * (*)(char * __asm("a6"), X509_EXTENSION ** __asm("a0"), LONG __asm("d0"), LONG __asm("d1"), ASN1_OCTET_STRING * __asm("a1"))) \
  (_X509_EXTENSION_create_by_NID__bn - 11688))(_X509_EXTENSION_create_by_NID__bn, _X509_EXTENSION_create_by_NID_ex, _X509_EXTENSION_create_by_NID_nid, _X509_EXTENSION_create_by_NID_crit, _X509_EXTENSION_create_by_NID_data); \
});})

#define X509_EXTENSION_create_by_OBJ(ex, obj, crit, data) ({ \
  X509_EXTENSION ** _X509_EXTENSION_create_by_OBJ_ex = (ex); \
  ASN1_OBJECT * _X509_EXTENSION_create_by_OBJ_obj = (obj); \
  LONG _X509_EXTENSION_create_by_OBJ_crit = (crit); \
  ASN1_OCTET_STRING * _X509_EXTENSION_create_by_OBJ_data = (data); \
  ({ \
  register char * _X509_EXTENSION_create_by_OBJ__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509_EXTENSION * (*)(char * __asm("a6"), X509_EXTENSION ** __asm("a0"), ASN1_OBJECT * __asm("a1"), LONG __asm("d0"), ASN1_OCTET_STRING * __asm("a2"))) \
  (_X509_EXTENSION_create_by_OBJ__bn - 11694))(_X509_EXTENSION_create_by_OBJ__bn, _X509_EXTENSION_create_by_OBJ_ex, _X509_EXTENSION_create_by_OBJ_obj, _X509_EXTENSION_create_by_OBJ_crit, _X509_EXTENSION_create_by_OBJ_data); \
});})

#define X509_EXTENSION_set_object(ex, obj) ({ \
  X509_EXTENSION * _X509_EXTENSION_set_object_ex = (ex); \
  ASN1_OBJECT * _X509_EXTENSION_set_object_obj = (obj); \
  ({ \
  register char * _X509_EXTENSION_set_object__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509_EXTENSION * __asm("a0"), ASN1_OBJECT * __asm("a1"))) \
  (_X509_EXTENSION_set_object__bn - 11700))(_X509_EXTENSION_set_object__bn, _X509_EXTENSION_set_object_ex, _X509_EXTENSION_set_object_obj); \
});})

#define X509_EXTENSION_set_critical(ex, crit) ({ \
  X509_EXTENSION * _X509_EXTENSION_set_critical_ex = (ex); \
  LONG _X509_EXTENSION_set_critical_crit = (crit); \
  ({ \
  register char * _X509_EXTENSION_set_critical__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509_EXTENSION * __asm("a0"), LONG __asm("d0"))) \
  (_X509_EXTENSION_set_critical__bn - 11706))(_X509_EXTENSION_set_critical__bn, _X509_EXTENSION_set_critical_ex, _X509_EXTENSION_set_critical_crit); \
});})

#define X509_EXTENSION_set_data(ex, data) ({ \
  X509_EXTENSION * _X509_EXTENSION_set_data_ex = (ex); \
  ASN1_OCTET_STRING * _X509_EXTENSION_set_data_data = (data); \
  ({ \
  register char * _X509_EXTENSION_set_data__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509_EXTENSION * __asm("a0"), ASN1_OCTET_STRING * __asm("a1"))) \
  (_X509_EXTENSION_set_data__bn - 11712))(_X509_EXTENSION_set_data__bn, _X509_EXTENSION_set_data_ex, _X509_EXTENSION_set_data_data); \
});})

#define X509_EXTENSION_get_object(ex) ({ \
  X509_EXTENSION * _X509_EXTENSION_get_object_ex = (ex); \
  ({ \
  register char * _X509_EXTENSION_get_object__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((ASN1_OBJECT * (*)(char * __asm("a6"), X509_EXTENSION * __asm("a0"))) \
  (_X509_EXTENSION_get_object__bn - 11718))(_X509_EXTENSION_get_object__bn, _X509_EXTENSION_get_object_ex); \
});})

#define X509_EXTENSION_get_data(ne) ({ \
  X509_EXTENSION * _X509_EXTENSION_get_data_ne = (ne); \
  ({ \
  register char * _X509_EXTENSION_get_data__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((ASN1_OCTET_STRING * (*)(char * __asm("a6"), X509_EXTENSION * __asm("a0"))) \
  (_X509_EXTENSION_get_data__bn - 11724))(_X509_EXTENSION_get_data__bn, _X509_EXTENSION_get_data_ne); \
});})

#define X509_EXTENSION_get_critical(ex) ({ \
  X509_EXTENSION * _X509_EXTENSION_get_critical_ex = (ex); \
  ({ \
  register char * _X509_EXTENSION_get_critical__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509_EXTENSION * __asm("a0"))) \
  (_X509_EXTENSION_get_critical__bn - 11730))(_X509_EXTENSION_get_critical__bn, _X509_EXTENSION_get_critical_ex); \
});})

#define X509at_get_attr_count(x) ({ \
  const STACK_OF(X509_ATTRIBUTE) * _X509at_get_attr_count_x = (x); \
  ({ \
  register char * _X509at_get_attr_count__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const STACK_OF(X509_ATTRIBUTE) * __asm("a0"))) \
  (_X509at_get_attr_count__bn - 11736))(_X509at_get_attr_count__bn, _X509at_get_attr_count_x); \
});})

#define X509at_get_attr_by_NID(x, nid, lastpos) ({ \
  const STACK_OF(X509_ATTRIBUTE) * _X509at_get_attr_by_NID_x = (x); \
  LONG _X509at_get_attr_by_NID_nid = (nid); \
  LONG _X509at_get_attr_by_NID_lastpos = (lastpos); \
  ({ \
  register char * _X509at_get_attr_by_NID__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const STACK_OF(X509_ATTRIBUTE) * __asm("a0"), LONG __asm("d0"), LONG __asm("d1"))) \
  (_X509at_get_attr_by_NID__bn - 11742))(_X509at_get_attr_by_NID__bn, _X509at_get_attr_by_NID_x, _X509at_get_attr_by_NID_nid, _X509at_get_attr_by_NID_lastpos); \
});})

#define X509at_get_attr_by_OBJ(sk, obj, lastpos) ({ \
  const STACK_OF(X509_ATTRIBUTE) * _X509at_get_attr_by_OBJ_sk = (sk); \
  ASN1_OBJECT * _X509at_get_attr_by_OBJ_obj = (obj); \
  LONG _X509at_get_attr_by_OBJ_lastpos = (lastpos); \
  ({ \
  register char * _X509at_get_attr_by_OBJ__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const STACK_OF(X509_ATTRIBUTE) * __asm("a0"), ASN1_OBJECT * __asm("a1"), LONG __asm("d0"))) \
  (_X509at_get_attr_by_OBJ__bn - 11748))(_X509at_get_attr_by_OBJ__bn, _X509at_get_attr_by_OBJ_sk, _X509at_get_attr_by_OBJ_obj, _X509at_get_attr_by_OBJ_lastpos); \
});})

#define X509at_get_attr(x, loc) ({ \
  const STACK_OF(X509_ATTRIBUTE) * _X509at_get_attr_x = (x); \
  LONG _X509at_get_attr_loc = (loc); \
  ({ \
  register char * _X509at_get_attr__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509_ATTRIBUTE * (*)(char * __asm("a6"), const STACK_OF(X509_ATTRIBUTE) * __asm("a0"), LONG __asm("d0"))) \
  (_X509at_get_attr__bn - 11754))(_X509at_get_attr__bn, _X509at_get_attr_x, _X509at_get_attr_loc); \
});})

#define X509at_delete_attr(x, loc) ({ \
  STACK_OF(X509_ATTRIBUTE) * _X509at_delete_attr_x = (x); \
  LONG _X509at_delete_attr_loc = (loc); \
  ({ \
  register char * _X509at_delete_attr__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509_ATTRIBUTE * (*)(char * __asm("a6"), STACK_OF(X509_ATTRIBUTE) * __asm("a0"), LONG __asm("d0"))) \
  (_X509at_delete_attr__bn - 11760))(_X509at_delete_attr__bn, _X509at_delete_attr_x, _X509at_delete_attr_loc); \
});})

#define X509at_add1_attr(x, attr) ({ \
  STACK_OF(X509_ATTRIBUTE) ** _X509at_add1_attr_x = (x); \
  X509_ATTRIBUTE * _X509at_add1_attr_attr = (attr); \
  ({ \
  register char * _X509at_add1_attr__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((STACK_OF(X509_ATTRIBUTE) * (*)(char * __asm("a6"), STACK_OF(X509_ATTRIBUTE) ** __asm("a0"), X509_ATTRIBUTE * __asm("a1"))) \
  (_X509at_add1_attr__bn - 11766))(_X509at_add1_attr__bn, _X509at_add1_attr_x, _X509at_add1_attr_attr); \
});})

#define X509at_add1_attr_by_OBJ(x, obj, type, bytes, len) ({ \
  STACK_OF(X509_ATTRIBUTE) ** _X509at_add1_attr_by_OBJ_x = (x); \
  const ASN1_OBJECT * _X509at_add1_attr_by_OBJ_obj = (obj); \
  LONG _X509at_add1_attr_by_OBJ_type = (type); \
  const unsigned char * _X509at_add1_attr_by_OBJ_bytes = (bytes); \
  LONG _X509at_add1_attr_by_OBJ_len = (len); \
  ({ \
  register char * _X509at_add1_attr_by_OBJ__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((STACK_OF(X509_ATTRIBUTE) * (*)(char * __asm("a6"), STACK_OF(X509_ATTRIBUTE) ** __asm("a0"), const ASN1_OBJECT * __asm("a1"), LONG __asm("d0"), const unsigned char * __asm("a2"), LONG __asm("d1"))) \
  (_X509at_add1_attr_by_OBJ__bn - 11772))(_X509at_add1_attr_by_OBJ__bn, _X509at_add1_attr_by_OBJ_x, _X509at_add1_attr_by_OBJ_obj, _X509at_add1_attr_by_OBJ_type, _X509at_add1_attr_by_OBJ_bytes, _X509at_add1_attr_by_OBJ_len); \
});})

#define X509at_add1_attr_by_NID(x, nid, type, bytes, len) ({ \
  STACK_OF(X509_ATTRIBUTE) ** _X509at_add1_attr_by_NID_x = (x); \
  LONG _X509at_add1_attr_by_NID_nid = (nid); \
  LONG _X509at_add1_attr_by_NID_type = (type); \
  const unsigned char * _X509at_add1_attr_by_NID_bytes = (bytes); \
  LONG _X509at_add1_attr_by_NID_len = (len); \
  ({ \
  register char * _X509at_add1_attr_by_NID__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((STACK_OF(X509_ATTRIBUTE) * (*)(char * __asm("a6"), STACK_OF(X509_ATTRIBUTE) ** __asm("a0"), LONG __asm("d0"), LONG __asm("d1"), const unsigned char * __asm("a1"), LONG __asm("d2"))) \
  (_X509at_add1_attr_by_NID__bn - 11778))(_X509at_add1_attr_by_NID__bn, _X509at_add1_attr_by_NID_x, _X509at_add1_attr_by_NID_nid, _X509at_add1_attr_by_NID_type, _X509at_add1_attr_by_NID_bytes, _X509at_add1_attr_by_NID_len); \
});})

#define X509at_add1_attr_by_txt(x, attrname, type, bytes, len) ({ \
  STACK_OF(X509_ATTRIBUTE) ** _X509at_add1_attr_by_txt_x = (x); \
  const char * _X509at_add1_attr_by_txt_attrname = (attrname); \
  LONG _X509at_add1_attr_by_txt_type = (type); \
  const unsigned char * _X509at_add1_attr_by_txt_bytes = (bytes); \
  LONG _X509at_add1_attr_by_txt_len = (len); \
  ({ \
  register char * _X509at_add1_attr_by_txt__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((STACK_OF(X509_ATTRIBUTE) * (*)(char * __asm("a6"), STACK_OF(X509_ATTRIBUTE) ** __asm("a0"), const char * __asm("a1"), LONG __asm("d0"), const unsigned char * __asm("a2"), LONG __asm("d1"))) \
  (_X509at_add1_attr_by_txt__bn - 11784))(_X509at_add1_attr_by_txt__bn, _X509at_add1_attr_by_txt_x, _X509at_add1_attr_by_txt_attrname, _X509at_add1_attr_by_txt_type, _X509at_add1_attr_by_txt_bytes, _X509at_add1_attr_by_txt_len); \
});})

#define X509_ATTRIBUTE_create_by_NID(attr, nid, atrtype, data, len) ({ \
  X509_ATTRIBUTE ** _X509_ATTRIBUTE_create_by_NID_attr = (attr); \
  LONG _X509_ATTRIBUTE_create_by_NID_nid = (nid); \
  LONG _X509_ATTRIBUTE_create_by_NID_atrtype = (atrtype); \
  const void * _X509_ATTRIBUTE_create_by_NID_data = (data); \
  LONG _X509_ATTRIBUTE_create_by_NID_len = (len); \
  ({ \
  register char * _X509_ATTRIBUTE_create_by_NID__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509_ATTRIBUTE * (*)(char * __asm("a6"), X509_ATTRIBUTE ** __asm("a0"), LONG __asm("d0"), LONG __asm("d1"), const void * __asm("a1"), LONG __asm("d2"))) \
  (_X509_ATTRIBUTE_create_by_NID__bn - 11790))(_X509_ATTRIBUTE_create_by_NID__bn, _X509_ATTRIBUTE_create_by_NID_attr, _X509_ATTRIBUTE_create_by_NID_nid, _X509_ATTRIBUTE_create_by_NID_atrtype, _X509_ATTRIBUTE_create_by_NID_data, _X509_ATTRIBUTE_create_by_NID_len); \
});})

#define X509_ATTRIBUTE_create_by_OBJ(attr, obj, atrtype, data, len) ({ \
  X509_ATTRIBUTE ** _X509_ATTRIBUTE_create_by_OBJ_attr = (attr); \
  const ASN1_OBJECT * _X509_ATTRIBUTE_create_by_OBJ_obj = (obj); \
  LONG _X509_ATTRIBUTE_create_by_OBJ_atrtype = (atrtype); \
  const void * _X509_ATTRIBUTE_create_by_OBJ_data = (data); \
  LONG _X509_ATTRIBUTE_create_by_OBJ_len = (len); \
  ({ \
  register char * _X509_ATTRIBUTE_create_by_OBJ__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509_ATTRIBUTE * (*)(char * __asm("a6"), X509_ATTRIBUTE ** __asm("a0"), const ASN1_OBJECT * __asm("a1"), LONG __asm("d0"), const void * __asm("a2"), LONG __asm("d1"))) \
  (_X509_ATTRIBUTE_create_by_OBJ__bn - 11796))(_X509_ATTRIBUTE_create_by_OBJ__bn, _X509_ATTRIBUTE_create_by_OBJ_attr, _X509_ATTRIBUTE_create_by_OBJ_obj, _X509_ATTRIBUTE_create_by_OBJ_atrtype, _X509_ATTRIBUTE_create_by_OBJ_data, _X509_ATTRIBUTE_create_by_OBJ_len); \
});})

#define X509_ATTRIBUTE_create_by_txt(attr, atrname, type, bytes, len) ({ \
  X509_ATTRIBUTE ** _X509_ATTRIBUTE_create_by_txt_attr = (attr); \
  const char * _X509_ATTRIBUTE_create_by_txt_atrname = (atrname); \
  LONG _X509_ATTRIBUTE_create_by_txt_type = (type); \
  const unsigned char * _X509_ATTRIBUTE_create_by_txt_bytes = (bytes); \
  LONG _X509_ATTRIBUTE_create_by_txt_len = (len); \
  ({ \
  register char * _X509_ATTRIBUTE_create_by_txt__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509_ATTRIBUTE * (*)(char * __asm("a6"), X509_ATTRIBUTE ** __asm("a0"), const char * __asm("a1"), LONG __asm("d0"), const unsigned char * __asm("a2"), LONG __asm("d1"))) \
  (_X509_ATTRIBUTE_create_by_txt__bn - 11802))(_X509_ATTRIBUTE_create_by_txt__bn, _X509_ATTRIBUTE_create_by_txt_attr, _X509_ATTRIBUTE_create_by_txt_atrname, _X509_ATTRIBUTE_create_by_txt_type, _X509_ATTRIBUTE_create_by_txt_bytes, _X509_ATTRIBUTE_create_by_txt_len); \
});})

#define X509_ATTRIBUTE_set1_object(attr, obj) ({ \
  X509_ATTRIBUTE * _X509_ATTRIBUTE_set1_object_attr = (attr); \
  const ASN1_OBJECT * _X509_ATTRIBUTE_set1_object_obj = (obj); \
  ({ \
  register char * _X509_ATTRIBUTE_set1_object__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509_ATTRIBUTE * __asm("a0"), const ASN1_OBJECT * __asm("a1"))) \
  (_X509_ATTRIBUTE_set1_object__bn - 11808))(_X509_ATTRIBUTE_set1_object__bn, _X509_ATTRIBUTE_set1_object_attr, _X509_ATTRIBUTE_set1_object_obj); \
});})

#define X509_ATTRIBUTE_set1_data(attr, attrtype, data, len) ({ \
  X509_ATTRIBUTE * _X509_ATTRIBUTE_set1_data_attr = (attr); \
  LONG _X509_ATTRIBUTE_set1_data_attrtype = (attrtype); \
  const void * _X509_ATTRIBUTE_set1_data_data = (data); \
  LONG _X509_ATTRIBUTE_set1_data_len = (len); \
  ({ \
  register char * _X509_ATTRIBUTE_set1_data__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509_ATTRIBUTE * __asm("a0"), LONG __asm("d0"), const void * __asm("a1"), LONG __asm("d1"))) \
  (_X509_ATTRIBUTE_set1_data__bn - 11814))(_X509_ATTRIBUTE_set1_data__bn, _X509_ATTRIBUTE_set1_data_attr, _X509_ATTRIBUTE_set1_data_attrtype, _X509_ATTRIBUTE_set1_data_data, _X509_ATTRIBUTE_set1_data_len); \
});})

#define X509_ATTRIBUTE_get0_data(attr, idx, atrtype, data) ({ \
  X509_ATTRIBUTE * _X509_ATTRIBUTE_get0_data_attr = (attr); \
  LONG _X509_ATTRIBUTE_get0_data_idx = (idx); \
  LONG _X509_ATTRIBUTE_get0_data_atrtype = (atrtype); \
  void * _X509_ATTRIBUTE_get0_data_data = (data); \
  ({ \
  register char * _X509_ATTRIBUTE_get0_data__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void * (*)(char * __asm("a6"), X509_ATTRIBUTE * __asm("a0"), LONG __asm("d0"), LONG __asm("d1"), void * __asm("a1"))) \
  (_X509_ATTRIBUTE_get0_data__bn - 11820))(_X509_ATTRIBUTE_get0_data__bn, _X509_ATTRIBUTE_get0_data_attr, _X509_ATTRIBUTE_get0_data_idx, _X509_ATTRIBUTE_get0_data_atrtype, _X509_ATTRIBUTE_get0_data_data); \
});})

#define X509_ATTRIBUTE_count(attr) ({ \
  X509_ATTRIBUTE * _X509_ATTRIBUTE_count_attr = (attr); \
  ({ \
  register char * _X509_ATTRIBUTE_count__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509_ATTRIBUTE * __asm("a0"))) \
  (_X509_ATTRIBUTE_count__bn - 11826))(_X509_ATTRIBUTE_count__bn, _X509_ATTRIBUTE_count_attr); \
});})

#define X509_ATTRIBUTE_get0_object(attr) ({ \
  X509_ATTRIBUTE * _X509_ATTRIBUTE_get0_object_attr = (attr); \
  ({ \
  register char * _X509_ATTRIBUTE_get0_object__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((ASN1_OBJECT * (*)(char * __asm("a6"), X509_ATTRIBUTE * __asm("a0"))) \
  (_X509_ATTRIBUTE_get0_object__bn - 11832))(_X509_ATTRIBUTE_get0_object__bn, _X509_ATTRIBUTE_get0_object_attr); \
});})

#define X509_ATTRIBUTE_get0_type(attr, idx) ({ \
  X509_ATTRIBUTE * _X509_ATTRIBUTE_get0_type_attr = (attr); \
  LONG _X509_ATTRIBUTE_get0_type_idx = (idx); \
  ({ \
  register char * _X509_ATTRIBUTE_get0_type__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((ASN1_TYPE * (*)(char * __asm("a6"), X509_ATTRIBUTE * __asm("a0"), LONG __asm("d0"))) \
  (_X509_ATTRIBUTE_get0_type__bn - 11838))(_X509_ATTRIBUTE_get0_type__bn, _X509_ATTRIBUTE_get0_type_attr, _X509_ATTRIBUTE_get0_type_idx); \
});})

#define X509_verify_cert(ctx) ({ \
  X509_STORE_CTX * _X509_verify_cert_ctx = (ctx); \
  ({ \
  register char * _X509_verify_cert__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509_STORE_CTX * __asm("a0"))) \
  (_X509_verify_cert__bn - 11844))(_X509_verify_cert__bn, _X509_verify_cert_ctx); \
});})

#define X509_find_by_issuer_and_serial(sk, name, serial) ({ \
  STACK_OF(X509) * _X509_find_by_issuer_and_serial_sk = (sk); \
  X509_NAME * _X509_find_by_issuer_and_serial_name = (name); \
  ASN1_INTEGER * _X509_find_by_issuer_and_serial_serial = (serial); \
  ({ \
  register char * _X509_find_by_issuer_and_serial__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509 * (*)(char * __asm("a6"), STACK_OF(X509) * __asm("a0"), X509_NAME * __asm("a1"), ASN1_INTEGER * __asm("a2"))) \
  (_X509_find_by_issuer_and_serial__bn - 11850))(_X509_find_by_issuer_and_serial__bn, _X509_find_by_issuer_and_serial_sk, _X509_find_by_issuer_and_serial_name, _X509_find_by_issuer_and_serial_serial); \
});})

#define X509_find_by_subject(sk, name) ({ \
  STACK_OF(X509) * _X509_find_by_subject_sk = (sk); \
  X509_NAME * _X509_find_by_subject_name = (name); \
  ({ \
  register char * _X509_find_by_subject__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509 * (*)(char * __asm("a6"), STACK_OF(X509) * __asm("a0"), X509_NAME * __asm("a1"))) \
  (_X509_find_by_subject__bn - 11856))(_X509_find_by_subject__bn, _X509_find_by_subject_sk, _X509_find_by_subject_name); \
});})

#define PBEPARAM_new() ({ \
  register char * _PBEPARAM_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((PBEPARAM * (*)(char * __asm("a6"))) \
  (_PBEPARAM_new__bn - 11862))(_PBEPARAM_new__bn); \
})

#define PBEPARAM_free(a) ({ \
  PBEPARAM * _PBEPARAM_free_a = (a); \
  ({ \
  register char * _PBEPARAM_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), PBEPARAM * __asm("a0"))) \
  (_PBEPARAM_free__bn - 11868))(_PBEPARAM_free__bn, _PBEPARAM_free_a); \
});})

#define d2i_PBEPARAM(a, in, len) ({ \
  PBEPARAM ** _d2i_PBEPARAM_a = (a); \
  unsigned char ** _d2i_PBEPARAM_in = (in); \
  long _d2i_PBEPARAM_len = (len); \
  ({ \
  register char * _d2i_PBEPARAM__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((PBEPARAM * (*)(char * __asm("a6"), PBEPARAM ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_PBEPARAM__bn - 11874))(_d2i_PBEPARAM__bn, _d2i_PBEPARAM_a, _d2i_PBEPARAM_in, _d2i_PBEPARAM_len); \
});})

#define i2d_PBEPARAM(a, out) ({ \
  PBEPARAM * _i2d_PBEPARAM_a = (a); \
  unsigned char ** _i2d_PBEPARAM_out = (out); \
  ({ \
  register char * _i2d_PBEPARAM__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), PBEPARAM * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_PBEPARAM__bn - 11880))(_i2d_PBEPARAM__bn, _i2d_PBEPARAM_a, _i2d_PBEPARAM_out); \
});})

#define PBEPARAM_it() ({ \
  register char * _PBEPARAM_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_PBEPARAM_it__bn - 11886))(_PBEPARAM_it__bn); \
})

#define PBE2PARAM_new() ({ \
  register char * _PBE2PARAM_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((PBE2PARAM * (*)(char * __asm("a6"))) \
  (_PBE2PARAM_new__bn - 11892))(_PBE2PARAM_new__bn); \
})

#define PBE2PARAM_free(a) ({ \
  PBE2PARAM * _PBE2PARAM_free_a = (a); \
  ({ \
  register char * _PBE2PARAM_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), PBE2PARAM * __asm("a0"))) \
  (_PBE2PARAM_free__bn - 11898))(_PBE2PARAM_free__bn, _PBE2PARAM_free_a); \
});})

#define d2i_PBE2PARAM(a, in, len) ({ \
  PBE2PARAM ** _d2i_PBE2PARAM_a = (a); \
  unsigned char ** _d2i_PBE2PARAM_in = (in); \
  long _d2i_PBE2PARAM_len = (len); \
  ({ \
  register char * _d2i_PBE2PARAM__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((PBE2PARAM * (*)(char * __asm("a6"), PBE2PARAM ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_PBE2PARAM__bn - 11904))(_d2i_PBE2PARAM__bn, _d2i_PBE2PARAM_a, _d2i_PBE2PARAM_in, _d2i_PBE2PARAM_len); \
});})

#define i2d_PBE2PARAM(a, out) ({ \
  PBE2PARAM * _i2d_PBE2PARAM_a = (a); \
  unsigned char ** _i2d_PBE2PARAM_out = (out); \
  ({ \
  register char * _i2d_PBE2PARAM__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), PBE2PARAM * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_PBE2PARAM__bn - 11910))(_i2d_PBE2PARAM__bn, _i2d_PBE2PARAM_a, _i2d_PBE2PARAM_out); \
});})

#define PBE2PARAM_it() ({ \
  register char * _PBE2PARAM_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_PBE2PARAM_it__bn - 11916))(_PBE2PARAM_it__bn); \
})

#define PBKDF2PARAM_new() ({ \
  register char * _PBKDF2PARAM_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((PBKDF2PARAM * (*)(char * __asm("a6"))) \
  (_PBKDF2PARAM_new__bn - 11922))(_PBKDF2PARAM_new__bn); \
})

#define PBKDF2PARAM_free(a) ({ \
  PBKDF2PARAM * _PBKDF2PARAM_free_a = (a); \
  ({ \
  register char * _PBKDF2PARAM_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), PBKDF2PARAM * __asm("a0"))) \
  (_PBKDF2PARAM_free__bn - 11928))(_PBKDF2PARAM_free__bn, _PBKDF2PARAM_free_a); \
});})

#define d2i_PBKDF2PARAM(a, in, len) ({ \
  PBKDF2PARAM ** _d2i_PBKDF2PARAM_a = (a); \
  unsigned char ** _d2i_PBKDF2PARAM_in = (in); \
  long _d2i_PBKDF2PARAM_len = (len); \
  ({ \
  register char * _d2i_PBKDF2PARAM__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((PBKDF2PARAM * (*)(char * __asm("a6"), PBKDF2PARAM ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_PBKDF2PARAM__bn - 11934))(_d2i_PBKDF2PARAM__bn, _d2i_PBKDF2PARAM_a, _d2i_PBKDF2PARAM_in, _d2i_PBKDF2PARAM_len); \
});})

#define i2d_PBKDF2PARAM(a, out) ({ \
  PBKDF2PARAM * _i2d_PBKDF2PARAM_a = (a); \
  unsigned char ** _i2d_PBKDF2PARAM_out = (out); \
  ({ \
  register char * _i2d_PBKDF2PARAM__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), PBKDF2PARAM * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_PBKDF2PARAM__bn - 11940))(_i2d_PBKDF2PARAM__bn, _i2d_PBKDF2PARAM_a, _i2d_PBKDF2PARAM_out); \
});})

#define PBKDF2PARAM_it() ({ \
  register char * _PBKDF2PARAM_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_PBKDF2PARAM_it__bn - 11946))(_PBKDF2PARAM_it__bn); \
})

#define PKCS5_pbe_set(alg, iter, salt, saltlen) ({ \
  LONG _PKCS5_pbe_set_alg = (alg); \
  LONG _PKCS5_pbe_set_iter = (iter); \
  unsigned char * _PKCS5_pbe_set_salt = (salt); \
  LONG _PKCS5_pbe_set_saltlen = (saltlen); \
  ({ \
  register char * _PKCS5_pbe_set__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509_ALGOR * (*)(char * __asm("a6"), LONG __asm("d0"), LONG __asm("d1"), unsigned char * __asm("a0"), LONG __asm("d2"))) \
  (_PKCS5_pbe_set__bn - 11952))(_PKCS5_pbe_set__bn, _PKCS5_pbe_set_alg, _PKCS5_pbe_set_iter, _PKCS5_pbe_set_salt, _PKCS5_pbe_set_saltlen); \
});})

#define PKCS5_pbe2_set(cipher, iter, salt, saltlen) ({ \
  const EVP_CIPHER * _PKCS5_pbe2_set_cipher = (cipher); \
  LONG _PKCS5_pbe2_set_iter = (iter); \
  unsigned char * _PKCS5_pbe2_set_salt = (salt); \
  LONG _PKCS5_pbe2_set_saltlen = (saltlen); \
  ({ \
  register char * _PKCS5_pbe2_set__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509_ALGOR * (*)(char * __asm("a6"), const EVP_CIPHER * __asm("a0"), LONG __asm("d0"), unsigned char * __asm("a1"), LONG __asm("d1"))) \
  (_PKCS5_pbe2_set__bn - 11958))(_PKCS5_pbe2_set__bn, _PKCS5_pbe2_set_cipher, _PKCS5_pbe2_set_iter, _PKCS5_pbe2_set_salt, _PKCS5_pbe2_set_saltlen); \
});})

#define PKCS8_PRIV_KEY_INFO_new() ({ \
  register char * _PKCS8_PRIV_KEY_INFO_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((PKCS8_PRIV_KEY_INFO * (*)(char * __asm("a6"))) \
  (_PKCS8_PRIV_KEY_INFO_new__bn - 11964))(_PKCS8_PRIV_KEY_INFO_new__bn); \
})

#define PKCS8_PRIV_KEY_INFO_free(a) ({ \
  PKCS8_PRIV_KEY_INFO * _PKCS8_PRIV_KEY_INFO_free_a = (a); \
  ({ \
  register char * _PKCS8_PRIV_KEY_INFO_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), PKCS8_PRIV_KEY_INFO * __asm("a0"))) \
  (_PKCS8_PRIV_KEY_INFO_free__bn - 11970))(_PKCS8_PRIV_KEY_INFO_free__bn, _PKCS8_PRIV_KEY_INFO_free_a); \
});})

#define d2i_PKCS8_PRIV_KEY_INFO(a, in, len) ({ \
  PKCS8_PRIV_KEY_INFO ** _d2i_PKCS8_PRIV_KEY_INFO_a = (a); \
  unsigned char ** _d2i_PKCS8_PRIV_KEY_INFO_in = (in); \
  long _d2i_PKCS8_PRIV_KEY_INFO_len = (len); \
  ({ \
  register char * _d2i_PKCS8_PRIV_KEY_INFO__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((PKCS8_PRIV_KEY_INFO * (*)(char * __asm("a6"), PKCS8_PRIV_KEY_INFO ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_PKCS8_PRIV_KEY_INFO__bn - 11976))(_d2i_PKCS8_PRIV_KEY_INFO__bn, _d2i_PKCS8_PRIV_KEY_INFO_a, _d2i_PKCS8_PRIV_KEY_INFO_in, _d2i_PKCS8_PRIV_KEY_INFO_len); \
});})

#define i2d_PKCS8_PRIV_KEY_INFO(a, out) ({ \
  PKCS8_PRIV_KEY_INFO * _i2d_PKCS8_PRIV_KEY_INFO_a = (a); \
  unsigned char ** _i2d_PKCS8_PRIV_KEY_INFO_out = (out); \
  ({ \
  register char * _i2d_PKCS8_PRIV_KEY_INFO__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), PKCS8_PRIV_KEY_INFO * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_PKCS8_PRIV_KEY_INFO__bn - 11982))(_i2d_PKCS8_PRIV_KEY_INFO__bn, _i2d_PKCS8_PRIV_KEY_INFO_a, _i2d_PKCS8_PRIV_KEY_INFO_out); \
});})

#define PKCS8_PRIV_KEY_INFO_it() ({ \
  register char * _PKCS8_PRIV_KEY_INFO_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_PKCS8_PRIV_KEY_INFO_it__bn - 11988))(_PKCS8_PRIV_KEY_INFO_it__bn); \
})

#define EVP_PKCS82PKEY(p8) ({ \
  PKCS8_PRIV_KEY_INFO * _EVP_PKCS82PKEY_p8 = (p8); \
  ({ \
  register char * _EVP_PKCS82PKEY__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((EVP_PKEY * (*)(char * __asm("a6"), PKCS8_PRIV_KEY_INFO * __asm("a0"))) \
  (_EVP_PKCS82PKEY__bn - 11994))(_EVP_PKCS82PKEY__bn, _EVP_PKCS82PKEY_p8); \
});})

#define EVP_PKEY2PKCS8(pkey) ({ \
  EVP_PKEY * _EVP_PKEY2PKCS8_pkey = (pkey); \
  ({ \
  register char * _EVP_PKEY2PKCS8__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((PKCS8_PRIV_KEY_INFO * (*)(char * __asm("a6"), EVP_PKEY * __asm("a0"))) \
  (_EVP_PKEY2PKCS8__bn - 12000))(_EVP_PKEY2PKCS8__bn, _EVP_PKEY2PKCS8_pkey); \
});})

#define EVP_PKEY2PKCS8_broken(pkey, broken) ({ \
  EVP_PKEY * _EVP_PKEY2PKCS8_broken_pkey = (pkey); \
  LONG _EVP_PKEY2PKCS8_broken_broken = (broken); \
  ({ \
  register char * _EVP_PKEY2PKCS8_broken__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((PKCS8_PRIV_KEY_INFO * (*)(char * __asm("a6"), EVP_PKEY * __asm("a0"), LONG __asm("d0"))) \
  (_EVP_PKEY2PKCS8_broken__bn - 12006))(_EVP_PKEY2PKCS8_broken__bn, _EVP_PKEY2PKCS8_broken_pkey, _EVP_PKEY2PKCS8_broken_broken); \
});})

#define PKCS8_set_broken(p8, broken) ({ \
  PKCS8_PRIV_KEY_INFO * _PKCS8_set_broken_p8 = (p8); \
  LONG _PKCS8_set_broken_broken = (broken); \
  ({ \
  register char * _PKCS8_set_broken__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((PKCS8_PRIV_KEY_INFO * (*)(char * __asm("a6"), PKCS8_PRIV_KEY_INFO * __asm("a0"), LONG __asm("d0"))) \
  (_PKCS8_set_broken__bn - 12012))(_PKCS8_set_broken__bn, _PKCS8_set_broken_p8, _PKCS8_set_broken_broken); \
});})

#define X509_check_trust(x, id, flags) ({ \
  X509 * _X509_check_trust_x = (x); \
  LONG _X509_check_trust_id = (id); \
  LONG _X509_check_trust_flags = (flags); \
  ({ \
  register char * _X509_check_trust__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509 * __asm("a0"), LONG __asm("d0"), LONG __asm("d1"))) \
  (_X509_check_trust__bn - 12018))(_X509_check_trust__bn, _X509_check_trust_x, _X509_check_trust_id, _X509_check_trust_flags); \
});})

#define X509_TRUST_get_count() ({ \
  register char * _X509_TRUST_get_count__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"))) \
  (_X509_TRUST_get_count__bn - 12024))(_X509_TRUST_get_count__bn); \
})

#define X509_TRUST_get0(idx) ({ \
  LONG _X509_TRUST_get0_idx = (idx); \
  ({ \
  register char * _X509_TRUST_get0__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509_TRUST * (*)(char * __asm("a6"), LONG __asm("d0"))) \
  (_X509_TRUST_get0__bn - 12030))(_X509_TRUST_get0__bn, _X509_TRUST_get0_idx); \
});})

#define X509_TRUST_get_by_id(id) ({ \
  LONG _X509_TRUST_get_by_id_id = (id); \
  ({ \
  register char * _X509_TRUST_get_by_id__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), LONG __asm("d0"))) \
  (_X509_TRUST_get_by_id__bn - 12036))(_X509_TRUST_get_by_id__bn, _X509_TRUST_get_by_id_id); \
});})

#define X509_TRUST_add(id, flags, ck, name, arg1, arg2) ({ \
  LONG _X509_TRUST_add_id = (id); \
  LONG _X509_TRUST_add_flags = (flags); \
  int (*_X509_TRUST_add_ck)(X509_TRUST *, X509 *, int) = (ck); \
  char * _X509_TRUST_add_name = (name); \
  LONG _X509_TRUST_add_arg1 = (arg1); \
  void * _X509_TRUST_add_arg2 = (arg2); \
  ({ \
  register char * _X509_TRUST_add__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), LONG __asm("d0"), LONG __asm("d1"), int (*)(X509_TRUST *, X509 *, int) __asm("a0"), char * __asm("a1"), LONG __asm("d2"), void * __asm("a2"))) \
  (_X509_TRUST_add__bn - 12042))(_X509_TRUST_add__bn, _X509_TRUST_add_id, _X509_TRUST_add_flags, _X509_TRUST_add_ck, _X509_TRUST_add_name, _X509_TRUST_add_arg1, _X509_TRUST_add_arg2); \
});})

#define X509_TRUST_cleanup() ({ \
  register char * _X509_TRUST_cleanup__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"))) \
  (_X509_TRUST_cleanup__bn - 12048))(_X509_TRUST_cleanup__bn); \
})

#define X509_TRUST_get_flags(xp) ({ \
  X509_TRUST * _X509_TRUST_get_flags_xp = (xp); \
  ({ \
  register char * _X509_TRUST_get_flags__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509_TRUST * __asm("a0"))) \
  (_X509_TRUST_get_flags__bn - 12054))(_X509_TRUST_get_flags__bn, _X509_TRUST_get_flags_xp); \
});})

#define X509_TRUST_get0_name(xp) ({ \
  X509_TRUST * _X509_TRUST_get0_name_xp = (xp); \
  ({ \
  register char * _X509_TRUST_get0_name__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((char * (*)(char * __asm("a6"), X509_TRUST * __asm("a0"))) \
  (_X509_TRUST_get0_name__bn - 12060))(_X509_TRUST_get0_name__bn, _X509_TRUST_get0_name_xp); \
});})

#define X509_TRUST_get_trust(xp) ({ \
  X509_TRUST * _X509_TRUST_get_trust_xp = (xp); \
  ({ \
  register char * _X509_TRUST_get_trust__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509_TRUST * __asm("a0"))) \
  (_X509_TRUST_get_trust__bn - 12066))(_X509_TRUST_get_trust__bn, _X509_TRUST_get_trust_xp); \
});})

#define ERR_load_X509_strings() ({ \
  register char * _ERR_load_X509_strings__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"))) \
  (_ERR_load_X509_strings__bn - 12072))(_ERR_load_X509_strings__bn); \
})

#define X509_OBJECT_idx_by_subject(h, type, name) ({ \
  STACK_OF(X509_OBJECT) * _X509_OBJECT_idx_by_subject_h = (h); \
  LONG _X509_OBJECT_idx_by_subject_type = (type); \
  X509_NAME * _X509_OBJECT_idx_by_subject_name = (name); \
  ({ \
  register char * _X509_OBJECT_idx_by_subject__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), STACK_OF(X509_OBJECT) * __asm("a0"), LONG __asm("d0"), X509_NAME * __asm("a1"))) \
  (_X509_OBJECT_idx_by_subject__bn - 12078))(_X509_OBJECT_idx_by_subject__bn, _X509_OBJECT_idx_by_subject_h, _X509_OBJECT_idx_by_subject_type, _X509_OBJECT_idx_by_subject_name); \
});})

#define X509_OBJECT_retrieve_by_subject(h, type, name) ({ \
  STACK_OF(X509_OBJECT) * _X509_OBJECT_retrieve_by_subject_h = (h); \
  LONG _X509_OBJECT_retrieve_by_subject_type = (type); \
  X509_NAME * _X509_OBJECT_retrieve_by_subject_name = (name); \
  ({ \
  register char * _X509_OBJECT_retrieve_by_subject__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509_OBJECT * (*)(char * __asm("a6"), STACK_OF(X509_OBJECT) * __asm("a0"), LONG __asm("d0"), X509_NAME * __asm("a1"))) \
  (_X509_OBJECT_retrieve_by_subject__bn - 12084))(_X509_OBJECT_retrieve_by_subject__bn, _X509_OBJECT_retrieve_by_subject_h, _X509_OBJECT_retrieve_by_subject_type, _X509_OBJECT_retrieve_by_subject_name); \
});})

#define X509_OBJECT_retrieve_match(h, x) ({ \
  STACK_OF(X509_OBJECT) * _X509_OBJECT_retrieve_match_h = (h); \
  X509_OBJECT * _X509_OBJECT_retrieve_match_x = (x); \
  ({ \
  register char * _X509_OBJECT_retrieve_match__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509_OBJECT * (*)(char * __asm("a6"), STACK_OF(X509_OBJECT) * __asm("a0"), X509_OBJECT * __asm("a1"))) \
  (_X509_OBJECT_retrieve_match__bn - 12090))(_X509_OBJECT_retrieve_match__bn, _X509_OBJECT_retrieve_match_h, _X509_OBJECT_retrieve_match_x); \
});})

#define X509_OBJECT_up_ref_count(a) ({ \
  X509_OBJECT * _X509_OBJECT_up_ref_count_a = (a); \
  ({ \
  register char * _X509_OBJECT_up_ref_count__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), X509_OBJECT * __asm("a0"))) \
  (_X509_OBJECT_up_ref_count__bn - 12096))(_X509_OBJECT_up_ref_count__bn, _X509_OBJECT_up_ref_count_a); \
});})

#define X509_OBJECT_free_contents(a) ({ \
  X509_OBJECT * _X509_OBJECT_free_contents_a = (a); \
  ({ \
  register char * _X509_OBJECT_free_contents__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), X509_OBJECT * __asm("a0"))) \
  (_X509_OBJECT_free_contents__bn - 12102))(_X509_OBJECT_free_contents__bn, _X509_OBJECT_free_contents_a); \
});})

#define X509_STORE_new() ({ \
  register char * _X509_STORE_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509_STORE * (*)(char * __asm("a6"))) \
  (_X509_STORE_new__bn - 12108))(_X509_STORE_new__bn); \
})

#define X509_STORE_free(v) ({ \
  X509_STORE * _X509_STORE_free_v = (v); \
  ({ \
  register char * _X509_STORE_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), X509_STORE * __asm("a0"))) \
  (_X509_STORE_free__bn - 12114))(_X509_STORE_free__bn, _X509_STORE_free_v); \
});})

#define X509_STORE_set_flags(ctx, flags) ({ \
  X509_STORE * _X509_STORE_set_flags_ctx = (ctx); \
  long _X509_STORE_set_flags_flags = (flags); \
  ({ \
  register char * _X509_STORE_set_flags__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), X509_STORE * __asm("a0"), long __asm("d0"))) \
  (_X509_STORE_set_flags__bn - 12120))(_X509_STORE_set_flags__bn, _X509_STORE_set_flags_ctx, _X509_STORE_set_flags_flags); \
});})

#define X509_STORE_set_purpose(ctx, purpose) ({ \
  X509_STORE * _X509_STORE_set_purpose_ctx = (ctx); \
  LONG _X509_STORE_set_purpose_purpose = (purpose); \
  ({ \
  register char * _X509_STORE_set_purpose__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509_STORE * __asm("a0"), LONG __asm("d0"))) \
  (_X509_STORE_set_purpose__bn - 12126))(_X509_STORE_set_purpose__bn, _X509_STORE_set_purpose_ctx, _X509_STORE_set_purpose_purpose); \
});})

#define X509_STORE_set_trust(ctx, trust) ({ \
  X509_STORE * _X509_STORE_set_trust_ctx = (ctx); \
  LONG _X509_STORE_set_trust_trust = (trust); \
  ({ \
  register char * _X509_STORE_set_trust__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509_STORE * __asm("a0"), LONG __asm("d0"))) \
  (_X509_STORE_set_trust__bn - 12132))(_X509_STORE_set_trust__bn, _X509_STORE_set_trust_ctx, _X509_STORE_set_trust_trust); \
});})

#define X509_STORE_CTX_new() ({ \
  register char * _X509_STORE_CTX_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509_STORE_CTX * (*)(char * __asm("a6"))) \
  (_X509_STORE_CTX_new__bn - 12138))(_X509_STORE_CTX_new__bn); \
})

#define X509_STORE_CTX_get1_issuer(issuer, ctx, x) ({ \
  X509 ** _X509_STORE_CTX_get1_issuer_issuer = (issuer); \
  X509_STORE_CTX * _X509_STORE_CTX_get1_issuer_ctx = (ctx); \
  X509 * _X509_STORE_CTX_get1_issuer_x = (x); \
  ({ \
  register char * _X509_STORE_CTX_get1_issuer__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509 ** __asm("a0"), X509_STORE_CTX * __asm("a1"), X509 * __asm("a2"))) \
  (_X509_STORE_CTX_get1_issuer__bn - 12144))(_X509_STORE_CTX_get1_issuer__bn, _X509_STORE_CTX_get1_issuer_issuer, _X509_STORE_CTX_get1_issuer_ctx, _X509_STORE_CTX_get1_issuer_x); \
});})

#define X509_STORE_CTX_free(ctx) ({ \
  X509_STORE_CTX * _X509_STORE_CTX_free_ctx = (ctx); \
  ({ \
  register char * _X509_STORE_CTX_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), X509_STORE_CTX * __asm("a0"))) \
  (_X509_STORE_CTX_free__bn - 12150))(_X509_STORE_CTX_free__bn, _X509_STORE_CTX_free_ctx); \
});})

#define X509_STORE_CTX_init(ctx, store, x509, chain) ({ \
  X509_STORE_CTX * _X509_STORE_CTX_init_ctx = (ctx); \
  X509_STORE * _X509_STORE_CTX_init_store = (store); \
  X509 * _X509_STORE_CTX_init_x509 = (x509); \
  STACK_OF(X509) * _X509_STORE_CTX_init_chain = (chain); \
  ({ \
  register char * _X509_STORE_CTX_init__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509_STORE_CTX * __asm("a0"), X509_STORE * __asm("a1"), X509 * __asm("a2"), STACK_OF(X509) * __asm("a3"))) \
  (_X509_STORE_CTX_init__bn - 12156))(_X509_STORE_CTX_init__bn, _X509_STORE_CTX_init_ctx, _X509_STORE_CTX_init_store, _X509_STORE_CTX_init_x509, _X509_STORE_CTX_init_chain); \
});})

#define X509_STORE_CTX_trusted_stack(ctx, sk) ({ \
  X509_STORE_CTX * _X509_STORE_CTX_trusted_stack_ctx = (ctx); \
  STACK_OF(X509) * _X509_STORE_CTX_trusted_stack_sk = (sk); \
  ({ \
  register char * _X509_STORE_CTX_trusted_stack__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), X509_STORE_CTX * __asm("a0"), STACK_OF(X509) * __asm("a1"))) \
  (_X509_STORE_CTX_trusted_stack__bn - 12162))(_X509_STORE_CTX_trusted_stack__bn, _X509_STORE_CTX_trusted_stack_ctx, _X509_STORE_CTX_trusted_stack_sk); \
});})

#define X509_STORE_CTX_cleanup(ctx) ({ \
  X509_STORE_CTX * _X509_STORE_CTX_cleanup_ctx = (ctx); \
  ({ \
  register char * _X509_STORE_CTX_cleanup__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), X509_STORE_CTX * __asm("a0"))) \
  (_X509_STORE_CTX_cleanup__bn - 12168))(_X509_STORE_CTX_cleanup__bn, _X509_STORE_CTX_cleanup_ctx); \
});})

#define X509_STORE_add_lookup(v, m) ({ \
  X509_STORE * _X509_STORE_add_lookup_v = (v); \
  X509_LOOKUP_METHOD * _X509_STORE_add_lookup_m = (m); \
  ({ \
  register char * _X509_STORE_add_lookup__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509_LOOKUP * (*)(char * __asm("a6"), X509_STORE * __asm("a0"), X509_LOOKUP_METHOD * __asm("a1"))) \
  (_X509_STORE_add_lookup__bn - 12174))(_X509_STORE_add_lookup__bn, _X509_STORE_add_lookup_v, _X509_STORE_add_lookup_m); \
});})

#define X509_LOOKUP_hash_dir() ({ \
  register char * _X509_LOOKUP_hash_dir__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509_LOOKUP_METHOD * (*)(char * __asm("a6"))) \
  (_X509_LOOKUP_hash_dir__bn - 12180))(_X509_LOOKUP_hash_dir__bn); \
})

#define X509_LOOKUP_file() ({ \
  register char * _X509_LOOKUP_file__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509_LOOKUP_METHOD * (*)(char * __asm("a6"))) \
  (_X509_LOOKUP_file__bn - 12186))(_X509_LOOKUP_file__bn); \
})

#define X509_STORE_add_cert(ctx, x) ({ \
  X509_STORE * _X509_STORE_add_cert_ctx = (ctx); \
  X509 * _X509_STORE_add_cert_x = (x); \
  ({ \
  register char * _X509_STORE_add_cert__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509_STORE * __asm("a0"), X509 * __asm("a1"))) \
  (_X509_STORE_add_cert__bn - 12192))(_X509_STORE_add_cert__bn, _X509_STORE_add_cert_ctx, _X509_STORE_add_cert_x); \
});})

#define X509_STORE_add_crl(ctx, x) ({ \
  X509_STORE * _X509_STORE_add_crl_ctx = (ctx); \
  X509_CRL * _X509_STORE_add_crl_x = (x); \
  ({ \
  register char * _X509_STORE_add_crl__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509_STORE * __asm("a0"), X509_CRL * __asm("a1"))) \
  (_X509_STORE_add_crl__bn - 12198))(_X509_STORE_add_crl__bn, _X509_STORE_add_crl_ctx, _X509_STORE_add_crl_x); \
});})

#define X509_STORE_get_by_subject(vs, type, name, ret) ({ \
  X509_STORE_CTX * _X509_STORE_get_by_subject_vs = (vs); \
  LONG _X509_STORE_get_by_subject_type = (type); \
  X509_NAME * _X509_STORE_get_by_subject_name = (name); \
  X509_OBJECT * _X509_STORE_get_by_subject_ret = (ret); \
  ({ \
  register char * _X509_STORE_get_by_subject__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509_STORE_CTX * __asm("a0"), LONG __asm("d0"), X509_NAME * __asm("a1"), X509_OBJECT * __asm("a2"))) \
  (_X509_STORE_get_by_subject__bn - 12204))(_X509_STORE_get_by_subject__bn, _X509_STORE_get_by_subject_vs, _X509_STORE_get_by_subject_type, _X509_STORE_get_by_subject_name, _X509_STORE_get_by_subject_ret); \
});})

#define X509_LOOKUP_ctrl(ctx, cmd, argc, argl, ret) ({ \
  X509_LOOKUP * _X509_LOOKUP_ctrl_ctx = (ctx); \
  LONG _X509_LOOKUP_ctrl_cmd = (cmd); \
  const char * _X509_LOOKUP_ctrl_argc = (argc); \
  long _X509_LOOKUP_ctrl_argl = (argl); \
  char ** _X509_LOOKUP_ctrl_ret = (ret); \
  ({ \
  register char * _X509_LOOKUP_ctrl__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509_LOOKUP * __asm("a0"), LONG __asm("d0"), const char * __asm("a1"), long __asm("d1"), char ** __asm("a2"))) \
  (_X509_LOOKUP_ctrl__bn - 12210))(_X509_LOOKUP_ctrl__bn, _X509_LOOKUP_ctrl_ctx, _X509_LOOKUP_ctrl_cmd, _X509_LOOKUP_ctrl_argc, _X509_LOOKUP_ctrl_argl, _X509_LOOKUP_ctrl_ret); \
});})

#define X509_load_cert_file(ctx, file, type) ({ \
  X509_LOOKUP * _X509_load_cert_file_ctx = (ctx); \
  const char * _X509_load_cert_file_file = (file); \
  LONG _X509_load_cert_file_type = (type); \
  ({ \
  register char * _X509_load_cert_file__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509_LOOKUP * __asm("a0"), const char * __asm("a1"), LONG __asm("d0"))) \
  (_X509_load_cert_file__bn - 12216))(_X509_load_cert_file__bn, _X509_load_cert_file_ctx, _X509_load_cert_file_file, _X509_load_cert_file_type); \
});})

#define X509_load_crl_file(ctx, file, type) ({ \
  X509_LOOKUP * _X509_load_crl_file_ctx = (ctx); \
  const char * _X509_load_crl_file_file = (file); \
  LONG _X509_load_crl_file_type = (type); \
  ({ \
  register char * _X509_load_crl_file__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509_LOOKUP * __asm("a0"), const char * __asm("a1"), LONG __asm("d0"))) \
  (_X509_load_crl_file__bn - 12222))(_X509_load_crl_file__bn, _X509_load_crl_file_ctx, _X509_load_crl_file_file, _X509_load_crl_file_type); \
});})

#define X509_load_cert_crl_file(ctx, file, type) ({ \
  X509_LOOKUP * _X509_load_cert_crl_file_ctx = (ctx); \
  const char * _X509_load_cert_crl_file_file = (file); \
  LONG _X509_load_cert_crl_file_type = (type); \
  ({ \
  register char * _X509_load_cert_crl_file__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509_LOOKUP * __asm("a0"), const char * __asm("a1"), LONG __asm("d0"))) \
  (_X509_load_cert_crl_file__bn - 12228))(_X509_load_cert_crl_file__bn, _X509_load_cert_crl_file_ctx, _X509_load_cert_crl_file_file, _X509_load_cert_crl_file_type); \
});})

#define X509_LOOKUP_new(method) ({ \
  X509_LOOKUP_METHOD * _X509_LOOKUP_new_method = (method); \
  ({ \
  register char * _X509_LOOKUP_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509_LOOKUP * (*)(char * __asm("a6"), X509_LOOKUP_METHOD * __asm("a0"))) \
  (_X509_LOOKUP_new__bn - 12234))(_X509_LOOKUP_new__bn, _X509_LOOKUP_new_method); \
});})

#define X509_LOOKUP_free(ctx) ({ \
  X509_LOOKUP * _X509_LOOKUP_free_ctx = (ctx); \
  ({ \
  register char * _X509_LOOKUP_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), X509_LOOKUP * __asm("a0"))) \
  (_X509_LOOKUP_free__bn - 12240))(_X509_LOOKUP_free__bn, _X509_LOOKUP_free_ctx); \
});})

#define X509_LOOKUP_init(ctx) ({ \
  X509_LOOKUP * _X509_LOOKUP_init_ctx = (ctx); \
  ({ \
  register char * _X509_LOOKUP_init__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509_LOOKUP * __asm("a0"))) \
  (_X509_LOOKUP_init__bn - 12246))(_X509_LOOKUP_init__bn, _X509_LOOKUP_init_ctx); \
});})

#define X509_LOOKUP_by_subject(ctx, type, name, ret) ({ \
  X509_LOOKUP * _X509_LOOKUP_by_subject_ctx = (ctx); \
  LONG _X509_LOOKUP_by_subject_type = (type); \
  X509_NAME * _X509_LOOKUP_by_subject_name = (name); \
  X509_OBJECT * _X509_LOOKUP_by_subject_ret = (ret); \
  ({ \
  register char * _X509_LOOKUP_by_subject__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509_LOOKUP * __asm("a0"), LONG __asm("d0"), X509_NAME * __asm("a1"), X509_OBJECT * __asm("a2"))) \
  (_X509_LOOKUP_by_subject__bn - 12252))(_X509_LOOKUP_by_subject__bn, _X509_LOOKUP_by_subject_ctx, _X509_LOOKUP_by_subject_type, _X509_LOOKUP_by_subject_name, _X509_LOOKUP_by_subject_ret); \
});})

#define X509_LOOKUP_by_issuer_serial(ctx, type, name, serial, ret) ({ \
  X509_LOOKUP * _X509_LOOKUP_by_issuer_serial_ctx = (ctx); \
  LONG _X509_LOOKUP_by_issuer_serial_type = (type); \
  X509_NAME * _X509_LOOKUP_by_issuer_serial_name = (name); \
  ASN1_INTEGER * _X509_LOOKUP_by_issuer_serial_serial = (serial); \
  X509_OBJECT * _X509_LOOKUP_by_issuer_serial_ret = (ret); \
  ({ \
  register char * _X509_LOOKUP_by_issuer_serial__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509_LOOKUP * __asm("a0"), LONG __asm("d0"), X509_NAME * __asm("a1"), ASN1_INTEGER * __asm("a2"), X509_OBJECT * __asm("a3"))) \
  (_X509_LOOKUP_by_issuer_serial__bn - 12258))(_X509_LOOKUP_by_issuer_serial__bn, _X509_LOOKUP_by_issuer_serial_ctx, _X509_LOOKUP_by_issuer_serial_type, _X509_LOOKUP_by_issuer_serial_name, _X509_LOOKUP_by_issuer_serial_serial, _X509_LOOKUP_by_issuer_serial_ret); \
});})

#define X509_LOOKUP_by_fingerprint(ctx, type, bytes, len, ret) ({ \
  X509_LOOKUP * _X509_LOOKUP_by_fingerprint_ctx = (ctx); \
  LONG _X509_LOOKUP_by_fingerprint_type = (type); \
  unsigned char * _X509_LOOKUP_by_fingerprint_bytes = (bytes); \
  LONG _X509_LOOKUP_by_fingerprint_len = (len); \
  X509_OBJECT * _X509_LOOKUP_by_fingerprint_ret = (ret); \
  ({ \
  register char * _X509_LOOKUP_by_fingerprint__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509_LOOKUP * __asm("a0"), LONG __asm("d0"), unsigned char * __asm("a1"), LONG __asm("d1"), X509_OBJECT * __asm("a2"))) \
  (_X509_LOOKUP_by_fingerprint__bn - 12264))(_X509_LOOKUP_by_fingerprint__bn, _X509_LOOKUP_by_fingerprint_ctx, _X509_LOOKUP_by_fingerprint_type, _X509_LOOKUP_by_fingerprint_bytes, _X509_LOOKUP_by_fingerprint_len, _X509_LOOKUP_by_fingerprint_ret); \
});})

#define X509_LOOKUP_by_alias(ctx, type, str, len, ret) ({ \
  X509_LOOKUP * _X509_LOOKUP_by_alias_ctx = (ctx); \
  LONG _X509_LOOKUP_by_alias_type = (type); \
  char * _X509_LOOKUP_by_alias_str = (str); \
  LONG _X509_LOOKUP_by_alias_len = (len); \
  X509_OBJECT * _X509_LOOKUP_by_alias_ret = (ret); \
  ({ \
  register char * _X509_LOOKUP_by_alias__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509_LOOKUP * __asm("a0"), LONG __asm("d0"), char * __asm("a1"), LONG __asm("d1"), X509_OBJECT * __asm("a2"))) \
  (_X509_LOOKUP_by_alias__bn - 12270))(_X509_LOOKUP_by_alias__bn, _X509_LOOKUP_by_alias_ctx, _X509_LOOKUP_by_alias_type, _X509_LOOKUP_by_alias_str, _X509_LOOKUP_by_alias_len, _X509_LOOKUP_by_alias_ret); \
});})

#define X509_LOOKUP_shutdown(ctx) ({ \
  X509_LOOKUP * _X509_LOOKUP_shutdown_ctx = (ctx); \
  ({ \
  register char * _X509_LOOKUP_shutdown__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509_LOOKUP * __asm("a0"))) \
  (_X509_LOOKUP_shutdown__bn - 12276))(_X509_LOOKUP_shutdown__bn, _X509_LOOKUP_shutdown_ctx); \
});})

#define X509_STORE_load_locations(ctx, file, dir) ({ \
  X509_STORE * _X509_STORE_load_locations_ctx = (ctx); \
  const char * _X509_STORE_load_locations_file = (file); \
  const char * _X509_STORE_load_locations_dir = (dir); \
  ({ \
  register char * _X509_STORE_load_locations__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509_STORE * __asm("a0"), const char * __asm("a1"), const char * __asm("a2"))) \
  (_X509_STORE_load_locations__bn - 12282))(_X509_STORE_load_locations__bn, _X509_STORE_load_locations_ctx, _X509_STORE_load_locations_file, _X509_STORE_load_locations_dir); \
});})

#define X509_STORE_set_default_paths(ctx) ({ \
  X509_STORE * _X509_STORE_set_default_paths_ctx = (ctx); \
  ({ \
  register char * _X509_STORE_set_default_paths__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509_STORE * __asm("a0"))) \
  (_X509_STORE_set_default_paths__bn - 12288))(_X509_STORE_set_default_paths__bn, _X509_STORE_set_default_paths_ctx); \
});})

#define X509_STORE_CTX_get_ex_new_index(argl, argp, new_func, dup_func, free_func) ({ \
  long _X509_STORE_CTX_get_ex_new_index_argl = (argl); \
  void * _X509_STORE_CTX_get_ex_new_index_argp = (argp); \
  CRYPTO_EX_new * (*_X509_STORE_CTX_get_ex_new_index_new_func)() = (new_func); \
  CRYPTO_EX_dup * (*_X509_STORE_CTX_get_ex_new_index_dup_func)() = (dup_func); \
  CRYPTO_EX_free * (*_X509_STORE_CTX_get_ex_new_index_free_func)() = (free_func); \
  ({ \
  register char * _X509_STORE_CTX_get_ex_new_index__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), long __asm("d0"), void * __asm("a0"), CRYPTO_EX_new * (*)() __asm("a1"), CRYPTO_EX_dup * (*)() __asm("a2"), CRYPTO_EX_free * (*)() __asm("a3"))) \
  (_X509_STORE_CTX_get_ex_new_index__bn - 12294))(_X509_STORE_CTX_get_ex_new_index__bn, _X509_STORE_CTX_get_ex_new_index_argl, _X509_STORE_CTX_get_ex_new_index_argp, _X509_STORE_CTX_get_ex_new_index_new_func, _X509_STORE_CTX_get_ex_new_index_dup_func, _X509_STORE_CTX_get_ex_new_index_free_func); \
});})

#define X509_STORE_CTX_set_ex_data(ctx, idx, data) ({ \
  X509_STORE_CTX * _X509_STORE_CTX_set_ex_data_ctx = (ctx); \
  LONG _X509_STORE_CTX_set_ex_data_idx = (idx); \
  void * _X509_STORE_CTX_set_ex_data_data = (data); \
  ({ \
  register char * _X509_STORE_CTX_set_ex_data__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509_STORE_CTX * __asm("a0"), LONG __asm("d0"), void * __asm("a1"))) \
  (_X509_STORE_CTX_set_ex_data__bn - 12300))(_X509_STORE_CTX_set_ex_data__bn, _X509_STORE_CTX_set_ex_data_ctx, _X509_STORE_CTX_set_ex_data_idx, _X509_STORE_CTX_set_ex_data_data); \
});})

#define X509_STORE_CTX_get_ex_data(ctx, idx) ({ \
  X509_STORE_CTX * _X509_STORE_CTX_get_ex_data_ctx = (ctx); \
  LONG _X509_STORE_CTX_get_ex_data_idx = (idx); \
  ({ \
  register char * _X509_STORE_CTX_get_ex_data__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void * (*)(char * __asm("a6"), X509_STORE_CTX * __asm("a0"), LONG __asm("d0"))) \
  (_X509_STORE_CTX_get_ex_data__bn - 12306))(_X509_STORE_CTX_get_ex_data__bn, _X509_STORE_CTX_get_ex_data_ctx, _X509_STORE_CTX_get_ex_data_idx); \
});})

#define X509_STORE_CTX_get_error(ctx) ({ \
  X509_STORE_CTX * _X509_STORE_CTX_get_error_ctx = (ctx); \
  ({ \
  register char * _X509_STORE_CTX_get_error__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509_STORE_CTX * __asm("a0"))) \
  (_X509_STORE_CTX_get_error__bn - 12312))(_X509_STORE_CTX_get_error__bn, _X509_STORE_CTX_get_error_ctx); \
});})

#define X509_STORE_CTX_set_error(ctx, s) ({ \
  X509_STORE_CTX * _X509_STORE_CTX_set_error_ctx = (ctx); \
  LONG _X509_STORE_CTX_set_error_s = (s); \
  ({ \
  register char * _X509_STORE_CTX_set_error__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), X509_STORE_CTX * __asm("a0"), LONG __asm("d0"))) \
  (_X509_STORE_CTX_set_error__bn - 12318))(_X509_STORE_CTX_set_error__bn, _X509_STORE_CTX_set_error_ctx, _X509_STORE_CTX_set_error_s); \
});})

#define X509_STORE_CTX_get_error_depth(ctx) ({ \
  X509_STORE_CTX * _X509_STORE_CTX_get_error_depth_ctx = (ctx); \
  ({ \
  register char * _X509_STORE_CTX_get_error_depth__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509_STORE_CTX * __asm("a0"))) \
  (_X509_STORE_CTX_get_error_depth__bn - 12324))(_X509_STORE_CTX_get_error_depth__bn, _X509_STORE_CTX_get_error_depth_ctx); \
});})

#define X509_STORE_CTX_get_current_cert(ctx) ({ \
  X509_STORE_CTX * _X509_STORE_CTX_get_current_cert_ctx = (ctx); \
  ({ \
  register char * _X509_STORE_CTX_get_current_cert__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509 * (*)(char * __asm("a6"), X509_STORE_CTX * __asm("a0"))) \
  (_X509_STORE_CTX_get_current_cert__bn - 12330))(_X509_STORE_CTX_get_current_cert__bn, _X509_STORE_CTX_get_current_cert_ctx); \
});})

#define X509_STORE_CTX_get_chain(ctx) ({ \
  X509_STORE_CTX * _X509_STORE_CTX_get_chain_ctx = (ctx); \
  ({ \
  register char * _X509_STORE_CTX_get_chain__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((STACK_OF(X509) * (*)(char * __asm("a6"), X509_STORE_CTX * __asm("a0"))) \
  (_X509_STORE_CTX_get_chain__bn - 12336))(_X509_STORE_CTX_get_chain__bn, _X509_STORE_CTX_get_chain_ctx); \
});})

#define X509_STORE_CTX_get1_chain(ctx) ({ \
  X509_STORE_CTX * _X509_STORE_CTX_get1_chain_ctx = (ctx); \
  ({ \
  register char * _X509_STORE_CTX_get1_chain__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((STACK_OF(X509) * (*)(char * __asm("a6"), X509_STORE_CTX * __asm("a0"))) \
  (_X509_STORE_CTX_get1_chain__bn - 12342))(_X509_STORE_CTX_get1_chain__bn, _X509_STORE_CTX_get1_chain_ctx); \
});})

#define X509_STORE_CTX_set_cert(c, x) ({ \
  X509_STORE_CTX * _X509_STORE_CTX_set_cert_c = (c); \
  X509 * _X509_STORE_CTX_set_cert_x = (x); \
  ({ \
  register char * _X509_STORE_CTX_set_cert__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), X509_STORE_CTX * __asm("a0"), X509 * __asm("a1"))) \
  (_X509_STORE_CTX_set_cert__bn - 12348))(_X509_STORE_CTX_set_cert__bn, _X509_STORE_CTX_set_cert_c, _X509_STORE_CTX_set_cert_x); \
});})

#define X509_STORE_CTX_set_chain(c, sk) ({ \
  X509_STORE_CTX * _X509_STORE_CTX_set_chain_c = (c); \
  STACK_OF(X509) * _X509_STORE_CTX_set_chain_sk = (sk); \
  ({ \
  register char * _X509_STORE_CTX_set_chain__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), X509_STORE_CTX * __asm("a0"), STACK_OF(X509) * __asm("a1"))) \
  (_X509_STORE_CTX_set_chain__bn - 12354))(_X509_STORE_CTX_set_chain__bn, _X509_STORE_CTX_set_chain_c, _X509_STORE_CTX_set_chain_sk); \
});})

#define X509_STORE_CTX_set_purpose(ctx, purpose) ({ \
  X509_STORE_CTX * _X509_STORE_CTX_set_purpose_ctx = (ctx); \
  LONG _X509_STORE_CTX_set_purpose_purpose = (purpose); \
  ({ \
  register char * _X509_STORE_CTX_set_purpose__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509_STORE_CTX * __asm("a0"), LONG __asm("d0"))) \
  (_X509_STORE_CTX_set_purpose__bn - 12360))(_X509_STORE_CTX_set_purpose__bn, _X509_STORE_CTX_set_purpose_ctx, _X509_STORE_CTX_set_purpose_purpose); \
});})

#define X509_STORE_CTX_set_trust(ctx, trust) ({ \
  X509_STORE_CTX * _X509_STORE_CTX_set_trust_ctx = (ctx); \
  LONG _X509_STORE_CTX_set_trust_trust = (trust); \
  ({ \
  register char * _X509_STORE_CTX_set_trust__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509_STORE_CTX * __asm("a0"), LONG __asm("d0"))) \
  (_X509_STORE_CTX_set_trust__bn - 12366))(_X509_STORE_CTX_set_trust__bn, _X509_STORE_CTX_set_trust_ctx, _X509_STORE_CTX_set_trust_trust); \
});})

#define X509_STORE_CTX_purpose_inherit(ctx, def_purpose, purpose, trust) ({ \
  X509_STORE_CTX * _X509_STORE_CTX_purpose_inherit_ctx = (ctx); \
  LONG _X509_STORE_CTX_purpose_inherit_def_purpose = (def_purpose); \
  LONG _X509_STORE_CTX_purpose_inherit_purpose = (purpose); \
  LONG _X509_STORE_CTX_purpose_inherit_trust = (trust); \
  ({ \
  register char * _X509_STORE_CTX_purpose_inherit__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509_STORE_CTX * __asm("a0"), LONG __asm("d0"), LONG __asm("d1"), LONG __asm("d2"))) \
  (_X509_STORE_CTX_purpose_inherit__bn - 12372))(_X509_STORE_CTX_purpose_inherit__bn, _X509_STORE_CTX_purpose_inherit_ctx, _X509_STORE_CTX_purpose_inherit_def_purpose, _X509_STORE_CTX_purpose_inherit_purpose, _X509_STORE_CTX_purpose_inherit_trust); \
});})

#define X509_STORE_CTX_set_flags(ctx, flags) ({ \
  X509_STORE_CTX * _X509_STORE_CTX_set_flags_ctx = (ctx); \
  long _X509_STORE_CTX_set_flags_flags = (flags); \
  ({ \
  register char * _X509_STORE_CTX_set_flags__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), X509_STORE_CTX * __asm("a0"), long __asm("d0"))) \
  (_X509_STORE_CTX_set_flags__bn - 12378))(_X509_STORE_CTX_set_flags__bn, _X509_STORE_CTX_set_flags_ctx, _X509_STORE_CTX_set_flags_flags); \
});})

#define X509_STORE_CTX_set_time(ctx, flags, t) ({ \
  X509_STORE_CTX * _X509_STORE_CTX_set_time_ctx = (ctx); \
  long _X509_STORE_CTX_set_time_flags = (flags); \
  time_t _X509_STORE_CTX_set_time_t = (t); \
  ({ \
  register char * _X509_STORE_CTX_set_time__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), X509_STORE_CTX * __asm("a0"), long __asm("d0"), time_t __asm("d1"))) \
  (_X509_STORE_CTX_set_time__bn - 12384))(_X509_STORE_CTX_set_time__bn, _X509_STORE_CTX_set_time_ctx, _X509_STORE_CTX_set_time_flags, _X509_STORE_CTX_set_time_t); \
});})

#define X509_STORE_CTX_set_verify_cb(ctx, verify_cb) ({ \
  X509_STORE_CTX * _X509_STORE_CTX_set_verify_cb_ctx = (ctx); \
  int (*_X509_STORE_CTX_set_verify_cb_verify_cb)(int, X509_STORE_CTX *) = (verify_cb); \
  ({ \
  register char * _X509_STORE_CTX_set_verify_cb__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), X509_STORE_CTX * __asm("a0"), int (*)(int, X509_STORE_CTX *) __asm("a1"))) \
  (_X509_STORE_CTX_set_verify_cb__bn - 12390))(_X509_STORE_CTX_set_verify_cb__bn, _X509_STORE_CTX_set_verify_cb_ctx, _X509_STORE_CTX_set_verify_cb_verify_cb); \
});})

#define BASIC_CONSTRAINTS_new() ({ \
  register char * _BASIC_CONSTRAINTS_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((BASIC_CONSTRAINTS * (*)(char * __asm("a6"))) \
  (_BASIC_CONSTRAINTS_new__bn - 12396))(_BASIC_CONSTRAINTS_new__bn); \
})

#define BASIC_CONSTRAINTS_free(a) ({ \
  BASIC_CONSTRAINTS * _BASIC_CONSTRAINTS_free_a = (a); \
  ({ \
  register char * _BASIC_CONSTRAINTS_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), BASIC_CONSTRAINTS * __asm("a0"))) \
  (_BASIC_CONSTRAINTS_free__bn - 12402))(_BASIC_CONSTRAINTS_free__bn, _BASIC_CONSTRAINTS_free_a); \
});})

#define d2i_BASIC_CONSTRAINTS(a, in, len) ({ \
  BASIC_CONSTRAINTS ** _d2i_BASIC_CONSTRAINTS_a = (a); \
  unsigned char ** _d2i_BASIC_CONSTRAINTS_in = (in); \
  long _d2i_BASIC_CONSTRAINTS_len = (len); \
  ({ \
  register char * _d2i_BASIC_CONSTRAINTS__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((BASIC_CONSTRAINTS * (*)(char * __asm("a6"), BASIC_CONSTRAINTS ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_BASIC_CONSTRAINTS__bn - 12408))(_d2i_BASIC_CONSTRAINTS__bn, _d2i_BASIC_CONSTRAINTS_a, _d2i_BASIC_CONSTRAINTS_in, _d2i_BASIC_CONSTRAINTS_len); \
});})

#define i2d_BASIC_CONSTRAINTS(a, out) ({ \
  BASIC_CONSTRAINTS * _i2d_BASIC_CONSTRAINTS_a = (a); \
  unsigned char ** _i2d_BASIC_CONSTRAINTS_out = (out); \
  ({ \
  register char * _i2d_BASIC_CONSTRAINTS__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BASIC_CONSTRAINTS * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_BASIC_CONSTRAINTS__bn - 12414))(_i2d_BASIC_CONSTRAINTS__bn, _i2d_BASIC_CONSTRAINTS_a, _i2d_BASIC_CONSTRAINTS_out); \
});})

#define BASIC_CONSTRAINTS_it() ({ \
  register char * _BASIC_CONSTRAINTS_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_BASIC_CONSTRAINTS_it__bn - 12420))(_BASIC_CONSTRAINTS_it__bn); \
})

#define SXNET_new() ({ \
  register char * _SXNET_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((SXNET * (*)(char * __asm("a6"))) \
  (_SXNET_new__bn - 12426))(_SXNET_new__bn); \
})

#define SXNET_free(a) ({ \
  SXNET * _SXNET_free_a = (a); \
  ({ \
  register char * _SXNET_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), SXNET * __asm("a0"))) \
  (_SXNET_free__bn - 12432))(_SXNET_free__bn, _SXNET_free_a); \
});})

#define d2i_SXNET(a, in, len) ({ \
  SXNET ** _d2i_SXNET_a = (a); \
  unsigned char ** _d2i_SXNET_in = (in); \
  long _d2i_SXNET_len = (len); \
  ({ \
  register char * _d2i_SXNET__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((SXNET * (*)(char * __asm("a6"), SXNET ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_SXNET__bn - 12438))(_d2i_SXNET__bn, _d2i_SXNET_a, _d2i_SXNET_in, _d2i_SXNET_len); \
});})

#define i2d_SXNET(a, out) ({ \
  SXNET * _i2d_SXNET_a = (a); \
  unsigned char ** _i2d_SXNET_out = (out); \
  ({ \
  register char * _i2d_SXNET__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), SXNET * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_SXNET__bn - 12444))(_i2d_SXNET__bn, _i2d_SXNET_a, _i2d_SXNET_out); \
});})

#define SXNET_it() ({ \
  register char * _SXNET_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_SXNET_it__bn - 12450))(_SXNET_it__bn); \
})

#define SXNETID_new() ({ \
  register char * _SXNETID_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((SXNETID * (*)(char * __asm("a6"))) \
  (_SXNETID_new__bn - 12456))(_SXNETID_new__bn); \
})

#define SXNETID_free(a) ({ \
  SXNETID * _SXNETID_free_a = (a); \
  ({ \
  register char * _SXNETID_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), SXNETID * __asm("a0"))) \
  (_SXNETID_free__bn - 12462))(_SXNETID_free__bn, _SXNETID_free_a); \
});})

#define d2i_SXNETID(a, in, len) ({ \
  SXNETID ** _d2i_SXNETID_a = (a); \
  unsigned char ** _d2i_SXNETID_in = (in); \
  long _d2i_SXNETID_len = (len); \
  ({ \
  register char * _d2i_SXNETID__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((SXNETID * (*)(char * __asm("a6"), SXNETID ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_SXNETID__bn - 12468))(_d2i_SXNETID__bn, _d2i_SXNETID_a, _d2i_SXNETID_in, _d2i_SXNETID_len); \
});})

#define i2d_SXNETID(a, out) ({ \
  SXNETID * _i2d_SXNETID_a = (a); \
  unsigned char ** _i2d_SXNETID_out = (out); \
  ({ \
  register char * _i2d_SXNETID__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), SXNETID * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_SXNETID__bn - 12474))(_i2d_SXNETID__bn, _i2d_SXNETID_a, _i2d_SXNETID_out); \
});})

#define SXNETID_it() ({ \
  register char * _SXNETID_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_SXNETID_it__bn - 12480))(_SXNETID_it__bn); \
})

#define SXNET_add_id_asc(psx, zone, user, userlen) ({ \
  SXNET ** _SXNET_add_id_asc_psx = (psx); \
  char * _SXNET_add_id_asc_zone = (zone); \
  char * _SXNET_add_id_asc_user = (user); \
  LONG _SXNET_add_id_asc_userlen = (userlen); \
  ({ \
  register char * _SXNET_add_id_asc__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), SXNET ** __asm("a0"), char * __asm("a1"), char * __asm("a2"), LONG __asm("d0"))) \
  (_SXNET_add_id_asc__bn - 12486))(_SXNET_add_id_asc__bn, _SXNET_add_id_asc_psx, _SXNET_add_id_asc_zone, _SXNET_add_id_asc_user, _SXNET_add_id_asc_userlen); \
});})

#define SXNET_add_id_ulong(psx, lzone, user, userlen) ({ \
  SXNET ** _SXNET_add_id_ulong_psx = (psx); \
  unsigned long _SXNET_add_id_ulong_lzone = (lzone); \
  char * _SXNET_add_id_ulong_user = (user); \
  LONG _SXNET_add_id_ulong_userlen = (userlen); \
  ({ \
  register char * _SXNET_add_id_ulong__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), SXNET ** __asm("a0"), unsigned long __asm("d0"), char * __asm("a1"), LONG __asm("d1"))) \
  (_SXNET_add_id_ulong__bn - 12492))(_SXNET_add_id_ulong__bn, _SXNET_add_id_ulong_psx, _SXNET_add_id_ulong_lzone, _SXNET_add_id_ulong_user, _SXNET_add_id_ulong_userlen); \
});})

#define SXNET_add_id_INTEGER(psx, izone, user, userlen) ({ \
  SXNET ** _SXNET_add_id_INTEGER_psx = (psx); \
  ASN1_INTEGER * _SXNET_add_id_INTEGER_izone = (izone); \
  char * _SXNET_add_id_INTEGER_user = (user); \
  LONG _SXNET_add_id_INTEGER_userlen = (userlen); \
  ({ \
  register char * _SXNET_add_id_INTEGER__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), SXNET ** __asm("a0"), ASN1_INTEGER * __asm("a1"), char * __asm("a2"), LONG __asm("d0"))) \
  (_SXNET_add_id_INTEGER__bn - 12498))(_SXNET_add_id_INTEGER__bn, _SXNET_add_id_INTEGER_psx, _SXNET_add_id_INTEGER_izone, _SXNET_add_id_INTEGER_user, _SXNET_add_id_INTEGER_userlen); \
});})

#define SXNET_get_id_asc(sx, zone) ({ \
  SXNET * _SXNET_get_id_asc_sx = (sx); \
  char * _SXNET_get_id_asc_zone = (zone); \
  ({ \
  register char * _SXNET_get_id_asc__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((ASN1_OCTET_STRING * (*)(char * __asm("a6"), SXNET * __asm("a0"), char * __asm("a1"))) \
  (_SXNET_get_id_asc__bn - 12504))(_SXNET_get_id_asc__bn, _SXNET_get_id_asc_sx, _SXNET_get_id_asc_zone); \
});})

#define SXNET_get_id_ulong(sx, lzone) ({ \
  SXNET * _SXNET_get_id_ulong_sx = (sx); \
  unsigned long _SXNET_get_id_ulong_lzone = (lzone); \
  ({ \
  register char * _SXNET_get_id_ulong__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((ASN1_OCTET_STRING * (*)(char * __asm("a6"), SXNET * __asm("a0"), unsigned long __asm("d0"))) \
  (_SXNET_get_id_ulong__bn - 12510))(_SXNET_get_id_ulong__bn, _SXNET_get_id_ulong_sx, _SXNET_get_id_ulong_lzone); \
});})

#define SXNET_get_id_INTEGER(sx, zone) ({ \
  SXNET * _SXNET_get_id_INTEGER_sx = (sx); \
  ASN1_INTEGER * _SXNET_get_id_INTEGER_zone = (zone); \
  ({ \
  register char * _SXNET_get_id_INTEGER__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((ASN1_OCTET_STRING * (*)(char * __asm("a6"), SXNET * __asm("a0"), ASN1_INTEGER * __asm("a1"))) \
  (_SXNET_get_id_INTEGER__bn - 12516))(_SXNET_get_id_INTEGER__bn, _SXNET_get_id_INTEGER_sx, _SXNET_get_id_INTEGER_zone); \
});})

#define AUTHORITY_KEYID_new() ({ \
  register char * _AUTHORITY_KEYID_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((AUTHORITY_KEYID * (*)(char * __asm("a6"))) \
  (_AUTHORITY_KEYID_new__bn - 12522))(_AUTHORITY_KEYID_new__bn); \
})

#define AUTHORITY_KEYID_free(a) ({ \
  AUTHORITY_KEYID * _AUTHORITY_KEYID_free_a = (a); \
  ({ \
  register char * _AUTHORITY_KEYID_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), AUTHORITY_KEYID * __asm("a0"))) \
  (_AUTHORITY_KEYID_free__bn - 12528))(_AUTHORITY_KEYID_free__bn, _AUTHORITY_KEYID_free_a); \
});})

#define d2i_AUTHORITY_KEYID(a, in, len) ({ \
  AUTHORITY_KEYID ** _d2i_AUTHORITY_KEYID_a = (a); \
  unsigned char ** _d2i_AUTHORITY_KEYID_in = (in); \
  long _d2i_AUTHORITY_KEYID_len = (len); \
  ({ \
  register char * _d2i_AUTHORITY_KEYID__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((AUTHORITY_KEYID * (*)(char * __asm("a6"), AUTHORITY_KEYID ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_AUTHORITY_KEYID__bn - 12534))(_d2i_AUTHORITY_KEYID__bn, _d2i_AUTHORITY_KEYID_a, _d2i_AUTHORITY_KEYID_in, _d2i_AUTHORITY_KEYID_len); \
});})

#define i2d_AUTHORITY_KEYID(a, out) ({ \
  AUTHORITY_KEYID * _i2d_AUTHORITY_KEYID_a = (a); \
  unsigned char ** _i2d_AUTHORITY_KEYID_out = (out); \
  ({ \
  register char * _i2d_AUTHORITY_KEYID__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), AUTHORITY_KEYID * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_AUTHORITY_KEYID__bn - 12540))(_i2d_AUTHORITY_KEYID__bn, _i2d_AUTHORITY_KEYID_a, _i2d_AUTHORITY_KEYID_out); \
});})

#define AUTHORITY_KEYID_it() ({ \
  register char * _AUTHORITY_KEYID_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_AUTHORITY_KEYID_it__bn - 12546))(_AUTHORITY_KEYID_it__bn); \
})

#define PKEY_USAGE_PERIOD_new() ({ \
  register char * _PKEY_USAGE_PERIOD_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((PKEY_USAGE_PERIOD * (*)(char * __asm("a6"))) \
  (_PKEY_USAGE_PERIOD_new__bn - 12552))(_PKEY_USAGE_PERIOD_new__bn); \
})

#define PKEY_USAGE_PERIOD_free(a) ({ \
  PKEY_USAGE_PERIOD * _PKEY_USAGE_PERIOD_free_a = (a); \
  ({ \
  register char * _PKEY_USAGE_PERIOD_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), PKEY_USAGE_PERIOD * __asm("a0"))) \
  (_PKEY_USAGE_PERIOD_free__bn - 12558))(_PKEY_USAGE_PERIOD_free__bn, _PKEY_USAGE_PERIOD_free_a); \
});})

#define d2i_PKEY_USAGE_PERIOD(a, in, len) ({ \
  PKEY_USAGE_PERIOD ** _d2i_PKEY_USAGE_PERIOD_a = (a); \
  unsigned char ** _d2i_PKEY_USAGE_PERIOD_in = (in); \
  long _d2i_PKEY_USAGE_PERIOD_len = (len); \
  ({ \
  register char * _d2i_PKEY_USAGE_PERIOD__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((PKEY_USAGE_PERIOD * (*)(char * __asm("a6"), PKEY_USAGE_PERIOD ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_PKEY_USAGE_PERIOD__bn - 12564))(_d2i_PKEY_USAGE_PERIOD__bn, _d2i_PKEY_USAGE_PERIOD_a, _d2i_PKEY_USAGE_PERIOD_in, _d2i_PKEY_USAGE_PERIOD_len); \
});})

#define i2d_PKEY_USAGE_PERIOD(a, out) ({ \
  PKEY_USAGE_PERIOD * _i2d_PKEY_USAGE_PERIOD_a = (a); \
  unsigned char ** _i2d_PKEY_USAGE_PERIOD_out = (out); \
  ({ \
  register char * _i2d_PKEY_USAGE_PERIOD__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), PKEY_USAGE_PERIOD * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_PKEY_USAGE_PERIOD__bn - 12570))(_i2d_PKEY_USAGE_PERIOD__bn, _i2d_PKEY_USAGE_PERIOD_a, _i2d_PKEY_USAGE_PERIOD_out); \
});})

#define PKEY_USAGE_PERIOD_it() ({ \
  register char * _PKEY_USAGE_PERIOD_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_PKEY_USAGE_PERIOD_it__bn - 12576))(_PKEY_USAGE_PERIOD_it__bn); \
})

#define GENERAL_NAME_new() ({ \
  register char * _GENERAL_NAME_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((GENERAL_NAME * (*)(char * __asm("a6"))) \
  (_GENERAL_NAME_new__bn - 12582))(_GENERAL_NAME_new__bn); \
})

#define GENERAL_NAME_free(a) ({ \
  GENERAL_NAME * _GENERAL_NAME_free_a = (a); \
  ({ \
  register char * _GENERAL_NAME_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), GENERAL_NAME * __asm("a0"))) \
  (_GENERAL_NAME_free__bn - 12588))(_GENERAL_NAME_free__bn, _GENERAL_NAME_free_a); \
});})

#define d2i_GENERAL_NAME(a, in, len) ({ \
  GENERAL_NAME ** _d2i_GENERAL_NAME_a = (a); \
  unsigned char ** _d2i_GENERAL_NAME_in = (in); \
  long _d2i_GENERAL_NAME_len = (len); \
  ({ \
  register char * _d2i_GENERAL_NAME__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((GENERAL_NAME * (*)(char * __asm("a6"), GENERAL_NAME ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_GENERAL_NAME__bn - 12594))(_d2i_GENERAL_NAME__bn, _d2i_GENERAL_NAME_a, _d2i_GENERAL_NAME_in, _d2i_GENERAL_NAME_len); \
});})

#define i2d_GENERAL_NAME(a, out) ({ \
  GENERAL_NAME * _i2d_GENERAL_NAME_a = (a); \
  unsigned char ** _i2d_GENERAL_NAME_out = (out); \
  ({ \
  register char * _i2d_GENERAL_NAME__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), GENERAL_NAME * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_GENERAL_NAME__bn - 12600))(_i2d_GENERAL_NAME__bn, _i2d_GENERAL_NAME_a, _i2d_GENERAL_NAME_out); \
});})

#define GENERAL_NAME_it() ({ \
  register char * _GENERAL_NAME_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_GENERAL_NAME_it__bn - 12606))(_GENERAL_NAME_it__bn); \
})

#define i2v_GENERAL_NAME(method, gen, ret) ({ \
  X509V3_EXT_METHOD * _i2v_GENERAL_NAME_method = (method); \
  GENERAL_NAME * _i2v_GENERAL_NAME_gen = (gen); \
  STACK_OF(CONF_VALUE) * _i2v_GENERAL_NAME_ret = (ret); \
  ({ \
  register char * _i2v_GENERAL_NAME__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((STACK_OF(CONF_VALUE) * (*)(char * __asm("a6"), X509V3_EXT_METHOD * __asm("a0"), GENERAL_NAME * __asm("a1"), STACK_OF(CONF_VALUE) * __asm("a2"))) \
  (_i2v_GENERAL_NAME__bn - 12612))(_i2v_GENERAL_NAME__bn, _i2v_GENERAL_NAME_method, _i2v_GENERAL_NAME_gen, _i2v_GENERAL_NAME_ret); \
});})

#define GENERAL_NAME_print(out, gen) ({ \
  BIO * _GENERAL_NAME_print_out = (out); \
  GENERAL_NAME * _GENERAL_NAME_print_gen = (gen); \
  ({ \
  register char * _GENERAL_NAME_print__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIO * __asm("a0"), GENERAL_NAME * __asm("a1"))) \
  (_GENERAL_NAME_print__bn - 12618))(_GENERAL_NAME_print__bn, _GENERAL_NAME_print_out, _GENERAL_NAME_print_gen); \
});})

#define GENERAL_NAMES_new() ({ \
  register char * _GENERAL_NAMES_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((GENERAL_NAMES * (*)(char * __asm("a6"))) \
  (_GENERAL_NAMES_new__bn - 12624))(_GENERAL_NAMES_new__bn); \
})

#define GENERAL_NAMES_free(a) ({ \
  GENERAL_NAMES * _GENERAL_NAMES_free_a = (a); \
  ({ \
  register char * _GENERAL_NAMES_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), GENERAL_NAMES * __asm("a0"))) \
  (_GENERAL_NAMES_free__bn - 12630))(_GENERAL_NAMES_free__bn, _GENERAL_NAMES_free_a); \
});})

#define d2i_GENERAL_NAMES(a, in, len) ({ \
  GENERAL_NAMES ** _d2i_GENERAL_NAMES_a = (a); \
  unsigned char ** _d2i_GENERAL_NAMES_in = (in); \
  long _d2i_GENERAL_NAMES_len = (len); \
  ({ \
  register char * _d2i_GENERAL_NAMES__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((GENERAL_NAMES * (*)(char * __asm("a6"), GENERAL_NAMES ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_GENERAL_NAMES__bn - 12636))(_d2i_GENERAL_NAMES__bn, _d2i_GENERAL_NAMES_a, _d2i_GENERAL_NAMES_in, _d2i_GENERAL_NAMES_len); \
});})

#define i2d_GENERAL_NAMES(a, out) ({ \
  GENERAL_NAMES * _i2d_GENERAL_NAMES_a = (a); \
  unsigned char ** _i2d_GENERAL_NAMES_out = (out); \
  ({ \
  register char * _i2d_GENERAL_NAMES__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), GENERAL_NAMES * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_GENERAL_NAMES__bn - 12642))(_i2d_GENERAL_NAMES__bn, _i2d_GENERAL_NAMES_a, _i2d_GENERAL_NAMES_out); \
});})

#define GENERAL_NAMES_it() ({ \
  register char * _GENERAL_NAMES_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_GENERAL_NAMES_it__bn - 12648))(_GENERAL_NAMES_it__bn); \
})

#define i2v_GENERAL_NAMES(method, gen, extlist) ({ \
  X509V3_EXT_METHOD * _i2v_GENERAL_NAMES_method = (method); \
  GENERAL_NAMES * _i2v_GENERAL_NAMES_gen = (gen); \
  STACK_OF(CONF_VALUE) * _i2v_GENERAL_NAMES_extlist = (extlist); \
  ({ \
  register char * _i2v_GENERAL_NAMES__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((STACK_OF(CONF_VALUE) * (*)(char * __asm("a6"), X509V3_EXT_METHOD * __asm("a0"), GENERAL_NAMES * __asm("a1"), STACK_OF(CONF_VALUE) * __asm("a2"))) \
  (_i2v_GENERAL_NAMES__bn - 12654))(_i2v_GENERAL_NAMES__bn, _i2v_GENERAL_NAMES_method, _i2v_GENERAL_NAMES_gen, _i2v_GENERAL_NAMES_extlist); \
});})

#define v2i_GENERAL_NAMES(method, ctx, nval) ({ \
  X509V3_EXT_METHOD * _v2i_GENERAL_NAMES_method = (method); \
  X509V3_CTX * _v2i_GENERAL_NAMES_ctx = (ctx); \
  STACK_OF(CONF_VALUE) * _v2i_GENERAL_NAMES_nval = (nval); \
  ({ \
  register char * _v2i_GENERAL_NAMES__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((GENERAL_NAMES * (*)(char * __asm("a6"), X509V3_EXT_METHOD * __asm("a0"), X509V3_CTX * __asm("a1"), STACK_OF(CONF_VALUE) * __asm("a2"))) \
  (_v2i_GENERAL_NAMES__bn - 12660))(_v2i_GENERAL_NAMES__bn, _v2i_GENERAL_NAMES_method, _v2i_GENERAL_NAMES_ctx, _v2i_GENERAL_NAMES_nval); \
});})

#define OTHERNAME_new() ({ \
  register char * _OTHERNAME_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((OTHERNAME * (*)(char * __asm("a6"))) \
  (_OTHERNAME_new__bn - 12666))(_OTHERNAME_new__bn); \
})

#define OTHERNAME_free(a) ({ \
  OTHERNAME * _OTHERNAME_free_a = (a); \
  ({ \
  register char * _OTHERNAME_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), OTHERNAME * __asm("a0"))) \
  (_OTHERNAME_free__bn - 12672))(_OTHERNAME_free__bn, _OTHERNAME_free_a); \
});})

#define d2i_OTHERNAME(a, in, len) ({ \
  OTHERNAME ** _d2i_OTHERNAME_a = (a); \
  unsigned char ** _d2i_OTHERNAME_in = (in); \
  long _d2i_OTHERNAME_len = (len); \
  ({ \
  register char * _d2i_OTHERNAME__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((OTHERNAME * (*)(char * __asm("a6"), OTHERNAME ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_OTHERNAME__bn - 12678))(_d2i_OTHERNAME__bn, _d2i_OTHERNAME_a, _d2i_OTHERNAME_in, _d2i_OTHERNAME_len); \
});})

#define i2d_OTHERNAME(a, out) ({ \
  OTHERNAME * _i2d_OTHERNAME_a = (a); \
  unsigned char ** _i2d_OTHERNAME_out = (out); \
  ({ \
  register char * _i2d_OTHERNAME__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), OTHERNAME * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_OTHERNAME__bn - 12684))(_i2d_OTHERNAME__bn, _i2d_OTHERNAME_a, _i2d_OTHERNAME_out); \
});})

#define OTHERNAME_it() ({ \
  register char * _OTHERNAME_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_OTHERNAME_it__bn - 12690))(_OTHERNAME_it__bn); \
})

#define EDIPARTYNAME_new() ({ \
  register char * _EDIPARTYNAME_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((EDIPARTYNAME * (*)(char * __asm("a6"))) \
  (_EDIPARTYNAME_new__bn - 12696))(_EDIPARTYNAME_new__bn); \
})

#define EDIPARTYNAME_free(a) ({ \
  EDIPARTYNAME * _EDIPARTYNAME_free_a = (a); \
  ({ \
  register char * _EDIPARTYNAME_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), EDIPARTYNAME * __asm("a0"))) \
  (_EDIPARTYNAME_free__bn - 12702))(_EDIPARTYNAME_free__bn, _EDIPARTYNAME_free_a); \
});})

#define d2i_EDIPARTYNAME(a, in, len) ({ \
  EDIPARTYNAME ** _d2i_EDIPARTYNAME_a = (a); \
  unsigned char ** _d2i_EDIPARTYNAME_in = (in); \
  long _d2i_EDIPARTYNAME_len = (len); \
  ({ \
  register char * _d2i_EDIPARTYNAME__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((EDIPARTYNAME * (*)(char * __asm("a6"), EDIPARTYNAME ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_EDIPARTYNAME__bn - 12708))(_d2i_EDIPARTYNAME__bn, _d2i_EDIPARTYNAME_a, _d2i_EDIPARTYNAME_in, _d2i_EDIPARTYNAME_len); \
});})

#define i2d_EDIPARTYNAME(a, out) ({ \
  EDIPARTYNAME * _i2d_EDIPARTYNAME_a = (a); \
  unsigned char ** _i2d_EDIPARTYNAME_out = (out); \
  ({ \
  register char * _i2d_EDIPARTYNAME__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), EDIPARTYNAME * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_EDIPARTYNAME__bn - 12714))(_i2d_EDIPARTYNAME__bn, _i2d_EDIPARTYNAME_a, _i2d_EDIPARTYNAME_out); \
});})

#define EDIPARTYNAME_it() ({ \
  register char * _EDIPARTYNAME_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_EDIPARTYNAME_it__bn - 12720))(_EDIPARTYNAME_it__bn); \
})

#define i2s_ASN1_OCTET_STRING(method, ia5) ({ \
  X509V3_EXT_METHOD * _i2s_ASN1_OCTET_STRING_method = (method); \
  ASN1_OCTET_STRING * _i2s_ASN1_OCTET_STRING_ia5 = (ia5); \
  ({ \
  register char * _i2s_ASN1_OCTET_STRING__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((char * (*)(char * __asm("a6"), X509V3_EXT_METHOD * __asm("a0"), ASN1_OCTET_STRING * __asm("a1"))) \
  (_i2s_ASN1_OCTET_STRING__bn - 12726))(_i2s_ASN1_OCTET_STRING__bn, _i2s_ASN1_OCTET_STRING_method, _i2s_ASN1_OCTET_STRING_ia5); \
});})

#define s2i_ASN1_OCTET_STRING(method, ctx, str) ({ \
  X509V3_EXT_METHOD * _s2i_ASN1_OCTET_STRING_method = (method); \
  X509V3_CTX * _s2i_ASN1_OCTET_STRING_ctx = (ctx); \
  char * _s2i_ASN1_OCTET_STRING_str = (str); \
  ({ \
  register char * _s2i_ASN1_OCTET_STRING__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((ASN1_OCTET_STRING * (*)(char * __asm("a6"), X509V3_EXT_METHOD * __asm("a0"), X509V3_CTX * __asm("a1"), char * __asm("a2"))) \
  (_s2i_ASN1_OCTET_STRING__bn - 12732))(_s2i_ASN1_OCTET_STRING__bn, _s2i_ASN1_OCTET_STRING_method, _s2i_ASN1_OCTET_STRING_ctx, _s2i_ASN1_OCTET_STRING_str); \
});})

#define EXTENDED_KEY_USAGE_new() ({ \
  register char * _EXTENDED_KEY_USAGE_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((EXTENDED_KEY_USAGE * (*)(char * __asm("a6"))) \
  (_EXTENDED_KEY_USAGE_new__bn - 12738))(_EXTENDED_KEY_USAGE_new__bn); \
})

#define EXTENDED_KEY_USAGE_free(a) ({ \
  EXTENDED_KEY_USAGE * _EXTENDED_KEY_USAGE_free_a = (a); \
  ({ \
  register char * _EXTENDED_KEY_USAGE_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), EXTENDED_KEY_USAGE * __asm("a0"))) \
  (_EXTENDED_KEY_USAGE_free__bn - 12744))(_EXTENDED_KEY_USAGE_free__bn, _EXTENDED_KEY_USAGE_free_a); \
});})

#define d2i_EXTENDED_KEY_USAGE(a, in, len) ({ \
  EXTENDED_KEY_USAGE ** _d2i_EXTENDED_KEY_USAGE_a = (a); \
  unsigned char ** _d2i_EXTENDED_KEY_USAGE_in = (in); \
  long _d2i_EXTENDED_KEY_USAGE_len = (len); \
  ({ \
  register char * _d2i_EXTENDED_KEY_USAGE__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((EXTENDED_KEY_USAGE * (*)(char * __asm("a6"), EXTENDED_KEY_USAGE ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_EXTENDED_KEY_USAGE__bn - 12750))(_d2i_EXTENDED_KEY_USAGE__bn, _d2i_EXTENDED_KEY_USAGE_a, _d2i_EXTENDED_KEY_USAGE_in, _d2i_EXTENDED_KEY_USAGE_len); \
});})

#define i2d_EXTENDED_KEY_USAGE(a, out) ({ \
  EXTENDED_KEY_USAGE * _i2d_EXTENDED_KEY_USAGE_a = (a); \
  unsigned char ** _i2d_EXTENDED_KEY_USAGE_out = (out); \
  ({ \
  register char * _i2d_EXTENDED_KEY_USAGE__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), EXTENDED_KEY_USAGE * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_EXTENDED_KEY_USAGE__bn - 12756))(_i2d_EXTENDED_KEY_USAGE__bn, _i2d_EXTENDED_KEY_USAGE_a, _i2d_EXTENDED_KEY_USAGE_out); \
});})

#define EXTENDED_KEY_USAGE_it() ({ \
  register char * _EXTENDED_KEY_USAGE_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_EXTENDED_KEY_USAGE_it__bn - 12762))(_EXTENDED_KEY_USAGE_it__bn); \
})

#define i2a_ACCESS_DESCRIPTION(bp, a) ({ \
  BIO * _i2a_ACCESS_DESCRIPTION_bp = (bp); \
  ACCESS_DESCRIPTION* _i2a_ACCESS_DESCRIPTION_a = (a); \
  ({ \
  register char * _i2a_ACCESS_DESCRIPTION__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIO * __asm("a0"), ACCESS_DESCRIPTION* __asm("a1"))) \
  (_i2a_ACCESS_DESCRIPTION__bn - 12768))(_i2a_ACCESS_DESCRIPTION__bn, _i2a_ACCESS_DESCRIPTION_bp, _i2a_ACCESS_DESCRIPTION_a); \
});})

#define CERTIFICATEPOLICIES_new() ({ \
  register char * _CERTIFICATEPOLICIES_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((CERTIFICATEPOLICIES * (*)(char * __asm("a6"))) \
  (_CERTIFICATEPOLICIES_new__bn - 12774))(_CERTIFICATEPOLICIES_new__bn); \
})

#define CERTIFICATEPOLICIES_free(a) ({ \
  CERTIFICATEPOLICIES * _CERTIFICATEPOLICIES_free_a = (a); \
  ({ \
  register char * _CERTIFICATEPOLICIES_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), CERTIFICATEPOLICIES * __asm("a0"))) \
  (_CERTIFICATEPOLICIES_free__bn - 12780))(_CERTIFICATEPOLICIES_free__bn, _CERTIFICATEPOLICIES_free_a); \
});})

#define d2i_CERTIFICATEPOLICIES(a, in, len) ({ \
  CERTIFICATEPOLICIES ** _d2i_CERTIFICATEPOLICIES_a = (a); \
  unsigned char ** _d2i_CERTIFICATEPOLICIES_in = (in); \
  long _d2i_CERTIFICATEPOLICIES_len = (len); \
  ({ \
  register char * _d2i_CERTIFICATEPOLICIES__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((CERTIFICATEPOLICIES * (*)(char * __asm("a6"), CERTIFICATEPOLICIES ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_CERTIFICATEPOLICIES__bn - 12786))(_d2i_CERTIFICATEPOLICIES__bn, _d2i_CERTIFICATEPOLICIES_a, _d2i_CERTIFICATEPOLICIES_in, _d2i_CERTIFICATEPOLICIES_len); \
});})

#define i2d_CERTIFICATEPOLICIES(a, out) ({ \
  CERTIFICATEPOLICIES * _i2d_CERTIFICATEPOLICIES_a = (a); \
  unsigned char ** _i2d_CERTIFICATEPOLICIES_out = (out); \
  ({ \
  register char * _i2d_CERTIFICATEPOLICIES__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), CERTIFICATEPOLICIES * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_CERTIFICATEPOLICIES__bn - 12792))(_i2d_CERTIFICATEPOLICIES__bn, _i2d_CERTIFICATEPOLICIES_a, _i2d_CERTIFICATEPOLICIES_out); \
});})

#define CERTIFICATEPOLICIES_it() ({ \
  register char * _CERTIFICATEPOLICIES_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_CERTIFICATEPOLICIES_it__bn - 12798))(_CERTIFICATEPOLICIES_it__bn); \
})

#define POLICYINFO_new() ({ \
  register char * _POLICYINFO_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((POLICYINFO * (*)(char * __asm("a6"))) \
  (_POLICYINFO_new__bn - 12804))(_POLICYINFO_new__bn); \
})

#define POLICYINFO_free(a) ({ \
  POLICYINFO * _POLICYINFO_free_a = (a); \
  ({ \
  register char * _POLICYINFO_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), POLICYINFO * __asm("a0"))) \
  (_POLICYINFO_free__bn - 12810))(_POLICYINFO_free__bn, _POLICYINFO_free_a); \
});})

#define d2i_POLICYINFO(a, in, len) ({ \
  POLICYINFO ** _d2i_POLICYINFO_a = (a); \
  unsigned char ** _d2i_POLICYINFO_in = (in); \
  long _d2i_POLICYINFO_len = (len); \
  ({ \
  register char * _d2i_POLICYINFO__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((POLICYINFO * (*)(char * __asm("a6"), POLICYINFO ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_POLICYINFO__bn - 12816))(_d2i_POLICYINFO__bn, _d2i_POLICYINFO_a, _d2i_POLICYINFO_in, _d2i_POLICYINFO_len); \
});})

#define i2d_POLICYINFO(a, out) ({ \
  POLICYINFO * _i2d_POLICYINFO_a = (a); \
  unsigned char ** _i2d_POLICYINFO_out = (out); \
  ({ \
  register char * _i2d_POLICYINFO__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), POLICYINFO * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_POLICYINFO__bn - 12822))(_i2d_POLICYINFO__bn, _i2d_POLICYINFO_a, _i2d_POLICYINFO_out); \
});})

#define POLICYINFO_it() ({ \
  register char * _POLICYINFO_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_POLICYINFO_it__bn - 12828))(_POLICYINFO_it__bn); \
})

#define POLICYQUALINFO_new() ({ \
  register char * _POLICYQUALINFO_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((POLICYQUALINFO * (*)(char * __asm("a6"))) \
  (_POLICYQUALINFO_new__bn - 12834))(_POLICYQUALINFO_new__bn); \
})

#define POLICYQUALINFO_free(a) ({ \
  POLICYQUALINFO * _POLICYQUALINFO_free_a = (a); \
  ({ \
  register char * _POLICYQUALINFO_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), POLICYQUALINFO * __asm("a0"))) \
  (_POLICYQUALINFO_free__bn - 12840))(_POLICYQUALINFO_free__bn, _POLICYQUALINFO_free_a); \
});})

#define d2i_POLICYQUALINFO(a, in, len) ({ \
  POLICYQUALINFO ** _d2i_POLICYQUALINFO_a = (a); \
  unsigned char ** _d2i_POLICYQUALINFO_in = (in); \
  long _d2i_POLICYQUALINFO_len = (len); \
  ({ \
  register char * _d2i_POLICYQUALINFO__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((POLICYQUALINFO * (*)(char * __asm("a6"), POLICYQUALINFO ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_POLICYQUALINFO__bn - 12846))(_d2i_POLICYQUALINFO__bn, _d2i_POLICYQUALINFO_a, _d2i_POLICYQUALINFO_in, _d2i_POLICYQUALINFO_len); \
});})

#define i2d_POLICYQUALINFO(a, out) ({ \
  POLICYQUALINFO * _i2d_POLICYQUALINFO_a = (a); \
  unsigned char ** _i2d_POLICYQUALINFO_out = (out); \
  ({ \
  register char * _i2d_POLICYQUALINFO__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), POLICYQUALINFO * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_POLICYQUALINFO__bn - 12852))(_i2d_POLICYQUALINFO__bn, _i2d_POLICYQUALINFO_a, _i2d_POLICYQUALINFO_out); \
});})

#define POLICYQUALINFO_it() ({ \
  register char * _POLICYQUALINFO_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_POLICYQUALINFO_it__bn - 12858))(_POLICYQUALINFO_it__bn); \
})

#define USERNOTICE_new() ({ \
  register char * _USERNOTICE_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((USERNOTICE * (*)(char * __asm("a6"))) \
  (_USERNOTICE_new__bn - 12864))(_USERNOTICE_new__bn); \
})

#define USERNOTICE_free(a) ({ \
  USERNOTICE * _USERNOTICE_free_a = (a); \
  ({ \
  register char * _USERNOTICE_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), USERNOTICE * __asm("a0"))) \
  (_USERNOTICE_free__bn - 12870))(_USERNOTICE_free__bn, _USERNOTICE_free_a); \
});})

#define d2i_USERNOTICE(a, in, len) ({ \
  USERNOTICE ** _d2i_USERNOTICE_a = (a); \
  unsigned char ** _d2i_USERNOTICE_in = (in); \
  long _d2i_USERNOTICE_len = (len); \
  ({ \
  register char * _d2i_USERNOTICE__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((USERNOTICE * (*)(char * __asm("a6"), USERNOTICE ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_USERNOTICE__bn - 12876))(_d2i_USERNOTICE__bn, _d2i_USERNOTICE_a, _d2i_USERNOTICE_in, _d2i_USERNOTICE_len); \
});})

#define i2d_USERNOTICE(a, out) ({ \
  USERNOTICE * _i2d_USERNOTICE_a = (a); \
  unsigned char ** _i2d_USERNOTICE_out = (out); \
  ({ \
  register char * _i2d_USERNOTICE__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), USERNOTICE * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_USERNOTICE__bn - 12882))(_i2d_USERNOTICE__bn, _i2d_USERNOTICE_a, _i2d_USERNOTICE_out); \
});})

#define USERNOTICE_it() ({ \
  register char * _USERNOTICE_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_USERNOTICE_it__bn - 12888))(_USERNOTICE_it__bn); \
})

#define NOTICEREF_new() ({ \
  register char * _NOTICEREF_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((NOTICEREF * (*)(char * __asm("a6"))) \
  (_NOTICEREF_new__bn - 12894))(_NOTICEREF_new__bn); \
})

#define NOTICEREF_free(a) ({ \
  NOTICEREF * _NOTICEREF_free_a = (a); \
  ({ \
  register char * _NOTICEREF_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), NOTICEREF * __asm("a0"))) \
  (_NOTICEREF_free__bn - 12900))(_NOTICEREF_free__bn, _NOTICEREF_free_a); \
});})

#define d2i_NOTICEREF(a, in, len) ({ \
  NOTICEREF ** _d2i_NOTICEREF_a = (a); \
  unsigned char ** _d2i_NOTICEREF_in = (in); \
  long _d2i_NOTICEREF_len = (len); \
  ({ \
  register char * _d2i_NOTICEREF__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((NOTICEREF * (*)(char * __asm("a6"), NOTICEREF ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_NOTICEREF__bn - 12906))(_d2i_NOTICEREF__bn, _d2i_NOTICEREF_a, _d2i_NOTICEREF_in, _d2i_NOTICEREF_len); \
});})

#define i2d_NOTICEREF(a, out) ({ \
  NOTICEREF * _i2d_NOTICEREF_a = (a); \
  unsigned char ** _i2d_NOTICEREF_out = (out); \
  ({ \
  register char * _i2d_NOTICEREF__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), NOTICEREF * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_NOTICEREF__bn - 12912))(_i2d_NOTICEREF__bn, _i2d_NOTICEREF_a, _i2d_NOTICEREF_out); \
});})

#define NOTICEREF_it() ({ \
  register char * _NOTICEREF_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_NOTICEREF_it__bn - 12918))(_NOTICEREF_it__bn); \
})

#define CRL_DIST_POINTS_new() ({ \
  register char * _CRL_DIST_POINTS_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((CRL_DIST_POINTS * (*)(char * __asm("a6"))) \
  (_CRL_DIST_POINTS_new__bn - 12924))(_CRL_DIST_POINTS_new__bn); \
})

#define CRL_DIST_POINTS_free(a) ({ \
  CRL_DIST_POINTS * _CRL_DIST_POINTS_free_a = (a); \
  ({ \
  register char * _CRL_DIST_POINTS_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), CRL_DIST_POINTS * __asm("a0"))) \
  (_CRL_DIST_POINTS_free__bn - 12930))(_CRL_DIST_POINTS_free__bn, _CRL_DIST_POINTS_free_a); \
});})

#define d2i_CRL_DIST_POINTS(a, in, len) ({ \
  CRL_DIST_POINTS ** _d2i_CRL_DIST_POINTS_a = (a); \
  unsigned char ** _d2i_CRL_DIST_POINTS_in = (in); \
  long _d2i_CRL_DIST_POINTS_len = (len); \
  ({ \
  register char * _d2i_CRL_DIST_POINTS__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((CRL_DIST_POINTS * (*)(char * __asm("a6"), CRL_DIST_POINTS ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_CRL_DIST_POINTS__bn - 12936))(_d2i_CRL_DIST_POINTS__bn, _d2i_CRL_DIST_POINTS_a, _d2i_CRL_DIST_POINTS_in, _d2i_CRL_DIST_POINTS_len); \
});})

#define i2d_CRL_DIST_POINTS(a, out) ({ \
  CRL_DIST_POINTS * _i2d_CRL_DIST_POINTS_a = (a); \
  unsigned char ** _i2d_CRL_DIST_POINTS_out = (out); \
  ({ \
  register char * _i2d_CRL_DIST_POINTS__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), CRL_DIST_POINTS * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_CRL_DIST_POINTS__bn - 12942))(_i2d_CRL_DIST_POINTS__bn, _i2d_CRL_DIST_POINTS_a, _i2d_CRL_DIST_POINTS_out); \
});})

#define CRL_DIST_POINTS_it() ({ \
  register char * _CRL_DIST_POINTS_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_CRL_DIST_POINTS_it__bn - 12948))(_CRL_DIST_POINTS_it__bn); \
})

#define DIST_POINT_new() ({ \
  register char * _DIST_POINT_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((DIST_POINT * (*)(char * __asm("a6"))) \
  (_DIST_POINT_new__bn - 12954))(_DIST_POINT_new__bn); \
})

#define DIST_POINT_free(a) ({ \
  DIST_POINT * _DIST_POINT_free_a = (a); \
  ({ \
  register char * _DIST_POINT_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), DIST_POINT * __asm("a0"))) \
  (_DIST_POINT_free__bn - 12960))(_DIST_POINT_free__bn, _DIST_POINT_free_a); \
});})

#define d2i_DIST_POINT(a, in, len) ({ \
  DIST_POINT ** _d2i_DIST_POINT_a = (a); \
  unsigned char ** _d2i_DIST_POINT_in = (in); \
  long _d2i_DIST_POINT_len = (len); \
  ({ \
  register char * _d2i_DIST_POINT__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((DIST_POINT * (*)(char * __asm("a6"), DIST_POINT ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_DIST_POINT__bn - 12966))(_d2i_DIST_POINT__bn, _d2i_DIST_POINT_a, _d2i_DIST_POINT_in, _d2i_DIST_POINT_len); \
});})

#define i2d_DIST_POINT(a, out) ({ \
  DIST_POINT * _i2d_DIST_POINT_a = (a); \
  unsigned char ** _i2d_DIST_POINT_out = (out); \
  ({ \
  register char * _i2d_DIST_POINT__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), DIST_POINT * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_DIST_POINT__bn - 12972))(_i2d_DIST_POINT__bn, _i2d_DIST_POINT_a, _i2d_DIST_POINT_out); \
});})

#define DIST_POINT_it() ({ \
  register char * _DIST_POINT_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_DIST_POINT_it__bn - 12978))(_DIST_POINT_it__bn); \
})

#define DIST_POINT_NAME_new() ({ \
  register char * _DIST_POINT_NAME_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((DIST_POINT_NAME * (*)(char * __asm("a6"))) \
  (_DIST_POINT_NAME_new__bn - 12984))(_DIST_POINT_NAME_new__bn); \
})

#define DIST_POINT_NAME_free(a) ({ \
  DIST_POINT_NAME * _DIST_POINT_NAME_free_a = (a); \
  ({ \
  register char * _DIST_POINT_NAME_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), DIST_POINT_NAME * __asm("a0"))) \
  (_DIST_POINT_NAME_free__bn - 12990))(_DIST_POINT_NAME_free__bn, _DIST_POINT_NAME_free_a); \
});})

#define d2i_DIST_POINT_NAME(a, in, len) ({ \
  DIST_POINT_NAME ** _d2i_DIST_POINT_NAME_a = (a); \
  unsigned char ** _d2i_DIST_POINT_NAME_in = (in); \
  long _d2i_DIST_POINT_NAME_len = (len); \
  ({ \
  register char * _d2i_DIST_POINT_NAME__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((DIST_POINT_NAME * (*)(char * __asm("a6"), DIST_POINT_NAME ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_DIST_POINT_NAME__bn - 12996))(_d2i_DIST_POINT_NAME__bn, _d2i_DIST_POINT_NAME_a, _d2i_DIST_POINT_NAME_in, _d2i_DIST_POINT_NAME_len); \
});})

#define i2d_DIST_POINT_NAME(a, out) ({ \
  DIST_POINT_NAME * _i2d_DIST_POINT_NAME_a = (a); \
  unsigned char ** _i2d_DIST_POINT_NAME_out = (out); \
  ({ \
  register char * _i2d_DIST_POINT_NAME__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), DIST_POINT_NAME * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_DIST_POINT_NAME__bn - 13002))(_i2d_DIST_POINT_NAME__bn, _i2d_DIST_POINT_NAME_a, _i2d_DIST_POINT_NAME_out); \
});})

#define DIST_POINT_NAME_it() ({ \
  register char * _DIST_POINT_NAME_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_DIST_POINT_NAME_it__bn - 13008))(_DIST_POINT_NAME_it__bn); \
})

#define ACCESS_DESCRIPTION_new() ({ \
  register char * _ACCESS_DESCRIPTION_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((ACCESS_DESCRIPTION * (*)(char * __asm("a6"))) \
  (_ACCESS_DESCRIPTION_new__bn - 13014))(_ACCESS_DESCRIPTION_new__bn); \
})

#define ACCESS_DESCRIPTION_free(a) ({ \
  ACCESS_DESCRIPTION * _ACCESS_DESCRIPTION_free_a = (a); \
  ({ \
  register char * _ACCESS_DESCRIPTION_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), ACCESS_DESCRIPTION * __asm("a0"))) \
  (_ACCESS_DESCRIPTION_free__bn - 13020))(_ACCESS_DESCRIPTION_free__bn, _ACCESS_DESCRIPTION_free_a); \
});})

#define d2i_ACCESS_DESCRIPTION(a, in, len) ({ \
  ACCESS_DESCRIPTION ** _d2i_ACCESS_DESCRIPTION_a = (a); \
  unsigned char ** _d2i_ACCESS_DESCRIPTION_in = (in); \
  long _d2i_ACCESS_DESCRIPTION_len = (len); \
  ({ \
  register char * _d2i_ACCESS_DESCRIPTION__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((ACCESS_DESCRIPTION * (*)(char * __asm("a6"), ACCESS_DESCRIPTION ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_ACCESS_DESCRIPTION__bn - 13026))(_d2i_ACCESS_DESCRIPTION__bn, _d2i_ACCESS_DESCRIPTION_a, _d2i_ACCESS_DESCRIPTION_in, _d2i_ACCESS_DESCRIPTION_len); \
});})

#define i2d_ACCESS_DESCRIPTION(a, out) ({ \
  ACCESS_DESCRIPTION * _i2d_ACCESS_DESCRIPTION_a = (a); \
  unsigned char ** _i2d_ACCESS_DESCRIPTION_out = (out); \
  ({ \
  register char * _i2d_ACCESS_DESCRIPTION__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), ACCESS_DESCRIPTION * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_ACCESS_DESCRIPTION__bn - 13032))(_i2d_ACCESS_DESCRIPTION__bn, _i2d_ACCESS_DESCRIPTION_a, _i2d_ACCESS_DESCRIPTION_out); \
});})

#define ACCESS_DESCRIPTION_it() ({ \
  register char * _ACCESS_DESCRIPTION_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_ACCESS_DESCRIPTION_it__bn - 13038))(_ACCESS_DESCRIPTION_it__bn); \
})

#define AUTHORITY_INFO_ACCESS_new() ({ \
  register char * _AUTHORITY_INFO_ACCESS_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((AUTHORITY_INFO_ACCESS * (*)(char * __asm("a6"))) \
  (_AUTHORITY_INFO_ACCESS_new__bn - 13044))(_AUTHORITY_INFO_ACCESS_new__bn); \
})

#define AUTHORITY_INFO_ACCESS_free(a) ({ \
  AUTHORITY_INFO_ACCESS * _AUTHORITY_INFO_ACCESS_free_a = (a); \
  ({ \
  register char * _AUTHORITY_INFO_ACCESS_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), AUTHORITY_INFO_ACCESS * __asm("a0"))) \
  (_AUTHORITY_INFO_ACCESS_free__bn - 13050))(_AUTHORITY_INFO_ACCESS_free__bn, _AUTHORITY_INFO_ACCESS_free_a); \
});})

#define d2i_AUTHORITY_INFO_ACCESS(a, in, len) ({ \
  AUTHORITY_INFO_ACCESS ** _d2i_AUTHORITY_INFO_ACCESS_a = (a); \
  unsigned char ** _d2i_AUTHORITY_INFO_ACCESS_in = (in); \
  long _d2i_AUTHORITY_INFO_ACCESS_len = (len); \
  ({ \
  register char * _d2i_AUTHORITY_INFO_ACCESS__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((AUTHORITY_INFO_ACCESS * (*)(char * __asm("a6"), AUTHORITY_INFO_ACCESS ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_AUTHORITY_INFO_ACCESS__bn - 13056))(_d2i_AUTHORITY_INFO_ACCESS__bn, _d2i_AUTHORITY_INFO_ACCESS_a, _d2i_AUTHORITY_INFO_ACCESS_in, _d2i_AUTHORITY_INFO_ACCESS_len); \
});})

#define i2d_AUTHORITY_INFO_ACCESS(a, out) ({ \
  AUTHORITY_INFO_ACCESS * _i2d_AUTHORITY_INFO_ACCESS_a = (a); \
  unsigned char ** _i2d_AUTHORITY_INFO_ACCESS_out = (out); \
  ({ \
  register char * _i2d_AUTHORITY_INFO_ACCESS__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), AUTHORITY_INFO_ACCESS * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_AUTHORITY_INFO_ACCESS__bn - 13062))(_i2d_AUTHORITY_INFO_ACCESS__bn, _i2d_AUTHORITY_INFO_ACCESS_a, _i2d_AUTHORITY_INFO_ACCESS_out); \
});})

#define AUTHORITY_INFO_ACCESS_it() ({ \
  register char * _AUTHORITY_INFO_ACCESS_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_AUTHORITY_INFO_ACCESS_it__bn - 13068))(_AUTHORITY_INFO_ACCESS_it__bn); \
})

#define v2i_GENERAL_NAME(method, ctx, cnf) ({ \
  X509V3_EXT_METHOD * _v2i_GENERAL_NAME_method = (method); \
  X509V3_CTX * _v2i_GENERAL_NAME_ctx = (ctx); \
  CONF_VALUE * _v2i_GENERAL_NAME_cnf = (cnf); \
  ({ \
  register char * _v2i_GENERAL_NAME__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((GENERAL_NAME * (*)(char * __asm("a6"), X509V3_EXT_METHOD * __asm("a0"), X509V3_CTX * __asm("a1"), CONF_VALUE * __asm("a2"))) \
  (_v2i_GENERAL_NAME__bn - 13074))(_v2i_GENERAL_NAME__bn, _v2i_GENERAL_NAME_method, _v2i_GENERAL_NAME_ctx, _v2i_GENERAL_NAME_cnf); \
});})

#define X509V3_conf_free(val) ({ \
  CONF_VALUE * _X509V3_conf_free_val = (val); \
  ({ \
  register char * _X509V3_conf_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), CONF_VALUE * __asm("a0"))) \
  (_X509V3_conf_free__bn - 13080))(_X509V3_conf_free__bn, _X509V3_conf_free_val); \
});})

#define X509V3_EXT_nconf_nid(conf, ctx, ext_nid, value) ({ \
  CONF * _X509V3_EXT_nconf_nid_conf = (conf); \
  X509V3_CTX * _X509V3_EXT_nconf_nid_ctx = (ctx); \
  LONG _X509V3_EXT_nconf_nid_ext_nid = (ext_nid); \
  char * _X509V3_EXT_nconf_nid_value = (value); \
  ({ \
  register char * _X509V3_EXT_nconf_nid__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509_EXTENSION * (*)(char * __asm("a6"), CONF * __asm("a0"), X509V3_CTX * __asm("a1"), LONG __asm("d0"), char * __asm("a2"))) \
  (_X509V3_EXT_nconf_nid__bn - 13086))(_X509V3_EXT_nconf_nid__bn, _X509V3_EXT_nconf_nid_conf, _X509V3_EXT_nconf_nid_ctx, _X509V3_EXT_nconf_nid_ext_nid, _X509V3_EXT_nconf_nid_value); \
});})

#define X509V3_EXT_nconf(conf, ctx, name, value) ({ \
  CONF * _X509V3_EXT_nconf_conf = (conf); \
  X509V3_CTX * _X509V3_EXT_nconf_ctx = (ctx); \
  char * _X509V3_EXT_nconf_name = (name); \
  char * _X509V3_EXT_nconf_value = (value); \
  ({ \
  register char * _X509V3_EXT_nconf__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509_EXTENSION * (*)(char * __asm("a6"), CONF * __asm("a0"), X509V3_CTX * __asm("a1"), char * __asm("a2"), char * __asm("a3"))) \
  (_X509V3_EXT_nconf__bn - 13092))(_X509V3_EXT_nconf__bn, _X509V3_EXT_nconf_conf, _X509V3_EXT_nconf_ctx, _X509V3_EXT_nconf_name, _X509V3_EXT_nconf_value); \
});})

#define X509V3_EXT_add_nconf_sk(conf, ctx, section, sk) ({ \
  CONF * _X509V3_EXT_add_nconf_sk_conf = (conf); \
  X509V3_CTX * _X509V3_EXT_add_nconf_sk_ctx = (ctx); \
  char * _X509V3_EXT_add_nconf_sk_section = (section); \
  STACK_OF(X509_EXTENSION) ** _X509V3_EXT_add_nconf_sk_sk = (sk); \
  ({ \
  register char * _X509V3_EXT_add_nconf_sk__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), CONF * __asm("a0"), X509V3_CTX * __asm("a1"), char * __asm("a2"), STACK_OF(X509_EXTENSION) ** __asm("a3"))) \
  (_X509V3_EXT_add_nconf_sk__bn - 13098))(_X509V3_EXT_add_nconf_sk__bn, _X509V3_EXT_add_nconf_sk_conf, _X509V3_EXT_add_nconf_sk_ctx, _X509V3_EXT_add_nconf_sk_section, _X509V3_EXT_add_nconf_sk_sk); \
});})

#define X509V3_EXT_add_nconf(conf, ctx, section, cert) ({ \
  CONF * _X509V3_EXT_add_nconf_conf = (conf); \
  X509V3_CTX * _X509V3_EXT_add_nconf_ctx = (ctx); \
  char * _X509V3_EXT_add_nconf_section = (section); \
  X509 * _X509V3_EXT_add_nconf_cert = (cert); \
  ({ \
  register char * _X509V3_EXT_add_nconf__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), CONF * __asm("a0"), X509V3_CTX * __asm("a1"), char * __asm("a2"), X509 * __asm("a3"))) \
  (_X509V3_EXT_add_nconf__bn - 13104))(_X509V3_EXT_add_nconf__bn, _X509V3_EXT_add_nconf_conf, _X509V3_EXT_add_nconf_ctx, _X509V3_EXT_add_nconf_section, _X509V3_EXT_add_nconf_cert); \
});})

#define X509V3_EXT_REQ_add_nconf(conf, ctx, section, req) ({ \
  CONF * _X509V3_EXT_REQ_add_nconf_conf = (conf); \
  X509V3_CTX * _X509V3_EXT_REQ_add_nconf_ctx = (ctx); \
  char * _X509V3_EXT_REQ_add_nconf_section = (section); \
  X509_REQ * _X509V3_EXT_REQ_add_nconf_req = (req); \
  ({ \
  register char * _X509V3_EXT_REQ_add_nconf__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), CONF * __asm("a0"), X509V3_CTX * __asm("a1"), char * __asm("a2"), X509_REQ * __asm("a3"))) \
  (_X509V3_EXT_REQ_add_nconf__bn - 13110))(_X509V3_EXT_REQ_add_nconf__bn, _X509V3_EXT_REQ_add_nconf_conf, _X509V3_EXT_REQ_add_nconf_ctx, _X509V3_EXT_REQ_add_nconf_section, _X509V3_EXT_REQ_add_nconf_req); \
});})

#define X509V3_EXT_CRL_add_nconf(conf, ctx, section, crl) ({ \
  CONF * _X509V3_EXT_CRL_add_nconf_conf = (conf); \
  X509V3_CTX * _X509V3_EXT_CRL_add_nconf_ctx = (ctx); \
  char * _X509V3_EXT_CRL_add_nconf_section = (section); \
  X509_CRL * _X509V3_EXT_CRL_add_nconf_crl = (crl); \
  ({ \
  register char * _X509V3_EXT_CRL_add_nconf__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), CONF * __asm("a0"), X509V3_CTX * __asm("a1"), char * __asm("a2"), X509_CRL * __asm("a3"))) \
  (_X509V3_EXT_CRL_add_nconf__bn - 13116))(_X509V3_EXT_CRL_add_nconf__bn, _X509V3_EXT_CRL_add_nconf_conf, _X509V3_EXT_CRL_add_nconf_ctx, _X509V3_EXT_CRL_add_nconf_section, _X509V3_EXT_CRL_add_nconf_crl); \
});})

#define X509V3_EXT_conf_nid(conf, ctx, ext_nid, value) ({ \
  LHASH * _X509V3_EXT_conf_nid_conf = (conf); \
  X509V3_CTX * _X509V3_EXT_conf_nid_ctx = (ctx); \
  LONG _X509V3_EXT_conf_nid_ext_nid = (ext_nid); \
  char * _X509V3_EXT_conf_nid_value = (value); \
  ({ \
  register char * _X509V3_EXT_conf_nid__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509_EXTENSION * (*)(char * __asm("a6"), LHASH * __asm("a0"), X509V3_CTX * __asm("a1"), LONG __asm("d0"), char * __asm("a2"))) \
  (_X509V3_EXT_conf_nid__bn - 13122))(_X509V3_EXT_conf_nid__bn, _X509V3_EXT_conf_nid_conf, _X509V3_EXT_conf_nid_ctx, _X509V3_EXT_conf_nid_ext_nid, _X509V3_EXT_conf_nid_value); \
});})

#define X509V3_EXT_conf(conf, ctx, name, value) ({ \
  LHASH * _X509V3_EXT_conf_conf = (conf); \
  X509V3_CTX * _X509V3_EXT_conf_ctx = (ctx); \
  char * _X509V3_EXT_conf_name = (name); \
  char * _X509V3_EXT_conf_value = (value); \
  ({ \
  register char * _X509V3_EXT_conf__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509_EXTENSION * (*)(char * __asm("a6"), LHASH * __asm("a0"), X509V3_CTX * __asm("a1"), char * __asm("a2"), char * __asm("a3"))) \
  (_X509V3_EXT_conf__bn - 13128))(_X509V3_EXT_conf__bn, _X509V3_EXT_conf_conf, _X509V3_EXT_conf_ctx, _X509V3_EXT_conf_name, _X509V3_EXT_conf_value); \
});})

#define X509V3_EXT_add_conf(conf, ctx, section, cert) ({ \
  LHASH * _X509V3_EXT_add_conf_conf = (conf); \
  X509V3_CTX * _X509V3_EXT_add_conf_ctx = (ctx); \
  char * _X509V3_EXT_add_conf_section = (section); \
  X509 * _X509V3_EXT_add_conf_cert = (cert); \
  ({ \
  register char * _X509V3_EXT_add_conf__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), LHASH * __asm("a0"), X509V3_CTX * __asm("a1"), char * __asm("a2"), X509 * __asm("a3"))) \
  (_X509V3_EXT_add_conf__bn - 13134))(_X509V3_EXT_add_conf__bn, _X509V3_EXT_add_conf_conf, _X509V3_EXT_add_conf_ctx, _X509V3_EXT_add_conf_section, _X509V3_EXT_add_conf_cert); \
});})

#define X509V3_EXT_REQ_add_conf(conf, ctx, section, req) ({ \
  LHASH * _X509V3_EXT_REQ_add_conf_conf = (conf); \
  X509V3_CTX * _X509V3_EXT_REQ_add_conf_ctx = (ctx); \
  char * _X509V3_EXT_REQ_add_conf_section = (section); \
  X509_REQ * _X509V3_EXT_REQ_add_conf_req = (req); \
  ({ \
  register char * _X509V3_EXT_REQ_add_conf__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), LHASH * __asm("a0"), X509V3_CTX * __asm("a1"), char * __asm("a2"), X509_REQ * __asm("a3"))) \
  (_X509V3_EXT_REQ_add_conf__bn - 13140))(_X509V3_EXT_REQ_add_conf__bn, _X509V3_EXT_REQ_add_conf_conf, _X509V3_EXT_REQ_add_conf_ctx, _X509V3_EXT_REQ_add_conf_section, _X509V3_EXT_REQ_add_conf_req); \
});})

#define X509V3_EXT_CRL_add_conf(conf, ctx, section, crl) ({ \
  LHASH * _X509V3_EXT_CRL_add_conf_conf = (conf); \
  X509V3_CTX * _X509V3_EXT_CRL_add_conf_ctx = (ctx); \
  char * _X509V3_EXT_CRL_add_conf_section = (section); \
  X509_CRL * _X509V3_EXT_CRL_add_conf_crl = (crl); \
  ({ \
  register char * _X509V3_EXT_CRL_add_conf__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), LHASH * __asm("a0"), X509V3_CTX * __asm("a1"), char * __asm("a2"), X509_CRL * __asm("a3"))) \
  (_X509V3_EXT_CRL_add_conf__bn - 13146))(_X509V3_EXT_CRL_add_conf__bn, _X509V3_EXT_CRL_add_conf_conf, _X509V3_EXT_CRL_add_conf_ctx, _X509V3_EXT_CRL_add_conf_section, _X509V3_EXT_CRL_add_conf_crl); \
});})

#define X509V3_add_value_bool_nf(name, asn1_bool, extlist) ({ \
  char * _X509V3_add_value_bool_nf_name = (name); \
  LONG _X509V3_add_value_bool_nf_asn1_bool = (asn1_bool); \
  STACK_OF(CONF_VALUE) ** _X509V3_add_value_bool_nf_extlist = (extlist); \
  ({ \
  register char * _X509V3_add_value_bool_nf__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), char * __asm("a0"), LONG __asm("d0"), STACK_OF(CONF_VALUE) ** __asm("a1"))) \
  (_X509V3_add_value_bool_nf__bn - 13152))(_X509V3_add_value_bool_nf__bn, _X509V3_add_value_bool_nf_name, _X509V3_add_value_bool_nf_asn1_bool, _X509V3_add_value_bool_nf_extlist); \
});})

#define X509V3_get_value_bool(value, asn1_bool) ({ \
  CONF_VALUE * _X509V3_get_value_bool_value = (value); \
  int * _X509V3_get_value_bool_asn1_bool = (asn1_bool); \
  ({ \
  register char * _X509V3_get_value_bool__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), CONF_VALUE * __asm("a0"), int * __asm("a1"))) \
  (_X509V3_get_value_bool__bn - 13158))(_X509V3_get_value_bool__bn, _X509V3_get_value_bool_value, _X509V3_get_value_bool_asn1_bool); \
});})

#define X509V3_get_value_int(value, aint) ({ \
  CONF_VALUE * _X509V3_get_value_int_value = (value); \
  ASN1_INTEGER ** _X509V3_get_value_int_aint = (aint); \
  ({ \
  register char * _X509V3_get_value_int__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), CONF_VALUE * __asm("a0"), ASN1_INTEGER ** __asm("a1"))) \
  (_X509V3_get_value_int__bn - 13164))(_X509V3_get_value_int__bn, _X509V3_get_value_int_value, _X509V3_get_value_int_aint); \
});})

#define X509V3_set_nconf(ctx, conf) ({ \
  X509V3_CTX * _X509V3_set_nconf_ctx = (ctx); \
  CONF * _X509V3_set_nconf_conf = (conf); \
  ({ \
  register char * _X509V3_set_nconf__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), X509V3_CTX * __asm("a0"), CONF * __asm("a1"))) \
  (_X509V3_set_nconf__bn - 13170))(_X509V3_set_nconf__bn, _X509V3_set_nconf_ctx, _X509V3_set_nconf_conf); \
});})

#define X509V3_set_conf_lhash(ctx, lhash) ({ \
  X509V3_CTX * _X509V3_set_conf_lhash_ctx = (ctx); \
  LHASH * _X509V3_set_conf_lhash_lhash = (lhash); \
  ({ \
  register char * _X509V3_set_conf_lhash__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), X509V3_CTX * __asm("a0"), LHASH * __asm("a1"))) \
  (_X509V3_set_conf_lhash__bn - 13176))(_X509V3_set_conf_lhash__bn, _X509V3_set_conf_lhash_ctx, _X509V3_set_conf_lhash_lhash); \
});})

#define X509V3_get_string(ctx, name, section) ({ \
  X509V3_CTX * _X509V3_get_string_ctx = (ctx); \
  char * _X509V3_get_string_name = (name); \
  char * _X509V3_get_string_section = (section); \
  ({ \
  register char * _X509V3_get_string__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((char * (*)(char * __asm("a6"), X509V3_CTX * __asm("a0"), char * __asm("a1"), char * __asm("a2"))) \
  (_X509V3_get_string__bn - 13182))(_X509V3_get_string__bn, _X509V3_get_string_ctx, _X509V3_get_string_name, _X509V3_get_string_section); \
});})

#define X509V3_get_section(ctx, section) ({ \
  X509V3_CTX * _X509V3_get_section_ctx = (ctx); \
  char * _X509V3_get_section_section = (section); \
  ({ \
  register char * _X509V3_get_section__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((STACK_OF(CONF_VALUE) * (*)(char * __asm("a6"), X509V3_CTX * __asm("a0"), char * __asm("a1"))) \
  (_X509V3_get_section__bn - 13188))(_X509V3_get_section__bn, _X509V3_get_section_ctx, _X509V3_get_section_section); \
});})

#define X509V3_string_free(ctx, str) ({ \
  X509V3_CTX * _X509V3_string_free_ctx = (ctx); \
  char * _X509V3_string_free_str = (str); \
  ({ \
  register char * _X509V3_string_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), X509V3_CTX * __asm("a0"), char * __asm("a1"))) \
  (_X509V3_string_free__bn - 13194))(_X509V3_string_free__bn, _X509V3_string_free_ctx, _X509V3_string_free_str); \
});})

#define X509V3_section_free(ctx, section) ({ \
  X509V3_CTX * _X509V3_section_free_ctx = (ctx); \
  STACK_OF(CONF_VALUE) * _X509V3_section_free_section = (section); \
  ({ \
  register char * _X509V3_section_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), X509V3_CTX * __asm("a0"), STACK_OF(CONF_VALUE) * __asm("a1"))) \
  (_X509V3_section_free__bn - 13200))(_X509V3_section_free__bn, _X509V3_section_free_ctx, _X509V3_section_free_section); \
});})

#define X509V3_set_ctx(ctx, issuer, subject, req, crl, flags) ({ \
  X509V3_CTX * _X509V3_set_ctx_ctx = (ctx); \
  X509 * _X509V3_set_ctx_issuer = (issuer); \
  X509 * _X509V3_set_ctx_subject = (subject); \
  X509_REQ * _X509V3_set_ctx_req = (req); \
  X509_CRL * _X509V3_set_ctx_crl = (crl); \
  LONG _X509V3_set_ctx_flags = (flags); \
  ({ \
  register char * _X509V3_set_ctx__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), X509V3_CTX * __asm("a0"), X509 * __asm("a1"), X509 * __asm("a2"), X509_REQ * __asm("a3"), X509_CRL * __asm("d0"), LONG __asm("d1"))) \
  (_X509V3_set_ctx__bn - 13206))(_X509V3_set_ctx__bn, _X509V3_set_ctx_ctx, _X509V3_set_ctx_issuer, _X509V3_set_ctx_subject, _X509V3_set_ctx_req, _X509V3_set_ctx_crl, _X509V3_set_ctx_flags); \
});})

#define X509V3_add_value(name, value, extlist) ({ \
  const char * _X509V3_add_value_name = (name); \
  const char * _X509V3_add_value_value = (value); \
  STACK_OF(CONF_VALUE) ** _X509V3_add_value_extlist = (extlist); \
  ({ \
  register char * _X509V3_add_value__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const char * __asm("a0"), const char * __asm("a1"), STACK_OF(CONF_VALUE) ** __asm("a2"))) \
  (_X509V3_add_value__bn - 13212))(_X509V3_add_value__bn, _X509V3_add_value_name, _X509V3_add_value_value, _X509V3_add_value_extlist); \
});})

#define X509V3_add_value_uchar(name, value, extlist) ({ \
  const char * _X509V3_add_value_uchar_name = (name); \
  const unsigned char * _X509V3_add_value_uchar_value = (value); \
  STACK_OF(CONF_VALUE) ** _X509V3_add_value_uchar_extlist = (extlist); \
  ({ \
  register char * _X509V3_add_value_uchar__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const char * __asm("a0"), const unsigned char * __asm("a1"), STACK_OF(CONF_VALUE) ** __asm("a2"))) \
  (_X509V3_add_value_uchar__bn - 13218))(_X509V3_add_value_uchar__bn, _X509V3_add_value_uchar_name, _X509V3_add_value_uchar_value, _X509V3_add_value_uchar_extlist); \
});})

#define X509V3_add_value_bool(name, asn1_bool, extlist) ({ \
  const char * _X509V3_add_value_bool_name = (name); \
  LONG _X509V3_add_value_bool_asn1_bool = (asn1_bool); \
  STACK_OF(CONF_VALUE) ** _X509V3_add_value_bool_extlist = (extlist); \
  ({ \
  register char * _X509V3_add_value_bool__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const char * __asm("a0"), LONG __asm("d0"), STACK_OF(CONF_VALUE) ** __asm("a1"))) \
  (_X509V3_add_value_bool__bn - 13224))(_X509V3_add_value_bool__bn, _X509V3_add_value_bool_name, _X509V3_add_value_bool_asn1_bool, _X509V3_add_value_bool_extlist); \
});})

#define X509V3_add_value_int(name, aint, extlist) ({ \
  const char * _X509V3_add_value_int_name = (name); \
  ASN1_INTEGER * _X509V3_add_value_int_aint = (aint); \
  STACK_OF(CONF_VALUE) ** _X509V3_add_value_int_extlist = (extlist); \
  ({ \
  register char * _X509V3_add_value_int__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const char * __asm("a0"), ASN1_INTEGER * __asm("a1"), STACK_OF(CONF_VALUE) ** __asm("a2"))) \
  (_X509V3_add_value_int__bn - 13230))(_X509V3_add_value_int__bn, _X509V3_add_value_int_name, _X509V3_add_value_int_aint, _X509V3_add_value_int_extlist); \
});})

#define i2s_ASN1_INTEGER(meth, aint) ({ \
  X509V3_EXT_METHOD * _i2s_ASN1_INTEGER_meth = (meth); \
  ASN1_INTEGER * _i2s_ASN1_INTEGER_aint = (aint); \
  ({ \
  register char * _i2s_ASN1_INTEGER__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((char * (*)(char * __asm("a6"), X509V3_EXT_METHOD * __asm("a0"), ASN1_INTEGER * __asm("a1"))) \
  (_i2s_ASN1_INTEGER__bn - 13236))(_i2s_ASN1_INTEGER__bn, _i2s_ASN1_INTEGER_meth, _i2s_ASN1_INTEGER_aint); \
});})

#define s2i_ASN1_INTEGER(meth, value) ({ \
  X509V3_EXT_METHOD * _s2i_ASN1_INTEGER_meth = (meth); \
  char * _s2i_ASN1_INTEGER_value = (value); \
  ({ \
  register char * _s2i_ASN1_INTEGER__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((ASN1_INTEGER * (*)(char * __asm("a6"), X509V3_EXT_METHOD * __asm("a0"), char * __asm("a1"))) \
  (_s2i_ASN1_INTEGER__bn - 13242))(_s2i_ASN1_INTEGER__bn, _s2i_ASN1_INTEGER_meth, _s2i_ASN1_INTEGER_value); \
});})

#define i2s_ASN1_ENUMERATED(meth, aint) ({ \
  X509V3_EXT_METHOD * _i2s_ASN1_ENUMERATED_meth = (meth); \
  ASN1_ENUMERATED * _i2s_ASN1_ENUMERATED_aint = (aint); \
  ({ \
  register char * _i2s_ASN1_ENUMERATED__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((char * (*)(char * __asm("a6"), X509V3_EXT_METHOD * __asm("a0"), ASN1_ENUMERATED * __asm("a1"))) \
  (_i2s_ASN1_ENUMERATED__bn - 13248))(_i2s_ASN1_ENUMERATED__bn, _i2s_ASN1_ENUMERATED_meth, _i2s_ASN1_ENUMERATED_aint); \
});})

#define i2s_ASN1_ENUMERATED_TABLE(meth, aint) ({ \
  X509V3_EXT_METHOD * _i2s_ASN1_ENUMERATED_TABLE_meth = (meth); \
  ASN1_ENUMERATED * _i2s_ASN1_ENUMERATED_TABLE_aint = (aint); \
  ({ \
  register char * _i2s_ASN1_ENUMERATED_TABLE__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((char * (*)(char * __asm("a6"), X509V3_EXT_METHOD * __asm("a0"), ASN1_ENUMERATED * __asm("a1"))) \
  (_i2s_ASN1_ENUMERATED_TABLE__bn - 13254))(_i2s_ASN1_ENUMERATED_TABLE__bn, _i2s_ASN1_ENUMERATED_TABLE_meth, _i2s_ASN1_ENUMERATED_TABLE_aint); \
});})

#define X509V3_EXT_add(ext) ({ \
  X509V3_EXT_METHOD * _X509V3_EXT_add_ext = (ext); \
  ({ \
  register char * _X509V3_EXT_add__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509V3_EXT_METHOD * __asm("a0"))) \
  (_X509V3_EXT_add__bn - 13260))(_X509V3_EXT_add__bn, _X509V3_EXT_add_ext); \
});})

#define X509V3_EXT_add_list(extlist) ({ \
  X509V3_EXT_METHOD * _X509V3_EXT_add_list_extlist = (extlist); \
  ({ \
  register char * _X509V3_EXT_add_list__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509V3_EXT_METHOD * __asm("a0"))) \
  (_X509V3_EXT_add_list__bn - 13266))(_X509V3_EXT_add_list__bn, _X509V3_EXT_add_list_extlist); \
});})

#define X509V3_EXT_add_alias(nid_to, nid_from) ({ \
  LONG _X509V3_EXT_add_alias_nid_to = (nid_to); \
  LONG _X509V3_EXT_add_alias_nid_from = (nid_from); \
  ({ \
  register char * _X509V3_EXT_add_alias__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), LONG __asm("d0"), LONG __asm("d1"))) \
  (_X509V3_EXT_add_alias__bn - 13272))(_X509V3_EXT_add_alias__bn, _X509V3_EXT_add_alias_nid_to, _X509V3_EXT_add_alias_nid_from); \
});})

#define X509V3_EXT_cleanup() ({ \
  register char * _X509V3_EXT_cleanup__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"))) \
  (_X509V3_EXT_cleanup__bn - 13278))(_X509V3_EXT_cleanup__bn); \
})

#define X509V3_EXT_get(ext) ({ \
  X509_EXTENSION * _X509V3_EXT_get_ext = (ext); \
  ({ \
  register char * _X509V3_EXT_get__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509V3_EXT_METHOD * (*)(char * __asm("a6"), X509_EXTENSION * __asm("a0"))) \
  (_X509V3_EXT_get__bn - 13284))(_X509V3_EXT_get__bn, _X509V3_EXT_get_ext); \
});})

#define X509V3_EXT_get_nid(nid) ({ \
  LONG _X509V3_EXT_get_nid_nid = (nid); \
  ({ \
  register char * _X509V3_EXT_get_nid__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509V3_EXT_METHOD * (*)(char * __asm("a6"), LONG __asm("d0"))) \
  (_X509V3_EXT_get_nid__bn - 13290))(_X509V3_EXT_get_nid__bn, _X509V3_EXT_get_nid_nid); \
});})

#define X509V3_add_standard_extensions() ({ \
  register char * _X509V3_add_standard_extensions__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"))) \
  (_X509V3_add_standard_extensions__bn - 13296))(_X509V3_add_standard_extensions__bn); \
})

#define X509V3_parse_list(line) ({ \
  const char * _X509V3_parse_list_line = (line); \
  ({ \
  register char * _X509V3_parse_list__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((STACK_OF(CONF_VALUE) * (*)(char * __asm("a6"), const char * __asm("a0"))) \
  (_X509V3_parse_list__bn - 13302))(_X509V3_parse_list__bn, _X509V3_parse_list_line); \
});})

#define X509V3_EXT_d2i(ext) ({ \
  X509_EXTENSION * _X509V3_EXT_d2i_ext = (ext); \
  ({ \
  register char * _X509V3_EXT_d2i__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void * (*)(char * __asm("a6"), X509_EXTENSION * __asm("a0"))) \
  (_X509V3_EXT_d2i__bn - 13308))(_X509V3_EXT_d2i__bn, _X509V3_EXT_d2i_ext); \
});})

#define X509V3_get_d2i(x, nid, crit, idx) ({ \
  STACK_OF(X509_EXTENSION) * _X509V3_get_d2i_x = (x); \
  LONG _X509V3_get_d2i_nid = (nid); \
  int * _X509V3_get_d2i_crit = (crit); \
  int * _X509V3_get_d2i_idx = (idx); \
  ({ \
  register char * _X509V3_get_d2i__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void * (*)(char * __asm("a6"), STACK_OF(X509_EXTENSION) * __asm("a0"), LONG __asm("d0"), int * __asm("a1"), int * __asm("a2"))) \
  (_X509V3_get_d2i__bn - 13314))(_X509V3_get_d2i__bn, _X509V3_get_d2i_x, _X509V3_get_d2i_nid, _X509V3_get_d2i_crit, _X509V3_get_d2i_idx); \
});})

#define X509V3_EXT_i2d(ext_nid, crit, ext_struc) ({ \
  LONG _X509V3_EXT_i2d_ext_nid = (ext_nid); \
  LONG _X509V3_EXT_i2d_crit = (crit); \
  void * _X509V3_EXT_i2d_ext_struc = (ext_struc); \
  ({ \
  register char * _X509V3_EXT_i2d__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509_EXTENSION * (*)(char * __asm("a6"), LONG __asm("d0"), LONG __asm("d1"), void * __asm("a0"))) \
  (_X509V3_EXT_i2d__bn - 13320))(_X509V3_EXT_i2d__bn, _X509V3_EXT_i2d_ext_nid, _X509V3_EXT_i2d_crit, _X509V3_EXT_i2d_ext_struc); \
});})

#define X509V3_add1_i2d(x, nid, value, crit, flags) ({ \
  STACK_OF(X509_EXTENSION) ** _X509V3_add1_i2d_x = (x); \
  LONG _X509V3_add1_i2d_nid = (nid); \
  void * _X509V3_add1_i2d_value = (value); \
  LONG _X509V3_add1_i2d_crit = (crit); \
  unsigned long _X509V3_add1_i2d_flags = (flags); \
  ({ \
  register char * _X509V3_add1_i2d__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), STACK_OF(X509_EXTENSION) ** __asm("a0"), LONG __asm("d0"), void * __asm("a1"), LONG __asm("d1"), unsigned long __asm("d2"))) \
  (_X509V3_add1_i2d__bn - 13326))(_X509V3_add1_i2d__bn, _X509V3_add1_i2d_x, _X509V3_add1_i2d_nid, _X509V3_add1_i2d_value, _X509V3_add1_i2d_crit, _X509V3_add1_i2d_flags); \
});})

#define hex_to_string(buffer, len) ({ \
  unsigned char * _hex_to_string_buffer = (buffer); \
  long _hex_to_string_len = (len); \
  ({ \
  register char * _hex_to_string__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((char * (*)(char * __asm("a6"), unsigned char * __asm("a0"), long __asm("d0"))) \
  (_hex_to_string__bn - 13332))(_hex_to_string__bn, _hex_to_string_buffer, _hex_to_string_len); \
});})

#define string_to_hex(str, len) ({ \
  char * _string_to_hex_str = (str); \
  long * _string_to_hex_len = (len); \
  ({ \
  register char * _string_to_hex__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((unsigned char * (*)(char * __asm("a6"), char * __asm("a0"), long * __asm("a1"))) \
  (_string_to_hex__bn - 13338))(_string_to_hex__bn, _string_to_hex_str, _string_to_hex_len); \
});})

#define name_cmp(name, cmp) ({ \
  const char * _name_cmp_name = (name); \
  const char * _name_cmp_cmp = (cmp); \
  ({ \
  register char * _name_cmp__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const char * __asm("a0"), const char * __asm("a1"))) \
  (_name_cmp__bn - 13344))(_name_cmp__bn, _name_cmp_name, _name_cmp_cmp); \
});})

#define X509V3_EXT_val_prn(out, val, indent, ml) ({ \
  BIO * _X509V3_EXT_val_prn_out = (out); \
  STACK_OF(CONF_VALUE) * _X509V3_EXT_val_prn_val = (val); \
  LONG _X509V3_EXT_val_prn_indent = (indent); \
  LONG _X509V3_EXT_val_prn_ml = (ml); \
  ({ \
  register char * _X509V3_EXT_val_prn__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), BIO * __asm("a0"), STACK_OF(CONF_VALUE) * __asm("a1"), LONG __asm("d0"), LONG __asm("d1"))) \
  (_X509V3_EXT_val_prn__bn - 13350))(_X509V3_EXT_val_prn__bn, _X509V3_EXT_val_prn_out, _X509V3_EXT_val_prn_val, _X509V3_EXT_val_prn_indent, _X509V3_EXT_val_prn_ml); \
});})

#define X509V3_EXT_print(out, ext, flag, indent) ({ \
  BIO * _X509V3_EXT_print_out = (out); \
  X509_EXTENSION * _X509V3_EXT_print_ext = (ext); \
  unsigned long _X509V3_EXT_print_flag = (flag); \
  LONG _X509V3_EXT_print_indent = (indent); \
  ({ \
  register char * _X509V3_EXT_print__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIO * __asm("a0"), X509_EXTENSION * __asm("a1"), unsigned long __asm("d0"), LONG __asm("d1"))) \
  (_X509V3_EXT_print__bn - 13356))(_X509V3_EXT_print__bn, _X509V3_EXT_print_out, _X509V3_EXT_print_ext, _X509V3_EXT_print_flag, _X509V3_EXT_print_indent); \
});})

#define X509V3_extensions_print(out, title, exts, flag, indent) ({ \
  BIO * _X509V3_extensions_print_out = (out); \
  char * _X509V3_extensions_print_title = (title); \
  STACK_OF(X509_EXTENSION) * _X509V3_extensions_print_exts = (exts); \
  unsigned long _X509V3_extensions_print_flag = (flag); \
  LONG _X509V3_extensions_print_indent = (indent); \
  ({ \
  register char * _X509V3_extensions_print__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIO * __asm("a0"), char * __asm("a1"), STACK_OF(X509_EXTENSION) * __asm("a2"), unsigned long __asm("d0"), LONG __asm("d1"))) \
  (_X509V3_extensions_print__bn - 13362))(_X509V3_extensions_print__bn, _X509V3_extensions_print_out, _X509V3_extensions_print_title, _X509V3_extensions_print_exts, _X509V3_extensions_print_flag, _X509V3_extensions_print_indent); \
});})

#define X509_check_purpose(x, id, ca) ({ \
  X509 * _X509_check_purpose_x = (x); \
  LONG _X509_check_purpose_id = (id); \
  LONG _X509_check_purpose_ca = (ca); \
  ({ \
  register char * _X509_check_purpose__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509 * __asm("a0"), LONG __asm("d0"), LONG __asm("d1"))) \
  (_X509_check_purpose__bn - 13368))(_X509_check_purpose__bn, _X509_check_purpose_x, _X509_check_purpose_id, _X509_check_purpose_ca); \
});})

#define X509_supported_extension(ex) ({ \
  X509_EXTENSION * _X509_supported_extension_ex = (ex); \
  ({ \
  register char * _X509_supported_extension__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509_EXTENSION * __asm("a0"))) \
  (_X509_supported_extension__bn - 13374))(_X509_supported_extension__bn, _X509_supported_extension_ex); \
});})

#define X509_PURPOSE_set(p, purpose) ({ \
  int * _X509_PURPOSE_set_p = (p); \
  LONG _X509_PURPOSE_set_purpose = (purpose); \
  ({ \
  register char * _X509_PURPOSE_set__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), int * __asm("a0"), LONG __asm("d0"))) \
  (_X509_PURPOSE_set__bn - 13380))(_X509_PURPOSE_set__bn, _X509_PURPOSE_set_p, _X509_PURPOSE_set_purpose); \
});})

#define X509_check_issued(issuer, subject) ({ \
  X509 * _X509_check_issued_issuer = (issuer); \
  X509 * _X509_check_issued_subject = (subject); \
  ({ \
  register char * _X509_check_issued__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509 * __asm("a0"), X509 * __asm("a1"))) \
  (_X509_check_issued__bn - 13386))(_X509_check_issued__bn, _X509_check_issued_issuer, _X509_check_issued_subject); \
});})

#define X509_PURPOSE_get_count() ({ \
  register char * _X509_PURPOSE_get_count__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"))) \
  (_X509_PURPOSE_get_count__bn - 13392))(_X509_PURPOSE_get_count__bn); \
})

#define X509_PURPOSE_get0(idx) ({ \
  LONG _X509_PURPOSE_get0_idx = (idx); \
  ({ \
  register char * _X509_PURPOSE_get0__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((X509_PURPOSE * (*)(char * __asm("a6"), LONG __asm("d0"))) \
  (_X509_PURPOSE_get0__bn - 13398))(_X509_PURPOSE_get0__bn, _X509_PURPOSE_get0_idx); \
});})

#define X509_PURPOSE_get_by_sname(sname) ({ \
  char * _X509_PURPOSE_get_by_sname_sname = (sname); \
  ({ \
  register char * _X509_PURPOSE_get_by_sname__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), char * __asm("a0"))) \
  (_X509_PURPOSE_get_by_sname__bn - 13404))(_X509_PURPOSE_get_by_sname__bn, _X509_PURPOSE_get_by_sname_sname); \
});})

#define X509_PURPOSE_get_by_id(id) ({ \
  LONG _X509_PURPOSE_get_by_id_id = (id); \
  ({ \
  register char * _X509_PURPOSE_get_by_id__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), LONG __asm("d0"))) \
  (_X509_PURPOSE_get_by_id__bn - 13410))(_X509_PURPOSE_get_by_id__bn, _X509_PURPOSE_get_by_id_id); \
});})

#define X509_PURPOSE_add(id, trust, flags, ck, name, sname, arg) ({ \
  LONG _X509_PURPOSE_add_id = (id); \
  LONG _X509_PURPOSE_add_trust = (trust); \
  LONG _X509_PURPOSE_add_flags = (flags); \
  int (*_X509_PURPOSE_add_ck)(const X509_PURPOSE *, const X509 *, int) = (ck); \
  char * _X509_PURPOSE_add_name = (name); \
  char * _X509_PURPOSE_add_sname = (sname); \
  void * _X509_PURPOSE_add_arg = (arg); \
  ({ \
  register char * _X509_PURPOSE_add__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), LONG __asm("d0"), LONG __asm("d1"), LONG __asm("d2"), int (*)(const X509_PURPOSE *, const X509 *, int) __asm("a0"), char * __asm("a1"), char * __asm("a2"), void * __asm("a3"))) \
  (_X509_PURPOSE_add__bn - 13416))(_X509_PURPOSE_add__bn, _X509_PURPOSE_add_id, _X509_PURPOSE_add_trust, _X509_PURPOSE_add_flags, _X509_PURPOSE_add_ck, _X509_PURPOSE_add_name, _X509_PURPOSE_add_sname, _X509_PURPOSE_add_arg); \
});})

#define X509_PURPOSE_get0_name(xp) ({ \
  X509_PURPOSE * _X509_PURPOSE_get0_name_xp = (xp); \
  ({ \
  register char * _X509_PURPOSE_get0_name__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((char * (*)(char * __asm("a6"), X509_PURPOSE * __asm("a0"))) \
  (_X509_PURPOSE_get0_name__bn - 13422))(_X509_PURPOSE_get0_name__bn, _X509_PURPOSE_get0_name_xp); \
});})

#define X509_PURPOSE_get0_sname(xp) ({ \
  X509_PURPOSE * _X509_PURPOSE_get0_sname_xp = (xp); \
  ({ \
  register char * _X509_PURPOSE_get0_sname__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((char * (*)(char * __asm("a6"), X509_PURPOSE * __asm("a0"))) \
  (_X509_PURPOSE_get0_sname__bn - 13428))(_X509_PURPOSE_get0_sname__bn, _X509_PURPOSE_get0_sname_xp); \
});})

#define X509_PURPOSE_get_trust(xp) ({ \
  X509_PURPOSE * _X509_PURPOSE_get_trust_xp = (xp); \
  ({ \
  register char * _X509_PURPOSE_get_trust__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509_PURPOSE * __asm("a0"))) \
  (_X509_PURPOSE_get_trust__bn - 13434))(_X509_PURPOSE_get_trust__bn, _X509_PURPOSE_get_trust_xp); \
});})

#define X509_PURPOSE_cleanup() ({ \
  register char * _X509_PURPOSE_cleanup__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"))) \
  (_X509_PURPOSE_cleanup__bn - 13440))(_X509_PURPOSE_cleanup__bn); \
})

#define X509_PURPOSE_get_id(a) ({ \
  X509_PURPOSE * _X509_PURPOSE_get_id_a = (a); \
  ({ \
  register char * _X509_PURPOSE_get_id__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509_PURPOSE * __asm("a0"))) \
  (_X509_PURPOSE_get_id__bn - 13446))(_X509_PURPOSE_get_id__bn, _X509_PURPOSE_get_id_a); \
});})

#define X509_get1_email(x) ({ \
  X509 * _X509_get1_email_x = (x); \
  ({ \
  register char * _X509_get1_email__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((STACK * (*)(char * __asm("a6"), X509 * __asm("a0"))) \
  (_X509_get1_email__bn - 13452))(_X509_get1_email__bn, _X509_get1_email_x); \
});})

#define X509_REQ_get1_email(x) ({ \
  X509_REQ * _X509_REQ_get1_email_x = (x); \
  ({ \
  register char * _X509_REQ_get1_email__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((STACK * (*)(char * __asm("a6"), X509_REQ * __asm("a0"))) \
  (_X509_REQ_get1_email__bn - 13458))(_X509_REQ_get1_email__bn, _X509_REQ_get1_email_x); \
});})

#define X509_email_free(sk) ({ \
  STACK * _X509_email_free_sk = (sk); \
  ({ \
  register char * _X509_email_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), STACK * __asm("a0"))) \
  (_X509_email_free__bn - 13464))(_X509_email_free__bn, _X509_email_free_sk); \
});})

#define ERR_load_X509V3_strings() ({ \
  register char * _ERR_load_X509V3_strings__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"))) \
  (_ERR_load_X509V3_strings__bn - 13470))(_ERR_load_X509V3_strings__bn); \
})

#define AES_options() ({ \
  register char * _AES_options__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const char * (*)(char * __asm("a6"))) \
  (_AES_options__bn - 13476))(_AES_options__bn); \
})

#define AES_set_encrypt_key(userKey, bits, key) ({ \
  const unsigned char * _AES_set_encrypt_key_userKey = (userKey); \
  const LONG _AES_set_encrypt_key_bits = (bits); \
  AES_KEY * _AES_set_encrypt_key_key = (key); \
  ({ \
  register char * _AES_set_encrypt_key__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const unsigned char * __asm("a0"), const LONG __asm("d0"), AES_KEY * __asm("a1"))) \
  (_AES_set_encrypt_key__bn - 13482))(_AES_set_encrypt_key__bn, _AES_set_encrypt_key_userKey, _AES_set_encrypt_key_bits, _AES_set_encrypt_key_key); \
});})

#define AES_set_decrypt_key(userKey, bits, key) ({ \
  const unsigned char * _AES_set_decrypt_key_userKey = (userKey); \
  const LONG _AES_set_decrypt_key_bits = (bits); \
  AES_KEY * _AES_set_decrypt_key_key = (key); \
  ({ \
  register char * _AES_set_decrypt_key__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const unsigned char * __asm("a0"), const LONG __asm("d0"), AES_KEY * __asm("a1"))) \
  (_AES_set_decrypt_key__bn - 13488))(_AES_set_decrypt_key__bn, _AES_set_decrypt_key_userKey, _AES_set_decrypt_key_bits, _AES_set_decrypt_key_key); \
});})

#define AES_encrypt(in, out, key) ({ \
  const unsigned char * _AES_encrypt_in = (in); \
  unsigned char * _AES_encrypt_out = (out); \
  const AES_KEY * _AES_encrypt_key = (key); \
  ({ \
  register char * _AES_encrypt__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), const unsigned char * __asm("a0"), unsigned char * __asm("a1"), const AES_KEY * __asm("a2"))) \
  (_AES_encrypt__bn - 13494))(_AES_encrypt__bn, _AES_encrypt_in, _AES_encrypt_out, _AES_encrypt_key); \
});})

#define AES_decrypt(in, out, key) ({ \
  const unsigned char * _AES_decrypt_in = (in); \
  unsigned char * _AES_decrypt_out = (out); \
  const AES_KEY * _AES_decrypt_key = (key); \
  ({ \
  register char * _AES_decrypt__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), const unsigned char * __asm("a0"), unsigned char * __asm("a1"), const AES_KEY * __asm("a2"))) \
  (_AES_decrypt__bn - 13500))(_AES_decrypt__bn, _AES_decrypt_in, _AES_decrypt_out, _AES_decrypt_key); \
});})

#define AES_ecb_encrypt(in, out, key, enc) ({ \
  const unsigned char * _AES_ecb_encrypt_in = (in); \
  unsigned char * _AES_ecb_encrypt_out = (out); \
  const AES_KEY * _AES_ecb_encrypt_key = (key); \
  const LONG _AES_ecb_encrypt_enc = (enc); \
  ({ \
  register char * _AES_ecb_encrypt__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), const unsigned char * __asm("a0"), unsigned char * __asm("a1"), const AES_KEY * __asm("a2"), const LONG __asm("d0"))) \
  (_AES_ecb_encrypt__bn - 13506))(_AES_ecb_encrypt__bn, _AES_ecb_encrypt_in, _AES_ecb_encrypt_out, _AES_ecb_encrypt_key, _AES_ecb_encrypt_enc); \
});})

#define AES_cbc_encrypt(in, out, length, key, ivec, enc) ({ \
  const unsigned char * _AES_cbc_encrypt_in = (in); \
  unsigned char * _AES_cbc_encrypt_out = (out); \
  const unsigned long _AES_cbc_encrypt_length = (length); \
  const AES_KEY * _AES_cbc_encrypt_key = (key); \
  unsigned char * _AES_cbc_encrypt_ivec = (ivec); \
  const LONG _AES_cbc_encrypt_enc = (enc); \
  ({ \
  register char * _AES_cbc_encrypt__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), const unsigned char * __asm("a0"), unsigned char * __asm("a1"), const unsigned long __asm("d0"), const AES_KEY * __asm("a2"), unsigned char * __asm("a3"), const LONG __asm("d1"))) \
  (_AES_cbc_encrypt__bn - 13512))(_AES_cbc_encrypt__bn, _AES_cbc_encrypt_in, _AES_cbc_encrypt_out, _AES_cbc_encrypt_length, _AES_cbc_encrypt_key, _AES_cbc_encrypt_ivec, _AES_cbc_encrypt_enc); \
});})

#define AES_cfb128_encrypt(in, out, length, key, ivec, num, enc) ({ \
  const unsigned char * _AES_cfb128_encrypt_in = (in); \
  unsigned char * _AES_cfb128_encrypt_out = (out); \
  const unsigned long _AES_cfb128_encrypt_length = (length); \
  const AES_KEY * _AES_cfb128_encrypt_key = (key); \
  unsigned char * _AES_cfb128_encrypt_ivec = (ivec); \
  int * _AES_cfb128_encrypt_num = (num); \
  const LONG _AES_cfb128_encrypt_enc = (enc); \
  ({ \
  register char * _AES_cfb128_encrypt__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), const unsigned char * __asm("a0"), unsigned char * __asm("a1"), const unsigned long __asm("d0"), const AES_KEY * __asm("a2"), unsigned char * __asm("a3"), int * __asm("d1"), const LONG __asm("d2"))) \
  (_AES_cfb128_encrypt__bn - 13518))(_AES_cfb128_encrypt__bn, _AES_cfb128_encrypt_in, _AES_cfb128_encrypt_out, _AES_cfb128_encrypt_length, _AES_cfb128_encrypt_key, _AES_cfb128_encrypt_ivec, _AES_cfb128_encrypt_num, _AES_cfb128_encrypt_enc); \
});})

#define AES_cfb1_encrypt(in, out, length, key, ivec, num, enc) ({ \
  const unsigned char * _AES_cfb1_encrypt_in = (in); \
  unsigned char * _AES_cfb1_encrypt_out = (out); \
  const unsigned long _AES_cfb1_encrypt_length = (length); \
  const AES_KEY * _AES_cfb1_encrypt_key = (key); \
  unsigned char * _AES_cfb1_encrypt_ivec = (ivec); \
  int * _AES_cfb1_encrypt_num = (num); \
  const LONG _AES_cfb1_encrypt_enc = (enc); \
  ({ \
  register char * _AES_cfb1_encrypt__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), const unsigned char * __asm("a0"), unsigned char * __asm("a1"), const unsigned long __asm("d0"), const AES_KEY * __asm("a2"), unsigned char * __asm("a3"), int * __asm("d1"), const LONG __asm("d2"))) \
  (_AES_cfb1_encrypt__bn - 13524))(_AES_cfb1_encrypt__bn, _AES_cfb1_encrypt_in, _AES_cfb1_encrypt_out, _AES_cfb1_encrypt_length, _AES_cfb1_encrypt_key, _AES_cfb1_encrypt_ivec, _AES_cfb1_encrypt_num, _AES_cfb1_encrypt_enc); \
});})

#define AES_cfb8_encrypt(in, out, length, key, ivec, num, enc) ({ \
  const unsigned char * _AES_cfb8_encrypt_in = (in); \
  unsigned char * _AES_cfb8_encrypt_out = (out); \
  const unsigned long _AES_cfb8_encrypt_length = (length); \
  const AES_KEY * _AES_cfb8_encrypt_key = (key); \
  unsigned char * _AES_cfb8_encrypt_ivec = (ivec); \
  int * _AES_cfb8_encrypt_num = (num); \
  const LONG _AES_cfb8_encrypt_enc = (enc); \
  ({ \
  register char * _AES_cfb8_encrypt__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), const unsigned char * __asm("a0"), unsigned char * __asm("a1"), const unsigned long __asm("d0"), const AES_KEY * __asm("a2"), unsigned char * __asm("a3"), int * __asm("d1"), const LONG __asm("d2"))) \
  (_AES_cfb8_encrypt__bn - 13530))(_AES_cfb8_encrypt__bn, _AES_cfb8_encrypt_in, _AES_cfb8_encrypt_out, _AES_cfb8_encrypt_length, _AES_cfb8_encrypt_key, _AES_cfb8_encrypt_ivec, _AES_cfb8_encrypt_num, _AES_cfb8_encrypt_enc); \
});})

#define AES_cfbr_encrypt_block(in, out, nbits, key, ivec, enc) ({ \
  const unsigned char * _AES_cfbr_encrypt_block_in = (in); \
  unsigned char * _AES_cfbr_encrypt_block_out = (out); \
  const LONG _AES_cfbr_encrypt_block_nbits = (nbits); \
  const AES_KEY * _AES_cfbr_encrypt_block_key = (key); \
  unsigned char * _AES_cfbr_encrypt_block_ivec = (ivec); \
  const LONG _AES_cfbr_encrypt_block_enc = (enc); \
  ({ \
  register char * _AES_cfbr_encrypt_block__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), const unsigned char * __asm("a0"), unsigned char * __asm("a1"), const LONG __asm("d0"), const AES_KEY * __asm("a2"), unsigned char * __asm("a3"), const LONG __asm("d1"))) \
  (_AES_cfbr_encrypt_block__bn - 13536))(_AES_cfbr_encrypt_block__bn, _AES_cfbr_encrypt_block_in, _AES_cfbr_encrypt_block_out, _AES_cfbr_encrypt_block_nbits, _AES_cfbr_encrypt_block_key, _AES_cfbr_encrypt_block_ivec, _AES_cfbr_encrypt_block_enc); \
});})

#define AES_ofb128_encrypt(in, out, length, key, ivec, num) ({ \
  const unsigned char * _AES_ofb128_encrypt_in = (in); \
  unsigned char * _AES_ofb128_encrypt_out = (out); \
  const unsigned long _AES_ofb128_encrypt_length = (length); \
  const AES_KEY * _AES_ofb128_encrypt_key = (key); \
  unsigned char * _AES_ofb128_encrypt_ivec = (ivec); \
  int * _AES_ofb128_encrypt_num = (num); \
  ({ \
  register char * _AES_ofb128_encrypt__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), const unsigned char * __asm("a0"), unsigned char * __asm("a1"), const unsigned long __asm("d0"), const AES_KEY * __asm("a2"), unsigned char * __asm("a3"), int * __asm("d1"))) \
  (_AES_ofb128_encrypt__bn - 13542))(_AES_ofb128_encrypt__bn, _AES_ofb128_encrypt_in, _AES_ofb128_encrypt_out, _AES_ofb128_encrypt_length, _AES_ofb128_encrypt_key, _AES_ofb128_encrypt_ivec, _AES_ofb128_encrypt_num); \
});})

#define AES_ctr128_encrypt(in, out, length, key, ivec, ecount_buf, num) ({ \
  const unsigned char * _AES_ctr128_encrypt_in = (in); \
  unsigned char * _AES_ctr128_encrypt_out = (out); \
  const unsigned long _AES_ctr128_encrypt_length = (length); \
  const AES_KEY * _AES_ctr128_encrypt_key = (key); \
  ULONG _AES_ctr128_encrypt_ivec = (ivec); \
  ULONG _AES_ctr128_encrypt_ecount_buf = (ecount_buf); \
  unsigned int * _AES_ctr128_encrypt_num = (num); \
  ({ \
  register char * _AES_ctr128_encrypt__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), const unsigned char * __asm("a0"), unsigned char * __asm("a1"), const unsigned long __asm("d0"), const AES_KEY * __asm("a2"), ULONG __asm("d1"), ULONG __asm("d2"), unsigned int * __asm("a3"))) \
  (_AES_ctr128_encrypt__bn - 13548))(_AES_ctr128_encrypt__bn, _AES_ctr128_encrypt_in, _AES_ctr128_encrypt_out, _AES_ctr128_encrypt_length, _AES_ctr128_encrypt_key, _AES_ctr128_encrypt_ivec, _AES_ctr128_encrypt_ecount_buf, _AES_ctr128_encrypt_num); \
});})

#define BF_set_key(key, len, data) ({ \
  BF_KEY * _BF_set_key_key = (key); \
  LONG _BF_set_key_len = (len); \
  const unsigned char * _BF_set_key_data = (data); \
  ({ \
  register char * _BF_set_key__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), BF_KEY * __asm("a0"), LONG __asm("d0"), const unsigned char * __asm("a1"))) \
  (_BF_set_key__bn - 13554))(_BF_set_key__bn, _BF_set_key_key, _BF_set_key_len, _BF_set_key_data); \
});})

#define BF_encrypt(data, key) ({ \
  BF_LONG * _BF_encrypt_data = (data); \
  const BF_KEY * _BF_encrypt_key = (key); \
  ({ \
  register char * _BF_encrypt__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), BF_LONG * __asm("a0"), const BF_KEY * __asm("a1"))) \
  (_BF_encrypt__bn - 13560))(_BF_encrypt__bn, _BF_encrypt_data, _BF_encrypt_key); \
});})

#define BF_decrypt(data, key) ({ \
  BF_LONG * _BF_decrypt_data = (data); \
  const BF_KEY * _BF_decrypt_key = (key); \
  ({ \
  register char * _BF_decrypt__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), BF_LONG * __asm("a0"), const BF_KEY * __asm("a1"))) \
  (_BF_decrypt__bn - 13566))(_BF_decrypt__bn, _BF_decrypt_data, _BF_decrypt_key); \
});})

#define BF_ecb_encrypt(in, out, key, enc) ({ \
  const unsigned char * _BF_ecb_encrypt_in = (in); \
  unsigned char * _BF_ecb_encrypt_out = (out); \
  const BF_KEY * _BF_ecb_encrypt_key = (key); \
  LONG _BF_ecb_encrypt_enc = (enc); \
  ({ \
  register char * _BF_ecb_encrypt__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), const unsigned char * __asm("a0"), unsigned char * __asm("a1"), const BF_KEY * __asm("a2"), LONG __asm("d0"))) \
  (_BF_ecb_encrypt__bn - 13572))(_BF_ecb_encrypt__bn, _BF_ecb_encrypt_in, _BF_ecb_encrypt_out, _BF_ecb_encrypt_key, _BF_ecb_encrypt_enc); \
});})

#define BF_cbc_encrypt(in, out, length, schedule, ivec, enc) ({ \
  const unsigned char * _BF_cbc_encrypt_in = (in); \
  unsigned char * _BF_cbc_encrypt_out = (out); \
  long _BF_cbc_encrypt_length = (length); \
  const BF_KEY * _BF_cbc_encrypt_schedule = (schedule); \
  unsigned char * _BF_cbc_encrypt_ivec = (ivec); \
  LONG _BF_cbc_encrypt_enc = (enc); \
  ({ \
  register char * _BF_cbc_encrypt__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), const unsigned char * __asm("a0"), unsigned char * __asm("a1"), long __asm("d0"), const BF_KEY * __asm("a2"), unsigned char * __asm("a3"), LONG __asm("d1"))) \
  (_BF_cbc_encrypt__bn - 13578))(_BF_cbc_encrypt__bn, _BF_cbc_encrypt_in, _BF_cbc_encrypt_out, _BF_cbc_encrypt_length, _BF_cbc_encrypt_schedule, _BF_cbc_encrypt_ivec, _BF_cbc_encrypt_enc); \
});})

#define BF_cfb64_encrypt(in, out, length, schedule, ivec, num, enc) ({ \
  const unsigned char * _BF_cfb64_encrypt_in = (in); \
  unsigned char * _BF_cfb64_encrypt_out = (out); \
  long _BF_cfb64_encrypt_length = (length); \
  const BF_KEY * _BF_cfb64_encrypt_schedule = (schedule); \
  unsigned char * _BF_cfb64_encrypt_ivec = (ivec); \
  int * _BF_cfb64_encrypt_num = (num); \
  LONG _BF_cfb64_encrypt_enc = (enc); \
  ({ \
  register char * _BF_cfb64_encrypt__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), const unsigned char * __asm("a0"), unsigned char * __asm("a1"), long __asm("d0"), const BF_KEY * __asm("a2"), unsigned char * __asm("a3"), int * __asm("d1"), LONG __asm("d2"))) \
  (_BF_cfb64_encrypt__bn - 13584))(_BF_cfb64_encrypt__bn, _BF_cfb64_encrypt_in, _BF_cfb64_encrypt_out, _BF_cfb64_encrypt_length, _BF_cfb64_encrypt_schedule, _BF_cfb64_encrypt_ivec, _BF_cfb64_encrypt_num, _BF_cfb64_encrypt_enc); \
});})

#define BF_ofb64_encrypt(in, out, length, schedule, ivec, num) ({ \
  const unsigned char * _BF_ofb64_encrypt_in = (in); \
  unsigned char * _BF_ofb64_encrypt_out = (out); \
  long _BF_ofb64_encrypt_length = (length); \
  const BF_KEY * _BF_ofb64_encrypt_schedule = (schedule); \
  unsigned char * _BF_ofb64_encrypt_ivec = (ivec); \
  int * _BF_ofb64_encrypt_num = (num); \
  ({ \
  register char * _BF_ofb64_encrypt__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), const unsigned char * __asm("a0"), unsigned char * __asm("a1"), long __asm("d0"), const BF_KEY * __asm("a2"), unsigned char * __asm("a3"), int * __asm("d1"))) \
  (_BF_ofb64_encrypt__bn - 13590))(_BF_ofb64_encrypt__bn, _BF_ofb64_encrypt_in, _BF_ofb64_encrypt_out, _BF_ofb64_encrypt_length, _BF_ofb64_encrypt_schedule, _BF_ofb64_encrypt_ivec, _BF_ofb64_encrypt_num); \
});})

#define BF_options() ({ \
  register char * _BF_options__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const char * (*)(char * __asm("a6"))) \
  (_BF_options__bn - 13596))(_BF_options__bn); \
})

#define CAST_set_key(key, len, data) ({ \
  CAST_KEY * _CAST_set_key_key = (key); \
  LONG _CAST_set_key_len = (len); \
  const unsigned char * _CAST_set_key_data = (data); \
  ({ \
  register char * _CAST_set_key__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), CAST_KEY * __asm("a0"), LONG __asm("d0"), const unsigned char * __asm("a1"))) \
  (_CAST_set_key__bn - 13602))(_CAST_set_key__bn, _CAST_set_key_key, _CAST_set_key_len, _CAST_set_key_data); \
});})

#define CAST_ecb_encrypt(in, out, key, enc) ({ \
  const unsigned char * _CAST_ecb_encrypt_in = (in); \
  unsigned char * _CAST_ecb_encrypt_out = (out); \
  CAST_KEY * _CAST_ecb_encrypt_key = (key); \
  LONG _CAST_ecb_encrypt_enc = (enc); \
  ({ \
  register char * _CAST_ecb_encrypt__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), const unsigned char * __asm("a0"), unsigned char * __asm("a1"), CAST_KEY * __asm("a2"), LONG __asm("d0"))) \
  (_CAST_ecb_encrypt__bn - 13608))(_CAST_ecb_encrypt__bn, _CAST_ecb_encrypt_in, _CAST_ecb_encrypt_out, _CAST_ecb_encrypt_key, _CAST_ecb_encrypt_enc); \
});})

#define CAST_encrypt(data, key) ({ \
  CAST_LONG * _CAST_encrypt_data = (data); \
  CAST_KEY * _CAST_encrypt_key = (key); \
  ({ \
  register char * _CAST_encrypt__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), CAST_LONG * __asm("a0"), CAST_KEY * __asm("a1"))) \
  (_CAST_encrypt__bn - 13614))(_CAST_encrypt__bn, _CAST_encrypt_data, _CAST_encrypt_key); \
});})

#define CAST_decrypt(data, key) ({ \
  CAST_LONG * _CAST_decrypt_data = (data); \
  CAST_KEY * _CAST_decrypt_key = (key); \
  ({ \
  register char * _CAST_decrypt__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), CAST_LONG * __asm("a0"), CAST_KEY * __asm("a1"))) \
  (_CAST_decrypt__bn - 13620))(_CAST_decrypt__bn, _CAST_decrypt_data, _CAST_decrypt_key); \
});})

#define CAST_cbc_encrypt(in, out, length, ks, iv, enc) ({ \
  const unsigned char * _CAST_cbc_encrypt_in = (in); \
  unsigned char * _CAST_cbc_encrypt_out = (out); \
  long _CAST_cbc_encrypt_length = (length); \
  CAST_KEY * _CAST_cbc_encrypt_ks = (ks); \
  unsigned char * _CAST_cbc_encrypt_iv = (iv); \
  LONG _CAST_cbc_encrypt_enc = (enc); \
  ({ \
  register char * _CAST_cbc_encrypt__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), const unsigned char * __asm("a0"), unsigned char * __asm("a1"), long __asm("d0"), CAST_KEY * __asm("a2"), unsigned char * __asm("a3"), LONG __asm("d1"))) \
  (_CAST_cbc_encrypt__bn - 13626))(_CAST_cbc_encrypt__bn, _CAST_cbc_encrypt_in, _CAST_cbc_encrypt_out, _CAST_cbc_encrypt_length, _CAST_cbc_encrypt_ks, _CAST_cbc_encrypt_iv, _CAST_cbc_encrypt_enc); \
});})

#define CAST_cfb64_encrypt(in, out, length, schedule, ivec, num, enc) ({ \
  const unsigned char * _CAST_cfb64_encrypt_in = (in); \
  unsigned char * _CAST_cfb64_encrypt_out = (out); \
  long _CAST_cfb64_encrypt_length = (length); \
  CAST_KEY * _CAST_cfb64_encrypt_schedule = (schedule); \
  unsigned char * _CAST_cfb64_encrypt_ivec = (ivec); \
  int * _CAST_cfb64_encrypt_num = (num); \
  LONG _CAST_cfb64_encrypt_enc = (enc); \
  ({ \
  register char * _CAST_cfb64_encrypt__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), const unsigned char * __asm("a0"), unsigned char * __asm("a1"), long __asm("d0"), CAST_KEY * __asm("a2"), unsigned char * __asm("a3"), int * __asm("d1"), LONG __asm("d2"))) \
  (_CAST_cfb64_encrypt__bn - 13632))(_CAST_cfb64_encrypt__bn, _CAST_cfb64_encrypt_in, _CAST_cfb64_encrypt_out, _CAST_cfb64_encrypt_length, _CAST_cfb64_encrypt_schedule, _CAST_cfb64_encrypt_ivec, _CAST_cfb64_encrypt_num, _CAST_cfb64_encrypt_enc); \
});})

#define CAST_ofb64_encrypt(in, out, length, schedule, ivec, num) ({ \
  const unsigned char * _CAST_ofb64_encrypt_in = (in); \
  unsigned char * _CAST_ofb64_encrypt_out = (out); \
  long _CAST_ofb64_encrypt_length = (length); \
  CAST_KEY * _CAST_ofb64_encrypt_schedule = (schedule); \
  unsigned char * _CAST_ofb64_encrypt_ivec = (ivec); \
  int * _CAST_ofb64_encrypt_num = (num); \
  ({ \
  register char * _CAST_ofb64_encrypt__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), const unsigned char * __asm("a0"), unsigned char * __asm("a1"), long __asm("d0"), CAST_KEY * __asm("a2"), unsigned char * __asm("a3"), int * __asm("d1"))) \
  (_CAST_ofb64_encrypt__bn - 13638))(_CAST_ofb64_encrypt__bn, _CAST_ofb64_encrypt_in, _CAST_ofb64_encrypt_out, _CAST_ofb64_encrypt_length, _CAST_ofb64_encrypt_schedule, _CAST_ofb64_encrypt_ivec, _CAST_ofb64_encrypt_num); \
});})

#define _shadow_DES_check_key() ({ \
  register char * __shadow_DES_check_key__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int * (*)(char * __asm("a6"))) \
  (__shadow_DES_check_key__bn - 13644))(__shadow_DES_check_key__bn); \
})

#define _shadow_DES_rw_mode() ({ \
  register char * __shadow_DES_rw_mode__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int * (*)(char * __asm("a6"))) \
  (__shadow_DES_rw_mode__bn - 13650))(__shadow_DES_rw_mode__bn); \
})

#define DES_options() ({ \
  register char * _DES_options__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const char * (*)(char * __asm("a6"))) \
  (_DES_options__bn - 13656))(_DES_options__bn); \
})

#define DES_ecb3_encrypt(input, output, ks1, ks2, ks3, enc) ({ \
  const unsigned char * _DES_ecb3_encrypt_input = (input); \
  unsigned char * _DES_ecb3_encrypt_output = (output); \
  DES_key_schedule * _DES_ecb3_encrypt_ks1 = (ks1); \
  DES_key_schedule * _DES_ecb3_encrypt_ks2 = (ks2); \
  DES_key_schedule * _DES_ecb3_encrypt_ks3 = (ks3); \
  LONG _DES_ecb3_encrypt_enc = (enc); \
  ({ \
  register char * _DES_ecb3_encrypt__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), const unsigned char * __asm("a0"), unsigned char * __asm("a1"), DES_key_schedule * __asm("a2"), DES_key_schedule * __asm("a3"), DES_key_schedule * __asm("d0"), LONG __asm("d1"))) \
  (_DES_ecb3_encrypt__bn - 13662))(_DES_ecb3_encrypt__bn, _DES_ecb3_encrypt_input, _DES_ecb3_encrypt_output, _DES_ecb3_encrypt_ks1, _DES_ecb3_encrypt_ks2, _DES_ecb3_encrypt_ks3, _DES_ecb3_encrypt_enc); \
});})

#define DES_cbc_cksum(input, output, length, schedule, ivec) ({ \
  const unsigned char * _DES_cbc_cksum_input = (input); \
  DES_cblock * _DES_cbc_cksum_output = (output); \
  long _DES_cbc_cksum_length = (length); \
  DES_key_schedule * _DES_cbc_cksum_schedule = (schedule); \
  const_DES_cblock * _DES_cbc_cksum_ivec = (ivec); \
  ({ \
  register char * _DES_cbc_cksum__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((DES_LONG (*)(char * __asm("a6"), const unsigned char * __asm("a0"), DES_cblock * __asm("a1"), long __asm("d0"), DES_key_schedule * __asm("a2"), const_DES_cblock * __asm("a3"))) \
  (_DES_cbc_cksum__bn - 13668))(_DES_cbc_cksum__bn, _DES_cbc_cksum_input, _DES_cbc_cksum_output, _DES_cbc_cksum_length, _DES_cbc_cksum_schedule, _DES_cbc_cksum_ivec); \
});})

#define DES_cbc_encrypt(input, output, length, schedule, ivec, enc) ({ \
  const unsigned char * _DES_cbc_encrypt_input = (input); \
  unsigned char * _DES_cbc_encrypt_output = (output); \
  long _DES_cbc_encrypt_length = (length); \
  DES_key_schedule * _DES_cbc_encrypt_schedule = (schedule); \
  DES_cblock * _DES_cbc_encrypt_ivec = (ivec); \
  LONG _DES_cbc_encrypt_enc = (enc); \
  ({ \
  register char * _DES_cbc_encrypt__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), const unsigned char * __asm("a0"), unsigned char * __asm("a1"), long __asm("d0"), DES_key_schedule * __asm("a2"), DES_cblock * __asm("a3"), LONG __asm("d1"))) \
  (_DES_cbc_encrypt__bn - 13674))(_DES_cbc_encrypt__bn, _DES_cbc_encrypt_input, _DES_cbc_encrypt_output, _DES_cbc_encrypt_length, _DES_cbc_encrypt_schedule, _DES_cbc_encrypt_ivec, _DES_cbc_encrypt_enc); \
});})

#define DES_ncbc_encrypt(input, output, length, schedule, ivec, enc) ({ \
  const unsigned char * _DES_ncbc_encrypt_input = (input); \
  unsigned char * _DES_ncbc_encrypt_output = (output); \
  long _DES_ncbc_encrypt_length = (length); \
  DES_key_schedule * _DES_ncbc_encrypt_schedule = (schedule); \
  DES_cblock * _DES_ncbc_encrypt_ivec = (ivec); \
  LONG _DES_ncbc_encrypt_enc = (enc); \
  ({ \
  register char * _DES_ncbc_encrypt__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), const unsigned char * __asm("a0"), unsigned char * __asm("a1"), long __asm("d0"), DES_key_schedule * __asm("a2"), DES_cblock * __asm("a3"), LONG __asm("d1"))) \
  (_DES_ncbc_encrypt__bn - 13680))(_DES_ncbc_encrypt__bn, _DES_ncbc_encrypt_input, _DES_ncbc_encrypt_output, _DES_ncbc_encrypt_length, _DES_ncbc_encrypt_schedule, _DES_ncbc_encrypt_ivec, _DES_ncbc_encrypt_enc); \
});})

#define DES_xcbc_encrypt(input, output, length, schedule, ivec, inw, outw, enc) ({ \
  const unsigned char * _DES_xcbc_encrypt_input = (input); \
  unsigned char * _DES_xcbc_encrypt_output = (output); \
  long _DES_xcbc_encrypt_length = (length); \
  DES_key_schedule * _DES_xcbc_encrypt_schedule = (schedule); \
  DES_cblock * _DES_xcbc_encrypt_ivec = (ivec); \
  const_DES_cblock * _DES_xcbc_encrypt_inw = (inw); \
  const_DES_cblock * _DES_xcbc_encrypt_outw = (outw); \
  LONG _DES_xcbc_encrypt_enc = (enc); \
  ({ \
  register char * _DES_xcbc_encrypt__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), const unsigned char * __asm("a0"), unsigned char * __asm("a1"), long __asm("d0"), DES_key_schedule * __asm("a2"), DES_cblock * __asm("a3"), const_DES_cblock * __asm("d1"), const_DES_cblock * __asm("d2"), LONG __asm("d3"))) \
  (_DES_xcbc_encrypt__bn - 13686))(_DES_xcbc_encrypt__bn, _DES_xcbc_encrypt_input, _DES_xcbc_encrypt_output, _DES_xcbc_encrypt_length, _DES_xcbc_encrypt_schedule, _DES_xcbc_encrypt_ivec, _DES_xcbc_encrypt_inw, _DES_xcbc_encrypt_outw, _DES_xcbc_encrypt_enc); \
});})

#define DES_cfb_encrypt(in, out, numbits, length, schedule, ivec, enc) ({ \
  const unsigned char * _DES_cfb_encrypt_in = (in); \
  unsigned char * _DES_cfb_encrypt_out = (out); \
  LONG _DES_cfb_encrypt_numbits = (numbits); \
  long _DES_cfb_encrypt_length = (length); \
  DES_key_schedule * _DES_cfb_encrypt_schedule = (schedule); \
  DES_cblock * _DES_cfb_encrypt_ivec = (ivec); \
  LONG _DES_cfb_encrypt_enc = (enc); \
  ({ \
  register char * _DES_cfb_encrypt__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), const unsigned char * __asm("a0"), unsigned char * __asm("a1"), LONG __asm("d0"), long __asm("d1"), DES_key_schedule * __asm("a2"), DES_cblock * __asm("a3"), LONG __asm("d2"))) \
  (_DES_cfb_encrypt__bn - 13692))(_DES_cfb_encrypt__bn, _DES_cfb_encrypt_in, _DES_cfb_encrypt_out, _DES_cfb_encrypt_numbits, _DES_cfb_encrypt_length, _DES_cfb_encrypt_schedule, _DES_cfb_encrypt_ivec, _DES_cfb_encrypt_enc); \
});})

#define DES_ecb_encrypt(input, output, ks, enc) ({ \
  const_DES_cblock * _DES_ecb_encrypt_input = (input); \
  DES_cblock * _DES_ecb_encrypt_output = (output); \
  DES_key_schedule * _DES_ecb_encrypt_ks = (ks); \
  LONG _DES_ecb_encrypt_enc = (enc); \
  ({ \
  register char * _DES_ecb_encrypt__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), const_DES_cblock * __asm("a0"), DES_cblock * __asm("a1"), DES_key_schedule * __asm("a2"), LONG __asm("d0"))) \
  (_DES_ecb_encrypt__bn - 13698))(_DES_ecb_encrypt__bn, _DES_ecb_encrypt_input, _DES_ecb_encrypt_output, _DES_ecb_encrypt_ks, _DES_ecb_encrypt_enc); \
});})

#define DES_encrypt1(data, ks, enc) ({ \
  DES_LONG * _DES_encrypt1_data = (data); \
  DES_key_schedule * _DES_encrypt1_ks = (ks); \
  LONG _DES_encrypt1_enc = (enc); \
  ({ \
  register char * _DES_encrypt1__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), DES_LONG * __asm("a0"), DES_key_schedule * __asm("a1"), LONG __asm("d0"))) \
  (_DES_encrypt1__bn - 13704))(_DES_encrypt1__bn, _DES_encrypt1_data, _DES_encrypt1_ks, _DES_encrypt1_enc); \
});})

#define DES_encrypt2(data, ks, enc) ({ \
  DES_LONG * _DES_encrypt2_data = (data); \
  DES_key_schedule * _DES_encrypt2_ks = (ks); \
  LONG _DES_encrypt2_enc = (enc); \
  ({ \
  register char * _DES_encrypt2__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), DES_LONG * __asm("a0"), DES_key_schedule * __asm("a1"), LONG __asm("d0"))) \
  (_DES_encrypt2__bn - 13710))(_DES_encrypt2__bn, _DES_encrypt2_data, _DES_encrypt2_ks, _DES_encrypt2_enc); \
});})

#define DES_encrypt3(data, ks1, ks2, ks3) ({ \
  DES_LONG * _DES_encrypt3_data = (data); \
  DES_key_schedule * _DES_encrypt3_ks1 = (ks1); \
  DES_key_schedule * _DES_encrypt3_ks2 = (ks2); \
  DES_key_schedule * _DES_encrypt3_ks3 = (ks3); \
  ({ \
  register char * _DES_encrypt3__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), DES_LONG * __asm("a0"), DES_key_schedule * __asm("a1"), DES_key_schedule * __asm("a2"), DES_key_schedule * __asm("a3"))) \
  (_DES_encrypt3__bn - 13716))(_DES_encrypt3__bn, _DES_encrypt3_data, _DES_encrypt3_ks1, _DES_encrypt3_ks2, _DES_encrypt3_ks3); \
});})

#define DES_decrypt3(data, ks1, ks2, ks3) ({ \
  DES_LONG * _DES_decrypt3_data = (data); \
  DES_key_schedule * _DES_decrypt3_ks1 = (ks1); \
  DES_key_schedule * _DES_decrypt3_ks2 = (ks2); \
  DES_key_schedule * _DES_decrypt3_ks3 = (ks3); \
  ({ \
  register char * _DES_decrypt3__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), DES_LONG * __asm("a0"), DES_key_schedule * __asm("a1"), DES_key_schedule * __asm("a2"), DES_key_schedule * __asm("a3"))) \
  (_DES_decrypt3__bn - 13722))(_DES_decrypt3__bn, _DES_decrypt3_data, _DES_decrypt3_ks1, _DES_decrypt3_ks2, _DES_decrypt3_ks3); \
});})

#define DES_ede3_cbc_encrypt(input, output, length, ks1, ks2, ks3, ivec, enc) ({ \
  const unsigned char * _DES_ede3_cbc_encrypt_input = (input); \
  unsigned char * _DES_ede3_cbc_encrypt_output = (output); \
  long _DES_ede3_cbc_encrypt_length = (length); \
  DES_key_schedule * _DES_ede3_cbc_encrypt_ks1 = (ks1); \
  DES_key_schedule * _DES_ede3_cbc_encrypt_ks2 = (ks2); \
  DES_key_schedule * _DES_ede3_cbc_encrypt_ks3 = (ks3); \
  DES_cblock * _DES_ede3_cbc_encrypt_ivec = (ivec); \
  LONG _DES_ede3_cbc_encrypt_enc = (enc); \
  ({ \
  register char * _DES_ede3_cbc_encrypt__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), const unsigned char * __asm("a0"), unsigned char * __asm("a1"), long __asm("d0"), DES_key_schedule * __asm("a2"), DES_key_schedule * __asm("a3"), DES_key_schedule * __asm("d1"), DES_cblock * __asm("d2"), LONG __asm("d3"))) \
  (_DES_ede3_cbc_encrypt__bn - 13728))(_DES_ede3_cbc_encrypt__bn, _DES_ede3_cbc_encrypt_input, _DES_ede3_cbc_encrypt_output, _DES_ede3_cbc_encrypt_length, _DES_ede3_cbc_encrypt_ks1, _DES_ede3_cbc_encrypt_ks2, _DES_ede3_cbc_encrypt_ks3, _DES_ede3_cbc_encrypt_ivec, _DES_ede3_cbc_encrypt_enc); \
});})

#define DES_ede3_cbcm_encrypt(in, out, length, ks1, ks2, ks3, ivec1, ivec2, enc) ({ \
  const unsigned char * _DES_ede3_cbcm_encrypt_in = (in); \
  unsigned char * _DES_ede3_cbcm_encrypt_out = (out); \
  long _DES_ede3_cbcm_encrypt_length = (length); \
  DES_key_schedule * _DES_ede3_cbcm_encrypt_ks1 = (ks1); \
  DES_key_schedule * _DES_ede3_cbcm_encrypt_ks2 = (ks2); \
  DES_key_schedule * _DES_ede3_cbcm_encrypt_ks3 = (ks3); \
  DES_cblock * _DES_ede3_cbcm_encrypt_ivec1 = (ivec1); \
  DES_cblock * _DES_ede3_cbcm_encrypt_ivec2 = (ivec2); \
  LONG _DES_ede3_cbcm_encrypt_enc = (enc); \
  ({ \
  register char * _DES_ede3_cbcm_encrypt__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), const unsigned char * __asm("a0"), unsigned char * __asm("a1"), long __asm("d0"), DES_key_schedule * __asm("a2"), DES_key_schedule * __asm("a3"), DES_key_schedule * __asm("d1"), DES_cblock * __asm("d2"), DES_cblock * __asm("d3"), LONG __asm("d4"))) \
  (_DES_ede3_cbcm_encrypt__bn - 13734))(_DES_ede3_cbcm_encrypt__bn, _DES_ede3_cbcm_encrypt_in, _DES_ede3_cbcm_encrypt_out, _DES_ede3_cbcm_encrypt_length, _DES_ede3_cbcm_encrypt_ks1, _DES_ede3_cbcm_encrypt_ks2, _DES_ede3_cbcm_encrypt_ks3, _DES_ede3_cbcm_encrypt_ivec1, _DES_ede3_cbcm_encrypt_ivec2, _DES_ede3_cbcm_encrypt_enc); \
});})

#define DES_ede3_cfb64_encrypt(in, out, length, ks1, ks2, ks3, ivec, num, enc) ({ \
  const unsigned char * _DES_ede3_cfb64_encrypt_in = (in); \
  unsigned char * _DES_ede3_cfb64_encrypt_out = (out); \
  long _DES_ede3_cfb64_encrypt_length = (length); \
  DES_key_schedule * _DES_ede3_cfb64_encrypt_ks1 = (ks1); \
  DES_key_schedule * _DES_ede3_cfb64_encrypt_ks2 = (ks2); \
  DES_key_schedule * _DES_ede3_cfb64_encrypt_ks3 = (ks3); \
  DES_cblock * _DES_ede3_cfb64_encrypt_ivec = (ivec); \
  int * _DES_ede3_cfb64_encrypt_num = (num); \
  LONG _DES_ede3_cfb64_encrypt_enc = (enc); \
  ({ \
  register char * _DES_ede3_cfb64_encrypt__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), const unsigned char * __asm("a0"), unsigned char * __asm("a1"), long __asm("d0"), DES_key_schedule * __asm("a2"), DES_key_schedule * __asm("a3"), DES_key_schedule * __asm("d1"), DES_cblock * __asm("d2"), int * __asm("d3"), LONG __asm("d4"))) \
  (_DES_ede3_cfb64_encrypt__bn - 13740))(_DES_ede3_cfb64_encrypt__bn, _DES_ede3_cfb64_encrypt_in, _DES_ede3_cfb64_encrypt_out, _DES_ede3_cfb64_encrypt_length, _DES_ede3_cfb64_encrypt_ks1, _DES_ede3_cfb64_encrypt_ks2, _DES_ede3_cfb64_encrypt_ks3, _DES_ede3_cfb64_encrypt_ivec, _DES_ede3_cfb64_encrypt_num, _DES_ede3_cfb64_encrypt_enc); \
});})

#define DES_ede3_cfb_encrypt(in, out, numbits, length, ks1, ks2, ks3, ivec, enc) ({ \
  const unsigned char * _DES_ede3_cfb_encrypt_in = (in); \
  unsigned char * _DES_ede3_cfb_encrypt_out = (out); \
  LONG _DES_ede3_cfb_encrypt_numbits = (numbits); \
  long _DES_ede3_cfb_encrypt_length = (length); \
  DES_key_schedule * _DES_ede3_cfb_encrypt_ks1 = (ks1); \
  DES_key_schedule * _DES_ede3_cfb_encrypt_ks2 = (ks2); \
  DES_key_schedule * _DES_ede3_cfb_encrypt_ks3 = (ks3); \
  DES_cblock * _DES_ede3_cfb_encrypt_ivec = (ivec); \
  LONG _DES_ede3_cfb_encrypt_enc = (enc); \
  ({ \
  register char * _DES_ede3_cfb_encrypt__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), const unsigned char * __asm("a0"), unsigned char * __asm("a1"), LONG __asm("d0"), long __asm("d1"), DES_key_schedule * __asm("a2"), DES_key_schedule * __asm("a3"), DES_key_schedule * __asm("d2"), DES_cblock * __asm("d3"), LONG __asm("d4"))) \
  (_DES_ede3_cfb_encrypt__bn - 13746))(_DES_ede3_cfb_encrypt__bn, _DES_ede3_cfb_encrypt_in, _DES_ede3_cfb_encrypt_out, _DES_ede3_cfb_encrypt_numbits, _DES_ede3_cfb_encrypt_length, _DES_ede3_cfb_encrypt_ks1, _DES_ede3_cfb_encrypt_ks2, _DES_ede3_cfb_encrypt_ks3, _DES_ede3_cfb_encrypt_ivec, _DES_ede3_cfb_encrypt_enc); \
});})

#define DES_ede3_ofb64_encrypt(in, out, length, ks1, ks2, ks3, ivec, num) ({ \
  const unsigned char * _DES_ede3_ofb64_encrypt_in = (in); \
  unsigned char * _DES_ede3_ofb64_encrypt_out = (out); \
  long _DES_ede3_ofb64_encrypt_length = (length); \
  DES_key_schedule * _DES_ede3_ofb64_encrypt_ks1 = (ks1); \
  DES_key_schedule * _DES_ede3_ofb64_encrypt_ks2 = (ks2); \
  DES_key_schedule * _DES_ede3_ofb64_encrypt_ks3 = (ks3); \
  DES_cblock * _DES_ede3_ofb64_encrypt_ivec = (ivec); \
  int * _DES_ede3_ofb64_encrypt_num = (num); \
  ({ \
  register char * _DES_ede3_ofb64_encrypt__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), const unsigned char * __asm("a0"), unsigned char * __asm("a1"), long __asm("d0"), DES_key_schedule * __asm("a2"), DES_key_schedule * __asm("a3"), DES_key_schedule * __asm("d1"), DES_cblock * __asm("d2"), int * __asm("d3"))) \
  (_DES_ede3_ofb64_encrypt__bn - 13752))(_DES_ede3_ofb64_encrypt__bn, _DES_ede3_ofb64_encrypt_in, _DES_ede3_ofb64_encrypt_out, _DES_ede3_ofb64_encrypt_length, _DES_ede3_ofb64_encrypt_ks1, _DES_ede3_ofb64_encrypt_ks2, _DES_ede3_ofb64_encrypt_ks3, _DES_ede3_ofb64_encrypt_ivec, _DES_ede3_ofb64_encrypt_num); \
});})

#define DES_xwhite_in2out(DES_key, in_white, out_white) ({ \
  const_DES_cblock * _DES_xwhite_in2out_DES_key = (DES_key); \
  const_DES_cblock * _DES_xwhite_in2out_in_white = (in_white); \
  DES_cblock * _DES_xwhite_in2out_out_white = (out_white); \
  ({ \
  register char * _DES_xwhite_in2out__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), const_DES_cblock * __asm("a0"), const_DES_cblock * __asm("a1"), DES_cblock * __asm("a2"))) \
  (_DES_xwhite_in2out__bn - 13758))(_DES_xwhite_in2out__bn, _DES_xwhite_in2out_DES_key, _DES_xwhite_in2out_in_white, _DES_xwhite_in2out_out_white); \
});})

#define DES_enc_read(fd, buf, len, sched, iv) ({ \
  LONG _DES_enc_read_fd = (fd); \
  void * _DES_enc_read_buf = (buf); \
  LONG _DES_enc_read_len = (len); \
  DES_key_schedule * _DES_enc_read_sched = (sched); \
  DES_cblock * _DES_enc_read_iv = (iv); \
  ({ \
  register char * _DES_enc_read__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), LONG __asm("d0"), void * __asm("a0"), LONG __asm("d1"), DES_key_schedule * __asm("a1"), DES_cblock * __asm("a2"))) \
  (_DES_enc_read__bn - 13764))(_DES_enc_read__bn, _DES_enc_read_fd, _DES_enc_read_buf, _DES_enc_read_len, _DES_enc_read_sched, _DES_enc_read_iv); \
});})

#define DES_enc_write(fd, buf, len, sched, iv) ({ \
  LONG _DES_enc_write_fd = (fd); \
  const void * _DES_enc_write_buf = (buf); \
  LONG _DES_enc_write_len = (len); \
  DES_key_schedule * _DES_enc_write_sched = (sched); \
  DES_cblock * _DES_enc_write_iv = (iv); \
  ({ \
  register char * _DES_enc_write__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), LONG __asm("d0"), const void * __asm("a0"), LONG __asm("d1"), DES_key_schedule * __asm("a1"), DES_cblock * __asm("a2"))) \
  (_DES_enc_write__bn - 13770))(_DES_enc_write__bn, _DES_enc_write_fd, _DES_enc_write_buf, _DES_enc_write_len, _DES_enc_write_sched, _DES_enc_write_iv); \
});})

#define DES_fcrypt(buf, salt, ret) ({ \
  const char * _DES_fcrypt_buf = (buf); \
  const char * _DES_fcrypt_salt = (salt); \
  char * _DES_fcrypt_ret = (ret); \
  ({ \
  register char * _DES_fcrypt__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((char * (*)(char * __asm("a6"), const char * __asm("a0"), const char * __asm("a1"), char * __asm("a2"))) \
  (_DES_fcrypt__bn - 13776))(_DES_fcrypt__bn, _DES_fcrypt_buf, _DES_fcrypt_salt, _DES_fcrypt_ret); \
});})

#define DES_crypt(buf, salt) ({ \
  const char * _DES_crypt_buf = (buf); \
  const char * _DES_crypt_salt = (salt); \
  ({ \
  register char * _DES_crypt__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((char * (*)(char * __asm("a6"), const char * __asm("a0"), const char * __asm("a1"))) \
  (_DES_crypt__bn - 13782))(_DES_crypt__bn, _DES_crypt_buf, _DES_crypt_salt); \
});})

#define DES_ofb_encrypt(in, out, numbits, length, schedule, ivec) ({ \
  const unsigned char * _DES_ofb_encrypt_in = (in); \
  unsigned char * _DES_ofb_encrypt_out = (out); \
  LONG _DES_ofb_encrypt_numbits = (numbits); \
  long _DES_ofb_encrypt_length = (length); \
  DES_key_schedule * _DES_ofb_encrypt_schedule = (schedule); \
  DES_cblock * _DES_ofb_encrypt_ivec = (ivec); \
  ({ \
  register char * _DES_ofb_encrypt__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), const unsigned char * __asm("a0"), unsigned char * __asm("a1"), LONG __asm("d0"), long __asm("d1"), DES_key_schedule * __asm("a2"), DES_cblock * __asm("a3"))) \
  (_DES_ofb_encrypt__bn - 13788))(_DES_ofb_encrypt__bn, _DES_ofb_encrypt_in, _DES_ofb_encrypt_out, _DES_ofb_encrypt_numbits, _DES_ofb_encrypt_length, _DES_ofb_encrypt_schedule, _DES_ofb_encrypt_ivec); \
});})

#define DES_pcbc_encrypt(input, output, length, schedule, ivec, enc) ({ \
  const unsigned char * _DES_pcbc_encrypt_input = (input); \
  unsigned char * _DES_pcbc_encrypt_output = (output); \
  long _DES_pcbc_encrypt_length = (length); \
  DES_key_schedule * _DES_pcbc_encrypt_schedule = (schedule); \
  DES_cblock * _DES_pcbc_encrypt_ivec = (ivec); \
  LONG _DES_pcbc_encrypt_enc = (enc); \
  ({ \
  register char * _DES_pcbc_encrypt__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), const unsigned char * __asm("a0"), unsigned char * __asm("a1"), long __asm("d0"), DES_key_schedule * __asm("a2"), DES_cblock * __asm("a3"), LONG __asm("d1"))) \
  (_DES_pcbc_encrypt__bn - 13794))(_DES_pcbc_encrypt__bn, _DES_pcbc_encrypt_input, _DES_pcbc_encrypt_output, _DES_pcbc_encrypt_length, _DES_pcbc_encrypt_schedule, _DES_pcbc_encrypt_ivec, _DES_pcbc_encrypt_enc); \
});})

#define DES_quad_cksum(input, output, length, out_count, seed) ({ \
  const unsigned char * _DES_quad_cksum_input = (input); \
  DES_cblock * _DES_quad_cksum_output = (output); \
  long _DES_quad_cksum_length = (length); \
  LONG _DES_quad_cksum_out_count = (out_count); \
  DES_cblock * _DES_quad_cksum_seed = (seed); \
  ({ \
  register char * _DES_quad_cksum__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((DES_LONG (*)(char * __asm("a6"), const unsigned char * __asm("a0"), DES_cblock * __asm("a1"), long __asm("d0"), LONG __asm("d1"), DES_cblock * __asm("a2"))) \
  (_DES_quad_cksum__bn - 13800))(_DES_quad_cksum__bn, _DES_quad_cksum_input, _DES_quad_cksum_output, _DES_quad_cksum_length, _DES_quad_cksum_out_count, _DES_quad_cksum_seed); \
});})

#define DES_random_key(ret) ({ \
  DES_cblock * _DES_random_key_ret = (ret); \
  ({ \
  register char * _DES_random_key__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), DES_cblock * __asm("a0"))) \
  (_DES_random_key__bn - 13806))(_DES_random_key__bn, _DES_random_key_ret); \
});})

#define DES_set_odd_parity(key) ({ \
  DES_cblock * _DES_set_odd_parity_key = (key); \
  ({ \
  register char * _DES_set_odd_parity__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), DES_cblock * __asm("a0"))) \
  (_DES_set_odd_parity__bn - 13812))(_DES_set_odd_parity__bn, _DES_set_odd_parity_key); \
});})

#define DES_check_key_parity(key) ({ \
  const_DES_cblock * _DES_check_key_parity_key = (key); \
  ({ \
  register char * _DES_check_key_parity__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const_DES_cblock * __asm("a0"))) \
  (_DES_check_key_parity__bn - 13818))(_DES_check_key_parity__bn, _DES_check_key_parity_key); \
});})

#define DES_is_weak_key(key) ({ \
  const_DES_cblock * _DES_is_weak_key_key = (key); \
  ({ \
  register char * _DES_is_weak_key__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const_DES_cblock * __asm("a0"))) \
  (_DES_is_weak_key__bn - 13824))(_DES_is_weak_key__bn, _DES_is_weak_key_key); \
});})

#define DES_set_key(key, schedule) ({ \
  const_DES_cblock * _DES_set_key_key = (key); \
  DES_key_schedule * _DES_set_key_schedule = (schedule); \
  ({ \
  register char * _DES_set_key__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const_DES_cblock * __asm("a0"), DES_key_schedule * __asm("a1"))) \
  (_DES_set_key__bn - 13830))(_DES_set_key__bn, _DES_set_key_key, _DES_set_key_schedule); \
});})

#define DES_key_sched(key, schedule) ({ \
  const_DES_cblock * _DES_key_sched_key = (key); \
  DES_key_schedule * _DES_key_sched_schedule = (schedule); \
  ({ \
  register char * _DES_key_sched__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const_DES_cblock * __asm("a0"), DES_key_schedule * __asm("a1"))) \
  (_DES_key_sched__bn - 13836))(_DES_key_sched__bn, _DES_key_sched_key, _DES_key_sched_schedule); \
});})

#define DES_set_key_checked(key, schedule) ({ \
  const_DES_cblock * _DES_set_key_checked_key = (key); \
  DES_key_schedule * _DES_set_key_checked_schedule = (schedule); \
  ({ \
  register char * _DES_set_key_checked__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const_DES_cblock * __asm("a0"), DES_key_schedule * __asm("a1"))) \
  (_DES_set_key_checked__bn - 13842))(_DES_set_key_checked__bn, _DES_set_key_checked_key, _DES_set_key_checked_schedule); \
});})

#define DES_set_key_unchecked(key, schedule) ({ \
  const_DES_cblock * _DES_set_key_unchecked_key = (key); \
  DES_key_schedule * _DES_set_key_unchecked_schedule = (schedule); \
  ({ \
  register char * _DES_set_key_unchecked__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), const_DES_cblock * __asm("a0"), DES_key_schedule * __asm("a1"))) \
  (_DES_set_key_unchecked__bn - 13848))(_DES_set_key_unchecked__bn, _DES_set_key_unchecked_key, _DES_set_key_unchecked_schedule); \
});})

#define DES_string_to_key(str, key) ({ \
  const char * _DES_string_to_key_str = (str); \
  DES_cblock * _DES_string_to_key_key = (key); \
  ({ \
  register char * _DES_string_to_key__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), const char * __asm("a0"), DES_cblock * __asm("a1"))) \
  (_DES_string_to_key__bn - 13854))(_DES_string_to_key__bn, _DES_string_to_key_str, _DES_string_to_key_key); \
});})

#define DES_string_to_2keys(str, key1, key2) ({ \
  const char * _DES_string_to_2keys_str = (str); \
  DES_cblock * _DES_string_to_2keys_key1 = (key1); \
  DES_cblock * _DES_string_to_2keys_key2 = (key2); \
  ({ \
  register char * _DES_string_to_2keys__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), const char * __asm("a0"), DES_cblock * __asm("a1"), DES_cblock * __asm("a2"))) \
  (_DES_string_to_2keys__bn - 13860))(_DES_string_to_2keys__bn, _DES_string_to_2keys_str, _DES_string_to_2keys_key1, _DES_string_to_2keys_key2); \
});})

#define DES_cfb64_encrypt(in, out, length, schedule, ivec, num, enc) ({ \
  const unsigned char * _DES_cfb64_encrypt_in = (in); \
  unsigned char * _DES_cfb64_encrypt_out = (out); \
  long _DES_cfb64_encrypt_length = (length); \
  DES_key_schedule * _DES_cfb64_encrypt_schedule = (schedule); \
  DES_cblock * _DES_cfb64_encrypt_ivec = (ivec); \
  int * _DES_cfb64_encrypt_num = (num); \
  LONG _DES_cfb64_encrypt_enc = (enc); \
  ({ \
  register char * _DES_cfb64_encrypt__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), const unsigned char * __asm("a0"), unsigned char * __asm("a1"), long __asm("d0"), DES_key_schedule * __asm("a2"), DES_cblock * __asm("a3"), int * __asm("d1"), LONG __asm("d2"))) \
  (_DES_cfb64_encrypt__bn - 13866))(_DES_cfb64_encrypt__bn, _DES_cfb64_encrypt_in, _DES_cfb64_encrypt_out, _DES_cfb64_encrypt_length, _DES_cfb64_encrypt_schedule, _DES_cfb64_encrypt_ivec, _DES_cfb64_encrypt_num, _DES_cfb64_encrypt_enc); \
});})

#define DES_ofb64_encrypt(in, out, length, schedule, ivec, num) ({ \
  const unsigned char * _DES_ofb64_encrypt_in = (in); \
  unsigned char * _DES_ofb64_encrypt_out = (out); \
  long _DES_ofb64_encrypt_length = (length); \
  DES_key_schedule * _DES_ofb64_encrypt_schedule = (schedule); \
  DES_cblock * _DES_ofb64_encrypt_ivec = (ivec); \
  int * _DES_ofb64_encrypt_num = (num); \
  ({ \
  register char * _DES_ofb64_encrypt__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), const unsigned char * __asm("a0"), unsigned char * __asm("a1"), long __asm("d0"), DES_key_schedule * __asm("a2"), DES_cblock * __asm("a3"), int * __asm("d1"))) \
  (_DES_ofb64_encrypt__bn - 13872))(_DES_ofb64_encrypt__bn, _DES_ofb64_encrypt_in, _DES_ofb64_encrypt_out, _DES_ofb64_encrypt_length, _DES_ofb64_encrypt_schedule, _DES_ofb64_encrypt_ivec, _DES_ofb64_encrypt_num); \
});})

#define DES_read_password(key, prompt, verify) ({ \
  DES_cblock * _DES_read_password_key = (key); \
  const char * _DES_read_password_prompt = (prompt); \
  LONG _DES_read_password_verify = (verify); \
  ({ \
  register char * _DES_read_password__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), DES_cblock * __asm("a0"), const char * __asm("a1"), LONG __asm("d0"))) \
  (_DES_read_password__bn - 13878))(_DES_read_password__bn, _DES_read_password_key, _DES_read_password_prompt, _DES_read_password_verify); \
});})

#define DES_read_2passwords(key1, key2, prompt, verify) ({ \
  DES_cblock * _DES_read_2passwords_key1 = (key1); \
  DES_cblock * _DES_read_2passwords_key2 = (key2); \
  const char * _DES_read_2passwords_prompt = (prompt); \
  LONG _DES_read_2passwords_verify = (verify); \
  ({ \
  register char * _DES_read_2passwords__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), DES_cblock * __asm("a0"), DES_cblock * __asm("a1"), const char * __asm("a2"), LONG __asm("d0"))) \
  (_DES_read_2passwords__bn - 13884))(_DES_read_2passwords__bn, _DES_read_2passwords_key1, _DES_read_2passwords_key2, _DES_read_2passwords_prompt, _DES_read_2passwords_verify); \
});})

#define _ossl_old_des_options() ({ \
  register char * __ossl_old_des_options__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const char * (*)(char * __asm("a6"))) \
  (__ossl_old_des_options__bn - 13890))(__ossl_old_des_options__bn); \
})

#define _ossl_old_des_ecb3_encrypt(input, output, ks1, ks2, ks3, enc) ({ \
  _ossl_old_des_cblock * __ossl_old_des_ecb3_encrypt_input = (input); \
  _ossl_old_des_cblock * __ossl_old_des_ecb3_encrypt_output = (output); \
  _ossl_old_des_key_schedule __ossl_old_des_ecb3_encrypt_ks1 = (ks1); \
  _ossl_old_des_key_schedule __ossl_old_des_ecb3_encrypt_ks2 = (ks2); \
  _ossl_old_des_key_schedule __ossl_old_des_ecb3_encrypt_ks3 = (ks3); \
  LONG __ossl_old_des_ecb3_encrypt_enc = (enc); \
  ({ \
  register char * __ossl_old_des_ecb3_encrypt__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), _ossl_old_des_cblock * __asm("a0"), _ossl_old_des_cblock * __asm("a1"), _ossl_old_des_key_schedule __asm("d0"), _ossl_old_des_key_schedule __asm("d1"), _ossl_old_des_key_schedule __asm("d2"), LONG __asm("d3"))) \
  (__ossl_old_des_ecb3_encrypt__bn - 13896))(__ossl_old_des_ecb3_encrypt__bn, __ossl_old_des_ecb3_encrypt_input, __ossl_old_des_ecb3_encrypt_output, __ossl_old_des_ecb3_encrypt_ks1, __ossl_old_des_ecb3_encrypt_ks2, __ossl_old_des_ecb3_encrypt_ks3, __ossl_old_des_ecb3_encrypt_enc); \
});})

#define _ossl_old_des_cbc_cksum(input, output, length, schedule, ivec) ({ \
  _ossl_old_des_cblock * __ossl_old_des_cbc_cksum_input = (input); \
  _ossl_old_des_cblock * __ossl_old_des_cbc_cksum_output = (output); \
  long __ossl_old_des_cbc_cksum_length = (length); \
  _ossl_old_des_key_schedule __ossl_old_des_cbc_cksum_schedule = (schedule); \
  _ossl_old_des_cblock * __ossl_old_des_cbc_cksum_ivec = (ivec); \
  ({ \
  register char * __ossl_old_des_cbc_cksum__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((DES_LONG (*)(char * __asm("a6"), _ossl_old_des_cblock * __asm("a0"), _ossl_old_des_cblock * __asm("a1"), long __asm("d0"), _ossl_old_des_key_schedule __asm("d1"), _ossl_old_des_cblock * __asm("a2"))) \
  (__ossl_old_des_cbc_cksum__bn - 13902))(__ossl_old_des_cbc_cksum__bn, __ossl_old_des_cbc_cksum_input, __ossl_old_des_cbc_cksum_output, __ossl_old_des_cbc_cksum_length, __ossl_old_des_cbc_cksum_schedule, __ossl_old_des_cbc_cksum_ivec); \
});})

#define _ossl_old_des_cbc_encrypt(input, output, length, schedule, ivec, enc) ({ \
  _ossl_old_des_cblock * __ossl_old_des_cbc_encrypt_input = (input); \
  _ossl_old_des_cblock * __ossl_old_des_cbc_encrypt_output = (output); \
  long __ossl_old_des_cbc_encrypt_length = (length); \
  _ossl_old_des_key_schedule __ossl_old_des_cbc_encrypt_schedule = (schedule); \
  _ossl_old_des_cblock * __ossl_old_des_cbc_encrypt_ivec = (ivec); \
  LONG __ossl_old_des_cbc_encrypt_enc = (enc); \
  ({ \
  register char * __ossl_old_des_cbc_encrypt__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), _ossl_old_des_cblock * __asm("a0"), _ossl_old_des_cblock * __asm("a1"), long __asm("d0"), _ossl_old_des_key_schedule __asm("d1"), _ossl_old_des_cblock * __asm("a2"), LONG __asm("d2"))) \
  (__ossl_old_des_cbc_encrypt__bn - 13908))(__ossl_old_des_cbc_encrypt__bn, __ossl_old_des_cbc_encrypt_input, __ossl_old_des_cbc_encrypt_output, __ossl_old_des_cbc_encrypt_length, __ossl_old_des_cbc_encrypt_schedule, __ossl_old_des_cbc_encrypt_ivec, __ossl_old_des_cbc_encrypt_enc); \
});})

#define _ossl_old_des_ncbc_encrypt(input, output, length, schedule, ivec, enc) ({ \
  _ossl_old_des_cblock * __ossl_old_des_ncbc_encrypt_input = (input); \
  _ossl_old_des_cblock * __ossl_old_des_ncbc_encrypt_output = (output); \
  long __ossl_old_des_ncbc_encrypt_length = (length); \
  _ossl_old_des_key_schedule __ossl_old_des_ncbc_encrypt_schedule = (schedule); \
  _ossl_old_des_cblock * __ossl_old_des_ncbc_encrypt_ivec = (ivec); \
  LONG __ossl_old_des_ncbc_encrypt_enc = (enc); \
  ({ \
  register char * __ossl_old_des_ncbc_encrypt__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), _ossl_old_des_cblock * __asm("a0"), _ossl_old_des_cblock * __asm("a1"), long __asm("d0"), _ossl_old_des_key_schedule __asm("d1"), _ossl_old_des_cblock * __asm("a2"), LONG __asm("d2"))) \
  (__ossl_old_des_ncbc_encrypt__bn - 13914))(__ossl_old_des_ncbc_encrypt__bn, __ossl_old_des_ncbc_encrypt_input, __ossl_old_des_ncbc_encrypt_output, __ossl_old_des_ncbc_encrypt_length, __ossl_old_des_ncbc_encrypt_schedule, __ossl_old_des_ncbc_encrypt_ivec, __ossl_old_des_ncbc_encrypt_enc); \
});})

#define _ossl_old_des_xcbc_encrypt(input, output, length, schedule, ivec, inw, outw, enc) ({ \
  _ossl_old_des_cblock * __ossl_old_des_xcbc_encrypt_input = (input); \
  _ossl_old_des_cblock * __ossl_old_des_xcbc_encrypt_output = (output); \
  long __ossl_old_des_xcbc_encrypt_length = (length); \
  _ossl_old_des_key_schedule __ossl_old_des_xcbc_encrypt_schedule = (schedule); \
  _ossl_old_des_cblock * __ossl_old_des_xcbc_encrypt_ivec = (ivec); \
  _ossl_old_des_cblock * __ossl_old_des_xcbc_encrypt_inw = (inw); \
  _ossl_old_des_cblock * __ossl_old_des_xcbc_encrypt_outw = (outw); \
  LONG __ossl_old_des_xcbc_encrypt_enc = (enc); \
  ({ \
  register char * __ossl_old_des_xcbc_encrypt__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), _ossl_old_des_cblock * __asm("a0"), _ossl_old_des_cblock * __asm("a1"), long __asm("d0"), _ossl_old_des_key_schedule __asm("d1"), _ossl_old_des_cblock * __asm("a2"), _ossl_old_des_cblock * __asm("a3"), _ossl_old_des_cblock * __asm("d2"), LONG __asm("d3"))) \
  (__ossl_old_des_xcbc_encrypt__bn - 13920))(__ossl_old_des_xcbc_encrypt__bn, __ossl_old_des_xcbc_encrypt_input, __ossl_old_des_xcbc_encrypt_output, __ossl_old_des_xcbc_encrypt_length, __ossl_old_des_xcbc_encrypt_schedule, __ossl_old_des_xcbc_encrypt_ivec, __ossl_old_des_xcbc_encrypt_inw, __ossl_old_des_xcbc_encrypt_outw, __ossl_old_des_xcbc_encrypt_enc); \
});})

#define _ossl_old_des_cfb_encrypt(in, out, numbits, length, schedule, ivec, enc) ({ \
  unsigned char * __ossl_old_des_cfb_encrypt_in = (in); \
  unsigned char * __ossl_old_des_cfb_encrypt_out = (out); \
  LONG __ossl_old_des_cfb_encrypt_numbits = (numbits); \
  long __ossl_old_des_cfb_encrypt_length = (length); \
  _ossl_old_des_key_schedule __ossl_old_des_cfb_encrypt_schedule = (schedule); \
  _ossl_old_des_cblock * __ossl_old_des_cfb_encrypt_ivec = (ivec); \
  LONG __ossl_old_des_cfb_encrypt_enc = (enc); \
  ({ \
  register char * __ossl_old_des_cfb_encrypt__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), unsigned char * __asm("a0"), unsigned char * __asm("a1"), LONG __asm("d0"), long __asm("d1"), _ossl_old_des_key_schedule __asm("d2"), _ossl_old_des_cblock * __asm("a2"), LONG __asm("d3"))) \
  (__ossl_old_des_cfb_encrypt__bn - 13926))(__ossl_old_des_cfb_encrypt__bn, __ossl_old_des_cfb_encrypt_in, __ossl_old_des_cfb_encrypt_out, __ossl_old_des_cfb_encrypt_numbits, __ossl_old_des_cfb_encrypt_length, __ossl_old_des_cfb_encrypt_schedule, __ossl_old_des_cfb_encrypt_ivec, __ossl_old_des_cfb_encrypt_enc); \
});})

#define _ossl_old_des_ecb_encrypt(input, output, ks, enc) ({ \
  _ossl_old_des_cblock * __ossl_old_des_ecb_encrypt_input = (input); \
  _ossl_old_des_cblock * __ossl_old_des_ecb_encrypt_output = (output); \
  _ossl_old_des_key_schedule __ossl_old_des_ecb_encrypt_ks = (ks); \
  LONG __ossl_old_des_ecb_encrypt_enc = (enc); \
  ({ \
  register char * __ossl_old_des_ecb_encrypt__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), _ossl_old_des_cblock * __asm("a0"), _ossl_old_des_cblock * __asm("a1"), _ossl_old_des_key_schedule __asm("d0"), LONG __asm("d1"))) \
  (__ossl_old_des_ecb_encrypt__bn - 13932))(__ossl_old_des_ecb_encrypt__bn, __ossl_old_des_ecb_encrypt_input, __ossl_old_des_ecb_encrypt_output, __ossl_old_des_ecb_encrypt_ks, __ossl_old_des_ecb_encrypt_enc); \
});})

#define _ossl_old_des_encrypt(data, ks, enc) ({ \
  DES_LONG * __ossl_old_des_encrypt_data = (data); \
  _ossl_old_des_key_schedule __ossl_old_des_encrypt_ks = (ks); \
  LONG __ossl_old_des_encrypt_enc = (enc); \
  ({ \
  register char * __ossl_old_des_encrypt__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), DES_LONG * __asm("a0"), _ossl_old_des_key_schedule __asm("d0"), LONG __asm("d1"))) \
  (__ossl_old_des_encrypt__bn - 13938))(__ossl_old_des_encrypt__bn, __ossl_old_des_encrypt_data, __ossl_old_des_encrypt_ks, __ossl_old_des_encrypt_enc); \
});})

#define _ossl_old_des_encrypt2(data, ks, enc) ({ \
  DES_LONG * __ossl_old_des_encrypt2_data = (data); \
  _ossl_old_des_key_schedule __ossl_old_des_encrypt2_ks = (ks); \
  LONG __ossl_old_des_encrypt2_enc = (enc); \
  ({ \
  register char * __ossl_old_des_encrypt2__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), DES_LONG * __asm("a0"), _ossl_old_des_key_schedule __asm("d0"), LONG __asm("d1"))) \
  (__ossl_old_des_encrypt2__bn - 13944))(__ossl_old_des_encrypt2__bn, __ossl_old_des_encrypt2_data, __ossl_old_des_encrypt2_ks, __ossl_old_des_encrypt2_enc); \
});})

#define _ossl_old_des_encrypt3(data, ks1, ks2, ks3) ({ \
  DES_LONG * __ossl_old_des_encrypt3_data = (data); \
  _ossl_old_des_key_schedule __ossl_old_des_encrypt3_ks1 = (ks1); \
  _ossl_old_des_key_schedule __ossl_old_des_encrypt3_ks2 = (ks2); \
  _ossl_old_des_key_schedule __ossl_old_des_encrypt3_ks3 = (ks3); \
  ({ \
  register char * __ossl_old_des_encrypt3__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), DES_LONG * __asm("a0"), _ossl_old_des_key_schedule __asm("d0"), _ossl_old_des_key_schedule __asm("d1"), _ossl_old_des_key_schedule __asm("d2"))) \
  (__ossl_old_des_encrypt3__bn - 13950))(__ossl_old_des_encrypt3__bn, __ossl_old_des_encrypt3_data, __ossl_old_des_encrypt3_ks1, __ossl_old_des_encrypt3_ks2, __ossl_old_des_encrypt3_ks3); \
});})

#define _ossl_old_des_decrypt3(data, ks1, ks2, ks3) ({ \
  DES_LONG * __ossl_old_des_decrypt3_data = (data); \
  _ossl_old_des_key_schedule __ossl_old_des_decrypt3_ks1 = (ks1); \
  _ossl_old_des_key_schedule __ossl_old_des_decrypt3_ks2 = (ks2); \
  _ossl_old_des_key_schedule __ossl_old_des_decrypt3_ks3 = (ks3); \
  ({ \
  register char * __ossl_old_des_decrypt3__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), DES_LONG * __asm("a0"), _ossl_old_des_key_schedule __asm("d0"), _ossl_old_des_key_schedule __asm("d1"), _ossl_old_des_key_schedule __asm("d2"))) \
  (__ossl_old_des_decrypt3__bn - 13956))(__ossl_old_des_decrypt3__bn, __ossl_old_des_decrypt3_data, __ossl_old_des_decrypt3_ks1, __ossl_old_des_decrypt3_ks2, __ossl_old_des_decrypt3_ks3); \
});})

#define _ossl_old_des_ede3_cbc_encrypt(input, output, length, ks1, ks2, ks3, ivec, enc) ({ \
  _ossl_old_des_cblock * __ossl_old_des_ede3_cbc_encrypt_input = (input); \
  _ossl_old_des_cblock * __ossl_old_des_ede3_cbc_encrypt_output = (output); \
  long __ossl_old_des_ede3_cbc_encrypt_length = (length); \
  _ossl_old_des_key_schedule __ossl_old_des_ede3_cbc_encrypt_ks1 = (ks1); \
  _ossl_old_des_key_schedule __ossl_old_des_ede3_cbc_encrypt_ks2 = (ks2); \
  _ossl_old_des_key_schedule __ossl_old_des_ede3_cbc_encrypt_ks3 = (ks3); \
  _ossl_old_des_cblock * __ossl_old_des_ede3_cbc_encrypt_ivec = (ivec); \
  LONG __ossl_old_des_ede3_cbc_encrypt_enc = (enc); \
  ({ \
  register char * __ossl_old_des_ede3_cbc_encrypt__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), _ossl_old_des_cblock * __asm("a0"), _ossl_old_des_cblock * __asm("a1"), long __asm("d0"), _ossl_old_des_key_schedule __asm("d1"), _ossl_old_des_key_schedule __asm("d2"), _ossl_old_des_key_schedule __asm("d3"), _ossl_old_des_cblock * __asm("a2"), LONG __asm("d4"))) \
  (__ossl_old_des_ede3_cbc_encrypt__bn - 13962))(__ossl_old_des_ede3_cbc_encrypt__bn, __ossl_old_des_ede3_cbc_encrypt_input, __ossl_old_des_ede3_cbc_encrypt_output, __ossl_old_des_ede3_cbc_encrypt_length, __ossl_old_des_ede3_cbc_encrypt_ks1, __ossl_old_des_ede3_cbc_encrypt_ks2, __ossl_old_des_ede3_cbc_encrypt_ks3, __ossl_old_des_ede3_cbc_encrypt_ivec, __ossl_old_des_ede3_cbc_encrypt_enc); \
});})

#define _ossl_old_des_ede3_cfb64_encrypt(in, out, length, ks1, ks2, ks3, ivec, num, enc) ({ \
  unsigned char * __ossl_old_des_ede3_cfb64_encrypt_in = (in); \
  unsigned char * __ossl_old_des_ede3_cfb64_encrypt_out = (out); \
  long __ossl_old_des_ede3_cfb64_encrypt_length = (length); \
  _ossl_old_des_key_schedule __ossl_old_des_ede3_cfb64_encrypt_ks1 = (ks1); \
  _ossl_old_des_key_schedule __ossl_old_des_ede3_cfb64_encrypt_ks2 = (ks2); \
  _ossl_old_des_key_schedule __ossl_old_des_ede3_cfb64_encrypt_ks3 = (ks3); \
  _ossl_old_des_cblock * __ossl_old_des_ede3_cfb64_encrypt_ivec = (ivec); \
  int * __ossl_old_des_ede3_cfb64_encrypt_num = (num); \
  LONG __ossl_old_des_ede3_cfb64_encrypt_enc = (enc); \
  ({ \
  register char * __ossl_old_des_ede3_cfb64_encrypt__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), unsigned char * __asm("a0"), unsigned char * __asm("a1"), long __asm("d0"), _ossl_old_des_key_schedule __asm("d1"), _ossl_old_des_key_schedule __asm("d2"), _ossl_old_des_key_schedule __asm("d3"), _ossl_old_des_cblock * __asm("a2"), int * __asm("a3"), LONG __asm("d4"))) \
  (__ossl_old_des_ede3_cfb64_encrypt__bn - 13968))(__ossl_old_des_ede3_cfb64_encrypt__bn, __ossl_old_des_ede3_cfb64_encrypt_in, __ossl_old_des_ede3_cfb64_encrypt_out, __ossl_old_des_ede3_cfb64_encrypt_length, __ossl_old_des_ede3_cfb64_encrypt_ks1, __ossl_old_des_ede3_cfb64_encrypt_ks2, __ossl_old_des_ede3_cfb64_encrypt_ks3, __ossl_old_des_ede3_cfb64_encrypt_ivec, __ossl_old_des_ede3_cfb64_encrypt_num, __ossl_old_des_ede3_cfb64_encrypt_enc); \
});})

#define _ossl_old_des_ede3_ofb64_encrypt(in, out, length, ks1, ks2, ks3, ivec, num) ({ \
  unsigned char * __ossl_old_des_ede3_ofb64_encrypt_in = (in); \
  unsigned char * __ossl_old_des_ede3_ofb64_encrypt_out = (out); \
  long __ossl_old_des_ede3_ofb64_encrypt_length = (length); \
  _ossl_old_des_key_schedule __ossl_old_des_ede3_ofb64_encrypt_ks1 = (ks1); \
  _ossl_old_des_key_schedule __ossl_old_des_ede3_ofb64_encrypt_ks2 = (ks2); \
  _ossl_old_des_key_schedule __ossl_old_des_ede3_ofb64_encrypt_ks3 = (ks3); \
  _ossl_old_des_cblock * __ossl_old_des_ede3_ofb64_encrypt_ivec = (ivec); \
  int * __ossl_old_des_ede3_ofb64_encrypt_num = (num); \
  ({ \
  register char * __ossl_old_des_ede3_ofb64_encrypt__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), unsigned char * __asm("a0"), unsigned char * __asm("a1"), long __asm("d0"), _ossl_old_des_key_schedule __asm("d1"), _ossl_old_des_key_schedule __asm("d2"), _ossl_old_des_key_schedule __asm("d3"), _ossl_old_des_cblock * __asm("a2"), int * __asm("a3"))) \
  (__ossl_old_des_ede3_ofb64_encrypt__bn - 13974))(__ossl_old_des_ede3_ofb64_encrypt__bn, __ossl_old_des_ede3_ofb64_encrypt_in, __ossl_old_des_ede3_ofb64_encrypt_out, __ossl_old_des_ede3_ofb64_encrypt_length, __ossl_old_des_ede3_ofb64_encrypt_ks1, __ossl_old_des_ede3_ofb64_encrypt_ks2, __ossl_old_des_ede3_ofb64_encrypt_ks3, __ossl_old_des_ede3_ofb64_encrypt_ivec, __ossl_old_des_ede3_ofb64_encrypt_num); \
});})

#define _ossl_old_des_xwhite_in2out(des_key, in_white, out_white) ({ \
  _ossl_old_des_cblock * __ossl_old_des_xwhite_in2out_des_key = (des_key); \
  _ossl_old_des_cblock * __ossl_old_des_xwhite_in2out_in_white = (in_white); \
  _ossl_old_des_cblock * __ossl_old_des_xwhite_in2out_out_white = (out_white); \
  ({ \
  register char * __ossl_old_des_xwhite_in2out__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), _ossl_old_des_cblock * __asm("a0"), _ossl_old_des_cblock * __asm("a1"), _ossl_old_des_cblock * __asm("a2"))) \
  (__ossl_old_des_xwhite_in2out__bn - 13980))(__ossl_old_des_xwhite_in2out__bn, __ossl_old_des_xwhite_in2out_des_key, __ossl_old_des_xwhite_in2out_in_white, __ossl_old_des_xwhite_in2out_out_white); \
});})

#define _ossl_old_des_enc_read(fd, buf, len, sched, iv) ({ \
  LONG __ossl_old_des_enc_read_fd = (fd); \
  char * __ossl_old_des_enc_read_buf = (buf); \
  LONG __ossl_old_des_enc_read_len = (len); \
  _ossl_old_des_key_schedule __ossl_old_des_enc_read_sched = (sched); \
  _ossl_old_des_cblock * __ossl_old_des_enc_read_iv = (iv); \
  ({ \
  register char * __ossl_old_des_enc_read__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), LONG __asm("d0"), char * __asm("a0"), LONG __asm("d1"), _ossl_old_des_key_schedule __asm("d2"), _ossl_old_des_cblock * __asm("a1"))) \
  (__ossl_old_des_enc_read__bn - 13986))(__ossl_old_des_enc_read__bn, __ossl_old_des_enc_read_fd, __ossl_old_des_enc_read_buf, __ossl_old_des_enc_read_len, __ossl_old_des_enc_read_sched, __ossl_old_des_enc_read_iv); \
});})

#define _ossl_old_des_enc_write(fd, buf, len, sched, iv) ({ \
  LONG __ossl_old_des_enc_write_fd = (fd); \
  char * __ossl_old_des_enc_write_buf = (buf); \
  LONG __ossl_old_des_enc_write_len = (len); \
  _ossl_old_des_key_schedule __ossl_old_des_enc_write_sched = (sched); \
  _ossl_old_des_cblock * __ossl_old_des_enc_write_iv = (iv); \
  ({ \
  register char * __ossl_old_des_enc_write__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), LONG __asm("d0"), char * __asm("a0"), LONG __asm("d1"), _ossl_old_des_key_schedule __asm("d2"), _ossl_old_des_cblock * __asm("a1"))) \
  (__ossl_old_des_enc_write__bn - 13992))(__ossl_old_des_enc_write__bn, __ossl_old_des_enc_write_fd, __ossl_old_des_enc_write_buf, __ossl_old_des_enc_write_len, __ossl_old_des_enc_write_sched, __ossl_old_des_enc_write_iv); \
});})

#define _ossl_old_des_fcrypt(buf, salt, ret) ({ \
  const char * __ossl_old_des_fcrypt_buf = (buf); \
  const char * __ossl_old_des_fcrypt_salt = (salt); \
  char * __ossl_old_des_fcrypt_ret = (ret); \
  ({ \
  register char * __ossl_old_des_fcrypt__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((char * (*)(char * __asm("a6"), const char * __asm("a0"), const char * __asm("a1"), char * __asm("a2"))) \
  (__ossl_old_des_fcrypt__bn - 13998))(__ossl_old_des_fcrypt__bn, __ossl_old_des_fcrypt_buf, __ossl_old_des_fcrypt_salt, __ossl_old_des_fcrypt_ret); \
});})

#define _ossl_old_des_crypt(buf, salt) ({ \
  const char * __ossl_old_des_crypt_buf = (buf); \
  const char * __ossl_old_des_crypt_salt = (salt); \
  ({ \
  register char * __ossl_old_des_crypt__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((char * (*)(char * __asm("a6"), const char * __asm("a0"), const char * __asm("a1"))) \
  (__ossl_old_des_crypt__bn - 14004))(__ossl_old_des_crypt__bn, __ossl_old_des_crypt_buf, __ossl_old_des_crypt_salt); \
});})

#define _ossl_old_crypt(buf, salt) ({ \
  const char * __ossl_old_crypt_buf = (buf); \
  const char * __ossl_old_crypt_salt = (salt); \
  ({ \
  register char * __ossl_old_crypt__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((char * (*)(char * __asm("a6"), const char * __asm("a0"), const char * __asm("a1"))) \
  (__ossl_old_crypt__bn - 14010))(__ossl_old_crypt__bn, __ossl_old_crypt_buf, __ossl_old_crypt_salt); \
});})

#define _ossl_old_des_ofb_encrypt(in, out, numbits, length, schedule, ivec) ({ \
  unsigned char * __ossl_old_des_ofb_encrypt_in = (in); \
  unsigned char * __ossl_old_des_ofb_encrypt_out = (out); \
  LONG __ossl_old_des_ofb_encrypt_numbits = (numbits); \
  long __ossl_old_des_ofb_encrypt_length = (length); \
  _ossl_old_des_key_schedule __ossl_old_des_ofb_encrypt_schedule = (schedule); \
  _ossl_old_des_cblock * __ossl_old_des_ofb_encrypt_ivec = (ivec); \
  ({ \
  register char * __ossl_old_des_ofb_encrypt__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), unsigned char * __asm("a0"), unsigned char * __asm("a1"), LONG __asm("d0"), long __asm("d1"), _ossl_old_des_key_schedule __asm("d2"), _ossl_old_des_cblock * __asm("a2"))) \
  (__ossl_old_des_ofb_encrypt__bn - 14016))(__ossl_old_des_ofb_encrypt__bn, __ossl_old_des_ofb_encrypt_in, __ossl_old_des_ofb_encrypt_out, __ossl_old_des_ofb_encrypt_numbits, __ossl_old_des_ofb_encrypt_length, __ossl_old_des_ofb_encrypt_schedule, __ossl_old_des_ofb_encrypt_ivec); \
});})

#define _ossl_old_des_pcbc_encrypt(input, output, length, schedule, ivec, enc) ({ \
  _ossl_old_des_cblock * __ossl_old_des_pcbc_encrypt_input = (input); \
  _ossl_old_des_cblock * __ossl_old_des_pcbc_encrypt_output = (output); \
  long __ossl_old_des_pcbc_encrypt_length = (length); \
  _ossl_old_des_key_schedule __ossl_old_des_pcbc_encrypt_schedule = (schedule); \
  _ossl_old_des_cblock * __ossl_old_des_pcbc_encrypt_ivec = (ivec); \
  LONG __ossl_old_des_pcbc_encrypt_enc = (enc); \
  ({ \
  register char * __ossl_old_des_pcbc_encrypt__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), _ossl_old_des_cblock * __asm("a0"), _ossl_old_des_cblock * __asm("a1"), long __asm("d0"), _ossl_old_des_key_schedule __asm("d1"), _ossl_old_des_cblock * __asm("a2"), LONG __asm("d2"))) \
  (__ossl_old_des_pcbc_encrypt__bn - 14022))(__ossl_old_des_pcbc_encrypt__bn, __ossl_old_des_pcbc_encrypt_input, __ossl_old_des_pcbc_encrypt_output, __ossl_old_des_pcbc_encrypt_length, __ossl_old_des_pcbc_encrypt_schedule, __ossl_old_des_pcbc_encrypt_ivec, __ossl_old_des_pcbc_encrypt_enc); \
});})

#define _ossl_old_des_quad_cksum(input, output, length, out_count, seed) ({ \
  _ossl_old_des_cblock * __ossl_old_des_quad_cksum_input = (input); \
  _ossl_old_des_cblock * __ossl_old_des_quad_cksum_output = (output); \
  long __ossl_old_des_quad_cksum_length = (length); \
  LONG __ossl_old_des_quad_cksum_out_count = (out_count); \
  _ossl_old_des_cblock * __ossl_old_des_quad_cksum_seed = (seed); \
  ({ \
  register char * __ossl_old_des_quad_cksum__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((DES_LONG (*)(char * __asm("a6"), _ossl_old_des_cblock * __asm("a0"), _ossl_old_des_cblock * __asm("a1"), long __asm("d0"), LONG __asm("d1"), _ossl_old_des_cblock * __asm("a2"))) \
  (__ossl_old_des_quad_cksum__bn - 14028))(__ossl_old_des_quad_cksum__bn, __ossl_old_des_quad_cksum_input, __ossl_old_des_quad_cksum_output, __ossl_old_des_quad_cksum_length, __ossl_old_des_quad_cksum_out_count, __ossl_old_des_quad_cksum_seed); \
});})

#define _ossl_old_des_random_seed(key) ({ \
  _ossl_old_des_cblock __ossl_old_des_random_seed_key = (key); \
  ({ \
  register char * __ossl_old_des_random_seed__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), _ossl_old_des_cblock __asm("d0"))) \
  (__ossl_old_des_random_seed__bn - 14034))(__ossl_old_des_random_seed__bn, __ossl_old_des_random_seed_key); \
});})

#define _ossl_old_des_random_key(ret) ({ \
  _ossl_old_des_cblock __ossl_old_des_random_key_ret = (ret); \
  ({ \
  register char * __ossl_old_des_random_key__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), _ossl_old_des_cblock __asm("d0"))) \
  (__ossl_old_des_random_key__bn - 14040))(__ossl_old_des_random_key__bn, __ossl_old_des_random_key_ret); \
});})

#define _ossl_old_des_read_password(key, prompt, verify) ({ \
  _ossl_old_des_cblock * __ossl_old_des_read_password_key = (key); \
  const char * __ossl_old_des_read_password_prompt = (prompt); \
  LONG __ossl_old_des_read_password_verify = (verify); \
  ({ \
  register char * __ossl_old_des_read_password__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), _ossl_old_des_cblock * __asm("a0"), const char * __asm("a1"), LONG __asm("d0"))) \
  (__ossl_old_des_read_password__bn - 14046))(__ossl_old_des_read_password__bn, __ossl_old_des_read_password_key, __ossl_old_des_read_password_prompt, __ossl_old_des_read_password_verify); \
});})

#define _ossl_old_des_read_2passwords(key1, key2, prompt, verify) ({ \
  _ossl_old_des_cblock * __ossl_old_des_read_2passwords_key1 = (key1); \
  _ossl_old_des_cblock * __ossl_old_des_read_2passwords_key2 = (key2); \
  const char * __ossl_old_des_read_2passwords_prompt = (prompt); \
  LONG __ossl_old_des_read_2passwords_verify = (verify); \
  ({ \
  register char * __ossl_old_des_read_2passwords__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), _ossl_old_des_cblock * __asm("a0"), _ossl_old_des_cblock * __asm("a1"), const char * __asm("a2"), LONG __asm("d0"))) \
  (__ossl_old_des_read_2passwords__bn - 14052))(__ossl_old_des_read_2passwords__bn, __ossl_old_des_read_2passwords_key1, __ossl_old_des_read_2passwords_key2, __ossl_old_des_read_2passwords_prompt, __ossl_old_des_read_2passwords_verify); \
});})

#define _ossl_old_des_set_odd_parity(key) ({ \
  _ossl_old_des_cblock * __ossl_old_des_set_odd_parity_key = (key); \
  ({ \
  register char * __ossl_old_des_set_odd_parity__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), _ossl_old_des_cblock * __asm("a0"))) \
  (__ossl_old_des_set_odd_parity__bn - 14058))(__ossl_old_des_set_odd_parity__bn, __ossl_old_des_set_odd_parity_key); \
});})

#define _ossl_old_des_is_weak_key(key) ({ \
  _ossl_old_des_cblock * __ossl_old_des_is_weak_key_key = (key); \
  ({ \
  register char * __ossl_old_des_is_weak_key__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), _ossl_old_des_cblock * __asm("a0"))) \
  (__ossl_old_des_is_weak_key__bn - 14064))(__ossl_old_des_is_weak_key__bn, __ossl_old_des_is_weak_key_key); \
});})

#define _ossl_old_des_set_key(key, schedule) ({ \
  _ossl_old_des_cblock * __ossl_old_des_set_key_key = (key); \
  _ossl_old_des_key_schedule __ossl_old_des_set_key_schedule = (schedule); \
  ({ \
  register char * __ossl_old_des_set_key__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), _ossl_old_des_cblock * __asm("a0"), _ossl_old_des_key_schedule __asm("d0"))) \
  (__ossl_old_des_set_key__bn - 14070))(__ossl_old_des_set_key__bn, __ossl_old_des_set_key_key, __ossl_old_des_set_key_schedule); \
});})

#define _ossl_old_des_key_sched(key, schedule) ({ \
  _ossl_old_des_cblock * __ossl_old_des_key_sched_key = (key); \
  _ossl_old_des_key_schedule __ossl_old_des_key_sched_schedule = (schedule); \
  ({ \
  register char * __ossl_old_des_key_sched__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), _ossl_old_des_cblock * __asm("a0"), _ossl_old_des_key_schedule __asm("d0"))) \
  (__ossl_old_des_key_sched__bn - 14076))(__ossl_old_des_key_sched__bn, __ossl_old_des_key_sched_key, __ossl_old_des_key_sched_schedule); \
});})

#define _ossl_old_des_string_to_key(str, key) ({ \
  char * __ossl_old_des_string_to_key_str = (str); \
  _ossl_old_des_cblock * __ossl_old_des_string_to_key_key = (key); \
  ({ \
  register char * __ossl_old_des_string_to_key__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), char * __asm("a0"), _ossl_old_des_cblock * __asm("a1"))) \
  (__ossl_old_des_string_to_key__bn - 14082))(__ossl_old_des_string_to_key__bn, __ossl_old_des_string_to_key_str, __ossl_old_des_string_to_key_key); \
});})

#define _ossl_old_des_string_to_2keys(str, key1, key2) ({ \
  char * __ossl_old_des_string_to_2keys_str = (str); \
  _ossl_old_des_cblock * __ossl_old_des_string_to_2keys_key1 = (key1); \
  _ossl_old_des_cblock * __ossl_old_des_string_to_2keys_key2 = (key2); \
  ({ \
  register char * __ossl_old_des_string_to_2keys__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), char * __asm("a0"), _ossl_old_des_cblock * __asm("a1"), _ossl_old_des_cblock * __asm("a2"))) \
  (__ossl_old_des_string_to_2keys__bn - 14088))(__ossl_old_des_string_to_2keys__bn, __ossl_old_des_string_to_2keys_str, __ossl_old_des_string_to_2keys_key1, __ossl_old_des_string_to_2keys_key2); \
});})

#define _ossl_old_des_cfb64_encrypt(in, out, length, schedule, ivec, num, enc) ({ \
  unsigned char * __ossl_old_des_cfb64_encrypt_in = (in); \
  unsigned char * __ossl_old_des_cfb64_encrypt_out = (out); \
  long __ossl_old_des_cfb64_encrypt_length = (length); \
  _ossl_old_des_key_schedule __ossl_old_des_cfb64_encrypt_schedule = (schedule); \
  _ossl_old_des_cblock * __ossl_old_des_cfb64_encrypt_ivec = (ivec); \
  int * __ossl_old_des_cfb64_encrypt_num = (num); \
  LONG __ossl_old_des_cfb64_encrypt_enc = (enc); \
  ({ \
  register char * __ossl_old_des_cfb64_encrypt__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), unsigned char * __asm("a0"), unsigned char * __asm("a1"), long __asm("d0"), _ossl_old_des_key_schedule __asm("d1"), _ossl_old_des_cblock * __asm("a2"), int * __asm("a3"), LONG __asm("d2"))) \
  (__ossl_old_des_cfb64_encrypt__bn - 14094))(__ossl_old_des_cfb64_encrypt__bn, __ossl_old_des_cfb64_encrypt_in, __ossl_old_des_cfb64_encrypt_out, __ossl_old_des_cfb64_encrypt_length, __ossl_old_des_cfb64_encrypt_schedule, __ossl_old_des_cfb64_encrypt_ivec, __ossl_old_des_cfb64_encrypt_num, __ossl_old_des_cfb64_encrypt_enc); \
});})

#define _ossl_old_des_ofb64_encrypt(in, out, length, schedule, ivec, num) ({ \
  unsigned char * __ossl_old_des_ofb64_encrypt_in = (in); \
  unsigned char * __ossl_old_des_ofb64_encrypt_out = (out); \
  long __ossl_old_des_ofb64_encrypt_length = (length); \
  _ossl_old_des_key_schedule __ossl_old_des_ofb64_encrypt_schedule = (schedule); \
  _ossl_old_des_cblock * __ossl_old_des_ofb64_encrypt_ivec = (ivec); \
  int * __ossl_old_des_ofb64_encrypt_num = (num); \
  ({ \
  register char * __ossl_old_des_ofb64_encrypt__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), unsigned char * __asm("a0"), unsigned char * __asm("a1"), long __asm("d0"), _ossl_old_des_key_schedule __asm("d1"), _ossl_old_des_cblock * __asm("a2"), int * __asm("a3"))) \
  (__ossl_old_des_ofb64_encrypt__bn - 14100))(__ossl_old_des_ofb64_encrypt__bn, __ossl_old_des_ofb64_encrypt_in, __ossl_old_des_ofb64_encrypt_out, __ossl_old_des_ofb64_encrypt_length, __ossl_old_des_ofb64_encrypt_schedule, __ossl_old_des_ofb64_encrypt_ivec, __ossl_old_des_ofb64_encrypt_num); \
});})

#define _ossl_096_des_random_seed(key) ({ \
  des_cblock * __ossl_096_des_random_seed_key = (key); \
  ({ \
  register char * __ossl_096_des_random_seed__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), des_cblock * __asm("a0"))) \
  (__ossl_096_des_random_seed__bn - 14106))(__ossl_096_des_random_seed__bn, __ossl_096_des_random_seed_key); \
});})

#define DH_OpenSSL() ({ \
  register char * _DH_OpenSSL__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const DH_METHOD * (*)(char * __asm("a6"))) \
  (_DH_OpenSSL__bn - 14112))(_DH_OpenSSL__bn); \
})

#define DH_set_default_method(meth) ({ \
  const DH_METHOD * _DH_set_default_method_meth = (meth); \
  ({ \
  register char * _DH_set_default_method__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), const DH_METHOD * __asm("a0"))) \
  (_DH_set_default_method__bn - 14118))(_DH_set_default_method__bn, _DH_set_default_method_meth); \
});})

#define DH_get_default_method() ({ \
  register char * _DH_get_default_method__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const DH_METHOD * (*)(char * __asm("a6"))) \
  (_DH_get_default_method__bn - 14124))(_DH_get_default_method__bn); \
})

#define DH_set_method(dh, meth) ({ \
  DH * _DH_set_method_dh = (dh); \
  const DH_METHOD * _DH_set_method_meth = (meth); \
  ({ \
  register char * _DH_set_method__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), DH * __asm("a0"), const DH_METHOD * __asm("a1"))) \
  (_DH_set_method__bn - 14130))(_DH_set_method__bn, _DH_set_method_dh, _DH_set_method_meth); \
});})

#define DH_new_method(engine) ({ \
  ENGINE * _DH_new_method_engine = (engine); \
  ({ \
  register char * _DH_new_method__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((DH * (*)(char * __asm("a6"), ENGINE * __asm("a0"))) \
  (_DH_new_method__bn - 14136))(_DH_new_method__bn, _DH_new_method_engine); \
});})

#define DH_new() ({ \
  register char * _DH_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((DH * (*)(char * __asm("a6"))) \
  (_DH_new__bn - 14142))(_DH_new__bn); \
})

#define DH_free(dh) ({ \
  DH * _DH_free_dh = (dh); \
  ({ \
  register char * _DH_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), DH * __asm("a0"))) \
  (_DH_free__bn - 14148))(_DH_free__bn, _DH_free_dh); \
});})

#define DH_up_ref(dh) ({ \
  DH * _DH_up_ref_dh = (dh); \
  ({ \
  register char * _DH_up_ref__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), DH * __asm("a0"))) \
  (_DH_up_ref__bn - 14154))(_DH_up_ref__bn, _DH_up_ref_dh); \
});})

#define DH_size(dh) ({ \
  const DH * _DH_size_dh = (dh); \
  ({ \
  register char * _DH_size__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const DH * __asm("a0"))) \
  (_DH_size__bn - 14160))(_DH_size__bn, _DH_size_dh); \
});})

#define DH_get_ex_new_index(argl, argp, new_func, dup_func, free_func) ({ \
  long _DH_get_ex_new_index_argl = (argl); \
  void * _DH_get_ex_new_index_argp = (argp); \
  CRYPTO_EX_new * (*_DH_get_ex_new_index_new_func)() = (new_func); \
  CRYPTO_EX_dup * (*_DH_get_ex_new_index_dup_func)() = (dup_func); \
  CRYPTO_EX_free * (*_DH_get_ex_new_index_free_func)() = (free_func); \
  ({ \
  register char * _DH_get_ex_new_index__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), long __asm("d0"), void * __asm("a0"), CRYPTO_EX_new * (*)() __asm("a1"), CRYPTO_EX_dup * (*)() __asm("a2"), CRYPTO_EX_free * (*)() __asm("a3"))) \
  (_DH_get_ex_new_index__bn - 14166))(_DH_get_ex_new_index__bn, _DH_get_ex_new_index_argl, _DH_get_ex_new_index_argp, _DH_get_ex_new_index_new_func, _DH_get_ex_new_index_dup_func, _DH_get_ex_new_index_free_func); \
});})

#define DH_set_ex_data(d, idx, arg) ({ \
  DH * _DH_set_ex_data_d = (d); \
  LONG _DH_set_ex_data_idx = (idx); \
  void * _DH_set_ex_data_arg = (arg); \
  ({ \
  register char * _DH_set_ex_data__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), DH * __asm("a0"), LONG __asm("d0"), void * __asm("a1"))) \
  (_DH_set_ex_data__bn - 14172))(_DH_set_ex_data__bn, _DH_set_ex_data_d, _DH_set_ex_data_idx, _DH_set_ex_data_arg); \
});})

#define DH_get_ex_data(d, idx) ({ \
  DH * _DH_get_ex_data_d = (d); \
  LONG _DH_get_ex_data_idx = (idx); \
  ({ \
  register char * _DH_get_ex_data__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void * (*)(char * __asm("a6"), DH * __asm("a0"), LONG __asm("d0"))) \
  (_DH_get_ex_data__bn - 14178))(_DH_get_ex_data__bn, _DH_get_ex_data_d, _DH_get_ex_data_idx); \
});})

#define DH_generate_parameters(prime_len, generator, callback, cb_arg) ({ \
  LONG _DH_generate_parameters_prime_len = (prime_len); \
  LONG _DH_generate_parameters_generator = (generator); \
  void (*_DH_generate_parameters_callback)(int, int, void *) = (callback); \
  void * _DH_generate_parameters_cb_arg = (cb_arg); \
  ({ \
  register char * _DH_generate_parameters__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((DH * (*)(char * __asm("a6"), LONG __asm("d0"), LONG __asm("d1"), void (*)(int, int, void *) __asm("a0"), void * __asm("a1"))) \
  (_DH_generate_parameters__bn - 14184))(_DH_generate_parameters__bn, _DH_generate_parameters_prime_len, _DH_generate_parameters_generator, _DH_generate_parameters_callback, _DH_generate_parameters_cb_arg); \
});})

#define DH_check(dh, codes) ({ \
  const DH * _DH_check_dh = (dh); \
  int * _DH_check_codes = (codes); \
  ({ \
  register char * _DH_check__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const DH * __asm("a0"), int * __asm("a1"))) \
  (_DH_check__bn - 14190))(_DH_check__bn, _DH_check_dh, _DH_check_codes); \
});})

#define DH_generate_key(dh) ({ \
  DH * _DH_generate_key_dh = (dh); \
  ({ \
  register char * _DH_generate_key__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), DH * __asm("a0"))) \
  (_DH_generate_key__bn - 14196))(_DH_generate_key__bn, _DH_generate_key_dh); \
});})

#define DH_compute_key(key, pub_key, dh) ({ \
  unsigned char * _DH_compute_key_key = (key); \
  const BIGNUM * _DH_compute_key_pub_key = (pub_key); \
  DH * _DH_compute_key_dh = (dh); \
  ({ \
  register char * _DH_compute_key__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), unsigned char * __asm("a0"), const BIGNUM * __asm("a1"), DH * __asm("a2"))) \
  (_DH_compute_key__bn - 14202))(_DH_compute_key__bn, _DH_compute_key_key, _DH_compute_key_pub_key, _DH_compute_key_dh); \
});})

#define d2i_DHparams(a, pp, length) ({ \
  DH ** _d2i_DHparams_a = (a); \
  const unsigned char ** _d2i_DHparams_pp = (pp); \
  long _d2i_DHparams_length = (length); \
  ({ \
  register char * _d2i_DHparams__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((DH * (*)(char * __asm("a6"), DH ** __asm("a0"), const unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_DHparams__bn - 14208))(_d2i_DHparams__bn, _d2i_DHparams_a, _d2i_DHparams_pp, _d2i_DHparams_length); \
});})

#define i2d_DHparams(a, pp) ({ \
  const DH * _i2d_DHparams_a = (a); \
  unsigned char ** _i2d_DHparams_pp = (pp); \
  ({ \
  register char * _i2d_DHparams__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const DH * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_DHparams__bn - 14214))(_i2d_DHparams__bn, _i2d_DHparams_a, _i2d_DHparams_pp); \
});})

#define DHparams_print(bp, x) ({ \
  BIO * _DHparams_print_bp = (bp); \
  const DH * _DHparams_print_x = (x); \
  ({ \
  register char * _DHparams_print__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIO * __asm("a0"), const DH * __asm("a1"))) \
  (_DHparams_print__bn - 14220))(_DHparams_print__bn, _DHparams_print_bp, _DHparams_print_x); \
});})

#define ERR_load_DH_strings() ({ \
  register char * _ERR_load_DH_strings__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"))) \
  (_ERR_load_DH_strings__bn - 14226))(_ERR_load_DH_strings__bn); \
})

#define DSA_SIG_new() ({ \
  register char * _DSA_SIG_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((DSA_SIG * (*)(char * __asm("a6"))) \
  (_DSA_SIG_new__bn - 14232))(_DSA_SIG_new__bn); \
})

#define DSA_SIG_free(a) ({ \
  DSA_SIG * _DSA_SIG_free_a = (a); \
  ({ \
  register char * _DSA_SIG_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), DSA_SIG * __asm("a0"))) \
  (_DSA_SIG_free__bn - 14238))(_DSA_SIG_free__bn, _DSA_SIG_free_a); \
});})

#define i2d_DSA_SIG(a, pp) ({ \
  const DSA_SIG * _i2d_DSA_SIG_a = (a); \
  unsigned char ** _i2d_DSA_SIG_pp = (pp); \
  ({ \
  register char * _i2d_DSA_SIG__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const DSA_SIG * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_DSA_SIG__bn - 14244))(_i2d_DSA_SIG__bn, _i2d_DSA_SIG_a, _i2d_DSA_SIG_pp); \
});})

#define d2i_DSA_SIG(v, pp, length) ({ \
  DSA_SIG ** _d2i_DSA_SIG_v = (v); \
  const unsigned char ** _d2i_DSA_SIG_pp = (pp); \
  long _d2i_DSA_SIG_length = (length); \
  ({ \
  register char * _d2i_DSA_SIG__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((DSA_SIG * (*)(char * __asm("a6"), DSA_SIG ** __asm("a0"), const unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_DSA_SIG__bn - 14250))(_d2i_DSA_SIG__bn, _d2i_DSA_SIG_v, _d2i_DSA_SIG_pp, _d2i_DSA_SIG_length); \
});})

#define DSA_do_sign(dgst, dlen, dsa) ({ \
  const unsigned char * _DSA_do_sign_dgst = (dgst); \
  LONG _DSA_do_sign_dlen = (dlen); \
  DSA * _DSA_do_sign_dsa = (dsa); \
  ({ \
  register char * _DSA_do_sign__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((DSA_SIG * (*)(char * __asm("a6"), const unsigned char * __asm("a0"), LONG __asm("d0"), DSA * __asm("a1"))) \
  (_DSA_do_sign__bn - 14256))(_DSA_do_sign__bn, _DSA_do_sign_dgst, _DSA_do_sign_dlen, _DSA_do_sign_dsa); \
});})

#define DSA_do_verify(dgst, dgst_len, sig, dsa) ({ \
  const unsigned char * _DSA_do_verify_dgst = (dgst); \
  LONG _DSA_do_verify_dgst_len = (dgst_len); \
  DSA_SIG * _DSA_do_verify_sig = (sig); \
  DSA * _DSA_do_verify_dsa = (dsa); \
  ({ \
  register char * _DSA_do_verify__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const unsigned char * __asm("a0"), LONG __asm("d0"), DSA_SIG * __asm("a1"), DSA * __asm("a2"))) \
  (_DSA_do_verify__bn - 14262))(_DSA_do_verify__bn, _DSA_do_verify_dgst, _DSA_do_verify_dgst_len, _DSA_do_verify_sig, _DSA_do_verify_dsa); \
});})

#define DSA_OpenSSL() ({ \
  register char * _DSA_OpenSSL__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const DSA_METHOD * (*)(char * __asm("a6"))) \
  (_DSA_OpenSSL__bn - 14268))(_DSA_OpenSSL__bn); \
})

#define DSA_set_default_method(a) ({ \
  const DSA_METHOD * _DSA_set_default_method_a = (a); \
  ({ \
  register char * _DSA_set_default_method__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), const DSA_METHOD * __asm("a0"))) \
  (_DSA_set_default_method__bn - 14274))(_DSA_set_default_method__bn, _DSA_set_default_method_a); \
});})

#define DSA_get_default_method() ({ \
  register char * _DSA_get_default_method__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const DSA_METHOD * (*)(char * __asm("a6"))) \
  (_DSA_get_default_method__bn - 14280))(_DSA_get_default_method__bn); \
})

#define DSA_set_method(dsa, a) ({ \
  DSA * _DSA_set_method_dsa = (dsa); \
  const DSA_METHOD * _DSA_set_method_a = (a); \
  ({ \
  register char * _DSA_set_method__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), DSA * __asm("a0"), const DSA_METHOD * __asm("a1"))) \
  (_DSA_set_method__bn - 14286))(_DSA_set_method__bn, _DSA_set_method_dsa, _DSA_set_method_a); \
});})

#define DSA_new() ({ \
  register char * _DSA_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((DSA * (*)(char * __asm("a6"))) \
  (_DSA_new__bn - 14292))(_DSA_new__bn); \
})

#define DSA_new_method(engine) ({ \
  ENGINE * _DSA_new_method_engine = (engine); \
  ({ \
  register char * _DSA_new_method__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((DSA * (*)(char * __asm("a6"), ENGINE * __asm("a0"))) \
  (_DSA_new_method__bn - 14298))(_DSA_new_method__bn, _DSA_new_method_engine); \
});})

#define DSA_free(r) ({ \
  DSA * _DSA_free_r = (r); \
  ({ \
  register char * _DSA_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), DSA * __asm("a0"))) \
  (_DSA_free__bn - 14304))(_DSA_free__bn, _DSA_free_r); \
});})

#define DSA_up_ref(r) ({ \
  DSA * _DSA_up_ref_r = (r); \
  ({ \
  register char * _DSA_up_ref__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), DSA * __asm("a0"))) \
  (_DSA_up_ref__bn - 14310))(_DSA_up_ref__bn, _DSA_up_ref_r); \
});})

#define DSA_size(a) ({ \
  const DSA * _DSA_size_a = (a); \
  ({ \
  register char * _DSA_size__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const DSA * __asm("a0"))) \
  (_DSA_size__bn - 14316))(_DSA_size__bn, _DSA_size_a); \
});})

#define DSA_sign_setup(dsa, ctx_in, kinvp, rp) ({ \
  DSA * _DSA_sign_setup_dsa = (dsa); \
  BN_CTX * _DSA_sign_setup_ctx_in = (ctx_in); \
  BIGNUM ** _DSA_sign_setup_kinvp = (kinvp); \
  BIGNUM ** _DSA_sign_setup_rp = (rp); \
  ({ \
  register char * _DSA_sign_setup__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), DSA * __asm("a0"), BN_CTX * __asm("a1"), BIGNUM ** __asm("a2"), BIGNUM ** __asm("a3"))) \
  (_DSA_sign_setup__bn - 14322))(_DSA_sign_setup__bn, _DSA_sign_setup_dsa, _DSA_sign_setup_ctx_in, _DSA_sign_setup_kinvp, _DSA_sign_setup_rp); \
});})

#define DSA_sign(type, dgst, dlen, sig, siglen, dsa) ({ \
  LONG _DSA_sign_type = (type); \
  const unsigned char * _DSA_sign_dgst = (dgst); \
  LONG _DSA_sign_dlen = (dlen); \
  unsigned char * _DSA_sign_sig = (sig); \
  unsigned int * _DSA_sign_siglen = (siglen); \
  DSA * _DSA_sign_dsa = (dsa); \
  ({ \
  register char * _DSA_sign__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), LONG __asm("d0"), const unsigned char * __asm("a0"), LONG __asm("d1"), unsigned char * __asm("a1"), unsigned int * __asm("a2"), DSA * __asm("a3"))) \
  (_DSA_sign__bn - 14328))(_DSA_sign__bn, _DSA_sign_type, _DSA_sign_dgst, _DSA_sign_dlen, _DSA_sign_sig, _DSA_sign_siglen, _DSA_sign_dsa); \
});})

#define DSA_verify(type, dgst, dgst_len, sigbuf, siglen, dsa) ({ \
  LONG _DSA_verify_type = (type); \
  const unsigned char * _DSA_verify_dgst = (dgst); \
  LONG _DSA_verify_dgst_len = (dgst_len); \
  const unsigned char * _DSA_verify_sigbuf = (sigbuf); \
  LONG _DSA_verify_siglen = (siglen); \
  DSA * _DSA_verify_dsa = (dsa); \
  ({ \
  register char * _DSA_verify__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), LONG __asm("d0"), const unsigned char * __asm("a0"), LONG __asm("d1"), const unsigned char * __asm("a1"), LONG __asm("d2"), DSA * __asm("a2"))) \
  (_DSA_verify__bn - 14334))(_DSA_verify__bn, _DSA_verify_type, _DSA_verify_dgst, _DSA_verify_dgst_len, _DSA_verify_sigbuf, _DSA_verify_siglen, _DSA_verify_dsa); \
});})

#define DSA_get_ex_new_index(argl, argp, new_func, dup_func, free_func) ({ \
  long _DSA_get_ex_new_index_argl = (argl); \
  void * _DSA_get_ex_new_index_argp = (argp); \
  CRYPTO_EX_new * (*_DSA_get_ex_new_index_new_func)() = (new_func); \
  CRYPTO_EX_dup * (*_DSA_get_ex_new_index_dup_func)() = (dup_func); \
  CRYPTO_EX_free * (*_DSA_get_ex_new_index_free_func)() = (free_func); \
  ({ \
  register char * _DSA_get_ex_new_index__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), long __asm("d0"), void * __asm("a0"), CRYPTO_EX_new * (*)() __asm("a1"), CRYPTO_EX_dup * (*)() __asm("a2"), CRYPTO_EX_free * (*)() __asm("a3"))) \
  (_DSA_get_ex_new_index__bn - 14340))(_DSA_get_ex_new_index__bn, _DSA_get_ex_new_index_argl, _DSA_get_ex_new_index_argp, _DSA_get_ex_new_index_new_func, _DSA_get_ex_new_index_dup_func, _DSA_get_ex_new_index_free_func); \
});})

#define DSA_set_ex_data(d, idx, arg) ({ \
  DSA * _DSA_set_ex_data_d = (d); \
  LONG _DSA_set_ex_data_idx = (idx); \
  void * _DSA_set_ex_data_arg = (arg); \
  ({ \
  register char * _DSA_set_ex_data__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), DSA * __asm("a0"), LONG __asm("d0"), void * __asm("a1"))) \
  (_DSA_set_ex_data__bn - 14346))(_DSA_set_ex_data__bn, _DSA_set_ex_data_d, _DSA_set_ex_data_idx, _DSA_set_ex_data_arg); \
});})

#define DSA_get_ex_data(d, idx) ({ \
  DSA * _DSA_get_ex_data_d = (d); \
  LONG _DSA_get_ex_data_idx = (idx); \
  ({ \
  register char * _DSA_get_ex_data__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void * (*)(char * __asm("a6"), DSA * __asm("a0"), LONG __asm("d0"))) \
  (_DSA_get_ex_data__bn - 14352))(_DSA_get_ex_data__bn, _DSA_get_ex_data_d, _DSA_get_ex_data_idx); \
});})

#define d2i_DSAPublicKey(a, pp, length) ({ \
  DSA ** _d2i_DSAPublicKey_a = (a); \
  const unsigned char ** _d2i_DSAPublicKey_pp = (pp); \
  long _d2i_DSAPublicKey_length = (length); \
  ({ \
  register char * _d2i_DSAPublicKey__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((DSA * (*)(char * __asm("a6"), DSA ** __asm("a0"), const unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_DSAPublicKey__bn - 14358))(_d2i_DSAPublicKey__bn, _d2i_DSAPublicKey_a, _d2i_DSAPublicKey_pp, _d2i_DSAPublicKey_length); \
});})

#define d2i_DSAPrivateKey(a, pp, length) ({ \
  DSA ** _d2i_DSAPrivateKey_a = (a); \
  const unsigned char ** _d2i_DSAPrivateKey_pp = (pp); \
  long _d2i_DSAPrivateKey_length = (length); \
  ({ \
  register char * _d2i_DSAPrivateKey__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((DSA * (*)(char * __asm("a6"), DSA ** __asm("a0"), const unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_DSAPrivateKey__bn - 14364))(_d2i_DSAPrivateKey__bn, _d2i_DSAPrivateKey_a, _d2i_DSAPrivateKey_pp, _d2i_DSAPrivateKey_length); \
});})

#define d2i_DSAparams(a, pp, length) ({ \
  DSA ** _d2i_DSAparams_a = (a); \
  const unsigned char ** _d2i_DSAparams_pp = (pp); \
  long _d2i_DSAparams_length = (length); \
  ({ \
  register char * _d2i_DSAparams__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((DSA * (*)(char * __asm("a6"), DSA ** __asm("a0"), const unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_DSAparams__bn - 14370))(_d2i_DSAparams__bn, _d2i_DSAparams_a, _d2i_DSAparams_pp, _d2i_DSAparams_length); \
});})

#define DSA_generate_parameters(bits, seed, seed_len, counter_ret, h_ret, callback, cb_arg) ({ \
  LONG _DSA_generate_parameters_bits = (bits); \
  unsigned char * _DSA_generate_parameters_seed = (seed); \
  LONG _DSA_generate_parameters_seed_len = (seed_len); \
  int * _DSA_generate_parameters_counter_ret = (counter_ret); \
  unsigned long * _DSA_generate_parameters_h_ret = (h_ret); \
  void (*_DSA_generate_parameters_callback)(int, int, void *) = (callback); \
  void * _DSA_generate_parameters_cb_arg = (cb_arg); \
  ({ \
  register char * _DSA_generate_parameters__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((DSA * (*)(char * __asm("a6"), LONG __asm("d0"), unsigned char * __asm("a0"), LONG __asm("d1"), int * __asm("a1"), unsigned long * __asm("a2"), void (*)(int, int, void *) __asm("a3"), void * __asm("d2"))) \
  (_DSA_generate_parameters__bn - 14376))(_DSA_generate_parameters__bn, _DSA_generate_parameters_bits, _DSA_generate_parameters_seed, _DSA_generate_parameters_seed_len, _DSA_generate_parameters_counter_ret, _DSA_generate_parameters_h_ret, _DSA_generate_parameters_callback, _DSA_generate_parameters_cb_arg); \
});})

#define DSA_generate_key(a) ({ \
  DSA * _DSA_generate_key_a = (a); \
  ({ \
  register char * _DSA_generate_key__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), DSA * __asm("a0"))) \
  (_DSA_generate_key__bn - 14382))(_DSA_generate_key__bn, _DSA_generate_key_a); \
});})

#define i2d_DSAPublicKey(a, pp) ({ \
  const DSA * _i2d_DSAPublicKey_a = (a); \
  unsigned char ** _i2d_DSAPublicKey_pp = (pp); \
  ({ \
  register char * _i2d_DSAPublicKey__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const DSA * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_DSAPublicKey__bn - 14388))(_i2d_DSAPublicKey__bn, _i2d_DSAPublicKey_a, _i2d_DSAPublicKey_pp); \
});})

#define i2d_DSAPrivateKey(a, pp) ({ \
  const DSA * _i2d_DSAPrivateKey_a = (a); \
  unsigned char ** _i2d_DSAPrivateKey_pp = (pp); \
  ({ \
  register char * _i2d_DSAPrivateKey__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const DSA * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_DSAPrivateKey__bn - 14394))(_i2d_DSAPrivateKey__bn, _i2d_DSAPrivateKey_a, _i2d_DSAPrivateKey_pp); \
});})

#define i2d_DSAparams(a, pp) ({ \
  const DSA * _i2d_DSAparams_a = (a); \
  unsigned char ** _i2d_DSAparams_pp = (pp); \
  ({ \
  register char * _i2d_DSAparams__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const DSA * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_DSAparams__bn - 14400))(_i2d_DSAparams__bn, _i2d_DSAparams_a, _i2d_DSAparams_pp); \
});})

#define DSAparams_print(bp, x) ({ \
  BIO * _DSAparams_print_bp = (bp); \
  const DSA * _DSAparams_print_x = (x); \
  ({ \
  register char * _DSAparams_print__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIO * __asm("a0"), const DSA * __asm("a1"))) \
  (_DSAparams_print__bn - 14406))(_DSAparams_print__bn, _DSAparams_print_bp, _DSAparams_print_x); \
});})

#define DSA_print(bp, x, off) ({ \
  BIO * _DSA_print_bp = (bp); \
  const DSA * _DSA_print_x = (x); \
  LONG _DSA_print_off = (off); \
  ({ \
  register char * _DSA_print__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIO * __asm("a0"), const DSA * __asm("a1"), LONG __asm("d0"))) \
  (_DSA_print__bn - 14412))(_DSA_print__bn, _DSA_print_bp, _DSA_print_x, _DSA_print_off); \
});})

#define DSA_dup_DH(r) ({ \
  const DSA * _DSA_dup_DH_r = (r); \
  ({ \
  register char * _DSA_dup_DH__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((DH * (*)(char * __asm("a6"), const DSA * __asm("a0"))) \
  (_DSA_dup_DH__bn - 14418))(_DSA_dup_DH__bn, _DSA_dup_DH_r); \
});})

#define ERR_load_DSA_strings() ({ \
  register char * _ERR_load_DSA_strings__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"))) \
  (_ERR_load_DSA_strings__bn - 14424))(_ERR_load_DSA_strings__bn); \
})

#define idea_options() ({ \
  register char * _idea_options__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const char * (*)(char * __asm("a6"))) \
  (_idea_options__bn - 14430))(_idea_options__bn); \
})

#define idea_ecb_encrypt(in, out, ks) ({ \
  const unsigned char * _idea_ecb_encrypt_in = (in); \
  unsigned char * _idea_ecb_encrypt_out = (out); \
  IDEA_KEY_SCHEDULE * _idea_ecb_encrypt_ks = (ks); \
  ({ \
  register char * _idea_ecb_encrypt__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), const unsigned char * __asm("a0"), unsigned char * __asm("a1"), IDEA_KEY_SCHEDULE * __asm("a2"))) \
  (_idea_ecb_encrypt__bn - 14436))(_idea_ecb_encrypt__bn, _idea_ecb_encrypt_in, _idea_ecb_encrypt_out, _idea_ecb_encrypt_ks); \
});})

#define idea_set_encrypt_key(key, ks) ({ \
  const unsigned char * _idea_set_encrypt_key_key = (key); \
  IDEA_KEY_SCHEDULE * _idea_set_encrypt_key_ks = (ks); \
  ({ \
  register char * _idea_set_encrypt_key__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), const unsigned char * __asm("a0"), IDEA_KEY_SCHEDULE * __asm("a1"))) \
  (_idea_set_encrypt_key__bn - 14442))(_idea_set_encrypt_key__bn, _idea_set_encrypt_key_key, _idea_set_encrypt_key_ks); \
});})

#define idea_set_decrypt_key(ek, dk) ({ \
  IDEA_KEY_SCHEDULE * _idea_set_decrypt_key_ek = (ek); \
  IDEA_KEY_SCHEDULE * _idea_set_decrypt_key_dk = (dk); \
  ({ \
  register char * _idea_set_decrypt_key__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), IDEA_KEY_SCHEDULE * __asm("a0"), IDEA_KEY_SCHEDULE * __asm("a1"))) \
  (_idea_set_decrypt_key__bn - 14448))(_idea_set_decrypt_key__bn, _idea_set_decrypt_key_ek, _idea_set_decrypt_key_dk); \
});})

#define idea_cbc_encrypt(in, out, length, ks, iv, enc) ({ \
  const unsigned char * _idea_cbc_encrypt_in = (in); \
  unsigned char * _idea_cbc_encrypt_out = (out); \
  long _idea_cbc_encrypt_length = (length); \
  IDEA_KEY_SCHEDULE * _idea_cbc_encrypt_ks = (ks); \
  unsigned char * _idea_cbc_encrypt_iv = (iv); \
  LONG _idea_cbc_encrypt_enc = (enc); \
  ({ \
  register char * _idea_cbc_encrypt__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), const unsigned char * __asm("a0"), unsigned char * __asm("a1"), long __asm("d0"), IDEA_KEY_SCHEDULE * __asm("a2"), unsigned char * __asm("a3"), LONG __asm("d1"))) \
  (_idea_cbc_encrypt__bn - 14454))(_idea_cbc_encrypt__bn, _idea_cbc_encrypt_in, _idea_cbc_encrypt_out, _idea_cbc_encrypt_length, _idea_cbc_encrypt_ks, _idea_cbc_encrypt_iv, _idea_cbc_encrypt_enc); \
});})

#define idea_cfb64_encrypt(in, out, length, ks, iv, num, enc) ({ \
  const unsigned char * _idea_cfb64_encrypt_in = (in); \
  unsigned char * _idea_cfb64_encrypt_out = (out); \
  long _idea_cfb64_encrypt_length = (length); \
  IDEA_KEY_SCHEDULE * _idea_cfb64_encrypt_ks = (ks); \
  unsigned char * _idea_cfb64_encrypt_iv = (iv); \
  int * _idea_cfb64_encrypt_num = (num); \
  LONG _idea_cfb64_encrypt_enc = (enc); \
  ({ \
  register char * _idea_cfb64_encrypt__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), const unsigned char * __asm("a0"), unsigned char * __asm("a1"), long __asm("d0"), IDEA_KEY_SCHEDULE * __asm("a2"), unsigned char * __asm("a3"), int * __asm("d1"), LONG __asm("d2"))) \
  (_idea_cfb64_encrypt__bn - 14460))(_idea_cfb64_encrypt__bn, _idea_cfb64_encrypt_in, _idea_cfb64_encrypt_out, _idea_cfb64_encrypt_length, _idea_cfb64_encrypt_ks, _idea_cfb64_encrypt_iv, _idea_cfb64_encrypt_num, _idea_cfb64_encrypt_enc); \
});})

#define idea_ofb64_encrypt(in, out, length, ks, iv, num) ({ \
  const unsigned char * _idea_ofb64_encrypt_in = (in); \
  unsigned char * _idea_ofb64_encrypt_out = (out); \
  long _idea_ofb64_encrypt_length = (length); \
  IDEA_KEY_SCHEDULE * _idea_ofb64_encrypt_ks = (ks); \
  unsigned char * _idea_ofb64_encrypt_iv = (iv); \
  int * _idea_ofb64_encrypt_num = (num); \
  ({ \
  register char * _idea_ofb64_encrypt__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), const unsigned char * __asm("a0"), unsigned char * __asm("a1"), long __asm("d0"), IDEA_KEY_SCHEDULE * __asm("a2"), unsigned char * __asm("a3"), int * __asm("d1"))) \
  (_idea_ofb64_encrypt__bn - 14466))(_idea_ofb64_encrypt__bn, _idea_ofb64_encrypt_in, _idea_ofb64_encrypt_out, _idea_ofb64_encrypt_length, _idea_ofb64_encrypt_ks, _idea_ofb64_encrypt_iv, _idea_ofb64_encrypt_num); \
});})

#define idea_encrypt(in, ks) ({ \
  unsigned long * _idea_encrypt_in = (in); \
  IDEA_KEY_SCHEDULE * _idea_encrypt_ks = (ks); \
  ({ \
  register char * _idea_encrypt__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), unsigned long * __asm("a0"), IDEA_KEY_SCHEDULE * __asm("a1"))) \
  (_idea_encrypt__bn - 14472))(_idea_encrypt__bn, _idea_encrypt_in, _idea_encrypt_ks); \
});})

#define MD2_options() ({ \
  register char * _MD2_options__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const char * (*)(char * __asm("a6"))) \
  (_MD2_options__bn - 14478))(_MD2_options__bn); \
})

#define MD2_Init(c) ({ \
  MD2_CTX * _MD2_Init_c = (c); \
  ({ \
  register char * _MD2_Init__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), MD2_CTX * __asm("a0"))) \
  (_MD2_Init__bn - 14484))(_MD2_Init__bn, _MD2_Init_c); \
});})

#define MD2_Update(c, data, len) ({ \
  MD2_CTX * _MD2_Update_c = (c); \
  const unsigned char * _MD2_Update_data = (data); \
  unsigned long _MD2_Update_len = (len); \
  ({ \
  register char * _MD2_Update__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), MD2_CTX * __asm("a0"), const unsigned char * __asm("a1"), unsigned long __asm("d0"))) \
  (_MD2_Update__bn - 14490))(_MD2_Update__bn, _MD2_Update_c, _MD2_Update_data, _MD2_Update_len); \
});})

#define MD2_Final(md, c) ({ \
  unsigned char * _MD2_Final_md = (md); \
  MD2_CTX * _MD2_Final_c = (c); \
  ({ \
  register char * _MD2_Final__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), unsigned char * __asm("a0"), MD2_CTX * __asm("a1"))) \
  (_MD2_Final__bn - 14496))(_MD2_Final__bn, _MD2_Final_md, _MD2_Final_c); \
});})

#define MD2(d, n, md) ({ \
  const unsigned char * _MD2_d = (d); \
  unsigned long _MD2_n = (n); \
  unsigned char * _MD2_md = (md); \
  ({ \
  register char * _MD2__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((unsigned char * (*)(char * __asm("a6"), const unsigned char * __asm("a0"), unsigned long __asm("d0"), unsigned char * __asm("a1"))) \
  (_MD2__bn - 14502))(_MD2__bn, _MD2_d, _MD2_n, _MD2_md); \
});})

#define MD4_Init(c) ({ \
  MD4_CTX * _MD4_Init_c = (c); \
  ({ \
  register char * _MD4_Init__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), MD4_CTX * __asm("a0"))) \
  (_MD4_Init__bn - 14508))(_MD4_Init__bn, _MD4_Init_c); \
});})

#define MD4_Update(c, data, len) ({ \
  MD4_CTX * _MD4_Update_c = (c); \
  const void * _MD4_Update_data = (data); \
  unsigned long _MD4_Update_len = (len); \
  ({ \
  register char * _MD4_Update__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), MD4_CTX * __asm("a0"), const void * __asm("a1"), unsigned long __asm("d0"))) \
  (_MD4_Update__bn - 14514))(_MD4_Update__bn, _MD4_Update_c, _MD4_Update_data, _MD4_Update_len); \
});})

#define MD4_Final(md, c) ({ \
  unsigned char * _MD4_Final_md = (md); \
  MD4_CTX * _MD4_Final_c = (c); \
  ({ \
  register char * _MD4_Final__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), unsigned char * __asm("a0"), MD4_CTX * __asm("a1"))) \
  (_MD4_Final__bn - 14520))(_MD4_Final__bn, _MD4_Final_md, _MD4_Final_c); \
});})

#define MD4(d, n, md) ({ \
  const unsigned char * _MD4_d = (d); \
  unsigned long _MD4_n = (n); \
  unsigned char * _MD4_md = (md); \
  ({ \
  register char * _MD4__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((unsigned char * (*)(char * __asm("a6"), const unsigned char * __asm("a0"), unsigned long __asm("d0"), unsigned char * __asm("a1"))) \
  (_MD4__bn - 14526))(_MD4__bn, _MD4_d, _MD4_n, _MD4_md); \
});})

#define MD4_Transform(c, b) ({ \
  MD4_CTX * _MD4_Transform_c = (c); \
  const unsigned char * _MD4_Transform_b = (b); \
  ({ \
  register char * _MD4_Transform__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), MD4_CTX * __asm("a0"), const unsigned char * __asm("a1"))) \
  (_MD4_Transform__bn - 14532))(_MD4_Transform__bn, _MD4_Transform_c, _MD4_Transform_b); \
});})

#define MD5_Init(c) ({ \
  MD5_CTX * _MD5_Init_c = (c); \
  ({ \
  register char * _MD5_Init__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), MD5_CTX * __asm("a0"))) \
  (_MD5_Init__bn - 14538))(_MD5_Init__bn, _MD5_Init_c); \
});})

#define MD5_Update(c, data, len) ({ \
  MD5_CTX * _MD5_Update_c = (c); \
  const void * _MD5_Update_data = (data); \
  unsigned long _MD5_Update_len = (len); \
  ({ \
  register char * _MD5_Update__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), MD5_CTX * __asm("a0"), const void * __asm("a1"), unsigned long __asm("d0"))) \
  (_MD5_Update__bn - 14544))(_MD5_Update__bn, _MD5_Update_c, _MD5_Update_data, _MD5_Update_len); \
});})

#define MD5_Final(md, c) ({ \
  unsigned char * _MD5_Final_md = (md); \
  MD5_CTX * _MD5_Final_c = (c); \
  ({ \
  register char * _MD5_Final__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), unsigned char * __asm("a0"), MD5_CTX * __asm("a1"))) \
  (_MD5_Final__bn - 14550))(_MD5_Final__bn, _MD5_Final_md, _MD5_Final_c); \
});})

#define MD5(d, n, md) ({ \
  const unsigned char * _MD5_d = (d); \
  unsigned long _MD5_n = (n); \
  unsigned char * _MD5_md = (md); \
  ({ \
  register char * _MD5__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((unsigned char * (*)(char * __asm("a6"), const unsigned char * __asm("a0"), unsigned long __asm("d0"), unsigned char * __asm("a1"))) \
  (_MD5__bn - 14556))(_MD5__bn, _MD5_d, _MD5_n, _MD5_md); \
});})

#define MD5_Transform(c, b) ({ \
  MD5_CTX * _MD5_Transform_c = (c); \
  const unsigned char * _MD5_Transform_b = (b); \
  ({ \
  register char * _MD5_Transform__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), MD5_CTX * __asm("a0"), const unsigned char * __asm("a1"))) \
  (_MD5_Transform__bn - 14562))(_MD5_Transform__bn, _MD5_Transform_c, _MD5_Transform_b); \
});})

#define MDC2_Init(c) ({ \
  MDC2_CTX * _MDC2_Init_c = (c); \
  ({ \
  register char * _MDC2_Init__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), MDC2_CTX * __asm("a0"))) \
  (_MDC2_Init__bn - 14568))(_MDC2_Init__bn, _MDC2_Init_c); \
});})

#define MDC2_Update(c, data, len) ({ \
  MDC2_CTX * _MDC2_Update_c = (c); \
  const unsigned char * _MDC2_Update_data = (data); \
  unsigned long _MDC2_Update_len = (len); \
  ({ \
  register char * _MDC2_Update__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), MDC2_CTX * __asm("a0"), const unsigned char * __asm("a1"), unsigned long __asm("d0"))) \
  (_MDC2_Update__bn - 14574))(_MDC2_Update__bn, _MDC2_Update_c, _MDC2_Update_data, _MDC2_Update_len); \
});})

#define MDC2_Final(md, c) ({ \
  unsigned char * _MDC2_Final_md = (md); \
  MDC2_CTX * _MDC2_Final_c = (c); \
  ({ \
  register char * _MDC2_Final__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), unsigned char * __asm("a0"), MDC2_CTX * __asm("a1"))) \
  (_MDC2_Final__bn - 14580))(_MDC2_Final__bn, _MDC2_Final_md, _MDC2_Final_c); \
});})

#define MDC2(d, n, md) ({ \
  const unsigned char * _MDC2_d = (d); \
  unsigned long _MDC2_n = (n); \
  unsigned char * _MDC2_md = (md); \
  ({ \
  register char * _MDC2__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((unsigned char * (*)(char * __asm("a6"), const unsigned char * __asm("a0"), unsigned long __asm("d0"), unsigned char * __asm("a1"))) \
  (_MDC2__bn - 14586))(_MDC2__bn, _MDC2_d, _MDC2_n, _MDC2_md); \
});})

#define RC2_set_key(key, len, data, bits) ({ \
  RC2_KEY * _RC2_set_key_key = (key); \
  LONG _RC2_set_key_len = (len); \
  const unsigned char * _RC2_set_key_data = (data); \
  LONG _RC2_set_key_bits = (bits); \
  ({ \
  register char * _RC2_set_key__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), RC2_KEY * __asm("a0"), LONG __asm("d0"), const unsigned char * __asm("a1"), LONG __asm("d1"))) \
  (_RC2_set_key__bn - 14592))(_RC2_set_key__bn, _RC2_set_key_key, _RC2_set_key_len, _RC2_set_key_data, _RC2_set_key_bits); \
});})

#define RC2_ecb_encrypt(in, out, key, enc) ({ \
  const unsigned char * _RC2_ecb_encrypt_in = (in); \
  unsigned char * _RC2_ecb_encrypt_out = (out); \
  RC2_KEY * _RC2_ecb_encrypt_key = (key); \
  LONG _RC2_ecb_encrypt_enc = (enc); \
  ({ \
  register char * _RC2_ecb_encrypt__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), const unsigned char * __asm("a0"), unsigned char * __asm("a1"), RC2_KEY * __asm("a2"), LONG __asm("d0"))) \
  (_RC2_ecb_encrypt__bn - 14598))(_RC2_ecb_encrypt__bn, _RC2_ecb_encrypt_in, _RC2_ecb_encrypt_out, _RC2_ecb_encrypt_key, _RC2_ecb_encrypt_enc); \
});})

#define RC2_encrypt(data, key) ({ \
  unsigned long * _RC2_encrypt_data = (data); \
  RC2_KEY * _RC2_encrypt_key = (key); \
  ({ \
  register char * _RC2_encrypt__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), unsigned long * __asm("a0"), RC2_KEY * __asm("a1"))) \
  (_RC2_encrypt__bn - 14604))(_RC2_encrypt__bn, _RC2_encrypt_data, _RC2_encrypt_key); \
});})

#define RC2_decrypt(data, key) ({ \
  unsigned long * _RC2_decrypt_data = (data); \
  RC2_KEY * _RC2_decrypt_key = (key); \
  ({ \
  register char * _RC2_decrypt__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), unsigned long * __asm("a0"), RC2_KEY * __asm("a1"))) \
  (_RC2_decrypt__bn - 14610))(_RC2_decrypt__bn, _RC2_decrypt_data, _RC2_decrypt_key); \
});})

#define RC2_cbc_encrypt(in, out, length, ks, iv, enc) ({ \
  const unsigned char * _RC2_cbc_encrypt_in = (in); \
  unsigned char * _RC2_cbc_encrypt_out = (out); \
  long _RC2_cbc_encrypt_length = (length); \
  RC2_KEY * _RC2_cbc_encrypt_ks = (ks); \
  unsigned char * _RC2_cbc_encrypt_iv = (iv); \
  LONG _RC2_cbc_encrypt_enc = (enc); \
  ({ \
  register char * _RC2_cbc_encrypt__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), const unsigned char * __asm("a0"), unsigned char * __asm("a1"), long __asm("d0"), RC2_KEY * __asm("a2"), unsigned char * __asm("a3"), LONG __asm("d1"))) \
  (_RC2_cbc_encrypt__bn - 14616))(_RC2_cbc_encrypt__bn, _RC2_cbc_encrypt_in, _RC2_cbc_encrypt_out, _RC2_cbc_encrypt_length, _RC2_cbc_encrypt_ks, _RC2_cbc_encrypt_iv, _RC2_cbc_encrypt_enc); \
});})

#define RC2_cfb64_encrypt(in, out, length, schedule, ivec, num, enc) ({ \
  const unsigned char * _RC2_cfb64_encrypt_in = (in); \
  unsigned char * _RC2_cfb64_encrypt_out = (out); \
  long _RC2_cfb64_encrypt_length = (length); \
  RC2_KEY * _RC2_cfb64_encrypt_schedule = (schedule); \
  unsigned char * _RC2_cfb64_encrypt_ivec = (ivec); \
  int * _RC2_cfb64_encrypt_num = (num); \
  LONG _RC2_cfb64_encrypt_enc = (enc); \
  ({ \
  register char * _RC2_cfb64_encrypt__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), const unsigned char * __asm("a0"), unsigned char * __asm("a1"), long __asm("d0"), RC2_KEY * __asm("a2"), unsigned char * __asm("a3"), int * __asm("d1"), LONG __asm("d2"))) \
  (_RC2_cfb64_encrypt__bn - 14622))(_RC2_cfb64_encrypt__bn, _RC2_cfb64_encrypt_in, _RC2_cfb64_encrypt_out, _RC2_cfb64_encrypt_length, _RC2_cfb64_encrypt_schedule, _RC2_cfb64_encrypt_ivec, _RC2_cfb64_encrypt_num, _RC2_cfb64_encrypt_enc); \
});})

#define RC2_ofb64_encrypt(in, out, length, schedule, ivec, num) ({ \
  const unsigned char * _RC2_ofb64_encrypt_in = (in); \
  unsigned char * _RC2_ofb64_encrypt_out = (out); \
  long _RC2_ofb64_encrypt_length = (length); \
  RC2_KEY * _RC2_ofb64_encrypt_schedule = (schedule); \
  unsigned char * _RC2_ofb64_encrypt_ivec = (ivec); \
  int * _RC2_ofb64_encrypt_num = (num); \
  ({ \
  register char * _RC2_ofb64_encrypt__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), const unsigned char * __asm("a0"), unsigned char * __asm("a1"), long __asm("d0"), RC2_KEY * __asm("a2"), unsigned char * __asm("a3"), int * __asm("d1"))) \
  (_RC2_ofb64_encrypt__bn - 14628))(_RC2_ofb64_encrypt__bn, _RC2_ofb64_encrypt_in, _RC2_ofb64_encrypt_out, _RC2_ofb64_encrypt_length, _RC2_ofb64_encrypt_schedule, _RC2_ofb64_encrypt_ivec, _RC2_ofb64_encrypt_num); \
});})

#define RC4_options() ({ \
  register char * _RC4_options__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const char * (*)(char * __asm("a6"))) \
  (_RC4_options__bn - 14634))(_RC4_options__bn); \
})

#define RC4_set_key(key, len, data) ({ \
  RC4_KEY * _RC4_set_key_key = (key); \
  LONG _RC4_set_key_len = (len); \
  const unsigned char * _RC4_set_key_data = (data); \
  ({ \
  register char * _RC4_set_key__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), RC4_KEY * __asm("a0"), LONG __asm("d0"), const unsigned char * __asm("a1"))) \
  (_RC4_set_key__bn - 14640))(_RC4_set_key__bn, _RC4_set_key_key, _RC4_set_key_len, _RC4_set_key_data); \
});})

#define RC4(key, len, indata, outdata) ({ \
  RC4_KEY * _RC4_key = (key); \
  unsigned long _RC4_len = (len); \
  const unsigned char * _RC4_indata = (indata); \
  unsigned char * _RC4_outdata = (outdata); \
  ({ \
  register char * _RC4__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), RC4_KEY * __asm("a0"), unsigned long __asm("d0"), const unsigned char * __asm("a1"), unsigned char * __asm("a2"))) \
  (_RC4__bn - 14646))(_RC4__bn, _RC4_key, _RC4_len, _RC4_indata, _RC4_outdata); \
});})

#define RC5_32_set_key(key, len, data, rounds) ({ \
  RC5_32_KEY * _RC5_32_set_key_key = (key); \
  LONG _RC5_32_set_key_len = (len); \
  const unsigned char * _RC5_32_set_key_data = (data); \
  LONG _RC5_32_set_key_rounds = (rounds); \
  ({ \
  register char * _RC5_32_set_key__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), RC5_32_KEY * __asm("a0"), LONG __asm("d0"), const unsigned char * __asm("a1"), LONG __asm("d1"))) \
  (_RC5_32_set_key__bn - 14652))(_RC5_32_set_key__bn, _RC5_32_set_key_key, _RC5_32_set_key_len, _RC5_32_set_key_data, _RC5_32_set_key_rounds); \
});})

#define RC5_32_ecb_encrypt(in, out, key, enc) ({ \
  const unsigned char * _RC5_32_ecb_encrypt_in = (in); \
  unsigned char * _RC5_32_ecb_encrypt_out = (out); \
  RC5_32_KEY * _RC5_32_ecb_encrypt_key = (key); \
  LONG _RC5_32_ecb_encrypt_enc = (enc); \
  ({ \
  register char * _RC5_32_ecb_encrypt__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), const unsigned char * __asm("a0"), unsigned char * __asm("a1"), RC5_32_KEY * __asm("a2"), LONG __asm("d0"))) \
  (_RC5_32_ecb_encrypt__bn - 14658))(_RC5_32_ecb_encrypt__bn, _RC5_32_ecb_encrypt_in, _RC5_32_ecb_encrypt_out, _RC5_32_ecb_encrypt_key, _RC5_32_ecb_encrypt_enc); \
});})

#define RC5_32_encrypt(data, key) ({ \
  unsigned long * _RC5_32_encrypt_data = (data); \
  RC5_32_KEY * _RC5_32_encrypt_key = (key); \
  ({ \
  register char * _RC5_32_encrypt__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), unsigned long * __asm("a0"), RC5_32_KEY * __asm("a1"))) \
  (_RC5_32_encrypt__bn - 14664))(_RC5_32_encrypt__bn, _RC5_32_encrypt_data, _RC5_32_encrypt_key); \
});})

#define RC5_32_decrypt(data, key) ({ \
  unsigned long * _RC5_32_decrypt_data = (data); \
  RC5_32_KEY * _RC5_32_decrypt_key = (key); \
  ({ \
  register char * _RC5_32_decrypt__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), unsigned long * __asm("a0"), RC5_32_KEY * __asm("a1"))) \
  (_RC5_32_decrypt__bn - 14670))(_RC5_32_decrypt__bn, _RC5_32_decrypt_data, _RC5_32_decrypt_key); \
});})

#define RC5_32_cbc_encrypt(in, out, length, ks, iv, enc) ({ \
  const unsigned char * _RC5_32_cbc_encrypt_in = (in); \
  unsigned char * _RC5_32_cbc_encrypt_out = (out); \
  long _RC5_32_cbc_encrypt_length = (length); \
  RC5_32_KEY * _RC5_32_cbc_encrypt_ks = (ks); \
  unsigned char * _RC5_32_cbc_encrypt_iv = (iv); \
  LONG _RC5_32_cbc_encrypt_enc = (enc); \
  ({ \
  register char * _RC5_32_cbc_encrypt__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), const unsigned char * __asm("a0"), unsigned char * __asm("a1"), long __asm("d0"), RC5_32_KEY * __asm("a2"), unsigned char * __asm("a3"), LONG __asm("d1"))) \
  (_RC5_32_cbc_encrypt__bn - 14676))(_RC5_32_cbc_encrypt__bn, _RC5_32_cbc_encrypt_in, _RC5_32_cbc_encrypt_out, _RC5_32_cbc_encrypt_length, _RC5_32_cbc_encrypt_ks, _RC5_32_cbc_encrypt_iv, _RC5_32_cbc_encrypt_enc); \
});})

#define RC5_32_cfb64_encrypt(in, out, length, schedule, ivec, num, enc) ({ \
  const unsigned char * _RC5_32_cfb64_encrypt_in = (in); \
  unsigned char * _RC5_32_cfb64_encrypt_out = (out); \
  long _RC5_32_cfb64_encrypt_length = (length); \
  RC5_32_KEY * _RC5_32_cfb64_encrypt_schedule = (schedule); \
  unsigned char * _RC5_32_cfb64_encrypt_ivec = (ivec); \
  int * _RC5_32_cfb64_encrypt_num = (num); \
  LONG _RC5_32_cfb64_encrypt_enc = (enc); \
  ({ \
  register char * _RC5_32_cfb64_encrypt__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), const unsigned char * __asm("a0"), unsigned char * __asm("a1"), long __asm("d0"), RC5_32_KEY * __asm("a2"), unsigned char * __asm("a3"), int * __asm("d1"), LONG __asm("d2"))) \
  (_RC5_32_cfb64_encrypt__bn - 14682))(_RC5_32_cfb64_encrypt__bn, _RC5_32_cfb64_encrypt_in, _RC5_32_cfb64_encrypt_out, _RC5_32_cfb64_encrypt_length, _RC5_32_cfb64_encrypt_schedule, _RC5_32_cfb64_encrypt_ivec, _RC5_32_cfb64_encrypt_num, _RC5_32_cfb64_encrypt_enc); \
});})

#define RC5_32_ofb64_encrypt(in, out, length, schedule, ivec, num) ({ \
  const unsigned char * _RC5_32_ofb64_encrypt_in = (in); \
  unsigned char * _RC5_32_ofb64_encrypt_out = (out); \
  long _RC5_32_ofb64_encrypt_length = (length); \
  RC5_32_KEY * _RC5_32_ofb64_encrypt_schedule = (schedule); \
  unsigned char * _RC5_32_ofb64_encrypt_ivec = (ivec); \
  int * _RC5_32_ofb64_encrypt_num = (num); \
  ({ \
  register char * _RC5_32_ofb64_encrypt__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), const unsigned char * __asm("a0"), unsigned char * __asm("a1"), long __asm("d0"), RC5_32_KEY * __asm("a2"), unsigned char * __asm("a3"), int * __asm("d1"))) \
  (_RC5_32_ofb64_encrypt__bn - 14688))(_RC5_32_ofb64_encrypt__bn, _RC5_32_ofb64_encrypt_in, _RC5_32_ofb64_encrypt_out, _RC5_32_ofb64_encrypt_length, _RC5_32_ofb64_encrypt_schedule, _RC5_32_ofb64_encrypt_ivec, _RC5_32_ofb64_encrypt_num); \
});})

#define RIPEMD160_Init(c) ({ \
  RIPEMD160_CTX * _RIPEMD160_Init_c = (c); \
  ({ \
  register char * _RIPEMD160_Init__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), RIPEMD160_CTX * __asm("a0"))) \
  (_RIPEMD160_Init__bn - 14694))(_RIPEMD160_Init__bn, _RIPEMD160_Init_c); \
});})

#define RIPEMD160_Update(c, data, len) ({ \
  RIPEMD160_CTX * _RIPEMD160_Update_c = (c); \
  const void * _RIPEMD160_Update_data = (data); \
  unsigned long _RIPEMD160_Update_len = (len); \
  ({ \
  register char * _RIPEMD160_Update__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), RIPEMD160_CTX * __asm("a0"), const void * __asm("a1"), unsigned long __asm("d0"))) \
  (_RIPEMD160_Update__bn - 14700))(_RIPEMD160_Update__bn, _RIPEMD160_Update_c, _RIPEMD160_Update_data, _RIPEMD160_Update_len); \
});})

#define RIPEMD160_Final(md, c) ({ \
  unsigned char * _RIPEMD160_Final_md = (md); \
  RIPEMD160_CTX * _RIPEMD160_Final_c = (c); \
  ({ \
  register char * _RIPEMD160_Final__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), unsigned char * __asm("a0"), RIPEMD160_CTX * __asm("a1"))) \
  (_RIPEMD160_Final__bn - 14706))(_RIPEMD160_Final__bn, _RIPEMD160_Final_md, _RIPEMD160_Final_c); \
});})

#define RIPEMD160(d, n, md) ({ \
  const unsigned char * _RIPEMD160_d = (d); \
  unsigned long _RIPEMD160_n = (n); \
  unsigned char * _RIPEMD160_md = (md); \
  ({ \
  register char * _RIPEMD160__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((unsigned char * (*)(char * __asm("a6"), const unsigned char * __asm("a0"), unsigned long __asm("d0"), unsigned char * __asm("a1"))) \
  (_RIPEMD160__bn - 14712))(_RIPEMD160__bn, _RIPEMD160_d, _RIPEMD160_n, _RIPEMD160_md); \
});})

#define RIPEMD160_Transform(c, b) ({ \
  RIPEMD160_CTX * _RIPEMD160_Transform_c = (c); \
  const unsigned char * _RIPEMD160_Transform_b = (b); \
  ({ \
  register char * _RIPEMD160_Transform__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), RIPEMD160_CTX * __asm("a0"), const unsigned char * __asm("a1"))) \
  (_RIPEMD160_Transform__bn - 14718))(_RIPEMD160_Transform__bn, _RIPEMD160_Transform_c, _RIPEMD160_Transform_b); \
});})

#define RSA_new() ({ \
  register char * _RSA_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((RSA * (*)(char * __asm("a6"))) \
  (_RSA_new__bn - 14724))(_RSA_new__bn); \
})

#define RSA_new_method(engine) ({ \
  ENGINE * _RSA_new_method_engine = (engine); \
  ({ \
  register char * _RSA_new_method__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((RSA * (*)(char * __asm("a6"), ENGINE * __asm("a0"))) \
  (_RSA_new_method__bn - 14730))(_RSA_new_method__bn, _RSA_new_method_engine); \
});})

#define RSA_size(a) ({ \
  const RSA * _RSA_size_a = (a); \
  ({ \
  register char * _RSA_size__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const RSA * __asm("a0"))) \
  (_RSA_size__bn - 14736))(_RSA_size__bn, _RSA_size_a); \
});})

#define RSA_generate_key(bits, e, callback, cb_arg) ({ \
  LONG _RSA_generate_key_bits = (bits); \
  unsigned long _RSA_generate_key_e = (e); \
  void (*_RSA_generate_key_callback)(int, int, void *) = (callback); \
  void * _RSA_generate_key_cb_arg = (cb_arg); \
  ({ \
  register char * _RSA_generate_key__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((RSA * (*)(char * __asm("a6"), LONG __asm("d0"), unsigned long __asm("d1"), void (*)(int, int, void *) __asm("a0"), void * __asm("a1"))) \
  (_RSA_generate_key__bn - 14742))(_RSA_generate_key__bn, _RSA_generate_key_bits, _RSA_generate_key_e, _RSA_generate_key_callback, _RSA_generate_key_cb_arg); \
});})

#define RSA_check_key(a) ({ \
  const RSA * _RSA_check_key_a = (a); \
  ({ \
  register char * _RSA_check_key__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const RSA * __asm("a0"))) \
  (_RSA_check_key__bn - 14748))(_RSA_check_key__bn, _RSA_check_key_a); \
});})

#define RSA_public_encrypt(flen, from, to, rsa, padding) ({ \
  LONG _RSA_public_encrypt_flen = (flen); \
  const unsigned char * _RSA_public_encrypt_from = (from); \
  unsigned char * _RSA_public_encrypt_to = (to); \
  RSA * _RSA_public_encrypt_rsa = (rsa); \
  LONG _RSA_public_encrypt_padding = (padding); \
  ({ \
  register char * _RSA_public_encrypt__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), LONG __asm("d0"), const unsigned char * __asm("a0"), unsigned char * __asm("a1"), RSA * __asm("a2"), LONG __asm("d1"))) \
  (_RSA_public_encrypt__bn - 14754))(_RSA_public_encrypt__bn, _RSA_public_encrypt_flen, _RSA_public_encrypt_from, _RSA_public_encrypt_to, _RSA_public_encrypt_rsa, _RSA_public_encrypt_padding); \
});})

#define RSA_private_encrypt(flen, from, to, rsa, padding) ({ \
  LONG _RSA_private_encrypt_flen = (flen); \
  const unsigned char * _RSA_private_encrypt_from = (from); \
  unsigned char * _RSA_private_encrypt_to = (to); \
  RSA * _RSA_private_encrypt_rsa = (rsa); \
  LONG _RSA_private_encrypt_padding = (padding); \
  ({ \
  register char * _RSA_private_encrypt__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), LONG __asm("d0"), const unsigned char * __asm("a0"), unsigned char * __asm("a1"), RSA * __asm("a2"), LONG __asm("d1"))) \
  (_RSA_private_encrypt__bn - 14760))(_RSA_private_encrypt__bn, _RSA_private_encrypt_flen, _RSA_private_encrypt_from, _RSA_private_encrypt_to, _RSA_private_encrypt_rsa, _RSA_private_encrypt_padding); \
});})

#define RSA_public_decrypt(flen, from, to, rsa, padding) ({ \
  LONG _RSA_public_decrypt_flen = (flen); \
  const unsigned char * _RSA_public_decrypt_from = (from); \
  unsigned char * _RSA_public_decrypt_to = (to); \
  RSA * _RSA_public_decrypt_rsa = (rsa); \
  LONG _RSA_public_decrypt_padding = (padding); \
  ({ \
  register char * _RSA_public_decrypt__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), LONG __asm("d0"), const unsigned char * __asm("a0"), unsigned char * __asm("a1"), RSA * __asm("a2"), LONG __asm("d1"))) \
  (_RSA_public_decrypt__bn - 14766))(_RSA_public_decrypt__bn, _RSA_public_decrypt_flen, _RSA_public_decrypt_from, _RSA_public_decrypt_to, _RSA_public_decrypt_rsa, _RSA_public_decrypt_padding); \
});})

#define RSA_private_decrypt(flen, from, to, rsa, padding) ({ \
  LONG _RSA_private_decrypt_flen = (flen); \
  const unsigned char * _RSA_private_decrypt_from = (from); \
  unsigned char * _RSA_private_decrypt_to = (to); \
  RSA * _RSA_private_decrypt_rsa = (rsa); \
  LONG _RSA_private_decrypt_padding = (padding); \
  ({ \
  register char * _RSA_private_decrypt__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), LONG __asm("d0"), const unsigned char * __asm("a0"), unsigned char * __asm("a1"), RSA * __asm("a2"), LONG __asm("d1"))) \
  (_RSA_private_decrypt__bn - 14772))(_RSA_private_decrypt__bn, _RSA_private_decrypt_flen, _RSA_private_decrypt_from, _RSA_private_decrypt_to, _RSA_private_decrypt_rsa, _RSA_private_decrypt_padding); \
});})

#define RSA_free(r) ({ \
  RSA * _RSA_free_r = (r); \
  ({ \
  register char * _RSA_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), RSA * __asm("a0"))) \
  (_RSA_free__bn - 14778))(_RSA_free__bn, _RSA_free_r); \
});})

#define RSA_up_ref(r) ({ \
  RSA * _RSA_up_ref_r = (r); \
  ({ \
  register char * _RSA_up_ref__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), RSA * __asm("a0"))) \
  (_RSA_up_ref__bn - 14784))(_RSA_up_ref__bn, _RSA_up_ref_r); \
});})

#define RSA_flags(r) ({ \
  const RSA * _RSA_flags_r = (r); \
  ({ \
  register char * _RSA_flags__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const RSA * __asm("a0"))) \
  (_RSA_flags__bn - 14790))(_RSA_flags__bn, _RSA_flags_r); \
});})

#define RSA_set_default_method(meth) ({ \
  const RSA_METHOD * _RSA_set_default_method_meth = (meth); \
  ({ \
  register char * _RSA_set_default_method__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), const RSA_METHOD * __asm("a0"))) \
  (_RSA_set_default_method__bn - 14796))(_RSA_set_default_method__bn, _RSA_set_default_method_meth); \
});})

#define RSA_get_default_method() ({ \
  register char * _RSA_get_default_method__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const RSA_METHOD * (*)(char * __asm("a6"))) \
  (_RSA_get_default_method__bn - 14802))(_RSA_get_default_method__bn); \
})

#define RSA_get_method(rsa) ({ \
  const RSA * _RSA_get_method_rsa = (rsa); \
  ({ \
  register char * _RSA_get_method__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const RSA_METHOD * (*)(char * __asm("a6"), const RSA * __asm("a0"))) \
  (_RSA_get_method__bn - 14808))(_RSA_get_method__bn, _RSA_get_method_rsa); \
});})

#define RSA_set_method(rsa, meth) ({ \
  RSA * _RSA_set_method_rsa = (rsa); \
  const RSA_METHOD * _RSA_set_method_meth = (meth); \
  ({ \
  register char * _RSA_set_method__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), RSA * __asm("a0"), const RSA_METHOD * __asm("a1"))) \
  (_RSA_set_method__bn - 14814))(_RSA_set_method__bn, _RSA_set_method_rsa, _RSA_set_method_meth); \
});})

#define RSA_memory_lock(r) ({ \
  RSA * _RSA_memory_lock_r = (r); \
  ({ \
  register char * _RSA_memory_lock__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), RSA * __asm("a0"))) \
  (_RSA_memory_lock__bn - 14820))(_RSA_memory_lock__bn, _RSA_memory_lock_r); \
});})

#define RSA_PKCS1_SSLeay() ({ \
  register char * _RSA_PKCS1_SSLeay__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const RSA_METHOD * (*)(char * __asm("a6"))) \
  (_RSA_PKCS1_SSLeay__bn - 14826))(_RSA_PKCS1_SSLeay__bn); \
})

#define RSA_null_method() ({ \
  register char * _RSA_null_method__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const RSA_METHOD * (*)(char * __asm("a6"))) \
  (_RSA_null_method__bn - 14832))(_RSA_null_method__bn); \
})

#define d2i_RSAPublicKey(a, in, len) ({ \
  RSA ** _d2i_RSAPublicKey_a = (a); \
  const unsigned char ** _d2i_RSAPublicKey_in = (in); \
  long _d2i_RSAPublicKey_len = (len); \
  ({ \
  register char * _d2i_RSAPublicKey__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((RSA * (*)(char * __asm("a6"), RSA ** __asm("a0"), const unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_RSAPublicKey__bn - 14838))(_d2i_RSAPublicKey__bn, _d2i_RSAPublicKey_a, _d2i_RSAPublicKey_in, _d2i_RSAPublicKey_len); \
});})

#define i2d_RSAPublicKey(a, out) ({ \
  const RSA * _i2d_RSAPublicKey_a = (a); \
  unsigned char ** _i2d_RSAPublicKey_out = (out); \
  ({ \
  register char * _i2d_RSAPublicKey__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const RSA * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_RSAPublicKey__bn - 14844))(_i2d_RSAPublicKey__bn, _i2d_RSAPublicKey_a, _i2d_RSAPublicKey_out); \
});})

#define RSAPublicKey_it() ({ \
  register char * _RSAPublicKey_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_RSAPublicKey_it__bn - 14850))(_RSAPublicKey_it__bn); \
})

#define d2i_RSAPrivateKey(a, in, len) ({ \
  RSA ** _d2i_RSAPrivateKey_a = (a); \
  const unsigned char ** _d2i_RSAPrivateKey_in = (in); \
  long _d2i_RSAPrivateKey_len = (len); \
  ({ \
  register char * _d2i_RSAPrivateKey__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((RSA * (*)(char * __asm("a6"), RSA ** __asm("a0"), const unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_RSAPrivateKey__bn - 14856))(_d2i_RSAPrivateKey__bn, _d2i_RSAPrivateKey_a, _d2i_RSAPrivateKey_in, _d2i_RSAPrivateKey_len); \
});})

#define i2d_RSAPrivateKey(a, out) ({ \
  const RSA * _i2d_RSAPrivateKey_a = (a); \
  unsigned char ** _i2d_RSAPrivateKey_out = (out); \
  ({ \
  register char * _i2d_RSAPrivateKey__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const RSA * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_RSAPrivateKey__bn - 14862))(_i2d_RSAPrivateKey__bn, _i2d_RSAPrivateKey_a, _i2d_RSAPrivateKey_out); \
});})

#define RSAPrivateKey_it() ({ \
  register char * _RSAPrivateKey_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_RSAPrivateKey_it__bn - 14868))(_RSAPrivateKey_it__bn); \
})

#define RSA_print(bp, r, offset) ({ \
  BIO * _RSA_print_bp = (bp); \
  const RSA * _RSA_print_r = (r); \
  LONG _RSA_print_offset = (offset); \
  ({ \
  register char * _RSA_print__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), BIO * __asm("a0"), const RSA * __asm("a1"), LONG __asm("d0"))) \
  (_RSA_print__bn - 14874))(_RSA_print__bn, _RSA_print_bp, _RSA_print_r, _RSA_print_offset); \
});})

#define i2d_RSA_NET(a, pp, cb, sgckey) ({ \
  const RSA * _i2d_RSA_NET_a = (a); \
  unsigned char ** _i2d_RSA_NET_pp = (pp); \
  int (*_i2d_RSA_NET_cb)() = (cb); \
  LONG _i2d_RSA_NET_sgckey = (sgckey); \
  ({ \
  register char * _i2d_RSA_NET__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const RSA * __asm("a0"), unsigned char ** __asm("a1"), int (*)() __asm("a2"), LONG __asm("d0"))) \
  (_i2d_RSA_NET__bn - 14880))(_i2d_RSA_NET__bn, _i2d_RSA_NET_a, _i2d_RSA_NET_pp, _i2d_RSA_NET_cb, _i2d_RSA_NET_sgckey); \
});})

#define d2i_RSA_NET(a, pp, length, cb, sgckey) ({ \
  RSA ** _d2i_RSA_NET_a = (a); \
  const unsigned char ** _d2i_RSA_NET_pp = (pp); \
  long _d2i_RSA_NET_length = (length); \
  int (*_d2i_RSA_NET_cb)() = (cb); \
  LONG _d2i_RSA_NET_sgckey = (sgckey); \
  ({ \
  register char * _d2i_RSA_NET__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((RSA * (*)(char * __asm("a6"), RSA ** __asm("a0"), const unsigned char ** __asm("a1"), long __asm("d0"), int (*)() __asm("a2"), LONG __asm("d1"))) \
  (_d2i_RSA_NET__bn - 14886))(_d2i_RSA_NET__bn, _d2i_RSA_NET_a, _d2i_RSA_NET_pp, _d2i_RSA_NET_length, _d2i_RSA_NET_cb, _d2i_RSA_NET_sgckey); \
});})

#define i2d_Netscape_RSA(a, pp, cb) ({ \
  const RSA * _i2d_Netscape_RSA_a = (a); \
  unsigned char ** _i2d_Netscape_RSA_pp = (pp); \
  int (*_i2d_Netscape_RSA_cb)() = (cb); \
  ({ \
  register char * _i2d_Netscape_RSA__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), const RSA * __asm("a0"), unsigned char ** __asm("a1"), int (*)() __asm("a2"))) \
  (_i2d_Netscape_RSA__bn - 14892))(_i2d_Netscape_RSA__bn, _i2d_Netscape_RSA_a, _i2d_Netscape_RSA_pp, _i2d_Netscape_RSA_cb); \
});})

#define d2i_Netscape_RSA(a, pp, length, cb) ({ \
  RSA ** _d2i_Netscape_RSA_a = (a); \
  const unsigned char ** _d2i_Netscape_RSA_pp = (pp); \
  long _d2i_Netscape_RSA_length = (length); \
  int (*_d2i_Netscape_RSA_cb)() = (cb); \
  ({ \
  register char * _d2i_Netscape_RSA__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((RSA * (*)(char * __asm("a6"), RSA ** __asm("a0"), const unsigned char ** __asm("a1"), long __asm("d0"), int (*)() __asm("a2"))) \
  (_d2i_Netscape_RSA__bn - 14898))(_d2i_Netscape_RSA__bn, _d2i_Netscape_RSA_a, _d2i_Netscape_RSA_pp, _d2i_Netscape_RSA_length, _d2i_Netscape_RSA_cb); \
});})

#define RSA_sign(type, m, m_length, sigret, siglen, rsa) ({ \
  LONG _RSA_sign_type = (type); \
  const unsigned char * _RSA_sign_m = (m); \
  ULONG _RSA_sign_m_length = (m_length); \
  unsigned char * _RSA_sign_sigret = (sigret); \
  unsigned int * _RSA_sign_siglen = (siglen); \
  RSA * _RSA_sign_rsa = (rsa); \
  ({ \
  register char * _RSA_sign__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), LONG __asm("d0"), const unsigned char * __asm("a0"), ULONG __asm("d1"), unsigned char * __asm("a1"), unsigned int * __asm("a2"), RSA * __asm("a3"))) \
  (_RSA_sign__bn - 14904))(_RSA_sign__bn, _RSA_sign_type, _RSA_sign_m, _RSA_sign_m_length, _RSA_sign_sigret, _RSA_sign_siglen, _RSA_sign_rsa); \
});})

#define RSA_verify(type, m, m_length, sigbuf, siglen, rsa) ({ \
  LONG _RSA_verify_type = (type); \
  const unsigned char * _RSA_verify_m = (m); \
  ULONG _RSA_verify_m_length = (m_length); \
  unsigned char * _RSA_verify_sigbuf = (sigbuf); \
  ULONG _RSA_verify_siglen = (siglen); \
  RSA * _RSA_verify_rsa = (rsa); \
  ({ \
  register char * _RSA_verify__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), LONG __asm("d0"), const unsigned char * __asm("a0"), ULONG __asm("d1"), unsigned char * __asm("a1"), ULONG __asm("d2"), RSA * __asm("a2"))) \
  (_RSA_verify__bn - 14910))(_RSA_verify__bn, _RSA_verify_type, _RSA_verify_m, _RSA_verify_m_length, _RSA_verify_sigbuf, _RSA_verify_siglen, _RSA_verify_rsa); \
});})

#define RSA_sign_ASN1_OCTET_STRING(type, m, m_length, sigret, siglen, rsa) ({ \
  LONG _RSA_sign_ASN1_OCTET_STRING_type = (type); \
  const unsigned char * _RSA_sign_ASN1_OCTET_STRING_m = (m); \
  ULONG _RSA_sign_ASN1_OCTET_STRING_m_length = (m_length); \
  unsigned char * _RSA_sign_ASN1_OCTET_STRING_sigret = (sigret); \
  unsigned int * _RSA_sign_ASN1_OCTET_STRING_siglen = (siglen); \
  RSA * _RSA_sign_ASN1_OCTET_STRING_rsa = (rsa); \
  ({ \
  register char * _RSA_sign_ASN1_OCTET_STRING__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), LONG __asm("d0"), const unsigned char * __asm("a0"), ULONG __asm("d1"), unsigned char * __asm("a1"), unsigned int * __asm("a2"), RSA * __asm("a3"))) \
  (_RSA_sign_ASN1_OCTET_STRING__bn - 14916))(_RSA_sign_ASN1_OCTET_STRING__bn, _RSA_sign_ASN1_OCTET_STRING_type, _RSA_sign_ASN1_OCTET_STRING_m, _RSA_sign_ASN1_OCTET_STRING_m_length, _RSA_sign_ASN1_OCTET_STRING_sigret, _RSA_sign_ASN1_OCTET_STRING_siglen, _RSA_sign_ASN1_OCTET_STRING_rsa); \
});})

#define RSA_verify_ASN1_OCTET_STRING(type, m, m_length, sigbuf, siglen, rsa) ({ \
  LONG _RSA_verify_ASN1_OCTET_STRING_type = (type); \
  const unsigned char * _RSA_verify_ASN1_OCTET_STRING_m = (m); \
  ULONG _RSA_verify_ASN1_OCTET_STRING_m_length = (m_length); \
  unsigned char * _RSA_verify_ASN1_OCTET_STRING_sigbuf = (sigbuf); \
  ULONG _RSA_verify_ASN1_OCTET_STRING_siglen = (siglen); \
  RSA * _RSA_verify_ASN1_OCTET_STRING_rsa = (rsa); \
  ({ \
  register char * _RSA_verify_ASN1_OCTET_STRING__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), LONG __asm("d0"), const unsigned char * __asm("a0"), ULONG __asm("d1"), unsigned char * __asm("a1"), ULONG __asm("d2"), RSA * __asm("a2"))) \
  (_RSA_verify_ASN1_OCTET_STRING__bn - 14922))(_RSA_verify_ASN1_OCTET_STRING__bn, _RSA_verify_ASN1_OCTET_STRING_type, _RSA_verify_ASN1_OCTET_STRING_m, _RSA_verify_ASN1_OCTET_STRING_m_length, _RSA_verify_ASN1_OCTET_STRING_sigbuf, _RSA_verify_ASN1_OCTET_STRING_siglen, _RSA_verify_ASN1_OCTET_STRING_rsa); \
});})

#define RSA_blinding_on(rsa, ctx) ({ \
  RSA * _RSA_blinding_on_rsa = (rsa); \
  BN_CTX * _RSA_blinding_on_ctx = (ctx); \
  ({ \
  register char * _RSA_blinding_on__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), RSA * __asm("a0"), BN_CTX * __asm("a1"))) \
  (_RSA_blinding_on__bn - 14928))(_RSA_blinding_on__bn, _RSA_blinding_on_rsa, _RSA_blinding_on_ctx); \
});})

#define RSA_blinding_off(rsa) ({ \
  RSA * _RSA_blinding_off_rsa = (rsa); \
  ({ \
  register char * _RSA_blinding_off__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), RSA * __asm("a0"))) \
  (_RSA_blinding_off__bn - 14934))(_RSA_blinding_off__bn, _RSA_blinding_off_rsa); \
});})

#define RSA_padding_add_PKCS1_type_1(to, tlen, f, fl) ({ \
  unsigned char * _RSA_padding_add_PKCS1_type_1_to = (to); \
  LONG _RSA_padding_add_PKCS1_type_1_tlen = (tlen); \
  const unsigned char * _RSA_padding_add_PKCS1_type_1_f = (f); \
  LONG _RSA_padding_add_PKCS1_type_1_fl = (fl); \
  ({ \
  register char * _RSA_padding_add_PKCS1_type_1__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), unsigned char * __asm("a0"), LONG __asm("d0"), const unsigned char * __asm("a1"), LONG __asm("d1"))) \
  (_RSA_padding_add_PKCS1_type_1__bn - 14940))(_RSA_padding_add_PKCS1_type_1__bn, _RSA_padding_add_PKCS1_type_1_to, _RSA_padding_add_PKCS1_type_1_tlen, _RSA_padding_add_PKCS1_type_1_f, _RSA_padding_add_PKCS1_type_1_fl); \
});})

#define RSA_padding_check_PKCS1_type_1(to, tlen, f, fl, rsa_len) ({ \
  unsigned char * _RSA_padding_check_PKCS1_type_1_to = (to); \
  LONG _RSA_padding_check_PKCS1_type_1_tlen = (tlen); \
  const unsigned char * _RSA_padding_check_PKCS1_type_1_f = (f); \
  LONG _RSA_padding_check_PKCS1_type_1_fl = (fl); \
  LONG _RSA_padding_check_PKCS1_type_1_rsa_len = (rsa_len); \
  ({ \
  register char * _RSA_padding_check_PKCS1_type_1__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), unsigned char * __asm("a0"), LONG __asm("d0"), const unsigned char * __asm("a1"), LONG __asm("d1"), LONG __asm("d2"))) \
  (_RSA_padding_check_PKCS1_type_1__bn - 14946))(_RSA_padding_check_PKCS1_type_1__bn, _RSA_padding_check_PKCS1_type_1_to, _RSA_padding_check_PKCS1_type_1_tlen, _RSA_padding_check_PKCS1_type_1_f, _RSA_padding_check_PKCS1_type_1_fl, _RSA_padding_check_PKCS1_type_1_rsa_len); \
});})

#define RSA_padding_add_PKCS1_type_2(to, tlen, f, fl) ({ \
  unsigned char * _RSA_padding_add_PKCS1_type_2_to = (to); \
  LONG _RSA_padding_add_PKCS1_type_2_tlen = (tlen); \
  const unsigned char * _RSA_padding_add_PKCS1_type_2_f = (f); \
  LONG _RSA_padding_add_PKCS1_type_2_fl = (fl); \
  ({ \
  register char * _RSA_padding_add_PKCS1_type_2__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), unsigned char * __asm("a0"), LONG __asm("d0"), const unsigned char * __asm("a1"), LONG __asm("d1"))) \
  (_RSA_padding_add_PKCS1_type_2__bn - 14952))(_RSA_padding_add_PKCS1_type_2__bn, _RSA_padding_add_PKCS1_type_2_to, _RSA_padding_add_PKCS1_type_2_tlen, _RSA_padding_add_PKCS1_type_2_f, _RSA_padding_add_PKCS1_type_2_fl); \
});})

#define RSA_padding_check_PKCS1_type_2(to, tlen, f, fl, rsa_len) ({ \
  unsigned char * _RSA_padding_check_PKCS1_type_2_to = (to); \
  LONG _RSA_padding_check_PKCS1_type_2_tlen = (tlen); \
  const unsigned char * _RSA_padding_check_PKCS1_type_2_f = (f); \
  LONG _RSA_padding_check_PKCS1_type_2_fl = (fl); \
  LONG _RSA_padding_check_PKCS1_type_2_rsa_len = (rsa_len); \
  ({ \
  register char * _RSA_padding_check_PKCS1_type_2__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), unsigned char * __asm("a0"), LONG __asm("d0"), const unsigned char * __asm("a1"), LONG __asm("d1"), LONG __asm("d2"))) \
  (_RSA_padding_check_PKCS1_type_2__bn - 14958))(_RSA_padding_check_PKCS1_type_2__bn, _RSA_padding_check_PKCS1_type_2_to, _RSA_padding_check_PKCS1_type_2_tlen, _RSA_padding_check_PKCS1_type_2_f, _RSA_padding_check_PKCS1_type_2_fl, _RSA_padding_check_PKCS1_type_2_rsa_len); \
});})

#define RSA_padding_add_PKCS1_OAEP(to, tlen, f, fl, p, pl) ({ \
  unsigned char * _RSA_padding_add_PKCS1_OAEP_to = (to); \
  LONG _RSA_padding_add_PKCS1_OAEP_tlen = (tlen); \
  const unsigned char * _RSA_padding_add_PKCS1_OAEP_f = (f); \
  LONG _RSA_padding_add_PKCS1_OAEP_fl = (fl); \
  const unsigned char * _RSA_padding_add_PKCS1_OAEP_p = (p); \
  LONG _RSA_padding_add_PKCS1_OAEP_pl = (pl); \
  ({ \
  register char * _RSA_padding_add_PKCS1_OAEP__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), unsigned char * __asm("a0"), LONG __asm("d0"), const unsigned char * __asm("a1"), LONG __asm("d1"), const unsigned char * __asm("a2"), LONG __asm("d2"))) \
  (_RSA_padding_add_PKCS1_OAEP__bn - 14964))(_RSA_padding_add_PKCS1_OAEP__bn, _RSA_padding_add_PKCS1_OAEP_to, _RSA_padding_add_PKCS1_OAEP_tlen, _RSA_padding_add_PKCS1_OAEP_f, _RSA_padding_add_PKCS1_OAEP_fl, _RSA_padding_add_PKCS1_OAEP_p, _RSA_padding_add_PKCS1_OAEP_pl); \
});})

#define RSA_padding_check_PKCS1_OAEP(to, tlen, f, fl, rsa_len, p, pl) ({ \
  unsigned char * _RSA_padding_check_PKCS1_OAEP_to = (to); \
  LONG _RSA_padding_check_PKCS1_OAEP_tlen = (tlen); \
  const unsigned char * _RSA_padding_check_PKCS1_OAEP_f = (f); \
  LONG _RSA_padding_check_PKCS1_OAEP_fl = (fl); \
  LONG _RSA_padding_check_PKCS1_OAEP_rsa_len = (rsa_len); \
  const unsigned char * _RSA_padding_check_PKCS1_OAEP_p = (p); \
  LONG _RSA_padding_check_PKCS1_OAEP_pl = (pl); \
  ({ \
  register char * _RSA_padding_check_PKCS1_OAEP__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), unsigned char * __asm("a0"), LONG __asm("d0"), const unsigned char * __asm("a1"), LONG __asm("d1"), LONG __asm("d2"), const unsigned char * __asm("a2"), LONG __asm("d3"))) \
  (_RSA_padding_check_PKCS1_OAEP__bn - 14970))(_RSA_padding_check_PKCS1_OAEP__bn, _RSA_padding_check_PKCS1_OAEP_to, _RSA_padding_check_PKCS1_OAEP_tlen, _RSA_padding_check_PKCS1_OAEP_f, _RSA_padding_check_PKCS1_OAEP_fl, _RSA_padding_check_PKCS1_OAEP_rsa_len, _RSA_padding_check_PKCS1_OAEP_p, _RSA_padding_check_PKCS1_OAEP_pl); \
});})

#define RSA_padding_add_SSLv23(to, tlen, f, fl) ({ \
  unsigned char * _RSA_padding_add_SSLv23_to = (to); \
  LONG _RSA_padding_add_SSLv23_tlen = (tlen); \
  const unsigned char * _RSA_padding_add_SSLv23_f = (f); \
  LONG _RSA_padding_add_SSLv23_fl = (fl); \
  ({ \
  register char * _RSA_padding_add_SSLv23__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), unsigned char * __asm("a0"), LONG __asm("d0"), const unsigned char * __asm("a1"), LONG __asm("d1"))) \
  (_RSA_padding_add_SSLv23__bn - 14976))(_RSA_padding_add_SSLv23__bn, _RSA_padding_add_SSLv23_to, _RSA_padding_add_SSLv23_tlen, _RSA_padding_add_SSLv23_f, _RSA_padding_add_SSLv23_fl); \
});})

#define RSA_padding_check_SSLv23(to, tlen, f, fl, rsa_len) ({ \
  unsigned char * _RSA_padding_check_SSLv23_to = (to); \
  LONG _RSA_padding_check_SSLv23_tlen = (tlen); \
  const unsigned char * _RSA_padding_check_SSLv23_f = (f); \
  LONG _RSA_padding_check_SSLv23_fl = (fl); \
  LONG _RSA_padding_check_SSLv23_rsa_len = (rsa_len); \
  ({ \
  register char * _RSA_padding_check_SSLv23__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), unsigned char * __asm("a0"), LONG __asm("d0"), const unsigned char * __asm("a1"), LONG __asm("d1"), LONG __asm("d2"))) \
  (_RSA_padding_check_SSLv23__bn - 14982))(_RSA_padding_check_SSLv23__bn, _RSA_padding_check_SSLv23_to, _RSA_padding_check_SSLv23_tlen, _RSA_padding_check_SSLv23_f, _RSA_padding_check_SSLv23_fl, _RSA_padding_check_SSLv23_rsa_len); \
});})

#define RSA_padding_add_none(to, tlen, f, fl) ({ \
  unsigned char * _RSA_padding_add_none_to = (to); \
  LONG _RSA_padding_add_none_tlen = (tlen); \
  const unsigned char * _RSA_padding_add_none_f = (f); \
  LONG _RSA_padding_add_none_fl = (fl); \
  ({ \
  register char * _RSA_padding_add_none__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), unsigned char * __asm("a0"), LONG __asm("d0"), const unsigned char * __asm("a1"), LONG __asm("d1"))) \
  (_RSA_padding_add_none__bn - 14988))(_RSA_padding_add_none__bn, _RSA_padding_add_none_to, _RSA_padding_add_none_tlen, _RSA_padding_add_none_f, _RSA_padding_add_none_fl); \
});})

#define RSA_padding_check_none(to, tlen, f, fl, rsa_len) ({ \
  unsigned char * _RSA_padding_check_none_to = (to); \
  LONG _RSA_padding_check_none_tlen = (tlen); \
  const unsigned char * _RSA_padding_check_none_f = (f); \
  LONG _RSA_padding_check_none_fl = (fl); \
  LONG _RSA_padding_check_none_rsa_len = (rsa_len); \
  ({ \
  register char * _RSA_padding_check_none__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), unsigned char * __asm("a0"), LONG __asm("d0"), const unsigned char * __asm("a1"), LONG __asm("d1"), LONG __asm("d2"))) \
  (_RSA_padding_check_none__bn - 14994))(_RSA_padding_check_none__bn, _RSA_padding_check_none_to, _RSA_padding_check_none_tlen, _RSA_padding_check_none_f, _RSA_padding_check_none_fl, _RSA_padding_check_none_rsa_len); \
});})

#define RSA_get_ex_new_index(argl, argp, new_func, dup_func, free_func) ({ \
  long _RSA_get_ex_new_index_argl = (argl); \
  void * _RSA_get_ex_new_index_argp = (argp); \
  CRYPTO_EX_new * (*_RSA_get_ex_new_index_new_func)() = (new_func); \
  CRYPTO_EX_dup * (*_RSA_get_ex_new_index_dup_func)() = (dup_func); \
  CRYPTO_EX_free * (*_RSA_get_ex_new_index_free_func)() = (free_func); \
  ({ \
  register char * _RSA_get_ex_new_index__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), long __asm("d0"), void * __asm("a0"), CRYPTO_EX_new * (*)() __asm("a1"), CRYPTO_EX_dup * (*)() __asm("a2"), CRYPTO_EX_free * (*)() __asm("a3"))) \
  (_RSA_get_ex_new_index__bn - 15000))(_RSA_get_ex_new_index__bn, _RSA_get_ex_new_index_argl, _RSA_get_ex_new_index_argp, _RSA_get_ex_new_index_new_func, _RSA_get_ex_new_index_dup_func, _RSA_get_ex_new_index_free_func); \
});})

#define RSA_set_ex_data(r, idx, arg) ({ \
  RSA * _RSA_set_ex_data_r = (r); \
  LONG _RSA_set_ex_data_idx = (idx); \
  void * _RSA_set_ex_data_arg = (arg); \
  ({ \
  register char * _RSA_set_ex_data__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), RSA * __asm("a0"), LONG __asm("d0"), void * __asm("a1"))) \
  (_RSA_set_ex_data__bn - 15006))(_RSA_set_ex_data__bn, _RSA_set_ex_data_r, _RSA_set_ex_data_idx, _RSA_set_ex_data_arg); \
});})

#define RSA_get_ex_data(r, idx) ({ \
  const RSA * _RSA_get_ex_data_r = (r); \
  LONG _RSA_get_ex_data_idx = (idx); \
  ({ \
  register char * _RSA_get_ex_data__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void * (*)(char * __asm("a6"), const RSA * __asm("a0"), LONG __asm("d0"))) \
  (_RSA_get_ex_data__bn - 15012))(_RSA_get_ex_data__bn, _RSA_get_ex_data_r, _RSA_get_ex_data_idx); \
});})

#define RSAPublicKey_dup(rsa) ({ \
  RSA * _RSAPublicKey_dup_rsa = (rsa); \
  ({ \
  register char * _RSAPublicKey_dup__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((RSA * (*)(char * __asm("a6"), RSA * __asm("a0"))) \
  (_RSAPublicKey_dup__bn - 15018))(_RSAPublicKey_dup__bn, _RSAPublicKey_dup_rsa); \
});})

#define RSAPrivateKey_dup(rsa) ({ \
  RSA * _RSAPrivateKey_dup_rsa = (rsa); \
  ({ \
  register char * _RSAPrivateKey_dup__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((RSA * (*)(char * __asm("a6"), RSA * __asm("a0"))) \
  (_RSAPrivateKey_dup__bn - 15024))(_RSAPrivateKey_dup__bn, _RSAPrivateKey_dup_rsa); \
});})

#define ERR_load_RSA_strings() ({ \
  register char * _ERR_load_RSA_strings__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"))) \
  (_ERR_load_RSA_strings__bn - 15030))(_ERR_load_RSA_strings__bn); \
})

#define SHA_Init(c) ({ \
  SHA_CTX * _SHA_Init_c = (c); \
  ({ \
  register char * _SHA_Init__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), SHA_CTX * __asm("a0"))) \
  (_SHA_Init__bn - 15036))(_SHA_Init__bn, _SHA_Init_c); \
});})

#define SHA_Update(c, data, len) ({ \
  SHA_CTX * _SHA_Update_c = (c); \
  const void * _SHA_Update_data = (data); \
  unsigned long _SHA_Update_len = (len); \
  ({ \
  register char * _SHA_Update__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), SHA_CTX * __asm("a0"), const void * __asm("a1"), unsigned long __asm("d0"))) \
  (_SHA_Update__bn - 15042))(_SHA_Update__bn, _SHA_Update_c, _SHA_Update_data, _SHA_Update_len); \
});})

#define SHA_Final(md, c) ({ \
  unsigned char * _SHA_Final_md = (md); \
  SHA_CTX * _SHA_Final_c = (c); \
  ({ \
  register char * _SHA_Final__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), unsigned char * __asm("a0"), SHA_CTX * __asm("a1"))) \
  (_SHA_Final__bn - 15048))(_SHA_Final__bn, _SHA_Final_md, _SHA_Final_c); \
});})

#define SHA(d, n, md) ({ \
  const unsigned char * _SHA_d = (d); \
  unsigned long _SHA_n = (n); \
  unsigned char * _SHA_md = (md); \
  ({ \
  register char * _SHA__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((unsigned char * (*)(char * __asm("a6"), const unsigned char * __asm("a0"), unsigned long __asm("d0"), unsigned char * __asm("a1"))) \
  (_SHA__bn - 15054))(_SHA__bn, _SHA_d, _SHA_n, _SHA_md); \
});})

#define SHA_Transform(c, data) ({ \
  SHA_CTX * _SHA_Transform_c = (c); \
  const unsigned char * _SHA_Transform_data = (data); \
  ({ \
  register char * _SHA_Transform__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), SHA_CTX * __asm("a0"), const unsigned char * __asm("a1"))) \
  (_SHA_Transform__bn - 15060))(_SHA_Transform__bn, _SHA_Transform_c, _SHA_Transform_data); \
});})

#define SHA1_Init(c) ({ \
  SHA_CTX * _SHA1_Init_c = (c); \
  ({ \
  register char * _SHA1_Init__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), SHA_CTX * __asm("a0"))) \
  (_SHA1_Init__bn - 15066))(_SHA1_Init__bn, _SHA1_Init_c); \
});})

#define SHA1_Update(c, data, len) ({ \
  SHA_CTX * _SHA1_Update_c = (c); \
  const void * _SHA1_Update_data = (data); \
  unsigned long _SHA1_Update_len = (len); \
  ({ \
  register char * _SHA1_Update__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), SHA_CTX * __asm("a0"), const void * __asm("a1"), unsigned long __asm("d0"))) \
  (_SHA1_Update__bn - 15072))(_SHA1_Update__bn, _SHA1_Update_c, _SHA1_Update_data, _SHA1_Update_len); \
});})

#define SHA1_Final(md, c) ({ \
  unsigned char * _SHA1_Final_md = (md); \
  SHA_CTX * _SHA1_Final_c = (c); \
  ({ \
  register char * _SHA1_Final__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), unsigned char * __asm("a0"), SHA_CTX * __asm("a1"))) \
  (_SHA1_Final__bn - 15078))(_SHA1_Final__bn, _SHA1_Final_md, _SHA1_Final_c); \
});})

#define SHA1(d, n, md) ({ \
  const unsigned char * _SHA1_d = (d); \
  unsigned long _SHA1_n = (n); \
  unsigned char * _SHA1_md = (md); \
  ({ \
  register char * _SHA1__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((unsigned char * (*)(char * __asm("a6"), const unsigned char * __asm("a0"), unsigned long __asm("d0"), unsigned char * __asm("a1"))) \
  (_SHA1__bn - 15084))(_SHA1__bn, _SHA1_d, _SHA1_n, _SHA1_md); \
});})

#define SHA1_Transform(c, data) ({ \
  SHA_CTX * _SHA1_Transform_c = (c); \
  const unsigned char * _SHA1_Transform_data = (data); \
  ({ \
  register char * _SHA1_Transform__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), SHA_CTX * __asm("a0"), const unsigned char * __asm("a1"))) \
  (_SHA1_Transform__bn - 15090))(_SHA1_Transform__bn, _SHA1_Transform_c, _SHA1_Transform_data); \
});})

#define HMAC_CTX_set_flags(ctx, flags) ({ \
  HMAC_CTX * _HMAC_CTX_set_flags_ctx = (ctx); \
  unsigned long _HMAC_CTX_set_flags_flags = (flags); \
  ({ \
  register char * _HMAC_CTX_set_flags__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), HMAC_CTX * __asm("a0"), unsigned long __asm("d0"))) \
  (_HMAC_CTX_set_flags__bn - 15108))(_HMAC_CTX_set_flags__bn, _HMAC_CTX_set_flags_ctx, _HMAC_CTX_set_flags_flags); \
});})

#define X509_check_ca(x) ({ \
  X509 * _X509_check_ca_x = (x); \
  ({ \
  register char * _X509_check_ca__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), X509 * __asm("a0"))) \
  (_X509_check_ca__bn - 15114))(_X509_check_ca__bn, _X509_check_ca_x); \
});})

#define PROXY_POLICY_new() ({ \
  register char * _PROXY_POLICY_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((PROXY_POLICY * (*)(char * __asm("a6"))) \
  (_PROXY_POLICY_new__bn - 15120))(_PROXY_POLICY_new__bn); \
})

#define PROXY_POLICY_free(a) ({ \
  PROXY_POLICY * _PROXY_POLICY_free_a = (a); \
  ({ \
  register char * _PROXY_POLICY_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), PROXY_POLICY * __asm("a0"))) \
  (_PROXY_POLICY_free__bn - 15126))(_PROXY_POLICY_free__bn, _PROXY_POLICY_free_a); \
});})

#define d2i_PROXY_POLICY(a, in, len) ({ \
  PROXY_POLICY ** _d2i_PROXY_POLICY_a = (a); \
  unsigned char ** _d2i_PROXY_POLICY_in = (in); \
  long _d2i_PROXY_POLICY_len = (len); \
  ({ \
  register char * _d2i_PROXY_POLICY__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((PROXY_POLICY * (*)(char * __asm("a6"), PROXY_POLICY ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_PROXY_POLICY__bn - 15132))(_d2i_PROXY_POLICY__bn, _d2i_PROXY_POLICY_a, _d2i_PROXY_POLICY_in, _d2i_PROXY_POLICY_len); \
});})

#define i2d_PROXY_POLICY(a, out) ({ \
  PROXY_POLICY * _i2d_PROXY_POLICY_a = (a); \
  unsigned char ** _i2d_PROXY_POLICY_out = (out); \
  ({ \
  register char * _i2d_PROXY_POLICY__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), PROXY_POLICY * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_PROXY_POLICY__bn - 15138))(_i2d_PROXY_POLICY__bn, _i2d_PROXY_POLICY_a, _i2d_PROXY_POLICY_out); \
});})

#define PROXY_POLICY_it() ({ \
  register char * _PROXY_POLICY_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_PROXY_POLICY_it__bn - 15144))(_PROXY_POLICY_it__bn); \
})

#define PROXY_CERT_INFO_EXTENSION_new() ({ \
  register char * _PROXY_CERT_INFO_EXTENSION_new__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((PROXY_CERT_INFO_EXTENSION * (*)(char * __asm("a6"))) \
  (_PROXY_CERT_INFO_EXTENSION_new__bn - 15150))(_PROXY_CERT_INFO_EXTENSION_new__bn); \
})

#define PROXY_CERT_INFO_EXTENSION_free(a) ({ \
  PROXY_CERT_INFO_EXTENSION * _PROXY_CERT_INFO_EXTENSION_free_a = (a); \
  ({ \
  register char * _PROXY_CERT_INFO_EXTENSION_free__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((void (*)(char * __asm("a6"), PROXY_CERT_INFO_EXTENSION * __asm("a0"))) \
  (_PROXY_CERT_INFO_EXTENSION_free__bn - 15156))(_PROXY_CERT_INFO_EXTENSION_free__bn, _PROXY_CERT_INFO_EXTENSION_free_a); \
});})

#define d2i_PROXY_CERT_INFO_EXTENSION(a, in, len) ({ \
  PROXY_CERT_INFO_EXTENSION ** _d2i_PROXY_CERT_INFO_EXTENSION_a = (a); \
  unsigned char ** _d2i_PROXY_CERT_INFO_EXTENSION_in = (in); \
  long _d2i_PROXY_CERT_INFO_EXTENSION_len = (len); \
  ({ \
  register char * _d2i_PROXY_CERT_INFO_EXTENSION__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((PROXY_CERT_INFO_EXTENSION * (*)(char * __asm("a6"), PROXY_CERT_INFO_EXTENSION ** __asm("a0"), unsigned char ** __asm("a1"), long __asm("d0"))) \
  (_d2i_PROXY_CERT_INFO_EXTENSION__bn - 15162))(_d2i_PROXY_CERT_INFO_EXTENSION__bn, _d2i_PROXY_CERT_INFO_EXTENSION_a, _d2i_PROXY_CERT_INFO_EXTENSION_in, _d2i_PROXY_CERT_INFO_EXTENSION_len); \
});})

#define i2d_PROXY_CERT_INFO_EXTENSION(a, out) ({ \
  PROXY_CERT_INFO_EXTENSION * _i2d_PROXY_CERT_INFO_EXTENSION_a = (a); \
  unsigned char ** _i2d_PROXY_CERT_INFO_EXTENSION_out = (out); \
  ({ \
  register char * _i2d_PROXY_CERT_INFO_EXTENSION__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((int (*)(char * __asm("a6"), PROXY_CERT_INFO_EXTENSION * __asm("a0"), unsigned char ** __asm("a1"))) \
  (_i2d_PROXY_CERT_INFO_EXTENSION__bn - 15168))(_i2d_PROXY_CERT_INFO_EXTENSION__bn, _i2d_PROXY_CERT_INFO_EXTENSION_a, _i2d_PROXY_CERT_INFO_EXTENSION_out); \
});})

#define PROXY_CERT_INFO_EXTENSION_it() ({ \
  register char * _PROXY_CERT_INFO_EXTENSION_it__bn __asm("a6") = (char *) (AMISSL_BASE_NAME);\
  ((const ASN1_ITEM * (*)(char * __asm("a6"))) \
  (_PROXY_CERT_INFO_EXTENSION_it__bn - 15174))(_PROXY_CERT_INFO_EXTENSION_it__bn); \
})

#endif /*  _INLINE_AMISSL_H  */
