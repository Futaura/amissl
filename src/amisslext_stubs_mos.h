/* Automatically generated header (sfdc 1.12)! Do not edit! */

#ifndef _GATEPROTO_AMISSLEXT_H
#define _GATEPROTO_AMISSLEXT_H

#include <exec/types.h>
#include <dos/dos.h>
#include <amissl/amissl.h>

#define _sfdc_strarg(a) _sfdc_strarg2(a)
#define _sfdc_strarg2(a) #a

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

#include <SDI_lib.h>

LIBSTUB(UNIMPLEMENTED, int);
LIBSTUB(OSSL_trace_enabled, int);
LIBSTUB(OSSL_trace_begin, BIO *);
LIBSTUB(OSSL_trace_end, void);
LIBSTUB(OSSL_PROVIDER_load, OSSL_PROVIDER *);
LIBSTUB(OSSL_PROVIDER_try_load, OSSL_PROVIDER *);
LIBSTUB(OSSL_PROVIDER_unload, int);
LIBSTUB(OSSL_PROVIDER_add_builtin, int);
LIBSTUB(OSSL_PROVIDER_gettable_params, const OSSL_PARAM *);
LIBSTUB(OSSL_PROVIDER_get_params, int);
LIBSTUB(d2i_OSSL_CRMF_ENCRYPTEDVALUE, OSSL_CRMF_ENCRYPTEDVALUE *);
LIBSTUB(i2d_OSSL_CRMF_ENCRYPTEDVALUE, int);
LIBSTUB(OSSL_CRMF_ENCRYPTEDVALUE_free, void);
LIBSTUB(OSSL_CRMF_ENCRYPTEDVALUE_new, OSSL_CRMF_ENCRYPTEDVALUE *);
LIBSTUB(OSSL_CRMF_ENCRYPTEDVALUE_it, const ASN1_ITEM *);
LIBSTUB(d2i_OSSL_CRMF_MSG, OSSL_CRMF_MSG *);
LIBSTUB(i2d_OSSL_CRMF_MSG, int);
LIBSTUB(OSSL_CRMF_MSG_dup, OSSL_CRMF_MSG *);
LIBSTUB(OSSL_CRMF_MSG_free, void);
LIBSTUB(OSSL_CRMF_MSG_new, OSSL_CRMF_MSG *);
LIBSTUB(OSSL_CRMF_MSG_it, const ASN1_ITEM *);
LIBSTUB(d2i_OSSL_CRMF_PBMPARAMETER, OSSL_CRMF_PBMPARAMETER *);
LIBSTUB(i2d_OSSL_CRMF_PBMPARAMETER, int);
LIBSTUB(OSSL_CRMF_PBMPARAMETER_free, void);
LIBSTUB(OSSL_CRMF_PBMPARAMETER_new, OSSL_CRMF_PBMPARAMETER *);
LIBSTUB(OSSL_CRMF_PBMPARAMETER_it, const ASN1_ITEM *);
LIBSTUB(d2i_OSSL_CRMF_CERTID, OSSL_CRMF_CERTID *);
LIBSTUB(i2d_OSSL_CRMF_CERTID, int);
LIBSTUB(OSSL_CRMF_CERTID_dup, OSSL_CRMF_CERTID *);
LIBSTUB(OSSL_CRMF_CERTID_free, void);
LIBSTUB(OSSL_CRMF_CERTID_new, OSSL_CRMF_CERTID *);
LIBSTUB(OSSL_CRMF_CERTID_it, const ASN1_ITEM *);
LIBSTUB(d2i_OSSL_CRMF_PKIPUBLICATIONINFO, OSSL_CRMF_PKIPUBLICATIONINFO *);
LIBSTUB(i2d_OSSL_CRMF_PKIPUBLICATIONINFO, int);
LIBSTUB(OSSL_CRMF_PKIPUBLICATIONINFO_free, void);
LIBSTUB(OSSL_CRMF_PKIPUBLICATIONINFO_new, OSSL_CRMF_PKIPUBLICATIONINFO *);
LIBSTUB(OSSL_CRMF_PKIPUBLICATIONINFO_it, const ASN1_ITEM *);
LIBSTUB(d2i_OSSL_CRMF_SINGLEPUBINFO, OSSL_CRMF_SINGLEPUBINFO *);
LIBSTUB(i2d_OSSL_CRMF_SINGLEPUBINFO, int);
LIBSTUB(OSSL_CRMF_SINGLEPUBINFO_free, void);
LIBSTUB(OSSL_CRMF_SINGLEPUBINFO_new, OSSL_CRMF_SINGLEPUBINFO *);
LIBSTUB(OSSL_CRMF_SINGLEPUBINFO_it, const ASN1_ITEM *);
LIBSTUB(d2i_OSSL_CRMF_CERTTEMPLATE, OSSL_CRMF_CERTTEMPLATE *);
LIBSTUB(i2d_OSSL_CRMF_CERTTEMPLATE, int);
LIBSTUB(OSSL_CRMF_CERTTEMPLATE_free, void);
LIBSTUB(OSSL_CRMF_CERTTEMPLATE_new, OSSL_CRMF_CERTTEMPLATE *);
LIBSTUB(OSSL_CRMF_CERTTEMPLATE_it, const ASN1_ITEM *);
LIBSTUB(d2i_OSSL_CRMF_MSGS, OSSL_CRMF_MSGS *);
LIBSTUB(i2d_OSSL_CRMF_MSGS, int);
LIBSTUB(OSSL_CRMF_MSGS_free, void);
LIBSTUB(OSSL_CRMF_MSGS_new, OSSL_CRMF_MSGS *);
LIBSTUB(OSSL_CRMF_MSGS_it, const ASN1_ITEM *);
LIBSTUB(OSSL_CRMF_pbmp_new, OSSL_CRMF_PBMPARAMETER *);
LIBSTUB(OSSL_CRMF_pbm_new, int);
LIBSTUB(OSSL_CRMF_MSG_get0_regCtrl_regToken, ASN1_UTF8STRING *);
LIBSTUB(OSSL_CRMF_MSG_set1_regCtrl_regToken, int);
LIBSTUB(OSSL_CRMF_MSG_get0_regCtrl_authenticator, ASN1_UTF8STRING *);
LIBSTUB(OSSL_CRMF_MSG_set1_regCtrl_authenticator, int);
LIBSTUB(OSSL_CRMF_MSG_PKIPublicationInfo_push0_SinglePubInfo, int);
LIBSTUB(OSSL_CRMF_MSG_set0_SinglePubInfo, int);
LIBSTUB(OSSL_CRMF_MSG_get0_regCtrl_pkiPublicationInfo, OSSL_CRMF_PKIPUBLICATIONINFO *);
LIBSTUB(OSSL_CRMF_MSG_set_PKIPublicationInfo_action, int);
LIBSTUB(OSSL_CRMF_MSG_set1_regCtrl_pkiPublicationInfo, int);
LIBSTUB(OSSL_CRMF_MSG_get0_regCtrl_protocolEncrKey, X509_PUBKEY *);
LIBSTUB(OSSL_CRMF_MSG_set1_regCtrl_protocolEncrKey, int);
LIBSTUB(OSSL_CRMF_MSG_get0_regCtrl_oldCertID, OSSL_CRMF_CERTID *);
LIBSTUB(OSSL_CRMF_MSG_set1_regCtrl_oldCertID, int);
LIBSTUB(OSSL_CRMF_CERTID_gen, OSSL_CRMF_CERTID *);
LIBSTUB(OSSL_CRMF_MSG_get0_regInfo_utf8Pairs, ASN1_UTF8STRING *);
LIBSTUB(OSSL_CRMF_MSG_set1_regInfo_utf8Pairs, int);
LIBSTUB(OSSL_CRMF_MSG_get0_regInfo_certReq, OSSL_CRMF_CERTREQUEST *);
LIBSTUB(OSSL_CRMF_MSG_set1_regInfo_certReq, int);
LIBSTUB(OSSL_CRMF_MSG_set0_validity, int);
LIBSTUB(OSSL_CRMF_MSG_set_certReqId, int);
LIBSTUB(OSSL_CRMF_MSG_get_certReqId, int);
LIBSTUB(OSSL_CRMF_MSG_set0_extensions, int);
LIBSTUB(OSSL_CRMF_MSG_push0_extension, int);
LIBSTUB(OSSL_CRMF_MSG_create_popo, int);
LIBSTUB(OSSL_CRMF_MSGS_verify_popo, int);
LIBSTUB(OSSL_CRMF_MSG_get0_tmpl, OSSL_CRMF_CERTTEMPLATE *);
LIBSTUB(OSSL_CRMF_CERTTEMPLATE_get0_serialNumber, const ASN1_INTEGER *);
LIBSTUB(OSSL_CRMF_CERTTEMPLATE_get0_subject, const X509_NAME *);
LIBSTUB(OSSL_CRMF_CERTTEMPLATE_get0_issuer, const X509_NAME *);
LIBSTUB(OSSL_CRMF_CERTTEMPLATE_get0_extensions, X509_EXTENSIONS *);
LIBSTUB(OSSL_CRMF_CERTTEMPLATE_fill, int);
LIBSTUB(OSSL_CRMF_ENCRYPTEDVALUE_get1_encCert, X509 *);
LIBSTUB(OSSL_PARAM_locate, OSSL_PARAM *);
LIBSTUB(OSSL_PARAM_construct_int_amiga, void);
LIBSTUB(OSSL_PARAM_construct_uint_amiga, void);
LIBSTUB(OSSL_PARAM_construct_long_amiga, void);
LIBSTUB(OSSL_PARAM_construct_ulong_amiga, void);
LIBSTUB(OSSL_PARAM_construct_int32_amiga, void);
LIBSTUB(OSSL_PARAM_construct_uint32_amiga, void);
LIBSTUB(OSSL_PARAM_construct_int64_amiga, void);
LIBSTUB(OSSL_PARAM_construct_uint64_amiga, void);
LIBSTUB(OSSL_PARAM_construct_size_t_amiga, void);
LIBSTUB(OSSL_PARAM_construct_BN_amiga, void);
LIBSTUB(OSSL_PARAM_construct_double_amiga, void);
LIBSTUB(OSSL_PARAM_construct_utf8_string_amiga, void);
LIBSTUB(OSSL_PARAM_construct_utf8_ptr_amiga, void);
LIBSTUB(OSSL_PARAM_construct_octet_string_amiga, void);
LIBSTUB(OSSL_PARAM_construct_octet_ptr_amiga, void);
LIBSTUB(OSSL_PARAM_get_int, int);
LIBSTUB(OSSL_PARAM_get_uint, int);
LIBSTUB(OSSL_PARAM_get_long, int);
LIBSTUB(OSSL_PARAM_get_ulong, int);
LIBSTUB(OSSL_PARAM_get_int32, int);
LIBSTUB(OSSL_PARAM_get_uint32, int);
LIBSTUB(OSSL_PARAM_get_int64, int);
LIBSTUB(OSSL_PARAM_get_uint64, int);
LIBSTUB(OSSL_PARAM_get_size_t, int);
LIBSTUB(OSSL_PARAM_set_int, int);
LIBSTUB(OSSL_PARAM_set_uint, int);
LIBSTUB(OSSL_PARAM_set_long, int);
LIBSTUB(OSSL_PARAM_set_ulong, int);
LIBSTUB(OSSL_PARAM_set_int32, int);
LIBSTUB(OSSL_PARAM_set_uint32, int);
LIBSTUB(OSSL_PARAM_set_int64, int);
LIBSTUB(OSSL_PARAM_set_uint64, int);
LIBSTUB(OSSL_PARAM_set_size_t, int);
LIBSTUB(OSSL_PARAM_get_double, int);
LIBSTUB(OSSL_PARAM_set_double, int);
LIBSTUB(OSSL_PARAM_get_BN, int);
LIBSTUB(OSSL_PARAM_set_BN, int);
LIBSTUB(OSSL_PARAM_get_utf8_string, int);
LIBSTUB(OSSL_PARAM_set_utf8_string, int);
LIBSTUB(OSSL_PARAM_get_octet_string, int);
LIBSTUB(OSSL_PARAM_set_octet_string, int);
LIBSTUB(OSSL_PARAM_get_utf8_ptr, int);
LIBSTUB(OSSL_PARAM_set_utf8_ptr, int);
LIBSTUB(OSSL_PARAM_get_octet_ptr, int);
LIBSTUB(OSSL_PARAM_set_octet_ptr, int);
LIBSTUB(X509_set0_distinguishing_id, void);
LIBSTUB(X509_get0_distinguishing_id, ASN1_OCTET_STRING *);
LIBSTUB(EVP_MD_up_ref, int);
LIBSTUB(EVP_MD_fetch, EVP_MD *);
LIBSTUB(EVP_set_default_properties, int);
LIBSTUB(OSSL_PARAM_construct_end_amiga, void);
LIBSTUB(EC_GROUP_check_named_curve, int);
LIBSTUB(EVP_CIPHER_up_ref, int);
LIBSTUB(EVP_CIPHER_fetch, EVP_CIPHER *);
LIBSTUB(EVP_CIPHER_get_mode, int);
LIBSTUB(OPENSSL_info, const char *);
LIBSTUB(EVP_KDF_CTX_new, EVP_KDF_CTX *);
LIBSTUB(EVP_KDF_CTX_kdf, const EVP_KDF *);
LIBSTUB(i2d_KeyParams, int);
LIBSTUB(d2i_KeyParams, EVP_PKEY *);
LIBSTUB(i2d_KeyParams_bio, int);
LIBSTUB(d2i_KeyParams_bio, EVP_PKEY *);
LIBSTUB(OSSL_CMP_PKISTATUS_it, const ASN1_ITEM *);
LIBSTUB(d2i_OSSL_CMP_PKIHEADER, OSSL_CMP_PKIHEADER *);
LIBSTUB(i2d_OSSL_CMP_PKIHEADER, int);
LIBSTUB(OSSL_CMP_PKIHEADER_free, void);
LIBSTUB(OSSL_CMP_PKIHEADER_new, OSSL_CMP_PKIHEADER *);
LIBSTUB(OSSL_CMP_PKIHEADER_it, const ASN1_ITEM *);
LIBSTUB(d2i_OSSL_CMP_MSG, OSSL_CMP_MSG *);
LIBSTUB(i2d_OSSL_CMP_MSG, int);
LIBSTUB(OSSL_CMP_MSG_it, const ASN1_ITEM *);
LIBSTUB(OSSL_CMP_ITAV_create, OSSL_CMP_ITAV *);
LIBSTUB(OSSL_CMP_ITAV_set0, void);
LIBSTUB(OSSL_CMP_ITAV_get0_type, ASN1_OBJECT *);
LIBSTUB(OSSL_CMP_ITAV_get0_value, ASN1_TYPE *);
LIBSTUB(OSSL_CMP_ITAV_push0_stack_item, int);
LIBSTUB(OSSL_CMP_ITAV_free, void);
LIBSTUB(OSSL_CMP_MSG_free, void);
LIBSTUB(EVP_MD_CTX_set_params, int);
LIBSTUB(EVP_MD_CTX_get_params, int);
LIBSTUB(BN_CTX_new_ex, BN_CTX *);
LIBSTUB(BN_CTX_secure_new_ex, BN_CTX *);
LIBSTUB(OPENSSL_thread_stop_ex, void);
LIBSTUB(OSSL_PARAM_locate_const, const OSSL_PARAM *);
LIBSTUB(X509_REQ_set0_distinguishing_id, void);
LIBSTUB(X509_REQ_get0_distinguishing_id, ASN1_OCTET_STRING *);
LIBSTUB(BN_rand_ex, int);
LIBSTUB(BN_priv_rand_ex, int);
LIBSTUB(BN_rand_range_ex, int);
LIBSTUB(BN_priv_rand_range_ex, int);
LIBSTUB(BN_generate_prime_ex2, int);
LIBSTUB(EVP_KEYEXCH_free, void);
LIBSTUB(EVP_KEYEXCH_up_ref, int);
LIBSTUB(EVP_KEYEXCH_fetch, EVP_KEYEXCH *);
LIBSTUB(EVP_PKEY_CTX_set_dh_pad, int);
LIBSTUB(EVP_PKEY_CTX_set_params, int);
LIBSTUB(EVP_KEYMGMT_fetch, EVP_KEYMGMT *);
LIBSTUB(EVP_KEYMGMT_up_ref, int);
LIBSTUB(EVP_KEYMGMT_free, void);
LIBSTUB(EVP_KEYMGMT_get0_provider, const OSSL_PROVIDER *);
LIBSTUB(X509_PUBKEY_dup, X509_PUBKEY *);
LIBSTUB(EVP_MD_get0_name, const char *);
LIBSTUB(EVP_CIPHER_get0_name, const char *);
LIBSTUB(EVP_MD_get0_provider, const OSSL_PROVIDER *);
LIBSTUB(EVP_CIPHER_get0_provider, const OSSL_PROVIDER *);
LIBSTUB(OSSL_PROVIDER_get0_name, const char *);
LIBSTUB(EVP_CIPHER_do_all_provided, void);
LIBSTUB(EVP_MD_do_all_provided, void);
LIBSTUB(EVP_KEYEXCH_get0_provider, OSSL_PROVIDER *);
LIBSTUB(OSSL_PROVIDER_available, int);
LIBSTUB(ERR_new, void);
LIBSTUB(ERR_set_debug, void);
LIBSTUB(ERR_vset_error, void);
LIBSTUB(X509_self_signed, int);
LIBSTUB(OPENSSL_hexstr2buf_ex, int);
LIBSTUB(OPENSSL_buf2hexstr_ex, int);
LIBSTUB(OSSL_PARAM_allocate_from_text, int);
LIBSTUB(EVP_MD_gettable_params, const OSSL_PARAM *);
LIBSTUB(EVP_MD_CTX_settable_params, const OSSL_PARAM *);
LIBSTUB(EVP_MD_CTX_gettable_params, const OSSL_PARAM *);
LIBSTUB(EVP_CIPHER_get_params, int);
LIBSTUB(EVP_CIPHER_CTX_set_params, int);
LIBSTUB(EVP_CIPHER_CTX_get_params, int);
LIBSTUB(EVP_CIPHER_gettable_params, const OSSL_PARAM *);
LIBSTUB(EVP_CIPHER_settable_ctx_params, const OSSL_PARAM *);
LIBSTUB(EVP_CIPHER_gettable_ctx_params, const OSSL_PARAM *);
LIBSTUB(EVP_MD_get_params, int);
LIBSTUB(EVP_MAC_fetch, EVP_MAC *);
LIBSTUB(EVP_MAC_settable_ctx_params, const OSSL_PARAM *);
LIBSTUB(EVP_MAC_CTX_set_params, int);
LIBSTUB(EVP_MAC_CTX_get_params, int);
LIBSTUB(EVP_MAC_gettable_ctx_params, const OSSL_PARAM *);
LIBSTUB(EVP_MAC_free, void);
LIBSTUB(EVP_MAC_up_ref, int);
LIBSTUB(EVP_MAC_get_params, int);
LIBSTUB(EVP_MAC_gettable_params, const OSSL_PARAM *);
LIBSTUB(EVP_MAC_get0_provider, const OSSL_PROVIDER *);
LIBSTUB(EVP_MAC_do_all_provided, void);
LIBSTUB(EVP_MAC_get0_name, const char *);
LIBSTUB(EVP_MD_free, void);
LIBSTUB(EVP_CIPHER_free, void);
LIBSTUB(EVP_KDF_up_ref, int);
LIBSTUB(EVP_KDF_free, void);
LIBSTUB(EVP_KDF_fetch, EVP_KDF *);
LIBSTUB(EVP_KDF_CTX_dup, EVP_KDF_CTX *);
LIBSTUB(EVP_KDF_get0_provider, const OSSL_PROVIDER *);
LIBSTUB(EVP_KDF_get_params, int);
LIBSTUB(EVP_KDF_CTX_get_params, int);
LIBSTUB(EVP_KDF_CTX_set_params, int);
LIBSTUB(EVP_KDF_gettable_params, const OSSL_PARAM *);
LIBSTUB(EVP_KDF_gettable_ctx_params, const OSSL_PARAM *);
LIBSTUB(EVP_KDF_settable_ctx_params, const OSSL_PARAM *);
LIBSTUB(EVP_KDF_do_all_provided, void);
LIBSTUB(EVP_SIGNATURE_free, void);
LIBSTUB(EVP_SIGNATURE_up_ref, int);
LIBSTUB(EVP_SIGNATURE_get0_provider, OSSL_PROVIDER *);
LIBSTUB(EVP_SIGNATURE_fetch, EVP_SIGNATURE *);
LIBSTUB(EVP_PKEY_CTX_set_signature_md, int);
LIBSTUB(EVP_PKEY_CTX_get_signature_md, int);
LIBSTUB(EVP_PKEY_CTX_get_params, int);
LIBSTUB(EVP_PKEY_CTX_gettable_params, const OSSL_PARAM *);
LIBSTUB(EVP_PKEY_CTX_settable_params, const OSSL_PARAM *);
LIBSTUB(EVP_CIPHER_CTX_get_tag_length, int);
LIBSTUB(ERR_get_error_all, unsigned long);
LIBSTUB(ERR_peek_error_func, unsigned long);
LIBSTUB(ERR_peek_error_data, unsigned long);
LIBSTUB(ERR_peek_error_all, unsigned long);
LIBSTUB(ERR_peek_last_error_func, unsigned long);
LIBSTUB(ERR_peek_last_error_data, unsigned long);
LIBSTUB(ERR_peek_last_error_all, unsigned long);
LIBSTUB(EVP_CIPHER_is_a, int);
LIBSTUB(EVP_MAC_is_a, int);
LIBSTUB(EVP_MD_settable_ctx_params, const OSSL_PARAM *);
LIBSTUB(EVP_MD_gettable_ctx_params, const OSSL_PARAM *);
LIBSTUB(OSSL_CMP_CTX_new, OSSL_CMP_CTX *);
LIBSTUB(OSSL_CMP_CTX_free, void);
LIBSTUB(OSSL_CMP_CTX_reinit, int);
LIBSTUB(OSSL_CMP_CTX_set_option, int);
LIBSTUB(OSSL_CMP_CTX_get_option, int);
LIBSTUB(OSSL_CMP_CTX_set_log_cb, int);
LIBSTUB(OSSL_CMP_CTX_print_errors, void);
LIBSTUB(OSSL_CMP_CTX_set1_serverPath, int);
LIBSTUB(OSSL_CMP_CTX_set1_server, int);
LIBSTUB(OSSL_CMP_CTX_set_serverPort, int);
LIBSTUB(OSSL_CMP_CTX_set1_proxy, int);
LIBSTUB(OSSL_CMP_CTX_set1_no_proxy, int);
LIBSTUB(OSSL_CMP_CTX_set_http_cb, int);
LIBSTUB(OSSL_CMP_CTX_set_http_cb_arg, int);
LIBSTUB(OSSL_CMP_CTX_get_http_cb_arg, void *);
LIBSTUB(OSSL_CMP_CTX_set_transfer_cb, int);
LIBSTUB(OSSL_CMP_CTX_set_transfer_cb_arg, int);
LIBSTUB(OSSL_CMP_CTX_get_transfer_cb_arg, void *);
LIBSTUB(OSSL_CMP_CTX_set1_srvCert, int);
LIBSTUB(OSSL_CMP_CTX_set1_expected_sender, int);
LIBSTUB(OSSL_CMP_CTX_set0_trustedStore, int);
LIBSTUB(OSSL_CMP_CTX_get0_trustedStore, X509_STORE *);
LIBSTUB(OSSL_CMP_CTX_set1_untrusted, int);
LIBSTUB(OSSL_CMP_CTX_get0_untrusted, STACK_OF(X509) *);
LIBSTUB(OSSL_CMP_CTX_set1_cert, int);
LIBSTUB(OSSL_CMP_CTX_set1_pkey, int);
LIBSTUB(OSSL_CMP_CTX_build_cert_chain, int);
LIBSTUB(OSSL_CMP_CTX_set1_referenceValue, int);
LIBSTUB(OSSL_CMP_CTX_set1_secretValue, int);
LIBSTUB(OSSL_CMP_CTX_set1_recipient, int);
LIBSTUB(OSSL_CMP_CTX_push0_geninfo_ITAV, int);
LIBSTUB(OSSL_CMP_CTX_set1_extraCertsOut, int);
LIBSTUB(OSSL_CMP_CTX_set0_newPkey, int);
LIBSTUB(OSSL_CMP_CTX_get0_newPkey, EVP_PKEY *);
LIBSTUB(OSSL_CMP_CTX_set1_issuer, int);
LIBSTUB(OSSL_CMP_CTX_set1_subjectName, int);
LIBSTUB(OSSL_CMP_CTX_push1_subjectAltName, int);
LIBSTUB(OSSL_CMP_CTX_set0_reqExtensions, int);
LIBSTUB(OSSL_CMP_CTX_reqExtensions_have_SAN, int);
LIBSTUB(OSSL_CMP_CTX_push0_policy, int);
LIBSTUB(OSSL_CMP_CTX_set1_oldCert, int);
LIBSTUB(OSSL_CMP_CTX_set1_p10CSR, int);
LIBSTUB(OSSL_CMP_CTX_push0_genm_ITAV, int);
LIBSTUB(OSSL_CMP_CTX_set_certConf_cb, int);
LIBSTUB(OSSL_CMP_CTX_set_certConf_cb_arg, int);
LIBSTUB(OSSL_CMP_CTX_get_certConf_cb_arg, void *);
LIBSTUB(OSSL_CMP_CTX_get_status, int);
LIBSTUB(OSSL_CMP_CTX_get0_statusString, OSSL_CMP_PKIFREETEXT *);
LIBSTUB(OSSL_CMP_CTX_get_failInfoCode, int);
LIBSTUB(OSSL_CMP_CTX_get0_newCert, X509 *);
LIBSTUB(OSSL_CMP_CTX_get1_newChain, STACK_OF(X509) *);
LIBSTUB(OSSL_CMP_CTX_get1_caPubs, STACK_OF(X509) *);
LIBSTUB(OSSL_CMP_CTX_get1_extraCertsIn, STACK_OF(X509) *);
LIBSTUB(OSSL_CMP_CTX_set1_transactionID, int);
LIBSTUB(OSSL_CMP_CTX_set1_senderNonce, int);
LIBSTUB(OSSL_CMP_log_open, int);
LIBSTUB(OSSL_CMP_log_close, void);
LIBSTUB(OSSL_CMP_print_to_bio, int);
LIBSTUB(OSSL_CMP_print_errors_cb, void);
LIBSTUB(OSSL_CRMF_CERTID_get0_issuer, const X509_NAME *);
LIBSTUB(OSSL_CRMF_CERTID_get0_serialNumber, const ASN1_INTEGER *);
LIBSTUB(EVP_DigestSignUpdate, int);
LIBSTUB(EVP_DigestVerifyUpdate, int);
LIBSTUB(BN_check_prime, int);
LIBSTUB(EVP_KEYMGMT_is_a, int);
LIBSTUB(EVP_KEYMGMT_do_all_provided, void);
LIBSTUB(EVP_KEYEXCH_is_a, int);
LIBSTUB(EVP_KEYEXCH_do_all_provided, void);
LIBSTUB(EVP_KDF_is_a, int);
LIBSTUB(EVP_MD_is_a, int);
LIBSTUB(EVP_SIGNATURE_is_a, int);
LIBSTUB(EVP_SIGNATURE_do_all_provided, void);
LIBSTUB(EVP_MD_names_do_all, int);
LIBSTUB(EVP_CIPHER_names_do_all, int);
LIBSTUB(EVP_MAC_names_do_all, int);
LIBSTUB(EVP_KEYMGMT_names_do_all, int);
LIBSTUB(EVP_KEYEXCH_names_do_all, int);
LIBSTUB(EVP_KDF_names_do_all, int);
LIBSTUB(EVP_SIGNATURE_names_do_all, int);
LIBSTUB(OSSL_CMP_CTX_snprint_PKIStatus, char *);
LIBSTUB(OSSL_CMP_HDR_get0_transactionID, ASN1_OCTET_STRING *);
LIBSTUB(OSSL_CMP_HDR_get0_recipNonce, ASN1_OCTET_STRING *);
LIBSTUB(X509_LOOKUP_store, X509_LOOKUP_METHOD *);
LIBSTUB(X509_add_cert, int);
LIBSTUB(X509_add_certs, int);
LIBSTUB(X509_STORE_load_file, int);
LIBSTUB(X509_STORE_load_path, int);
LIBSTUB(X509_STORE_load_store, int);
LIBSTUB(EVP_PKEY_fromdata, int);
LIBSTUB(EVP_ASYM_CIPHER_free, void);
LIBSTUB(EVP_ASYM_CIPHER_up_ref, int);
LIBSTUB(EVP_ASYM_CIPHER_get0_provider, OSSL_PROVIDER *);
LIBSTUB(EVP_ASYM_CIPHER_fetch, EVP_ASYM_CIPHER *);
LIBSTUB(EVP_ASYM_CIPHER_is_a, int);
LIBSTUB(EVP_ASYM_CIPHER_do_all_provided, void);
LIBSTUB(EVP_ASYM_CIPHER_names_do_all, int);
LIBSTUB(EVP_PKEY_CTX_set_rsa_padding, int);
LIBSTUB(EVP_PKEY_CTX_get_rsa_padding, int);
LIBSTUB(EVP_PKEY_CTX_set_rsa_mgf1_md, int);
LIBSTUB(EVP_PKEY_CTX_set_rsa_mgf1_md_name, int);
LIBSTUB(EVP_PKEY_CTX_get_rsa_mgf1_md, int);
LIBSTUB(EVP_PKEY_CTX_set_rsa_oaep_md, int);
LIBSTUB(EVP_PKEY_CTX_set_rsa_oaep_md_name, int);
LIBSTUB(EVP_PKEY_CTX_get_rsa_oaep_md, int);
LIBSTUB(EVP_PKEY_CTX_set0_rsa_oaep_label, int);
LIBSTUB(EVP_PKEY_CTX_get0_rsa_oaep_label, int);
LIBSTUB(EVP_PKEY_CTX_get_rsa_mgf1_md_name, int);
LIBSTUB(EVP_PKEY_CTX_get_rsa_oaep_md_name, int);
LIBSTUB(OSSL_ENCODER_up_ref, int);
LIBSTUB(OSSL_ENCODER_free, void);
LIBSTUB(OSSL_ENCODER_fetch, OSSL_ENCODER *);
LIBSTUB(OSSL_ENCODER_is_a, int);
LIBSTUB(OSSL_ENCODER_get0_provider, const OSSL_PROVIDER *);
LIBSTUB(OSSL_ENCODER_do_all_provided, void);
LIBSTUB(OSSL_ENCODER_names_do_all, int);
LIBSTUB(OSSL_ENCODER_settable_ctx_params, const OSSL_PARAM *);
LIBSTUB(OSSL_ENCODER_CTX_new, OSSL_ENCODER_CTX *);
LIBSTUB(OSSL_ENCODER_CTX_set_params, int);
LIBSTUB(OSSL_ENCODER_CTX_free, void);
LIBSTUB(OSSL_ENCODER_get0_properties, const char *);
LIBSTUB(OSSL_ENCODER_to_bio, int);
LIBSTUB(OSSL_ENCODER_CTX_new_for_pkey, OSSL_ENCODER_CTX *);
LIBSTUB(OSSL_ENCODER_CTX_set_cipher, int);
LIBSTUB(OSSL_ENCODER_CTX_set_passphrase, int);
LIBSTUB(OSSL_ENCODER_CTX_set_pem_password_cb, int);
LIBSTUB(OSSL_ENCODER_CTX_set_passphrase_ui, int);
LIBSTUB(PEM_read_bio_X509_PUBKEY, X509_PUBKEY *);
LIBSTUB(PEM_write_bio_X509_PUBKEY, int);
LIBSTUB(d2i_X509_PUBKEY_bio, X509_PUBKEY *);
LIBSTUB(i2d_X509_PUBKEY_bio, int);
LIBSTUB(X509_cmp_timeframe, int);
LIBSTUB(OSSL_CMP_MSG_get0_header, OSSL_CMP_PKIHEADER *);
LIBSTUB(OSSL_CMP_MSG_get_bodytype, int);
LIBSTUB(OSSL_CMP_MSG_update_transactionID, int);
LIBSTUB(OSSL_CMP_CTX_setup_CRM, OSSL_CRMF_MSG *);
LIBSTUB(BIO_f_prefix, const BIO_METHOD *);
LIBSTUB(EVP_PKEY_CTX_new_from_name, EVP_PKEY_CTX *);
LIBSTUB(EVP_PKEY_CTX_new_from_pkey, EVP_PKEY_CTX *);
LIBSTUB(OSSL_SELF_TEST_set_callback, void);
LIBSTUB(OSSL_SELF_TEST_get_callback, void);
LIBSTUB(ASN1_TIME_dup, ASN1_TIME *);
LIBSTUB(ASN1_UTCTIME_dup, ASN1_UTCTIME *);
LIBSTUB(ASN1_GENERALIZEDTIME_dup, ASN1_GENERALIZEDTIME *);
LIBSTUB(RAND_priv_bytes_ex, int);
LIBSTUB(RAND_bytes_ex, int);
LIBSTUB(EVP_PKEY_get_default_digest_name, int);
LIBSTUB(CMS_decrypt_set1_pkey_and_peer, int);
LIBSTUB(CMS_add1_recipient, CMS_RecipientInfo *);
LIBSTUB(CMS_RecipientInfo_kari_set0_pkey_and_peer, int);
LIBSTUB(PKCS8_pkey_add1_attr, int);
LIBSTUB(PKCS8_pkey_add1_attr_by_OBJ, int);
LIBSTUB(EVP_PKEY_private_check, int);
LIBSTUB(EVP_PKEY_pairwise_check, int);
LIBSTUB(ASN1_item_verify_ctx, int);
LIBSTUB(ASN1_item_sign_ex, int);
LIBSTUB(ASN1_item_verify_ex, int);
LIBSTUB(BIO_socket_wait, int);
LIBSTUB(BIO_wait, int);
LIBSTUB(BIO_do_connect_retry, int);
LIBSTUB(OSSL_parse_url, int);
LIBSTUB(OSSL_HTTP_adapt_proxy, const char *);
LIBSTUB(OSSL_HTTP_REQ_CTX_get_resp_len, size_t);
LIBSTUB(OSSL_HTTP_REQ_CTX_set_expected, int);
LIBSTUB(OSSL_HTTP_is_alive, int);
LIBSTUB(OSSL_HTTP_open, OSSL_HTTP_REQ_CTX *);
LIBSTUB(OSSL_HTTP_proxy_connect, int);
LIBSTUB(OSSL_HTTP_set1_request, int);
LIBSTUB(OSSL_HTTP_exchange, BIO *);
LIBSTUB(OSSL_HTTP_get_amiga_1, BIO *);
LIBSTUB(OSSL_HTTP_get_amiga_2, void *);
LIBSTUB(OSSL_HTTP_transfer_amiga_1, BIO *);
LIBSTUB(OSSL_HTTP_transfer_amiga_2, void *);
LIBSTUB(OSSL_HTTP_close, int);
LIBSTUB(ASN1_item_i2d_mem_bio, BIO *);
LIBSTUB(ERR_add_error_txt, void);
LIBSTUB(ERR_add_error_mem_bio, void);
LIBSTUB(X509_STORE_CTX_print_verify_cb, int);
LIBSTUB(X509_STORE_get1_all_certs, STACK_OF(X509) *);
LIBSTUB(OSSL_CMP_validate_msg, int);
LIBSTUB(OSSL_CMP_validate_cert_path, int);
LIBSTUB(EVP_PKEY_CTX_set_ecdh_cofactor_mode, int);
LIBSTUB(EVP_PKEY_CTX_get_ecdh_cofactor_mode, int);
LIBSTUB(EVP_PKEY_CTX_set_ecdh_kdf_type, int);
LIBSTUB(EVP_PKEY_CTX_get_ecdh_kdf_type, int);
LIBSTUB(EVP_PKEY_CTX_set_ecdh_kdf_md, int);
LIBSTUB(EVP_PKEY_CTX_get_ecdh_kdf_md, int);
LIBSTUB(EVP_PKEY_CTX_set_ecdh_kdf_outlen, int);
LIBSTUB(EVP_PKEY_CTX_get_ecdh_kdf_outlen, int);
LIBSTUB(EVP_PKEY_CTX_set0_ecdh_kdf_ukm, int);
LIBSTUB(EVP_PKEY_CTX_get0_ecdh_kdf_ukm, int);
LIBSTUB(EVP_PKEY_CTX_set_rsa_pss_saltlen, int);
LIBSTUB(EVP_PKEY_CTX_get_rsa_pss_saltlen, int);
LIBSTUB(d2i_ISSUER_SIGN_TOOL, ISSUER_SIGN_TOOL *);
LIBSTUB(i2d_ISSUER_SIGN_TOOL, int);
LIBSTUB(ISSUER_SIGN_TOOL_free, void);
LIBSTUB(ISSUER_SIGN_TOOL_new, ISSUER_SIGN_TOOL *);
LIBSTUB(ISSUER_SIGN_TOOL_it, const ASN1_ITEM *);
LIBSTUB(OSSL_SELF_TEST_new, OSSL_SELF_TEST *);
LIBSTUB(OSSL_SELF_TEST_free, void);
LIBSTUB(OSSL_SELF_TEST_onbegin, void);
LIBSTUB(OSSL_SELF_TEST_oncorrupt_byte, int);
LIBSTUB(OSSL_SELF_TEST_onend, void);
LIBSTUB(OSSL_PROVIDER_set_default_search_path, int);
LIBSTUB(X509_digest_sig, ASN1_OCTET_STRING *);
LIBSTUB(OSSL_CMP_MSG_dup, OSSL_CMP_MSG *);
LIBSTUB(OSSL_CMP_ITAV_dup, OSSL_CMP_ITAV *);
LIBSTUB(d2i_OSSL_CMP_PKISI, OSSL_CMP_PKISI *);
LIBSTUB(i2d_OSSL_CMP_PKISI, int);
LIBSTUB(OSSL_CMP_PKISI_free, void);
LIBSTUB(OSSL_CMP_PKISI_new, OSSL_CMP_PKISI *);
LIBSTUB(OSSL_CMP_PKISI_it, const ASN1_ITEM *);
LIBSTUB(OSSL_CMP_PKISI_dup, OSSL_CMP_PKISI *);
LIBSTUB(OSSL_CMP_snprint_PKIStatusInfo, char *);
LIBSTUB(OSSL_CMP_STATUSINFO_new, OSSL_CMP_PKISI *);
LIBSTUB(d2i_OSSL_CMP_MSG_bio, OSSL_CMP_MSG *);
LIBSTUB(i2d_OSSL_CMP_MSG_bio, int);
LIBSTUB(OSSL_CMP_SRV_process_request, OSSL_CMP_MSG *);
LIBSTUB(OSSL_CMP_CTX_server_perform, OSSL_CMP_MSG *);
LIBSTUB(OSSL_CMP_SRV_CTX_new, OSSL_CMP_SRV_CTX *);
LIBSTUB(OSSL_CMP_SRV_CTX_free, void);
LIBSTUB(OSSL_CMP_SRV_CTX_init, int);
LIBSTUB(OSSL_CMP_SRV_CTX_get0_cmp_ctx, OSSL_CMP_CTX *);
LIBSTUB(OSSL_CMP_SRV_CTX_get0_custom_ctx, void *);
LIBSTUB(OSSL_CMP_SRV_CTX_set_send_unprotected_errors, int);
LIBSTUB(OSSL_CMP_SRV_CTX_set_accept_unprotected, int);
LIBSTUB(OSSL_CMP_SRV_CTX_set_accept_raverified, int);
LIBSTUB(OSSL_CMP_SRV_CTX_set_grant_implicit_confirm, int);
LIBSTUB(OSSL_CMP_exec_certreq, X509 *);
LIBSTUB(OSSL_CMP_try_certreq, int);
LIBSTUB(OSSL_CMP_certConf_cb, int);
LIBSTUB(OSSL_CMP_exec_RR_ses, int);
LIBSTUB(OSSL_CMP_exec_GENM_ses, STACK_OF(OSSL_CMP_ITAV) *);
LIBSTUB(OSSL_CMP_MSG_http_perform, OSSL_CMP_MSG *);
LIBSTUB(OSSL_CMP_MSG_read, OSSL_CMP_MSG *);
LIBSTUB(OSSL_CMP_MSG_write, int);
LIBSTUB(EVP_PKEY_Q_vkeygen, EVP_PKEY *);
LIBSTUB(EVP_PKEY_generate, int);
LIBSTUB(EVP_PKEY_CTX_set_rsa_keygen_bits, int);
LIBSTUB(EVP_PKEY_CTX_set_rsa_keygen_pubexp, int);
LIBSTUB(EVP_PKEY_CTX_set1_rsa_keygen_pubexp, int);
LIBSTUB(EVP_PKEY_CTX_set_rsa_keygen_primes, int);
LIBSTUB(NCONF_new_ex, CONF *);
LIBSTUB(CONF_modules_load_file_ex, int);
LIBSTUB(OSSL_LIB_CTX_load_config, int);
LIBSTUB(OSSL_PARAM_BLD_to_param, OSSL_PARAM *);
LIBSTUB(OSSL_PARAM_BLD_push_int, int);
LIBSTUB(OSSL_PARAM_BLD_push_uint, int);
LIBSTUB(OSSL_PARAM_BLD_push_long, int);
LIBSTUB(OSSL_PARAM_BLD_push_ulong, int);
LIBSTUB(OSSL_PARAM_BLD_push_int32, int);
LIBSTUB(OSSL_PARAM_BLD_push_uint32, int);
LIBSTUB(OSSL_PARAM_BLD_push_int64, int);
LIBSTUB(OSSL_PARAM_BLD_push_uint64, int);
LIBSTUB(OSSL_PARAM_BLD_push_size_t, int);
LIBSTUB(OSSL_PARAM_BLD_push_double, int);
LIBSTUB(OSSL_PARAM_BLD_push_BN, int);
LIBSTUB(OSSL_PARAM_BLD_push_BN_pad, int);
LIBSTUB(OSSL_PARAM_BLD_push_utf8_string, int);
LIBSTUB(OSSL_PARAM_BLD_push_utf8_ptr, int);
LIBSTUB(OSSL_PARAM_BLD_push_octet_string, int);
LIBSTUB(OSSL_PARAM_BLD_push_octet_ptr, int);
LIBSTUB(OSSL_PARAM_BLD_new, OSSL_PARAM_BLD *);
LIBSTUB(OSSL_PARAM_BLD_free, void);
LIBSTUB(EVP_PKEY_set_type_by_keymgmt, int);
LIBSTUB(OCSP_RESPID_set_by_key_ex, int);
LIBSTUB(OCSP_RESPID_match_ex, int);
LIBSTUB(SRP_create_verifier_ex, char *);
LIBSTUB(SRP_create_verifier_BN_ex, int);
LIBSTUB(SRP_Calc_B_ex, BIGNUM *);
LIBSTUB(SRP_Calc_u_ex, BIGNUM *);
LIBSTUB(SRP_Calc_x_ex, BIGNUM *);
LIBSTUB(SRP_Calc_client_key_ex, BIGNUM *);
LIBSTUB(EVP_PKEY_gettable_params, const OSSL_PARAM *);
LIBSTUB(EVP_PKEY_get_int_param, int);
LIBSTUB(EVP_PKEY_get_size_t_param, int);
LIBSTUB(EVP_PKEY_get_bn_param, int);
LIBSTUB(EVP_PKEY_get_utf8_string_param, int);
LIBSTUB(EVP_PKEY_get_octet_string_param, int);
LIBSTUB(EVP_PKEY_is_a, int);
LIBSTUB(EVP_PKEY_can_sign, int);
LIBSTUB(X509_STORE_CTX_new_ex, X509_STORE_CTX *);
LIBSTUB(X509_STORE_CTX_verify, int);
LIBSTUB(CT_POLICY_EVAL_CTX_new_ex, CT_POLICY_EVAL_CTX *);
LIBSTUB(CTLOG_new_ex, CTLOG *);
LIBSTUB(CTLOG_new_from_base64_ex, int);
LIBSTUB(CTLOG_STORE_new_ex, CTLOG_STORE *);
LIBSTUB(EVP_PKEY_set_ex_data, int);
LIBSTUB(EVP_PKEY_get_ex_data, void *);
LIBSTUB(EVP_PKEY_CTX_set_group_name, int);
LIBSTUB(EVP_PKEY_CTX_get_group_name, int);
LIBSTUB(EVP_PKEY_CTX_set_ec_paramgen_curve_nid, int);
LIBSTUB(d2i_PrivateKey_ex, EVP_PKEY *);
LIBSTUB(d2i_AutoPrivateKey_ex, EVP_PKEY *);
LIBSTUB(d2i_PrivateKey_ex_bio, EVP_PKEY *);
LIBSTUB(PEM_read_bio_PrivateKey_ex, EVP_PKEY *);
LIBSTUB(EVP_PKEY_CTX_set_dsa_paramgen_bits, int);
LIBSTUB(EVP_PKEY_CTX_set_dsa_paramgen_q_bits, int);
LIBSTUB(EVP_PKEY_CTX_set_dsa_paramgen_md_props, int);
LIBSTUB(EVP_PKEY_CTX_set_dsa_paramgen_gindex, int);
LIBSTUB(EVP_PKEY_CTX_set_dsa_paramgen_type, int);
LIBSTUB(EVP_PKEY_CTX_set_dsa_paramgen_seed, int);
LIBSTUB(EVP_PKEY_CTX_set_dsa_paramgen_md, int);
LIBSTUB(EVP_PKEY_CTX_set_dh_paramgen_type, int);
LIBSTUB(EVP_PKEY_CTX_set_dh_paramgen_gindex, int);
LIBSTUB(EVP_PKEY_CTX_set_dh_paramgen_seed, int);
LIBSTUB(EVP_PKEY_CTX_set_dh_paramgen_prime_len, int);
LIBSTUB(EVP_PKEY_CTX_set_dh_paramgen_subprime_len, int);
LIBSTUB(EVP_PKEY_CTX_set_dh_paramgen_generator, int);
LIBSTUB(EVP_PKEY_CTX_set_dh_nid, int);
LIBSTUB(EVP_PKEY_CTX_set_dh_rfc5114, int);
LIBSTUB(EVP_PKEY_CTX_set_dhx_rfc5114, int);
LIBSTUB(X509_VERIFY_PARAM_get0_host, char *);
LIBSTUB(X509_VERIFY_PARAM_get0_email, char *);
LIBSTUB(X509_VERIFY_PARAM_get1_ip_asc, char *);
LIBSTUB(OSSL_PARAM_modified, int);
LIBSTUB(OSSL_PARAM_set_all_unmodified, void);
LIBSTUB(EVP_RAND_fetch, EVP_RAND *);
LIBSTUB(EVP_RAND_up_ref, int);
LIBSTUB(EVP_RAND_free, void);
LIBSTUB(EVP_RAND_get0_name, const char *);
LIBSTUB(EVP_RAND_is_a, int);
LIBSTUB(EVP_RAND_get0_provider, const OSSL_PROVIDER *);
LIBSTUB(EVP_RAND_get_params, int);
LIBSTUB(EVP_RAND_CTX_new, EVP_RAND_CTX *);
LIBSTUB(EVP_RAND_CTX_free, void);
LIBSTUB(EVP_RAND_CTX_get0_rand, EVP_RAND *);
LIBSTUB(EVP_RAND_CTX_get_params, int);
LIBSTUB(EVP_RAND_CTX_set_params, int);
LIBSTUB(EVP_RAND_gettable_params, const OSSL_PARAM *);
LIBSTUB(EVP_RAND_gettable_ctx_params, const OSSL_PARAM *);
LIBSTUB(EVP_RAND_settable_ctx_params, const OSSL_PARAM *);
LIBSTUB(EVP_RAND_do_all_provided, void);
LIBSTUB(EVP_RAND_names_do_all, int);
LIBSTUB(EVP_RAND_instantiate, int);
LIBSTUB(EVP_RAND_uninstantiate, int);
LIBSTUB(EVP_RAND_generate, int);
LIBSTUB(EVP_RAND_reseed, int);
LIBSTUB(EVP_RAND_nonce, int);
LIBSTUB(EVP_RAND_enable_locking, int);
LIBSTUB(EVP_RAND_verify_zeroization, int);
LIBSTUB(EVP_RAND_get_strength, unsigned int);
LIBSTUB(EVP_RAND_get_state, int);
LIBSTUB(EVP_default_properties_is_fips_enabled, int);
LIBSTUB(EVP_default_properties_enable_fips, int);
LIBSTUB(EVP_PKEY_new_raw_private_key_ex, EVP_PKEY *);
LIBSTUB(EVP_PKEY_new_raw_public_key_ex, EVP_PKEY *);
LIBSTUB(OSSL_PARAM_BLD_push_time_t, int);
LIBSTUB(OSSL_PARAM_construct_time_t_amiga, void);
LIBSTUB(OSSL_PARAM_get_time_t, int);
LIBSTUB(OSSL_PARAM_set_time_t, int);
LIBSTUB(OSSL_STORE_attach, OSSL_STORE_CTX *);
LIBSTUB(OSSL_STORE_LOADER_set_attach, int);
LIBSTUB(EVP_PKEY_CTX_set_rsa_pss_keygen_saltlen, int);
LIBSTUB(EVP_PKEY_CTX_set_rsa_pss_keygen_mgf1_md, int);
LIBSTUB(EVP_PKEY_CTX_set_rsa_pss_keygen_mgf1_md_name, int);
LIBSTUB(OSSL_PROVIDER_do_all, int);
LIBSTUB(EC_GROUP_get_field_type, int);
LIBSTUB(X509_PUBKEY_eq, int);
LIBSTUB(EVP_PKEY_eq, int);
LIBSTUB(EVP_PKEY_parameters_eq, int);
LIBSTUB(OSSL_PROVIDER_query_operation, const OSSL_ALGORITHM *);
LIBSTUB(OSSL_PROVIDER_unquery_operation, void);
LIBSTUB(OSSL_PROVIDER_get0_provider_ctx, void *);
LIBSTUB(OSSL_PROVIDER_get_capabilities, int);
LIBSTUB(EC_GROUP_new_by_curve_name_ex, EC_GROUP *);
LIBSTUB(EC_KEY_new_ex, EC_KEY *);
LIBSTUB(EC_KEY_new_by_curve_name_ex, EC_KEY *);
LIBSTUB(OSSL_LIB_CTX_set0_default, OSSL_LIB_CTX *);
LIBSTUB(PEM_X509_INFO_read_bio_ex, STACK_OF(X509_INFO) *);
LIBSTUB(X509_REQ_verify_ex, int);
LIBSTUB(X509_new_ex, X509 *);
LIBSTUB(X509_LOOKUP_ctrl_ex, int);
LIBSTUB(X509_load_cert_file_ex, int);
LIBSTUB(X509_load_cert_crl_file_ex, int);
LIBSTUB(X509_LOOKUP_by_subject_ex, int);
LIBSTUB(X509_STORE_load_file_ex, int);
LIBSTUB(X509_STORE_load_store_ex, int);
LIBSTUB(X509_STORE_load_locations_ex, int);
LIBSTUB(X509_STORE_set_default_paths_ex, int);
LIBSTUB(X509_build_chain, STACK_OF(X509) *);
LIBSTUB(X509V3_set_issuer_pkey, int);
LIBSTUB(i2s_ASN1_UTF8STRING, char *);
LIBSTUB(s2i_ASN1_UTF8STRING, ASN1_UTF8STRING *);
LIBSTUB(OSSL_STORE_open_ex, OSSL_STORE_CTX *);
LIBSTUB(OSSL_DECODER_fetch, OSSL_DECODER *);
LIBSTUB(OSSL_DECODER_up_ref, int);
LIBSTUB(OSSL_DECODER_free, void);
LIBSTUB(OSSL_DECODER_get0_provider, const OSSL_PROVIDER *);
LIBSTUB(OSSL_DECODER_get0_properties, const char *);
LIBSTUB(OSSL_DECODER_is_a, int);
LIBSTUB(OSSL_DECODER_do_all_provided, void);
LIBSTUB(OSSL_DECODER_names_do_all, int);
LIBSTUB(OSSL_DECODER_settable_ctx_params, const OSSL_PARAM *);
LIBSTUB(OSSL_DECODER_CTX_new, OSSL_DECODER_CTX *);
LIBSTUB(OSSL_DECODER_CTX_set_params, int);
LIBSTUB(OSSL_DECODER_CTX_free, void);
LIBSTUB(OSSL_DECODER_CTX_set_passphrase, int);
LIBSTUB(OSSL_DECODER_CTX_set_pem_password_cb, int);
LIBSTUB(OSSL_DECODER_CTX_set_passphrase_ui, int);
LIBSTUB(OSSL_DECODER_from_bio, int);
LIBSTUB(OSSL_DECODER_CTX_add_decoder, int);
LIBSTUB(OSSL_DECODER_CTX_add_extra, int);
LIBSTUB(OSSL_DECODER_CTX_get_num_decoders, int);
LIBSTUB(OSSL_DECODER_CTX_set_input_type, int);
LIBSTUB(OSSL_DECODER_export, int);
LIBSTUB(OSSL_DECODER_INSTANCE_get_decoder, OSSL_DECODER *);
LIBSTUB(OSSL_DECODER_INSTANCE_get_decoder_ctx, void *);
LIBSTUB(OSSL_DECODER_gettable_params, const OSSL_PARAM *);
LIBSTUB(OSSL_DECODER_get_params, int);
LIBSTUB(OSSL_DECODER_CTX_new_for_pkey, OSSL_DECODER_CTX *);
LIBSTUB(OSSL_DECODER_CTX_set_construct, int);
LIBSTUB(OSSL_DECODER_CTX_set_construct_data, int);
LIBSTUB(OSSL_DECODER_CTX_set_cleanup, int);
LIBSTUB(OSSL_DECODER_CTX_get_construct, OSSL_DECODER_CONSTRUCT *);
LIBSTUB(OSSL_DECODER_CTX_get_construct_data, void *);
LIBSTUB(OSSL_DECODER_CTX_get_cleanup, OSSL_DECODER_CLEANUP *);
LIBSTUB(RAND_get0_primary, EVP_RAND_CTX *);
LIBSTUB(RAND_get0_public, EVP_RAND_CTX *);
LIBSTUB(RAND_get0_private, EVP_RAND_CTX *);
LIBSTUB(PKCS12_SAFEBAG_get0_bag_obj, const ASN1_TYPE *);
LIBSTUB(PKCS12_SAFEBAG_get0_bag_type, const ASN1_OBJECT *);
LIBSTUB(PKCS12_SAFEBAG_create_secret, PKCS12_SAFEBAG *);
LIBSTUB(PKCS12_add1_attr_by_NID, int);
LIBSTUB(PKCS12_add1_attr_by_txt, int);
LIBSTUB(PKCS12_add_secret, PKCS12_SAFEBAG *);
LIBSTUB(SMIME_write_ASN1_ex, int);
LIBSTUB(SMIME_read_ASN1_ex, ASN1_VALUE *);
LIBSTUB(CMS_ContentInfo_new_ex, CMS_ContentInfo *);
LIBSTUB(SMIME_read_CMS_ex, CMS_ContentInfo *);
LIBSTUB(CMS_sign_ex, CMS_ContentInfo *);
LIBSTUB(CMS_data_create_ex, CMS_ContentInfo *);
LIBSTUB(CMS_digest_create_ex, CMS_ContentInfo *);
LIBSTUB(CMS_EncryptedData_encrypt_ex, CMS_ContentInfo *);
LIBSTUB(CMS_encrypt_ex, CMS_ContentInfo *);
LIBSTUB(CMS_EnvelopedData_create_ex, CMS_ContentInfo *);
LIBSTUB(CMS_ReceiptRequest_create0_ex, CMS_ReceiptRequest *);
LIBSTUB(EVP_SignFinal_ex, int);
LIBSTUB(EVP_VerifyFinal_ex, int);
LIBSTUB(EVP_DigestSignInit_ex, int);
LIBSTUB(EVP_DigestVerifyInit_ex, int);
LIBSTUB(PKCS7_new_ex, PKCS7 *);
LIBSTUB(PKCS7_sign_ex, PKCS7 *);
LIBSTUB(PKCS7_encrypt_ex, PKCS7 *);
LIBSTUB(SMIME_read_PKCS7_ex, PKCS7 *);
LIBSTUB(OSSL_PROVIDER_self_test, int);
LIBSTUB(EVP_PKEY_CTX_set_tls1_prf_md, int);
LIBSTUB(EVP_PKEY_CTX_set1_tls1_prf_secret, int);
LIBSTUB(EVP_PKEY_CTX_add1_tls1_prf_seed, int);
LIBSTUB(EVP_PKEY_CTX_set_hkdf_md, int);
LIBSTUB(EVP_PKEY_CTX_set1_hkdf_salt, int);
LIBSTUB(EVP_PKEY_CTX_set1_hkdf_key, int);
LIBSTUB(EVP_PKEY_CTX_add1_hkdf_info, int);
LIBSTUB(EVP_PKEY_CTX_set_hkdf_mode, int);
LIBSTUB(EVP_PKEY_CTX_set1_pbe_pass, int);
LIBSTUB(EVP_PKEY_CTX_set1_scrypt_salt, int);
LIBSTUB(EVP_PKEY_CTX_set_scrypt_N, int);
LIBSTUB(EVP_PKEY_CTX_set_scrypt_r, int);
LIBSTUB(EVP_PKEY_CTX_set_scrypt_p, int);
LIBSTUB(EVP_PKEY_CTX_set_scrypt_maxmem_bytes, int);
LIBSTUB(EVP_PKEY_CTX_set_dh_kdf_type, int);
LIBSTUB(EVP_PKEY_CTX_get_dh_kdf_type, int);
LIBSTUB(EVP_PKEY_CTX_set0_dh_kdf_oid, int);
LIBSTUB(EVP_PKEY_CTX_get0_dh_kdf_oid, int);
LIBSTUB(EVP_PKEY_CTX_set_dh_kdf_md, int);
LIBSTUB(EVP_PKEY_CTX_get_dh_kdf_md, int);
LIBSTUB(EVP_PKEY_CTX_set_dh_kdf_outlen, int);
LIBSTUB(EVP_PKEY_CTX_get_dh_kdf_outlen, int);
LIBSTUB(EVP_PKEY_CTX_set0_dh_kdf_ukm, int);
LIBSTUB(EVP_PKEY_CTX_get0_dh_kdf_ukm, int);
LIBSTUB(EVP_CIPHER_CTX_get_updated_iv, int);
LIBSTUB(EVP_CIPHER_CTX_get_original_iv, int);
LIBSTUB(EVP_KEYMGMT_gettable_params, const OSSL_PARAM *);
LIBSTUB(EVP_KEYMGMT_settable_params, const OSSL_PARAM *);
LIBSTUB(EVP_KEYMGMT_gen_settable_params, const OSSL_PARAM *);
LIBSTUB(EVP_SIGNATURE_gettable_ctx_params, const OSSL_PARAM *);
LIBSTUB(EVP_SIGNATURE_settable_ctx_params, const OSSL_PARAM *);
LIBSTUB(EVP_KEYEXCH_gettable_ctx_params, const OSSL_PARAM *);
LIBSTUB(EVP_KEYEXCH_settable_ctx_params, const OSSL_PARAM *);
LIBSTUB(d2i_PUBKEY_ex, EVP_PKEY *);
LIBSTUB(OSSL_STORE_INFO_new_PUBKEY, OSSL_STORE_INFO *);
LIBSTUB(OSSL_STORE_INFO_get0_PUBKEY, EVP_PKEY *);
LIBSTUB(OSSL_STORE_INFO_get1_PUBKEY, EVP_PKEY *);
LIBSTUB(PEM_read_bio_PUBKEY_ex, EVP_PKEY *);
LIBSTUB(PEM_read_bio_Parameters_ex, EVP_PKEY *);
LIBSTUB(EC_GROUP_new_from_params, EC_GROUP *);
LIBSTUB(OSSL_STORE_LOADER_set_open_ex, int);
LIBSTUB(OSSL_STORE_LOADER_fetch, OSSL_STORE_LOADER *);
LIBSTUB(OSSL_STORE_LOADER_up_ref, int);
LIBSTUB(OSSL_STORE_LOADER_get0_provider, const OSSL_PROVIDER *);
LIBSTUB(OSSL_STORE_LOADER_get0_properties, const char *);
LIBSTUB(OSSL_STORE_LOADER_is_a, int);
LIBSTUB(OSSL_STORE_LOADER_do_all_provided, void);
LIBSTUB(OSSL_STORE_LOADER_names_do_all, int);
LIBSTUB(OSSL_PARAM_get_utf8_string_ptr, int);
LIBSTUB(OSSL_PARAM_get_octet_string_ptr, int);
LIBSTUB(OSSL_DECODER_CTX_set_passphrase_cb, int);
LIBSTUB(EVP_PKEY_CTX_set_mac_key, int);
LIBSTUB(OSSL_STORE_INFO_new, OSSL_STORE_INFO *);
LIBSTUB(OSSL_STORE_INFO_get0_data, void *);
LIBSTUB(EVP_PKCS82PKEY_ex, EVP_PKEY *);
LIBSTUB(EVP_PKEY_CTX_set1_id, int);
LIBSTUB(EVP_PKEY_CTX_get1_id, int);
LIBSTUB(EVP_PKEY_CTX_get1_id_len, int);
LIBSTUB(CMS_AuthEnvelopedData_create, CMS_ContentInfo *);
LIBSTUB(CMS_AuthEnvelopedData_create_ex, CMS_ContentInfo *);
LIBSTUB(EVP_PKEY_CTX_set_ec_param_enc, int);
LIBSTUB(EVP_PKEY_get0_type_name, const char *);
LIBSTUB(EVP_KEYMGMT_get0_name, const char *);
LIBSTUB(EVP_KEM_free, void);
LIBSTUB(EVP_KEM_up_ref, int);
LIBSTUB(EVP_KEM_get0_provider, OSSL_PROVIDER *);
LIBSTUB(EVP_KEM_fetch, EVP_KEM *);
LIBSTUB(EVP_KEM_is_a, int);
LIBSTUB(EVP_KEM_do_all_provided, void);
LIBSTUB(EVP_KEM_names_do_all, int);
LIBSTUB(EVP_PKEY_encapsulate_init, int);
LIBSTUB(EVP_PKEY_encapsulate, int);
LIBSTUB(EVP_PKEY_decapsulate_init, int);
LIBSTUB(EVP_PKEY_decapsulate, int);
LIBSTUB(EVP_PKEY_CTX_set_kem_op, int);
LIBSTUB(OSSL_ENCODER_gettable_params, const OSSL_PARAM *);
LIBSTUB(OSSL_ENCODER_get_params, int);
LIBSTUB(OSSL_ENCODER_CTX_set_output_type, int);
LIBSTUB(OSSL_ENCODER_CTX_add_encoder, int);
LIBSTUB(OSSL_ENCODER_CTX_add_extra, int);
LIBSTUB(OSSL_ENCODER_CTX_get_num_encoders, int);
LIBSTUB(OSSL_ENCODER_CTX_set_selection, int);
LIBSTUB(OSSL_ENCODER_INSTANCE_get_encoder, OSSL_ENCODER *);
LIBSTUB(OSSL_ENCODER_INSTANCE_get_encoder_ctx, void *);
LIBSTUB(OSSL_ENCODER_INSTANCE_get_output_type, const char *);
LIBSTUB(OSSL_ENCODER_CTX_set_construct, int);
LIBSTUB(OSSL_ENCODER_CTX_set_construct_data, int);
LIBSTUB(OSSL_ENCODER_CTX_set_cleanup, int);
LIBSTUB(OSSL_ENCODER_CTX_set_passphrase_cb, int);
LIBSTUB(EVP_PKEY_type_names_do_all, int);
LIBSTUB(OSSL_DECODER_INSTANCE_get_input_type, const char *);
LIBSTUB(EVP_ASYM_CIPHER_gettable_ctx_params, const OSSL_PARAM *);
LIBSTUB(EVP_ASYM_CIPHER_settable_ctx_params, const OSSL_PARAM *);
LIBSTUB(EVP_KEM_gettable_ctx_params, const OSSL_PARAM *);
LIBSTUB(EVP_KEM_settable_ctx_params, const OSSL_PARAM *);
LIBSTUB(PKCS7_type_is_other, int);
LIBSTUB(PKCS7_get_octet_string, ASN1_OCTET_STRING *);
LIBSTUB(OSSL_DECODER_from_data, int);
LIBSTUB(OSSL_ENCODER_to_data, int);
LIBSTUB(EVP_PKEY_CTX_get0_libctx, OSSL_LIB_CTX *);
LIBSTUB(EVP_PKEY_CTX_get0_propq, const char *);
LIBSTUB(OSSL_DECODER_CTX_set_selection, int);
LIBSTUB(OSSL_DECODER_CTX_set_input_structure, int);
LIBSTUB(OSSL_DECODER_INSTANCE_get_input_structure, const char *);
LIBSTUB(OSSL_ENCODER_CTX_set_output_structure, int);
LIBSTUB(OSSL_ENCODER_INSTANCE_get_output_structure, const char *);
LIBSTUB(PEM_write_bio_PrivateKey_ex, int);
LIBSTUB(PEM_write_bio_PUBKEY_ex, int);
LIBSTUB(EVP_PKEY_get_group_name, int);
LIBSTUB(CRYPTO_atomic_or, int);
LIBSTUB(CRYPTO_atomic_load, int);
LIBSTUB(EVP_PKEY_CTX_set_rsa_pss_keygen_md, int);
LIBSTUB(EVP_PKEY_CTX_set_rsa_pss_keygen_md_name, int);
LIBSTUB(EVP_PKEY_settable_params, const OSSL_PARAM *);
LIBSTUB(EVP_PKEY_set_params, int);
LIBSTUB(EVP_PKEY_set_int_param, int);
LIBSTUB(EVP_PKEY_set_size_t_param, int);
LIBSTUB(EVP_PKEY_set_bn_param, int);
LIBSTUB(EVP_PKEY_set_utf8_string_param, int);
LIBSTUB(EVP_PKEY_set_octet_string_param, int);
LIBSTUB(EVP_PKEY_get_ec_point_conv_form, int);
LIBSTUB(EVP_PKEY_get_field_type, int);
LIBSTUB(EVP_PKEY_get_params, int);
LIBSTUB(EVP_PKEY_fromdata_init, int);
LIBSTUB(EVP_PKEY_fromdata_settable, const OSSL_PARAM *);
LIBSTUB(EVP_PKEY_param_check_quick, int);
LIBSTUB(EVP_PKEY_public_check_quick, int);
LIBSTUB(EVP_PKEY_CTX_is_a, int);
LIBSTUB(EVP_CIPHER_CTX_settable_params, const OSSL_PARAM *);
LIBSTUB(EVP_CIPHER_CTX_gettable_params, const OSSL_PARAM *);
LIBSTUB(EVP_KDF_CTX_gettable_params, const OSSL_PARAM *);
LIBSTUB(EVP_KDF_CTX_settable_params, const OSSL_PARAM *);
LIBSTUB(EVP_MAC_CTX_gettable_params, const OSSL_PARAM *);
LIBSTUB(EVP_MAC_CTX_settable_params, const OSSL_PARAM *);
LIBSTUB(EVP_RAND_CTX_gettable_params, const OSSL_PARAM *);
LIBSTUB(EVP_RAND_CTX_settable_params, const OSSL_PARAM *);
LIBSTUB(RAND_set_DRBG_type, int);
LIBSTUB(RAND_set_seed_source_type, int);
LIBSTUB(BN_mod_exp_mont_consttime_x2, int);
LIBSTUB(BIO_f_readbuffer, const BIO_METHOD *);
LIBSTUB(OSSL_ESS_check_signing_certs, int);
LIBSTUB(OSSL_ESS_signing_cert_new_init, ESS_SIGNING_CERT *);
LIBSTUB(OSSL_ESS_signing_cert_v2_new_init, ESS_SIGNING_CERT_V2 *);
LIBSTUB(ESS_SIGNING_CERT_it, const ASN1_ITEM *);
LIBSTUB(ESS_SIGNING_CERT_V2_it, const ASN1_ITEM *);
LIBSTUB(EVP_Q_digest, int);
LIBSTUB(EVP_DigestInit_ex2, int);
LIBSTUB(EVP_EncryptInit_ex2, int);
LIBSTUB(EVP_DecryptInit_ex2, int);
LIBSTUB(EVP_CipherInit_ex2, int);
LIBSTUB(EVP_PKEY_sign_init_ex, int);
LIBSTUB(EVP_PKEY_verify_init_ex, int);
LIBSTUB(EVP_PKEY_verify_recover_init_ex, int);
LIBSTUB(EVP_PKEY_encrypt_init_ex, int);
LIBSTUB(EVP_PKEY_decrypt_init_ex, int);
LIBSTUB(EVP_PKEY_derive_init_ex, int);
LIBSTUB(TS_RESP_CTX_new_ex, TS_RESP_CTX *);
LIBSTUB(X509_REQ_new_ex, X509_REQ *);
LIBSTUB(EVP_PKEY_dup, EVP_PKEY *);
LIBSTUB(RSA_PSS_PARAMS_dup, RSA_PSS_PARAMS *);
LIBSTUB(EVP_PKEY_derive_set_peer_ex, int);
LIBSTUB(OSSL_DECODER_get0_name, const char *);
LIBSTUB(OSSL_ENCODER_get0_name, const char *);
LIBSTUB(OSSL_DECODER_get0_description, const char *);
LIBSTUB(OSSL_ENCODER_get0_description, const char *);
LIBSTUB(OSSL_STORE_LOADER_get0_description, const char *);
LIBSTUB(EVP_MD_get0_description, const char *);
LIBSTUB(EVP_CIPHER_get0_description, const char *);
LIBSTUB(EVP_MAC_get0_description, const char *);
LIBSTUB(EVP_RAND_get0_description, const char *);
LIBSTUB(EVP_PKEY_get0_description, const char *);
LIBSTUB(EVP_KEYMGMT_get0_description, const char *);
LIBSTUB(EVP_SIGNATURE_get0_description, const char *);
LIBSTUB(EVP_ASYM_CIPHER_get0_description, const char *);
LIBSTUB(EVP_KEM_get0_description, const char *);
LIBSTUB(EVP_KEYEXCH_get0_description, const char *);
LIBSTUB(EVP_KDF_get0_description, const char *);
LIBSTUB(OPENSSL_sk_find_all, int);
LIBSTUB(X509_CRL_new_ex, X509_CRL *);
LIBSTUB(OSSL_PARAM_dup, OSSL_PARAM *);
LIBSTUB(OSSL_PARAM_merge, OSSL_PARAM *);
LIBSTUB(OSSL_PARAM_free, void);
LIBSTUB(EVP_PKEY_todata, int);
LIBSTUB(EVP_PKEY_export, int);
LIBSTUB(EVP_MD_CTX_get0_md, const EVP_MD *);
LIBSTUB(EVP_MD_CTX_get1_md, EVP_MD *);
LIBSTUB(EVP_CIPHER_CTX_get0_cipher, const EVP_CIPHER *);
LIBSTUB(EVP_CIPHER_CTX_get1_cipher, EVP_CIPHER *);
LIBSTUB(OSSL_LIB_CTX_get0_global_default, OSSL_LIB_CTX *);
LIBSTUB(EVP_SIGNATURE_get0_name, const char *);
LIBSTUB(EVP_ASYM_CIPHER_get0_name, const char *);
LIBSTUB(EVP_KEM_get0_name, const char *);
LIBSTUB(EVP_KEYEXCH_get0_name, const char *);
LIBSTUB(PKCS5_v2_PBE_keyivgen_ex, int);
LIBSTUB(EVP_PBE_scrypt_amiga_1, int);
LIBSTUB(EVP_PBE_scrypt_amiga_2, void *);
LIBSTUB(EVP_PBE_scrypt_ex_amiga_2, void *);
LIBSTUB(PKCS5_v2_scrypt_keyivgen_ex, int);
LIBSTUB(EVP_PBE_CipherInit_ex, int);
LIBSTUB(EVP_PBE_find_ex, int);
LIBSTUB(PKCS12_SAFEBAG_create_pkcs8_encrypt_ex, PKCS12_SAFEBAG *);
LIBSTUB(PKCS8_decrypt_ex, PKCS8_PRIV_KEY_INFO *);
LIBSTUB(PKCS12_decrypt_skey_ex, PKCS8_PRIV_KEY_INFO *);
LIBSTUB(PKCS8_encrypt_ex, X509_SIG *);
LIBSTUB(PKCS8_set0_pbe_ex, X509_SIG *);
LIBSTUB(PKCS12_pack_p7encdata_ex, PKCS7 *);
LIBSTUB(PKCS12_pbe_crypt_ex, unsigned char *);
LIBSTUB(PKCS12_item_decrypt_d2i_ex, void *);
LIBSTUB(PKCS12_item_i2d_encrypt_ex, ASN1_OCTET_STRING *);
LIBSTUB(PKCS12_init_ex, PKCS12 *);
LIBSTUB(PKCS12_key_gen_asc_ex, int);
LIBSTUB(PKCS12_key_gen_uni_ex, int);
LIBSTUB(PKCS12_key_gen_utf8_ex, int);
LIBSTUB(PKCS12_PBE_keyivgen_ex, int);
LIBSTUB(PKCS12_create_ex, PKCS12 *);
LIBSTUB(PKCS12_add_key_ex, PKCS12_SAFEBAG *);
LIBSTUB(PKCS12_add_safe_ex, int);
LIBSTUB(PKCS12_add_safes_ex, PKCS12 *);
LIBSTUB(PKCS5_pbe_set0_algor_ex, int);
LIBSTUB(PKCS5_pbe_set_ex, X509_ALGOR *);
LIBSTUB(PKCS5_pbe2_set_iv_ex, X509_ALGOR *);
LIBSTUB(PKCS5_pbkdf2_set_ex, X509_ALGOR *);
LIBSTUB(BIO_new_from_core_bio, BIO *);
LIBSTUB(BIO_new_ex, BIO *);
LIBSTUB(BIO_s_core, const BIO_METHOD *);
LIBSTUB(BIO_get_line, int);
LIBSTUB(OSSL_LIB_CTX_new_from_dispatch, OSSL_LIB_CTX *);
LIBSTUB(OSSL_LIB_CTX_new_child, OSSL_LIB_CTX *);
LIBSTUB(OSSL_PROVIDER_get0_dispatch, const OSSL_DISPATCH *);
LIBSTUB(PKCS5_PBE_keyivgen_ex, int);
LIBSTUB(EVP_MAC_CTX_get_block_size, size_t);
LIBSTUB(BIO_debug_callback_ex, long);
LIBSTUB(b2i_PVK_bio_ex, EVP_PKEY *);
LIBSTUB(i2b_PVK_bio_ex, int);
LIBSTUB(NCONF_get0_libctx, OSSL_LIB_CTX *);
LIBSTUB(NCONF_get_section_names, STACK_OF(OPENSSL_CSTRING) *);
LIBSTUB(X509_PUBKEY_new_ex, X509_PUBKEY *);
LIBSTUB(ASN1_item_new_ex, ASN1_VALUE *);
LIBSTUB(ASN1_item_d2i_bio_ex, void *);
LIBSTUB(ASN1_item_d2i_ex, ASN1_VALUE *);
LIBSTUB(ASN1_TIME_print_ex, int);
LIBSTUB(EVP_PKEY_get0_provider, const OSSL_PROVIDER *);
LIBSTUB(EVP_PKEY_CTX_get0_provider, const OSSL_PROVIDER *);
LIBSTUB(OPENSSL_strcasecmp, int);
LIBSTUB(OPENSSL_strncasecmp, int);
LIBSTUB(OSSL_CMP_CTX_reset_geninfo_ITAVs, int);
LIBSTUB(EVP_RAND_CTX_up_ref, int);
LIBSTUB(RAND_set0_public, int);
LIBSTUB(RAND_set0_private, int);
LIBSTUB(EVP_MD_CTX_dup, EVP_MD_CTX *);
LIBSTUB(EVP_CIPHER_CTX_dup, EVP_CIPHER_CTX *);
LIBSTUB(BN_are_coprime, int);

#ifdef __cplusplus
}
#endif /* __cplusplus */

#endif /* _GATEPROTO_AMISSLEXT_H */
