/* Automatically generated header (sfdc 1.11)! Do not edit! */

#ifndef _GATEPROTO_AMISSL_H
#define _GATEPROTO_AMISSL_H

#include <exec/types.h>
#include <dos/dos.h>
#include <amissl/amissl.h>

#define _sfdc_strarg(a) _sfdc_strarg2(a)
#define _sfdc_strarg2(a) #a

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

#include <SDI_lib.h>

LIBSTUB(UNIMPLEMENTED, int);
LIBSTUB(InternalInitAmiSSL, void);
LIBSTUB(InitAmiSSLA, long);
LIBSTUB(CleanupAmiSSLA, long);
LIBSTUB(ASN1_TYPE_new, ASN1_TYPE *);
LIBSTUB(ASN1_TYPE_free, void);
LIBSTUB(d2i_ASN1_TYPE, ASN1_TYPE *);
LIBSTUB(i2d_ASN1_TYPE, int);
LIBSTUB(ASN1_ANY_it, const ASN1_ITEM *);
LIBSTUB(ASN1_TYPE_get, int);
LIBSTUB(ASN1_TYPE_set, void);
LIBSTUB(ASN1_OBJECT_new, ASN1_OBJECT *);
LIBSTUB(ASN1_OBJECT_free, void);
LIBSTUB(i2d_ASN1_OBJECT, int);
LIBSTUB(d2i_ASN1_OBJECT, ASN1_OBJECT *);
LIBSTUB(ASN1_OBJECT_it, const ASN1_ITEM *);
LIBSTUB(ASN1_STRING_new, ASN1_STRING *);
LIBSTUB(ASN1_STRING_free, void);
LIBSTUB(ASN1_STRING_dup, ASN1_STRING *);
LIBSTUB(ASN1_STRING_type_new, ASN1_STRING *);
LIBSTUB(ASN1_STRING_cmp, int);
LIBSTUB(ASN1_STRING_set, int);
LIBSTUB(ASN1_STRING_length, int);
LIBSTUB(ASN1_STRING_length_set, void);
LIBSTUB(ASN1_STRING_type, int);
LIBSTUB(ASN1_STRING_data, unsigned char *);
LIBSTUB(ASN1_BIT_STRING_new, ASN1_BIT_STRING *);
LIBSTUB(ASN1_BIT_STRING_free, void);
LIBSTUB(d2i_ASN1_BIT_STRING, ASN1_BIT_STRING *);
LIBSTUB(i2d_ASN1_BIT_STRING, int);
LIBSTUB(ASN1_BIT_STRING_it, const ASN1_ITEM *);
LIBSTUB(ASN1_BIT_STRING_set, int);
LIBSTUB(ASN1_BIT_STRING_set_bit, int);
LIBSTUB(ASN1_BIT_STRING_get_bit, int);
LIBSTUB(ASN1_BIT_STRING_name_print, int);
LIBSTUB(ASN1_BIT_STRING_num_asc, int);
LIBSTUB(ASN1_BIT_STRING_set_asc, int);
LIBSTUB(ASN1_INTEGER_new, ASN1_INTEGER *);
LIBSTUB(ASN1_INTEGER_free, void);
LIBSTUB(d2i_ASN1_INTEGER, ASN1_INTEGER *);
LIBSTUB(i2d_ASN1_INTEGER, int);
LIBSTUB(ASN1_INTEGER_it, const ASN1_ITEM *);
LIBSTUB(d2i_ASN1_UINTEGER, ASN1_INTEGER *);
LIBSTUB(ASN1_INTEGER_dup, ASN1_INTEGER *);
LIBSTUB(ASN1_INTEGER_cmp, int);
LIBSTUB(ASN1_ENUMERATED_new, ASN1_ENUMERATED *);
LIBSTUB(ASN1_ENUMERATED_free, void);
LIBSTUB(d2i_ASN1_ENUMERATED, ASN1_ENUMERATED *);
LIBSTUB(i2d_ASN1_ENUMERATED, int);
LIBSTUB(ASN1_ENUMERATED_it, const ASN1_ITEM *);
LIBSTUB(ASN1_UTCTIME_check, int);
LIBSTUB(ASN1_UTCTIME_set, ASN1_UTCTIME *);
LIBSTUB(ASN1_UTCTIME_set_string, int);
LIBSTUB(ASN1_UTCTIME_cmp_time_t, int);
LIBSTUB(ASN1_GENERALIZEDTIME_check, int);
LIBSTUB(ASN1_GENERALIZEDTIME_set, ASN1_GENERALIZEDTIME *);
LIBSTUB(ASN1_GENERALIZEDTIME_set_string, int);
LIBSTUB(ASN1_OCTET_STRING_new, ASN1_OCTET_STRING *);
LIBSTUB(ASN1_OCTET_STRING_free, void);
LIBSTUB(d2i_ASN1_OCTET_STRING, ASN1_OCTET_STRING *);
LIBSTUB(i2d_ASN1_OCTET_STRING, int);
LIBSTUB(ASN1_OCTET_STRING_it, const ASN1_ITEM *);
LIBSTUB(ASN1_OCTET_STRING_dup, ASN1_OCTET_STRING *);
LIBSTUB(ASN1_OCTET_STRING_cmp, int);
LIBSTUB(ASN1_OCTET_STRING_set, int);
LIBSTUB(ASN1_VISIBLESTRING_new, ASN1_VISIBLESTRING *);
LIBSTUB(ASN1_VISIBLESTRING_free, void);
LIBSTUB(d2i_ASN1_VISIBLESTRING, ASN1_VISIBLESTRING *);
LIBSTUB(i2d_ASN1_VISIBLESTRING, int);
LIBSTUB(ASN1_VISIBLESTRING_it, const ASN1_ITEM *);
LIBSTUB(ASN1_UNIVERSALSTRING_new, ASN1_UNIVERSALSTRING *);
LIBSTUB(ASN1_UNIVERSALSTRING_free, void);
LIBSTUB(d2i_ASN1_UNIVERSALSTRING, ASN1_UNIVERSALSTRING *);
LIBSTUB(i2d_ASN1_UNIVERSALSTRING, int);
LIBSTUB(ASN1_UNIVERSALSTRING_it, const ASN1_ITEM *);
LIBSTUB(ASN1_UTF8STRING_new, ASN1_UTF8STRING *);
LIBSTUB(ASN1_UTF8STRING_free, void);
LIBSTUB(d2i_ASN1_UTF8STRING, ASN1_UTF8STRING *);
LIBSTUB(i2d_ASN1_UTF8STRING, int);
LIBSTUB(ASN1_UTF8STRING_it, const ASN1_ITEM *);
LIBSTUB(ASN1_NULL_new, ASN1_NULL *);
LIBSTUB(ASN1_NULL_free, void);
LIBSTUB(d2i_ASN1_NULL, ASN1_NULL *);
LIBSTUB(i2d_ASN1_NULL, int);
LIBSTUB(ASN1_NULL_it, const ASN1_ITEM *);
LIBSTUB(ASN1_BMPSTRING_new, ASN1_BMPSTRING *);
LIBSTUB(ASN1_BMPSTRING_free, void);
LIBSTUB(d2i_ASN1_BMPSTRING, ASN1_BMPSTRING *);
LIBSTUB(i2d_ASN1_BMPSTRING, int);
LIBSTUB(ASN1_BMPSTRING_it, const ASN1_ITEM *);
LIBSTUB(UTF8_getc, int);
LIBSTUB(UTF8_putc, int);
LIBSTUB(ASN1_PRINTABLE_new, ASN1_STRING *);
LIBSTUB(ASN1_PRINTABLE_free, void);
LIBSTUB(d2i_ASN1_PRINTABLE, ASN1_STRING *);
LIBSTUB(i2d_ASN1_PRINTABLE, int);
LIBSTUB(ASN1_PRINTABLE_it, const ASN1_ITEM *);
LIBSTUB(DIRECTORYSTRING_new, ASN1_STRING *);
LIBSTUB(DIRECTORYSTRING_free, void);
LIBSTUB(d2i_DIRECTORYSTRING, ASN1_STRING *);
LIBSTUB(i2d_DIRECTORYSTRING, int);
LIBSTUB(DIRECTORYSTRING_it, const ASN1_ITEM *);
LIBSTUB(DISPLAYTEXT_new, ASN1_STRING *);
LIBSTUB(DISPLAYTEXT_free, void);
LIBSTUB(d2i_DISPLAYTEXT, ASN1_STRING *);
LIBSTUB(i2d_DISPLAYTEXT, int);
LIBSTUB(DISPLAYTEXT_it, const ASN1_ITEM *);
LIBSTUB(ASN1_PRINTABLESTRING_new, ASN1_PRINTABLESTRING *);
LIBSTUB(ASN1_PRINTABLESTRING_free, void);
LIBSTUB(d2i_ASN1_PRINTABLESTRING, ASN1_PRINTABLESTRING *);
LIBSTUB(i2d_ASN1_PRINTABLESTRING, int);
LIBSTUB(ASN1_PRINTABLESTRING_it, const ASN1_ITEM *);
LIBSTUB(ASN1_T61STRING_new, ASN1_T61STRING *);
LIBSTUB(ASN1_T61STRING_free, void);
LIBSTUB(d2i_ASN1_T61STRING, ASN1_T61STRING *);
LIBSTUB(i2d_ASN1_T61STRING, int);
LIBSTUB(ASN1_T61STRING_it, const ASN1_ITEM *);
LIBSTUB(ASN1_IA5STRING_new, ASN1_IA5STRING *);
LIBSTUB(ASN1_IA5STRING_free, void);
LIBSTUB(d2i_ASN1_IA5STRING, ASN1_IA5STRING *);
LIBSTUB(i2d_ASN1_IA5STRING, int);
LIBSTUB(ASN1_IA5STRING_it, const ASN1_ITEM *);
LIBSTUB(ASN1_GENERALSTRING_new, ASN1_GENERALSTRING *);
LIBSTUB(ASN1_GENERALSTRING_free, void);
LIBSTUB(d2i_ASN1_GENERALSTRING, ASN1_GENERALSTRING *);
LIBSTUB(i2d_ASN1_GENERALSTRING, int);
LIBSTUB(ASN1_GENERALSTRING_it, const ASN1_ITEM *);
LIBSTUB(ASN1_UTCTIME_new, ASN1_UTCTIME *);
LIBSTUB(ASN1_UTCTIME_free, void);
LIBSTUB(d2i_ASN1_UTCTIME, ASN1_UTCTIME *);
LIBSTUB(i2d_ASN1_UTCTIME, int);
LIBSTUB(ASN1_UTCTIME_it, const ASN1_ITEM *);
LIBSTUB(ASN1_GENERALIZEDTIME_new, ASN1_GENERALIZEDTIME *);
LIBSTUB(ASN1_GENERALIZEDTIME_free, void);
LIBSTUB(d2i_ASN1_GENERALIZEDTIME, ASN1_GENERALIZEDTIME *);
LIBSTUB(i2d_ASN1_GENERALIZEDTIME, int);
LIBSTUB(ASN1_GENERALIZEDTIME_it, const ASN1_ITEM *);
LIBSTUB(ASN1_TIME_new, ASN1_TIME *);
LIBSTUB(ASN1_TIME_free, void);
LIBSTUB(d2i_ASN1_TIME, ASN1_TIME *);
LIBSTUB(i2d_ASN1_TIME, int);
LIBSTUB(ASN1_TIME_it, const ASN1_ITEM *);
LIBSTUB(ASN1_TIME_set, ASN1_TIME *);
LIBSTUB(ASN1_TIME_check, int);
LIBSTUB(ASN1_TIME_to_generalizedtime, ASN1_GENERALIZEDTIME *);
LIBSTUB(i2a_ASN1_INTEGER, int);
LIBSTUB(a2i_ASN1_INTEGER, int);
LIBSTUB(i2a_ASN1_ENUMERATED, int);
LIBSTUB(a2i_ASN1_ENUMERATED, int);
LIBSTUB(i2a_ASN1_OBJECT, int);
LIBSTUB(a2i_ASN1_STRING, int);
LIBSTUB(i2a_ASN1_STRING, int);
LIBSTUB(i2t_ASN1_OBJECT, int);
LIBSTUB(a2d_ASN1_OBJECT, int);
LIBSTUB(ASN1_OBJECT_create, ASN1_OBJECT *);
LIBSTUB(ASN1_INTEGER_set, int);
LIBSTUB(ASN1_INTEGER_get, long);
LIBSTUB(BN_to_ASN1_INTEGER, ASN1_INTEGER *);
LIBSTUB(ASN1_INTEGER_to_BN, BIGNUM *);
LIBSTUB(ASN1_ENUMERATED_set, int);
LIBSTUB(ASN1_ENUMERATED_get, long);
LIBSTUB(BN_to_ASN1_ENUMERATED, ASN1_ENUMERATED *);
LIBSTUB(ASN1_ENUMERATED_to_BN, BIGNUM *);
LIBSTUB(ASN1_PRINTABLE_type, int);
LIBSTUB(ASN1_tag2bit, unsigned long);
LIBSTUB(ASN1_get_object, int);
LIBSTUB(ASN1_check_infinite_end, int);
LIBSTUB(ASN1_put_object, void);
LIBSTUB(ASN1_object_size, int);
LIBSTUB(ASN1_dup, void *);
LIBSTUB(ASN1_item_dup, void *);
LIBSTUB(ASN1_STRING_to_UTF8, int);
LIBSTUB(ASN1_d2i_bio, void *);
LIBSTUB(ASN1_item_d2i_bio, void *);
LIBSTUB(ASN1_i2d_bio, int);
LIBSTUB(ASN1_item_i2d_bio, int);
LIBSTUB(ASN1_UTCTIME_print, int);
LIBSTUB(ASN1_GENERALIZEDTIME_print, int);
LIBSTUB(ASN1_TIME_print, int);
LIBSTUB(ASN1_STRING_print, int);
LIBSTUB(ASN1_STRING_print_ex, int);
LIBSTUB(ASN1_parse, int);
LIBSTUB(ASN1_parse_dump, int);
LIBSTUB(ASN1_tag2str, const char *);
LIBSTUB(ASN1_UNIVERSALSTRING_to_string, int);
LIBSTUB(ASN1_TYPE_set_octetstring, int);
LIBSTUB(ASN1_TYPE_get_octetstring, int);
LIBSTUB(ASN1_TYPE_set_int_octetstring, int);
LIBSTUB(ASN1_TYPE_get_int_octetstring, int);
LIBSTUB(ASN1_item_unpack, void *);
LIBSTUB(ASN1_item_pack, ASN1_STRING *);
LIBSTUB(ASN1_STRING_set_default_mask, void);
LIBSTUB(ASN1_STRING_set_default_mask_asc, int);
LIBSTUB(ASN1_STRING_get_default_mask, unsigned long);
LIBSTUB(ASN1_mbstring_copy, int);
LIBSTUB(ASN1_mbstring_ncopy, int);
LIBSTUB(ASN1_STRING_set_by_NID, ASN1_STRING *);
LIBSTUB(ASN1_STRING_TABLE_get, ASN1_STRING_TABLE *);
LIBSTUB(ASN1_STRING_TABLE_add, int);
LIBSTUB(ASN1_STRING_TABLE_cleanup, void);
LIBSTUB(ASN1_item_new, ASN1_VALUE *);
LIBSTUB(ASN1_item_free, void);
LIBSTUB(ASN1_item_d2i, ASN1_VALUE *);
LIBSTUB(ASN1_item_i2d, int);
LIBSTUB(ASN1_add_oid_module, void);
LIBSTUB(ERR_load_ASN1_strings, int);
LIBSTUB(ASN1_BOOLEAN_it, const ASN1_ITEM *);
LIBSTUB(ASN1_TBOOLEAN_it, const ASN1_ITEM *);
LIBSTUB(ASN1_FBOOLEAN_it, const ASN1_ITEM *);
LIBSTUB(ASN1_SEQUENCE_it, const ASN1_ITEM *);
LIBSTUB(CBIGNUM_it, const ASN1_ITEM *);
LIBSTUB(BIGNUM_it, const ASN1_ITEM *);
LIBSTUB(LONG_it, const ASN1_ITEM *);
LIBSTUB(ZLONG_it, const ASN1_ITEM *);
LIBSTUB(ASN1_item_ex_new, int);
LIBSTUB(ASN1_item_ex_free, void);
LIBSTUB(ASN1_item_ex_d2i, int);
LIBSTUB(ASN1_item_ex_i2d, int);
LIBSTUB(BIO_ctrl_pending, size_t);
LIBSTUB(BIO_ctrl_wpending, size_t);
LIBSTUB(BIO_ctrl_get_write_guarantee, size_t);
LIBSTUB(BIO_ctrl_get_read_request, size_t);
LIBSTUB(BIO_ctrl_reset_read_request, int);
LIBSTUB(BIO_set_ex_data, int);
LIBSTUB(BIO_get_ex_data, void *);
LIBSTUB(OBSOLETE_BIO_get_ex_new_index, int);
LIBSTUB(BIO_number_read, uint64_t);
LIBSTUB(BIO_number_written, uint64_t);
LIBSTUB(BIO_s_file, const BIO_METHOD *);
LIBSTUB(BIO_new_file, BIO *);
LIBSTUB(BIO_new_fp_amiga, BIO *);
LIBSTUB(BIO_new, BIO *);
LIBSTUB(BIO_free, int);
LIBSTUB(BIO_vfree, void);
LIBSTUB(BIO_read, int);
LIBSTUB(BIO_gets, int);
LIBSTUB(BIO_write, int);
LIBSTUB(BIO_puts, int);
LIBSTUB(BIO_indent, int);
LIBSTUB(BIO_ctrl, long);
LIBSTUB(BIO_callback_ctrl, long);
LIBSTUB(BIO_ptr_ctrl, void *);
LIBSTUB(BIO_int_ctrl, long);
LIBSTUB(BIO_push, BIO *);
LIBSTUB(BIO_pop, BIO *);
LIBSTUB(BIO_free_all, void);
LIBSTUB(BIO_find_type, BIO *);
LIBSTUB(BIO_next, BIO *);
LIBSTUB(BIO_get_retry_BIO, BIO *);
LIBSTUB(BIO_get_retry_reason, int);
LIBSTUB(BIO_dup_chain, BIO *);
LIBSTUB(BIO_nread0, int);
LIBSTUB(BIO_nread, int);
LIBSTUB(BIO_nwrite0, int);
LIBSTUB(BIO_nwrite, int);
LIBSTUB(BIO_debug_callback, long);
LIBSTUB(BIO_s_mem, const BIO_METHOD *);
LIBSTUB(BIO_new_mem_buf, BIO *);
LIBSTUB(BIO_s_socket, const BIO_METHOD *);
LIBSTUB(BIO_s_connect, const BIO_METHOD *);
LIBSTUB(BIO_s_accept, const BIO_METHOD *);
LIBSTUB(BIO_s_fd, const BIO_METHOD *);
LIBSTUB(BIO_s_log, const BIO_METHOD *);
LIBSTUB(BIO_s_bio, const BIO_METHOD *);
LIBSTUB(BIO_s_null, const BIO_METHOD *);
LIBSTUB(BIO_f_null, const BIO_METHOD *);
LIBSTUB(BIO_f_buffer, const BIO_METHOD *);
LIBSTUB(BIO_f_nbio_test, const BIO_METHOD *);
LIBSTUB(BIO_sock_should_retry, int);
LIBSTUB(BIO_sock_non_fatal_error, int);
LIBSTUB(BIO_fd_should_retry, int);
LIBSTUB(BIO_fd_non_fatal_error, int);
LIBSTUB(BIO_dump, int);
LIBSTUB(BIO_dump_indent, int);
LIBSTUB(BIO_gethostbyname, struct hostent *);
LIBSTUB(BIO_sock_error, int);
LIBSTUB(BIO_socket_ioctl, int);
LIBSTUB(BIO_socket_nbio, int);
LIBSTUB(BIO_get_port, int);
LIBSTUB(BIO_get_host_ip, int);
LIBSTUB(BIO_get_accept_socket, int);
LIBSTUB(BIO_accept, int);
LIBSTUB(BIO_sock_init, int);
LIBSTUB(BIO_set_tcp_ndelay, int);
LIBSTUB(BIO_new_socket, BIO *);
LIBSTUB(BIO_new_fd, BIO *);
LIBSTUB(BIO_new_connect, BIO *);
LIBSTUB(BIO_new_accept, BIO *);
LIBSTUB(BIO_new_bio_pair, int);
LIBSTUB(BIO_copy_next_retry, void);
LIBSTUB(BIO_vprintf, int);
LIBSTUB(BIO_vsnprintf, int);
LIBSTUB(ERR_load_BIO_strings, int);
LIBSTUB(BN_value_one, const BIGNUM *);
LIBSTUB(BN_options, char *);
LIBSTUB(BN_CTX_new, BN_CTX *);
LIBSTUB(BN_CTX_free, void);
LIBSTUB(BN_CTX_start, void);
LIBSTUB(BN_CTX_get, BIGNUM *);
LIBSTUB(BN_CTX_end, void);
LIBSTUB(BN_rand, int);
LIBSTUB(BN_pseudo_rand, int);
LIBSTUB(BN_rand_range, int);
LIBSTUB(BN_pseudo_rand_range, int);
LIBSTUB(BN_num_bits, int);
LIBSTUB(BN_num_bits_word, int);
LIBSTUB(BN_new, BIGNUM *);
LIBSTUB(BN_clear_free, void);
LIBSTUB(BN_copy, BIGNUM *);
LIBSTUB(BN_swap, void);
LIBSTUB(BN_bin2bn, BIGNUM *);
LIBSTUB(BN_bn2bin, int);
LIBSTUB(BN_mpi2bn, BIGNUM *);
LIBSTUB(BN_bn2mpi, int);
LIBSTUB(BN_sub, int);
LIBSTUB(BN_usub, int);
LIBSTUB(BN_uadd, int);
LIBSTUB(BN_add, int);
LIBSTUB(BN_mul, int);
LIBSTUB(BN_sqr, int);
LIBSTUB(BN_div, int);
LIBSTUB(BN_nnmod, int);
LIBSTUB(BN_mod_add, int);
LIBSTUB(BN_mod_add_quick, int);
LIBSTUB(BN_mod_sub, int);
LIBSTUB(BN_mod_sub_quick, int);
LIBSTUB(BN_mod_mul, int);
LIBSTUB(BN_mod_sqr, int);
LIBSTUB(BN_mod_lshift1, int);
LIBSTUB(BN_mod_lshift1_quick, int);
LIBSTUB(BN_mod_lshift, int);
LIBSTUB(BN_mod_lshift_quick, int);
LIBSTUB(BN_mod_word, BN_ULONG);
LIBSTUB(BN_div_word, BN_ULONG);
LIBSTUB(BN_mul_word, int);
LIBSTUB(BN_add_word, int);
LIBSTUB(BN_sub_word, int);
LIBSTUB(BN_set_word, int);
LIBSTUB(BN_get_word, BN_ULONG);
LIBSTUB(BN_cmp, int);
LIBSTUB(BN_free, void);
LIBSTUB(BN_is_bit_set, int);
LIBSTUB(BN_lshift, int);
LIBSTUB(BN_lshift1, int);
LIBSTUB(BN_exp, int);
LIBSTUB(BN_mod_exp, int);
LIBSTUB(BN_mod_exp_mont, int);
LIBSTUB(BN_mod_exp_mont_word, int);
LIBSTUB(BN_mod_exp2_mont, int);
LIBSTUB(BN_mod_exp_simple, int);
LIBSTUB(BN_mask_bits, int);
LIBSTUB(BN_print, int);
LIBSTUB(BN_reciprocal, int);
LIBSTUB(BN_rshift, int);
LIBSTUB(BN_rshift1, int);
LIBSTUB(BN_clear, void);
LIBSTUB(BN_dup, BIGNUM *);
LIBSTUB(BN_ucmp, int);
LIBSTUB(BN_set_bit, int);
LIBSTUB(BN_clear_bit, int);
LIBSTUB(BN_bn2hex, char *);
LIBSTUB(BN_bn2dec, char *);
LIBSTUB(BN_hex2bn, int);
LIBSTUB(BN_dec2bn, int);
LIBSTUB(BN_gcd, int);
LIBSTUB(BN_kronecker, int);
LIBSTUB(BN_mod_inverse, BIGNUM *);
LIBSTUB(BN_mod_sqrt, BIGNUM *);
LIBSTUB(BN_generate_prime, BIGNUM *);
LIBSTUB(BN_is_prime, int);
LIBSTUB(BN_is_prime_fasttest, int);
LIBSTUB(BN_MONT_CTX_new, BN_MONT_CTX *);
LIBSTUB(BN_mod_mul_montgomery, int);
LIBSTUB(BN_from_montgomery, int);
LIBSTUB(BN_MONT_CTX_free, void);
LIBSTUB(BN_MONT_CTX_set, int);
LIBSTUB(BN_MONT_CTX_copy, BN_MONT_CTX *);
LIBSTUB(BN_BLINDING_new, BN_BLINDING *);
LIBSTUB(BN_BLINDING_free, void);
LIBSTUB(BN_BLINDING_update, int);
LIBSTUB(BN_BLINDING_convert, int);
LIBSTUB(BN_BLINDING_invert, int);
LIBSTUB(BN_set_params, void);
LIBSTUB(BN_get_params, int);
LIBSTUB(BN_RECP_CTX_new, BN_RECP_CTX *);
LIBSTUB(BN_RECP_CTX_free, void);
LIBSTUB(BN_RECP_CTX_set, int);
LIBSTUB(BN_mod_mul_reciprocal, int);
LIBSTUB(BN_mod_exp_recp, int);
LIBSTUB(BN_div_recp, int);
LIBSTUB(BN_bntest_rand, int);
LIBSTUB(ERR_load_BN_strings, int);
LIBSTUB(BUF_MEM_new, BUF_MEM *);
LIBSTUB(BUF_MEM_free, void);
LIBSTUB(BUF_MEM_grow, size_t);
LIBSTUB(BUF_MEM_grow_clean, size_t);
LIBSTUB(OBSOLETE_BUF_strdup, char *);
LIBSTUB(OBSOLETE_BUF_strlcpy, size_t);
LIBSTUB(OBSOLETE_BUF_strlcat, size_t);
LIBSTUB(ERR_load_BUF_strings, int);
LIBSTUB(COMP_CTX_new, COMP_CTX *);
LIBSTUB(COMP_CTX_free, void);
LIBSTUB(COMP_compress_block, int);
LIBSTUB(COMP_expand_block, int);
LIBSTUB(COMP_zlib, COMP_METHOD *);
LIBSTUB(ERR_load_COMP_strings, int);
LIBSTUB(CONF_set_default_method, int);
LIBSTUB(CONF_set_nconf, void);
LIBSTUB(CONF_load, LHASH_OF(CONF_VALUE) *);
LIBSTUB(CONF_load_bio, LHASH_OF(CONF_VALUE) *);
LIBSTUB(CONF_get_section, STACK_OF(CONF_VALUE) *);
LIBSTUB(CONF_get_string, char *);
LIBSTUB(CONF_get_number, long);
LIBSTUB(CONF_free, void);
LIBSTUB(CONF_dump_bio, int);
LIBSTUB(OPENSSL_config, void);
LIBSTUB(OBSOLETE_OPENSSL_no_config, void);
LIBSTUB(NCONF_new, CONF *);
LIBSTUB(NCONF_default, CONF_METHOD *);
LIBSTUB(NCONF_WIN32, CONF_METHOD *);
LIBSTUB(NCONF_free, void);
LIBSTUB(NCONF_free_data, void);
LIBSTUB(NCONF_load, int);
LIBSTUB(NCONF_load_bio, int);
LIBSTUB(NCONF_get_section, STACK_OF(CONF_VALUE) *);
LIBSTUB(NCONF_get_string, char *);
LIBSTUB(NCONF_get_number_e, int);
LIBSTUB(NCONF_dump_bio, int);
LIBSTUB(CONF_modules_load, int);
LIBSTUB(CONF_modules_load_file, int);
LIBSTUB(CONF_modules_unload, void);
LIBSTUB(CONF_modules_finish, void);
LIBSTUB(CONF_module_add, int);
LIBSTUB(CONF_imodule_get_name, const char *);
LIBSTUB(CONF_imodule_get_value, const char *);
LIBSTUB(CONF_imodule_get_usr_data, void *);
LIBSTUB(CONF_imodule_set_usr_data, void);
LIBSTUB(CONF_imodule_get_module, CONF_MODULE *);
LIBSTUB(CONF_imodule_get_flags, unsigned long);
LIBSTUB(CONF_imodule_set_flags, void);
LIBSTUB(CONF_module_get_usr_data, void *);
LIBSTUB(CONF_module_set_usr_data, void);
LIBSTUB(CONF_get1_default_config_file, char *);
LIBSTUB(CONF_parse_list, int);
LIBSTUB(OPENSSL_load_builtin_modules, void);
LIBSTUB(ERR_load_CONF_strings, int);
LIBSTUB(OBSOLETE_SSLeay_version, const char *);
LIBSTUB(OBSOLETE_SSLeay, unsigned long);
LIBSTUB(OPENSSL_issetugid, int);
LIBSTUB(CRYPTO_get_ex_new_index, int);
LIBSTUB(CRYPTO_new_ex_data, int);
LIBSTUB(CRYPTO_dup_ex_data, int);
LIBSTUB(CRYPTO_free_ex_data, void);
LIBSTUB(CRYPTO_set_ex_data, int);
LIBSTUB(CRYPTO_get_ex_data, void *);
LIBSTUB(CRYPTO_set_mem_functions, int);
LIBSTUB(CRYPTO_get_mem_functions, void);
LIBSTUB(CRYPTO_malloc, void *);
LIBSTUB(CRYPTO_free, void);
LIBSTUB(CRYPTO_realloc, void *);
LIBSTUB(OPENSSL_cleanse, void);
LIBSTUB(ERR_load_CRYPTO_strings, int);
LIBSTUB(EC_GFp_simple_method, const EC_METHOD *);
LIBSTUB(EC_GFp_mont_method, const EC_METHOD *);
LIBSTUB(EC_GROUP_new, EC_GROUP *);
LIBSTUB(EC_GROUP_free, void);
LIBSTUB(EC_GROUP_clear_free, void);
LIBSTUB(EC_GROUP_copy, int);
LIBSTUB(EC_GROUP_method_of, const EC_METHOD *);
LIBSTUB(EC_GROUP_set_curve_GFp, int);
LIBSTUB(EC_GROUP_get_curve_GFp, int);
LIBSTUB(EC_GROUP_new_curve_GFp, EC_GROUP *);
LIBSTUB(EC_GROUP_set_generator, int);
LIBSTUB(EC_GROUP_get0_generator, const EC_POINT *);
LIBSTUB(EC_GROUP_get_order, int);
LIBSTUB(EC_GROUP_get_cofactor, int);
LIBSTUB(EC_POINT_new, EC_POINT *);
LIBSTUB(EC_POINT_free, void);
LIBSTUB(EC_POINT_clear_free, void);
LIBSTUB(EC_POINT_copy, int);
LIBSTUB(EC_POINT_method_of, const EC_METHOD *);
LIBSTUB(EC_POINT_set_to_infinity, int);
LIBSTUB(EC_POINT_set_Jprojective_coordinates_GFp, int);
LIBSTUB(EC_POINT_get_Jprojective_coordinates_GFp, int);
LIBSTUB(EC_POINT_set_affine_coordinates_GFp, int);
LIBSTUB(EC_POINT_get_affine_coordinates_GFp, int);
LIBSTUB(EC_POINT_set_compressed_coordinates_GFp, int);
LIBSTUB(EC_POINT_point2oct, size_t);
LIBSTUB(EC_POINT_oct2point, int);
LIBSTUB(EC_POINT_add, int);
LIBSTUB(EC_POINT_dbl, int);
LIBSTUB(EC_POINT_invert, int);
LIBSTUB(EC_POINT_is_at_infinity, int);
LIBSTUB(EC_POINT_is_on_curve, int);
LIBSTUB(EC_POINT_cmp, int);
LIBSTUB(EC_POINT_make_affine, int);
LIBSTUB(EC_POINTs_make_affine, int);
LIBSTUB(EC_POINTs_mul, int);
LIBSTUB(EC_POINT_mul, int);
LIBSTUB(EC_GROUP_precompute_mult, int);
LIBSTUB(ERR_load_EC_strings, int);
LIBSTUB(OBSOLETE_ERR_put_error, void);
LIBSTUB(ERR_set_error_data, void);
LIBSTUB(ERR_get_error, unsigned long);
LIBSTUB(ERR_get_error_line, unsigned long);
LIBSTUB(ERR_get_error_line_data, unsigned long);
LIBSTUB(ERR_peek_error, unsigned long);
LIBSTUB(ERR_peek_error_line, unsigned long);
LIBSTUB(ERR_peek_error_line_data, unsigned long);
LIBSTUB(ERR_peek_last_error, unsigned long);
LIBSTUB(ERR_peek_last_error_line, unsigned long);
LIBSTUB(ERR_peek_last_error_line_data, unsigned long);
LIBSTUB(ERR_clear_error, void);
LIBSTUB(ERR_error_string, char *);
LIBSTUB(ERR_error_string_n, void);
LIBSTUB(ERR_lib_error_string, const char *);
LIBSTUB(ERR_func_error_string, const char *);
LIBSTUB(ERR_reason_error_string, const char *);
LIBSTUB(ERR_print_errors_cb, void);
LIBSTUB(ERR_print_errors, void);
LIBSTUB(ERR_add_error_vdata, void);
LIBSTUB(ERR_load_strings, int);
LIBSTUB(ERR_unload_strings, int);
LIBSTUB(ERR_load_ERR_strings, int);
LIBSTUB(OBSOLETE_ERR_load_crypto_strings, void);
LIBSTUB(ERR_get_state, ERR_STATE *);
LIBSTUB(ERR_get_next_error_library, int);
LIBSTUB(OBSOLETE_EVP_MD_CTX_init, void);
LIBSTUB(OBSOLETE_EVP_MD_CTX_create, EVP_MD_CTX *);
LIBSTUB(OBSOLETE_EVP_MD_CTX_destroy, void);
LIBSTUB(EVP_MD_CTX_copy_ex, int);
LIBSTUB(EVP_DigestInit_ex, int);
LIBSTUB(EVP_DigestUpdate, int);
LIBSTUB(EVP_DigestFinal_ex, int);
LIBSTUB(EVP_Digest, int);
LIBSTUB(EVP_MD_CTX_copy, int);
LIBSTUB(EVP_DigestInit, int);
LIBSTUB(EVP_DigestFinal, int);
LIBSTUB(EVP_read_pw_string, int);
LIBSTUB(EVP_set_pw_prompt, void);
LIBSTUB(EVP_get_pw_prompt, char *);
LIBSTUB(EVP_BytesToKey, int);
LIBSTUB(EVP_EncryptInit, int);
LIBSTUB(EVP_EncryptInit_ex, int);
LIBSTUB(EVP_EncryptUpdate, int);
LIBSTUB(EVP_EncryptFinal_ex, int);
LIBSTUB(EVP_EncryptFinal, int);
LIBSTUB(EVP_DecryptInit, int);
LIBSTUB(EVP_DecryptInit_ex, int);
LIBSTUB(EVP_DecryptUpdate, int);
LIBSTUB(EVP_DecryptFinal, int);
LIBSTUB(EVP_DecryptFinal_ex, int);
LIBSTUB(EVP_CipherInit, int);
LIBSTUB(EVP_CipherInit_ex, int);
LIBSTUB(EVP_CipherUpdate, int);
LIBSTUB(EVP_CipherFinal, int);
LIBSTUB(EVP_CipherFinal_ex, int);
LIBSTUB(EVP_SignFinal, int);
LIBSTUB(EVP_VerifyFinal, int);
LIBSTUB(EVP_OpenInit, int);
LIBSTUB(EVP_OpenFinal, int);
LIBSTUB(EVP_SealInit, int);
LIBSTUB(EVP_SealFinal, int);
LIBSTUB(EVP_EncodeInit, void);
LIBSTUB(EVP_EncodeUpdate, int);
LIBSTUB(EVP_EncodeFinal, void);
LIBSTUB(EVP_EncodeBlock, int);
LIBSTUB(EVP_DecodeInit, void);
LIBSTUB(EVP_DecodeUpdate, int);
LIBSTUB(EVP_DecodeFinal, int);
LIBSTUB(EVP_DecodeBlock, int);
LIBSTUB(OBSOLETE_EVP_CIPHER_CTX_init, void);
LIBSTUB(OBSOLETE_EVP_CIPHER_CTX_cleanup, int);
LIBSTUB(EVP_CIPHER_CTX_set_key_length, int);
LIBSTUB(EVP_CIPHER_CTX_set_padding, int);
LIBSTUB(EVP_CIPHER_CTX_ctrl, int);
LIBSTUB(BIO_f_md, const BIO_METHOD *);
LIBSTUB(BIO_f_base64, const BIO_METHOD *);
LIBSTUB(BIO_f_cipher, const BIO_METHOD *);
LIBSTUB(BIO_f_reliable, const BIO_METHOD *);
LIBSTUB(BIO_set_cipher, int);
LIBSTUB(EVP_md_null, const EVP_MD *);
LIBSTUB(EVP_md2, const EVP_MD *);
LIBSTUB(EVP_md4, const EVP_MD *);
LIBSTUB(EVP_md5, const EVP_MD *);
LIBSTUB(EVP_sha1, const EVP_MD *);
LIBSTUB(EVP_mdc2, const EVP_MD *);
LIBSTUB(EVP_ripemd160, const EVP_MD *);
LIBSTUB(EVP_enc_null, const EVP_CIPHER *);
LIBSTUB(EVP_des_ecb, const EVP_CIPHER *);
LIBSTUB(EVP_des_ede, const EVP_CIPHER *);
LIBSTUB(EVP_des_ede3, const EVP_CIPHER *);
LIBSTUB(EVP_des_ede_ecb, const EVP_CIPHER *);
LIBSTUB(EVP_des_ede3_ecb, const EVP_CIPHER *);
LIBSTUB(EVP_des_cfb64, const EVP_CIPHER *);
LIBSTUB(EVP_des_cfb1, const EVP_CIPHER *);
LIBSTUB(EVP_des_cfb8, const EVP_CIPHER *);
LIBSTUB(EVP_des_ede_cfb64, const EVP_CIPHER *);
LIBSTUB(EVP_des_ede3_cfb64, const EVP_CIPHER *);
LIBSTUB(EVP_des_ede3_cfb1, const EVP_CIPHER *);
LIBSTUB(EVP_des_ede3_cfb8, const EVP_CIPHER *);
LIBSTUB(EVP_des_ofb, const EVP_CIPHER *);
LIBSTUB(EVP_des_ede_ofb, const EVP_CIPHER *);
LIBSTUB(EVP_des_ede3_ofb, const EVP_CIPHER *);
LIBSTUB(EVP_des_cbc, const EVP_CIPHER *);
LIBSTUB(EVP_des_ede_cbc, const EVP_CIPHER *);
LIBSTUB(EVP_des_ede3_cbc, const EVP_CIPHER *);
LIBSTUB(EVP_desx_cbc, const EVP_CIPHER *);
LIBSTUB(EVP_rc4, const EVP_CIPHER *);
LIBSTUB(EVP_rc4_40, const EVP_CIPHER *);
LIBSTUB(EVP_idea_ecb, const EVP_CIPHER *);
LIBSTUB(EVP_idea_cfb64, const EVP_CIPHER *);
LIBSTUB(EVP_idea_ofb, const EVP_CIPHER *);
LIBSTUB(EVP_idea_cbc, const EVP_CIPHER *);
LIBSTUB(EVP_rc2_ecb, const EVP_CIPHER *);
LIBSTUB(EVP_rc2_cbc, const EVP_CIPHER *);
LIBSTUB(EVP_rc2_40_cbc, const EVP_CIPHER *);
LIBSTUB(EVP_rc2_64_cbc, const EVP_CIPHER *);
LIBSTUB(EVP_rc2_cfb64, const EVP_CIPHER *);
LIBSTUB(EVP_rc2_ofb, const EVP_CIPHER *);
LIBSTUB(EVP_bf_ecb, const EVP_CIPHER *);
LIBSTUB(EVP_bf_cbc, const EVP_CIPHER *);
LIBSTUB(EVP_bf_cfb64, const EVP_CIPHER *);
LIBSTUB(EVP_bf_ofb, const EVP_CIPHER *);
LIBSTUB(EVP_cast5_ecb, const EVP_CIPHER *);
LIBSTUB(EVP_cast5_cbc, const EVP_CIPHER *);
LIBSTUB(EVP_cast5_cfb64, const EVP_CIPHER *);
LIBSTUB(EVP_cast5_ofb, const EVP_CIPHER *);
LIBSTUB(EVP_rc5_32_12_16_cbc, const EVP_CIPHER *);
LIBSTUB(EVP_rc5_32_12_16_ecb, const EVP_CIPHER *);
LIBSTUB(EVP_rc5_32_12_16_cfb64, const EVP_CIPHER *);
LIBSTUB(EVP_rc5_32_12_16_ofb, const EVP_CIPHER *);
LIBSTUB(EVP_aes_128_ecb, const EVP_CIPHER *);
LIBSTUB(EVP_aes_128_cbc, const EVP_CIPHER *);
LIBSTUB(EVP_aes_128_cfb1, const EVP_CIPHER *);
LIBSTUB(EVP_aes_128_cfb8, const EVP_CIPHER *);
LIBSTUB(EVP_aes_128_cfb128, const EVP_CIPHER *);
LIBSTUB(EVP_aes_128_ofb, const EVP_CIPHER *);
LIBSTUB(EVP_aes_192_ecb, const EVP_CIPHER *);
LIBSTUB(EVP_aes_192_cbc, const EVP_CIPHER *);
LIBSTUB(EVP_aes_192_cfb1, const EVP_CIPHER *);
LIBSTUB(EVP_aes_192_cfb8, const EVP_CIPHER *);
LIBSTUB(EVP_aes_192_cfb128, const EVP_CIPHER *);
LIBSTUB(EVP_aes_192_ofb, const EVP_CIPHER *);
LIBSTUB(EVP_aes_256_ecb, const EVP_CIPHER *);
LIBSTUB(EVP_aes_256_cbc, const EVP_CIPHER *);
LIBSTUB(EVP_aes_256_cfb1, const EVP_CIPHER *);
LIBSTUB(EVP_aes_256_cfb8, const EVP_CIPHER *);
LIBSTUB(EVP_aes_256_cfb128, const EVP_CIPHER *);
LIBSTUB(EVP_aes_256_ofb, const EVP_CIPHER *);
LIBSTUB(OBSOLETE_OPENSSL_add_all_algorithms_noconf, void);
LIBSTUB(OBSOLETE_OPENSSL_add_all_algorithms_conf, void);
LIBSTUB(OBSOLETE_OpenSSL_add_all_ciphers, void);
LIBSTUB(OBSOLETE_OpenSSL_add_all_digests, void);
LIBSTUB(EVP_add_cipher, int);
LIBSTUB(EVP_add_digest, int);
LIBSTUB(EVP_get_cipherbyname, const EVP_CIPHER *);
LIBSTUB(EVP_get_digestbyname, const EVP_MD *);
LIBSTUB(EVP_PKEY_decrypt, int);
LIBSTUB(EVP_PKEY_encrypt, int);
LIBSTUB(EVP_PKEY_type, int);
LIBSTUB(EVP_PKEY_get_bits, int);
LIBSTUB(EVP_PKEY_get_size, int);
LIBSTUB(EVP_PKEY_assign, int);
LIBSTUB(EVP_PKEY_set1_RSA, int);
LIBSTUB(EVP_PKEY_get1_RSA, struct rsa_st *);
LIBSTUB(EVP_PKEY_set1_DSA, int);
LIBSTUB(EVP_PKEY_get1_DSA, struct dsa_st *);
LIBSTUB(EVP_PKEY_set1_DH, int);
LIBSTUB(EVP_PKEY_get1_DH, struct dh_st *);
LIBSTUB(EVP_PKEY_new, EVP_PKEY *);
LIBSTUB(EVP_PKEY_free, void);
LIBSTUB(d2i_PublicKey, EVP_PKEY *);
LIBSTUB(i2d_PublicKey, int);
LIBSTUB(d2i_PrivateKey, EVP_PKEY *);
LIBSTUB(d2i_AutoPrivateKey, EVP_PKEY *);
LIBSTUB(i2d_PrivateKey, int);
LIBSTUB(EVP_PKEY_copy_parameters, int);
LIBSTUB(EVP_PKEY_missing_parameters, int);
LIBSTUB(EVP_PKEY_save_parameters, int);
LIBSTUB(EVP_PKEY_cmp_parameters, int);
LIBSTUB(EVP_CIPHER_get_type, int);
LIBSTUB(EVP_CIPHER_param_to_asn1, int);
LIBSTUB(EVP_CIPHER_asn1_to_param, int);
LIBSTUB(EVP_CIPHER_set_asn1_iv, int);
LIBSTUB(EVP_CIPHER_get_asn1_iv, int);
LIBSTUB(PKCS5_PBE_keyivgen, int);
LIBSTUB(PKCS5_PBKDF2_HMAC_SHA1, int);
LIBSTUB(PKCS5_v2_PBE_keyivgen, int);
LIBSTUB(PKCS5_PBE_add, void);
LIBSTUB(EVP_PBE_CipherInit, int);
LIBSTUB(EVP_PBE_alg_add, int);
LIBSTUB(EVP_PBE_cleanup, void);
LIBSTUB(ERR_load_EVP_strings, int);
LIBSTUB(HMAC_Init, int);
LIBSTUB(HMAC_Init_ex, int);
LIBSTUB(HMAC_Update, int);
LIBSTUB(HMAC_Final, int);
LIBSTUB(HMAC, unsigned char *);
LIBSTUB(OPENSSL_LH_new, OPENSSL_LHASH *);
LIBSTUB(OPENSSL_LH_free, void);
LIBSTUB(OPENSSL_LH_insert, void *);
LIBSTUB(OPENSSL_LH_delete, void *);
LIBSTUB(OPENSSL_LH_retrieve, void *);
LIBSTUB(OPENSSL_LH_doall, void);
LIBSTUB(OPENSSL_LH_doall_arg, void);
LIBSTUB(OPENSSL_LH_strhash, unsigned long);
LIBSTUB(OPENSSL_LH_num_items, unsigned long);
LIBSTUB(OPENSSL_LH_stats_bio, void);
LIBSTUB(OPENSSL_LH_node_stats_bio, void);
LIBSTUB(OPENSSL_LH_node_usage_stats_bio, void);
LIBSTUB(OBJ_NAME_init, int);
LIBSTUB(OBJ_NAME_new_index, int);
LIBSTUB(OBJ_NAME_get, const char *);
LIBSTUB(OBJ_NAME_add, int);
LIBSTUB(OBJ_NAME_remove, int);
LIBSTUB(OBJ_NAME_cleanup, void);
LIBSTUB(OBJ_NAME_do_all, void);
LIBSTUB(OBJ_NAME_do_all_sorted, void);
LIBSTUB(OBJ_dup, ASN1_OBJECT *);
LIBSTUB(OBJ_nid2obj, ASN1_OBJECT *);
LIBSTUB(OBJ_nid2ln, const char *);
LIBSTUB(OBJ_nid2sn, const char *);
LIBSTUB(OBJ_obj2nid, int);
LIBSTUB(OBJ_txt2obj, ASN1_OBJECT *);
LIBSTUB(OBJ_obj2txt, int);
LIBSTUB(OBJ_txt2nid, int);
LIBSTUB(OBJ_ln2nid, int);
LIBSTUB(OBJ_sn2nid, int);
LIBSTUB(OBJ_cmp, int);
LIBSTUB(OBJ_new_nid, int);
LIBSTUB(OBJ_add_object, int);
LIBSTUB(OBJ_create, int);
LIBSTUB(OBJ_create_objects, int);
LIBSTUB(ERR_load_OBJ_strings, int);
LIBSTUB(OCSP_sendreq_bio, OCSP_RESPONSE *);
LIBSTUB(OCSP_cert_to_id, OCSP_CERTID *);
LIBSTUB(OCSP_cert_id_new, OCSP_CERTID *);
LIBSTUB(OCSP_request_add0_id, OCSP_ONEREQ *);
LIBSTUB(OCSP_request_add1_nonce, int);
LIBSTUB(OCSP_basic_add1_nonce, int);
LIBSTUB(OCSP_check_nonce, int);
LIBSTUB(OCSP_copy_nonce, int);
LIBSTUB(OCSP_request_set1_name, int);
LIBSTUB(OCSP_request_add1_cert, int);
LIBSTUB(OCSP_request_sign, int);
LIBSTUB(OCSP_response_status, int);
LIBSTUB(OCSP_response_get1_basic, OCSP_BASICRESP *);
LIBSTUB(OCSP_resp_count, int);
LIBSTUB(OCSP_resp_get0, OCSP_SINGLERESP *);
LIBSTUB(OCSP_resp_find, int);
LIBSTUB(OCSP_single_get0_status, int);
LIBSTUB(OCSP_resp_find_status, int);
LIBSTUB(OCSP_check_validity, int);
LIBSTUB(OCSP_request_verify, int);
LIBSTUB(OBSOLETE_OCSP_parse_url, int);
LIBSTUB(OCSP_id_issuer_cmp, int);
LIBSTUB(OCSP_id_cmp, int);
LIBSTUB(OCSP_request_onereq_count, int);
LIBSTUB(OCSP_request_onereq_get0, OCSP_ONEREQ *);
LIBSTUB(OCSP_onereq_get0_id, OCSP_CERTID *);
LIBSTUB(OCSP_id_get0_info, int);
LIBSTUB(OCSP_request_is_signed, int);
LIBSTUB(OCSP_response_create, OCSP_RESPONSE *);
LIBSTUB(OCSP_basic_add1_status, OCSP_SINGLERESP *);
LIBSTUB(OCSP_basic_add1_cert, int);
LIBSTUB(OCSP_basic_sign, int);
LIBSTUB(OCSP_crlID_new, X509_EXTENSION *);
LIBSTUB(OCSP_accept_responses_new, X509_EXTENSION *);
LIBSTUB(OCSP_archive_cutoff_new, X509_EXTENSION *);
LIBSTUB(OCSP_url_svcloc_new, X509_EXTENSION *);
LIBSTUB(OCSP_REQUEST_get_ext_count, int);
LIBSTUB(OCSP_REQUEST_get_ext_by_NID, int);
LIBSTUB(OCSP_REQUEST_get_ext_by_OBJ, int);
LIBSTUB(OCSP_REQUEST_get_ext_by_critical, int);
LIBSTUB(OCSP_REQUEST_get_ext, X509_EXTENSION *);
LIBSTUB(OCSP_REQUEST_delete_ext, X509_EXTENSION *);
LIBSTUB(OCSP_REQUEST_get1_ext_d2i, void *);
LIBSTUB(OCSP_REQUEST_add1_ext_i2d, int);
LIBSTUB(OCSP_REQUEST_add_ext, int);
LIBSTUB(OCSP_ONEREQ_get_ext_count, int);
LIBSTUB(OCSP_ONEREQ_get_ext_by_NID, int);
LIBSTUB(OCSP_ONEREQ_get_ext_by_OBJ, int);
LIBSTUB(OCSP_ONEREQ_get_ext_by_critical, int);
LIBSTUB(OCSP_ONEREQ_get_ext, X509_EXTENSION *);
LIBSTUB(OCSP_ONEREQ_delete_ext, X509_EXTENSION *);
LIBSTUB(OCSP_ONEREQ_get1_ext_d2i, void *);
LIBSTUB(OCSP_ONEREQ_add1_ext_i2d, int);
LIBSTUB(OCSP_ONEREQ_add_ext, int);
LIBSTUB(OCSP_BASICRESP_get_ext_count, int);
LIBSTUB(OCSP_BASICRESP_get_ext_by_NID, int);
LIBSTUB(OCSP_BASICRESP_get_ext_by_OBJ, int);
LIBSTUB(OCSP_BASICRESP_get_ext_by_critical, int);
LIBSTUB(OCSP_BASICRESP_get_ext, X509_EXTENSION *);
LIBSTUB(OCSP_BASICRESP_delete_ext, X509_EXTENSION *);
LIBSTUB(OCSP_BASICRESP_get1_ext_d2i, void *);
LIBSTUB(OCSP_BASICRESP_add1_ext_i2d, int);
LIBSTUB(OCSP_BASICRESP_add_ext, int);
LIBSTUB(OCSP_SINGLERESP_get_ext_count, int);
LIBSTUB(OCSP_SINGLERESP_get_ext_by_NID, int);
LIBSTUB(OCSP_SINGLERESP_get_ext_by_OBJ, int);
LIBSTUB(OCSP_SINGLERESP_get_ext_by_critical, int);
LIBSTUB(OCSP_SINGLERESP_get_ext, X509_EXTENSION *);
LIBSTUB(OCSP_SINGLERESP_delete_ext, X509_EXTENSION *);
LIBSTUB(OCSP_SINGLERESP_get1_ext_d2i, void *);
LIBSTUB(OCSP_SINGLERESP_add1_ext_i2d, int);
LIBSTUB(OCSP_SINGLERESP_add_ext, int);
LIBSTUB(OCSP_SINGLERESP_new, OCSP_SINGLERESP *);
LIBSTUB(OCSP_SINGLERESP_free, void);
LIBSTUB(d2i_OCSP_SINGLERESP, OCSP_SINGLERESP *);
LIBSTUB(i2d_OCSP_SINGLERESP, int);
LIBSTUB(OCSP_SINGLERESP_it, const ASN1_ITEM *);
LIBSTUB(OCSP_CERTSTATUS_new, OCSP_CERTSTATUS *);
LIBSTUB(OCSP_CERTSTATUS_free, void);
LIBSTUB(d2i_OCSP_CERTSTATUS, OCSP_CERTSTATUS *);
LIBSTUB(i2d_OCSP_CERTSTATUS, int);
LIBSTUB(OCSP_CERTSTATUS_it, const ASN1_ITEM *);
LIBSTUB(OCSP_REVOKEDINFO_new, OCSP_REVOKEDINFO *);
LIBSTUB(OCSP_REVOKEDINFO_free, void);
LIBSTUB(d2i_OCSP_REVOKEDINFO, OCSP_REVOKEDINFO *);
LIBSTUB(i2d_OCSP_REVOKEDINFO, int);
LIBSTUB(OCSP_REVOKEDINFO_it, const ASN1_ITEM *);
LIBSTUB(OCSP_BASICRESP_new, OCSP_BASICRESP *);
LIBSTUB(OCSP_BASICRESP_free, void);
LIBSTUB(d2i_OCSP_BASICRESP, OCSP_BASICRESP *);
LIBSTUB(i2d_OCSP_BASICRESP, int);
LIBSTUB(OCSP_BASICRESP_it, const ASN1_ITEM *);
LIBSTUB(OCSP_RESPDATA_new, OCSP_RESPDATA *);
LIBSTUB(OCSP_RESPDATA_free, void);
LIBSTUB(d2i_OCSP_RESPDATA, OCSP_RESPDATA *);
LIBSTUB(i2d_OCSP_RESPDATA, int);
LIBSTUB(OCSP_RESPDATA_it, const ASN1_ITEM *);
LIBSTUB(OCSP_RESPID_new, OCSP_RESPID *);
LIBSTUB(OCSP_RESPID_free, void);
LIBSTUB(d2i_OCSP_RESPID, OCSP_RESPID *);
LIBSTUB(i2d_OCSP_RESPID, int);
LIBSTUB(OCSP_RESPID_it, const ASN1_ITEM *);
LIBSTUB(OCSP_RESPONSE_new, OCSP_RESPONSE *);
LIBSTUB(OCSP_RESPONSE_free, void);
LIBSTUB(d2i_OCSP_RESPONSE, OCSP_RESPONSE *);
LIBSTUB(i2d_OCSP_RESPONSE, int);
LIBSTUB(OCSP_RESPONSE_it, const ASN1_ITEM *);
LIBSTUB(OCSP_RESPBYTES_new, OCSP_RESPBYTES *);
LIBSTUB(OCSP_RESPBYTES_free, void);
LIBSTUB(d2i_OCSP_RESPBYTES, OCSP_RESPBYTES *);
LIBSTUB(i2d_OCSP_RESPBYTES, int);
LIBSTUB(OCSP_RESPBYTES_it, const ASN1_ITEM *);
LIBSTUB(OCSP_ONEREQ_new, OCSP_ONEREQ *);
LIBSTUB(OCSP_ONEREQ_free, void);
LIBSTUB(d2i_OCSP_ONEREQ, OCSP_ONEREQ *);
LIBSTUB(i2d_OCSP_ONEREQ, int);
LIBSTUB(OCSP_ONEREQ_it, const ASN1_ITEM *);
LIBSTUB(OCSP_CERTID_new, OCSP_CERTID *);
LIBSTUB(OCSP_CERTID_free, void);
LIBSTUB(d2i_OCSP_CERTID, OCSP_CERTID *);
LIBSTUB(i2d_OCSP_CERTID, int);
LIBSTUB(OCSP_CERTID_it, const ASN1_ITEM *);
LIBSTUB(OCSP_REQUEST_new, OCSP_REQUEST *);
LIBSTUB(OCSP_REQUEST_free, void);
LIBSTUB(d2i_OCSP_REQUEST, OCSP_REQUEST *);
LIBSTUB(i2d_OCSP_REQUEST, int);
LIBSTUB(OCSP_REQUEST_it, const ASN1_ITEM *);
LIBSTUB(OCSP_SIGNATURE_new, OCSP_SIGNATURE *);
LIBSTUB(OCSP_SIGNATURE_free, void);
LIBSTUB(d2i_OCSP_SIGNATURE, OCSP_SIGNATURE *);
LIBSTUB(i2d_OCSP_SIGNATURE, int);
LIBSTUB(OCSP_SIGNATURE_it, const ASN1_ITEM *);
LIBSTUB(OCSP_REQINFO_new, OCSP_REQINFO *);
LIBSTUB(OCSP_REQINFO_free, void);
LIBSTUB(d2i_OCSP_REQINFO, OCSP_REQINFO *);
LIBSTUB(i2d_OCSP_REQINFO, int);
LIBSTUB(OCSP_REQINFO_it, const ASN1_ITEM *);
LIBSTUB(OCSP_CRLID_new, OCSP_CRLID *);
LIBSTUB(OCSP_CRLID_free, void);
LIBSTUB(d2i_OCSP_CRLID, OCSP_CRLID *);
LIBSTUB(i2d_OCSP_CRLID, int);
LIBSTUB(OCSP_CRLID_it, const ASN1_ITEM *);
LIBSTUB(OCSP_SERVICELOC_new, OCSP_SERVICELOC *);
LIBSTUB(OCSP_SERVICELOC_free, void);
LIBSTUB(d2i_OCSP_SERVICELOC, OCSP_SERVICELOC *);
LIBSTUB(i2d_OCSP_SERVICELOC, int);
LIBSTUB(OCSP_SERVICELOC_it, const ASN1_ITEM *);
LIBSTUB(OCSP_response_status_str, const char *);
LIBSTUB(OCSP_cert_status_str, const char *);
LIBSTUB(OCSP_crl_reason_str, const char *);
LIBSTUB(OCSP_REQUEST_print, int);
LIBSTUB(OCSP_RESPONSE_print, int);
LIBSTUB(OCSP_basic_verify, int);
LIBSTUB(ERR_load_OCSP_strings, int);
LIBSTUB(PEM_get_EVP_CIPHER_INFO, int);
LIBSTUB(PEM_do_header, int);
LIBSTUB(PEM_read_bio, int);
LIBSTUB(PEM_write_bio, int);
LIBSTUB(PEM_bytes_read_bio, int);
LIBSTUB(PEM_ASN1_read_bio, void *);
LIBSTUB(PEM_ASN1_write_bio, int);
LIBSTUB(PEM_X509_INFO_read_bio, STACK_OF(X509_INFO) *);
LIBSTUB(PEM_X509_INFO_write_bio, int);
LIBSTUB(PEM_SignInit, int);
LIBSTUB(PEM_SignUpdate, int);
LIBSTUB(PEM_SignFinal, int);
LIBSTUB(PEM_def_callback, int);
LIBSTUB(PEM_proc_type, void);
LIBSTUB(PEM_dek_info, void);
LIBSTUB(PEM_read_bio_X509, X509 *);
LIBSTUB(PEM_write_bio_X509, int);
LIBSTUB(PEM_read_bio_X509_AUX, X509 *);
LIBSTUB(PEM_write_bio_X509_AUX, int);
LIBSTUB(PEM_read_bio_X509_REQ, X509_REQ *);
LIBSTUB(PEM_write_bio_X509_REQ, int);
LIBSTUB(PEM_write_bio_X509_REQ_NEW, int);
LIBSTUB(PEM_read_bio_X509_CRL, X509_CRL *);
LIBSTUB(PEM_write_bio_X509_CRL, int);
LIBSTUB(PEM_read_bio_PKCS7, PKCS7 *);
LIBSTUB(PEM_write_bio_PKCS7, int);
LIBSTUB(PEM_read_bio_NETSCAPE_CERT_SEQUENCE, NETSCAPE_CERT_SEQUENCE *);
LIBSTUB(PEM_write_bio_NETSCAPE_CERT_SEQUENCE, int);
LIBSTUB(PEM_read_bio_PKCS8, X509_SIG *);
LIBSTUB(PEM_write_bio_PKCS8, int);
LIBSTUB(PEM_read_bio_PKCS8_PRIV_KEY_INFO, PKCS8_PRIV_KEY_INFO *);
LIBSTUB(PEM_write_bio_PKCS8_PRIV_KEY_INFO, int);
LIBSTUB(PEM_read_bio_RSAPrivateKey, RSA *);
LIBSTUB(PEM_write_bio_RSAPrivateKey, int);
LIBSTUB(PEM_read_bio_RSAPublicKey, RSA *);
LIBSTUB(PEM_write_bio_RSAPublicKey, int);
LIBSTUB(PEM_read_bio_RSA_PUBKEY, RSA *);
LIBSTUB(PEM_write_bio_RSA_PUBKEY, int);
LIBSTUB(PEM_read_bio_DSAPrivateKey, DSA *);
LIBSTUB(PEM_write_bio_DSAPrivateKey, int);
LIBSTUB(PEM_read_bio_DSA_PUBKEY, DSA *);
LIBSTUB(PEM_write_bio_DSA_PUBKEY, int);
LIBSTUB(PEM_read_bio_DSAparams, DSA *);
LIBSTUB(PEM_write_bio_DSAparams, int);
LIBSTUB(PEM_read_bio_DHparams, DH *);
LIBSTUB(PEM_write_bio_DHparams, int);
LIBSTUB(PEM_read_bio_PrivateKey, EVP_PKEY *);
LIBSTUB(PEM_write_bio_PrivateKey, int);
LIBSTUB(PEM_read_bio_PUBKEY, EVP_PKEY *);
LIBSTUB(PEM_write_bio_PUBKEY, int);
LIBSTUB(PEM_write_bio_PKCS8PrivateKey_nid, int);
LIBSTUB(PEM_write_bio_PKCS8PrivateKey, int);
LIBSTUB(i2d_PKCS8PrivateKey_bio, int);
LIBSTUB(i2d_PKCS8PrivateKey_nid_bio, int);
LIBSTUB(d2i_PKCS8PrivateKey_bio, EVP_PKEY *);
LIBSTUB(ERR_load_PEM_strings, int);
LIBSTUB(OBSOLETE_PKCS12_x5092certbag, PKCS12_SAFEBAG *);
LIBSTUB(OBSOLETE_PKCS12_x509crl2certbag, PKCS12_SAFEBAG *);
LIBSTUB(OBSOLETE_PKCS12_certbag2x509, X509 *);
LIBSTUB(PKCS12_item_pack_safebag, PKCS12_SAFEBAG *);
LIBSTUB(OBSOLETE_PKCS12_MAKE_KEYBAG, PKCS12_SAFEBAG *);
LIBSTUB(PKCS8_decrypt, PKCS8_PRIV_KEY_INFO *);
LIBSTUB(PKCS12_decrypt_skey, PKCS8_PRIV_KEY_INFO *);
LIBSTUB(PKCS8_encrypt, X509_SIG *);
LIBSTUB(OBSOLETE_PKCS12_MAKE_SHKEYBAG, PKCS12_SAFEBAG *);
LIBSTUB(PKCS12_pack_p7data, PKCS7 *);
LIBSTUB(PKCS12_unpack_p7data, STACK_OF(PKCS12_SAFEBAG) *);
LIBSTUB(PKCS12_pack_p7encdata, PKCS7 *);
LIBSTUB(PKCS12_unpack_p7encdata, STACK_OF(PKCS12_SAFEBAG) *);
LIBSTUB(PKCS12_pack_authsafes, int);
LIBSTUB(PKCS12_unpack_authsafes, STACK_OF(PKCS7) *);
LIBSTUB(PKCS12_add_localkeyid, int);
LIBSTUB(PKCS12_add_friendlyname_asc, int);
LIBSTUB(PKCS12_add_CSPName_asc, int);
LIBSTUB(PKCS12_add_friendlyname_uni, int);
LIBSTUB(PKCS8_add_keyusage, int);
LIBSTUB(PKCS12_get_attr_gen, ASN1_TYPE *);
LIBSTUB(PKCS12_get_friendlyname, char *);
LIBSTUB(PKCS12_pbe_crypt, unsigned char *);
LIBSTUB(PKCS12_item_decrypt_d2i, void *);
LIBSTUB(PKCS12_item_i2d_encrypt, ASN1_OCTET_STRING *);
LIBSTUB(PKCS12_init, PKCS12 *);
LIBSTUB(PKCS12_key_gen_asc, int);
LIBSTUB(PKCS12_key_gen_uni, int);
LIBSTUB(PKCS12_PBE_keyivgen, int);
LIBSTUB(PKCS12_gen_mac, int);
LIBSTUB(PKCS12_verify_mac, int);
LIBSTUB(PKCS12_set_mac, int);
LIBSTUB(PKCS12_setup_mac, int);
LIBSTUB(OPENSSL_asc2uni, unsigned char *);
LIBSTUB(OPENSSL_uni2asc, char *);
LIBSTUB(PKCS12_new, PKCS12 *);
LIBSTUB(PKCS12_free, void);
LIBSTUB(d2i_PKCS12, PKCS12 *);
LIBSTUB(i2d_PKCS12, int);
LIBSTUB(PKCS12_it, const ASN1_ITEM *);
LIBSTUB(PKCS12_MAC_DATA_new, PKCS12_MAC_DATA *);
LIBSTUB(PKCS12_MAC_DATA_free, void);
LIBSTUB(d2i_PKCS12_MAC_DATA, PKCS12_MAC_DATA *);
LIBSTUB(i2d_PKCS12_MAC_DATA, int);
LIBSTUB(PKCS12_MAC_DATA_it, const ASN1_ITEM *);
LIBSTUB(PKCS12_SAFEBAG_new, PKCS12_SAFEBAG *);
LIBSTUB(PKCS12_SAFEBAG_free, void);
LIBSTUB(d2i_PKCS12_SAFEBAG, PKCS12_SAFEBAG *);
LIBSTUB(i2d_PKCS12_SAFEBAG, int);
LIBSTUB(PKCS12_SAFEBAG_it, const ASN1_ITEM *);
LIBSTUB(PKCS12_BAGS_new, PKCS12_BAGS *);
LIBSTUB(PKCS12_BAGS_free, void);
LIBSTUB(d2i_PKCS12_BAGS, PKCS12_BAGS *);
LIBSTUB(i2d_PKCS12_BAGS, int);
LIBSTUB(PKCS12_BAGS_it, const ASN1_ITEM *);
LIBSTUB(PKCS12_SAFEBAGS_it, const ASN1_ITEM *);
LIBSTUB(PKCS12_AUTHSAFES_it, const ASN1_ITEM *);
LIBSTUB(PKCS12_PBE_add, void);
LIBSTUB(PKCS12_parse, int);
LIBSTUB(PKCS12_create, PKCS12 *);
LIBSTUB(i2d_PKCS12_bio, int);
LIBSTUB(d2i_PKCS12_bio, PKCS12 *);
LIBSTUB(PKCS12_newpass, int);
LIBSTUB(ERR_load_PKCS12_strings, int);
LIBSTUB(PKCS7_ISSUER_AND_SERIAL_digest, int);
LIBSTUB(PKCS7_dup, PKCS7 *);
LIBSTUB(d2i_PKCS7_bio, PKCS7 *);
LIBSTUB(i2d_PKCS7_bio, int);
LIBSTUB(PKCS7_ISSUER_AND_SERIAL_new, PKCS7_ISSUER_AND_SERIAL *);
LIBSTUB(PKCS7_ISSUER_AND_SERIAL_free, void);
LIBSTUB(d2i_PKCS7_ISSUER_AND_SERIAL, PKCS7_ISSUER_AND_SERIAL *);
LIBSTUB(i2d_PKCS7_ISSUER_AND_SERIAL, int);
LIBSTUB(PKCS7_ISSUER_AND_SERIAL_it, const ASN1_ITEM *);
LIBSTUB(PKCS7_SIGNER_INFO_new, PKCS7_SIGNER_INFO *);
LIBSTUB(PKCS7_SIGNER_INFO_free, void);
LIBSTUB(d2i_PKCS7_SIGNER_INFO, PKCS7_SIGNER_INFO *);
LIBSTUB(i2d_PKCS7_SIGNER_INFO, int);
LIBSTUB(PKCS7_SIGNER_INFO_it, const ASN1_ITEM *);
LIBSTUB(PKCS7_RECIP_INFO_new, PKCS7_RECIP_INFO *);
LIBSTUB(PKCS7_RECIP_INFO_free, void);
LIBSTUB(d2i_PKCS7_RECIP_INFO, PKCS7_RECIP_INFO *);
LIBSTUB(i2d_PKCS7_RECIP_INFO, int);
LIBSTUB(PKCS7_RECIP_INFO_it, const ASN1_ITEM *);
LIBSTUB(PKCS7_SIGNED_new, PKCS7_SIGNED *);
LIBSTUB(PKCS7_SIGNED_free, void);
LIBSTUB(d2i_PKCS7_SIGNED, PKCS7_SIGNED *);
LIBSTUB(i2d_PKCS7_SIGNED, int);
LIBSTUB(PKCS7_SIGNED_it, const ASN1_ITEM *);
LIBSTUB(PKCS7_ENC_CONTENT_new, PKCS7_ENC_CONTENT *);
LIBSTUB(PKCS7_ENC_CONTENT_free, void);
LIBSTUB(d2i_PKCS7_ENC_CONTENT, PKCS7_ENC_CONTENT *);
LIBSTUB(i2d_PKCS7_ENC_CONTENT, int);
LIBSTUB(PKCS7_ENC_CONTENT_it, const ASN1_ITEM *);
LIBSTUB(PKCS7_ENVELOPE_new, PKCS7_ENVELOPE *);
LIBSTUB(PKCS7_ENVELOPE_free, void);
LIBSTUB(d2i_PKCS7_ENVELOPE, PKCS7_ENVELOPE *);
LIBSTUB(i2d_PKCS7_ENVELOPE, int);
LIBSTUB(PKCS7_ENVELOPE_it, const ASN1_ITEM *);
LIBSTUB(PKCS7_SIGN_ENVELOPE_new, PKCS7_SIGN_ENVELOPE *);
LIBSTUB(PKCS7_SIGN_ENVELOPE_free, void);
LIBSTUB(d2i_PKCS7_SIGN_ENVELOPE, PKCS7_SIGN_ENVELOPE *);
LIBSTUB(i2d_PKCS7_SIGN_ENVELOPE, int);
LIBSTUB(PKCS7_SIGN_ENVELOPE_it, const ASN1_ITEM *);
LIBSTUB(PKCS7_DIGEST_new, PKCS7_DIGEST *);
LIBSTUB(PKCS7_DIGEST_free, void);
LIBSTUB(d2i_PKCS7_DIGEST, PKCS7_DIGEST *);
LIBSTUB(i2d_PKCS7_DIGEST, int);
LIBSTUB(PKCS7_DIGEST_it, const ASN1_ITEM *);
LIBSTUB(PKCS7_ENCRYPT_new, PKCS7_ENCRYPT *);
LIBSTUB(PKCS7_ENCRYPT_free, void);
LIBSTUB(d2i_PKCS7_ENCRYPT, PKCS7_ENCRYPT *);
LIBSTUB(i2d_PKCS7_ENCRYPT, int);
LIBSTUB(PKCS7_ENCRYPT_it, const ASN1_ITEM *);
LIBSTUB(PKCS7_new, PKCS7 *);
LIBSTUB(PKCS7_free, void);
LIBSTUB(d2i_PKCS7, PKCS7 *);
LIBSTUB(i2d_PKCS7, int);
LIBSTUB(PKCS7_it, const ASN1_ITEM *);
LIBSTUB(PKCS7_ATTR_SIGN_it, const ASN1_ITEM *);
LIBSTUB(PKCS7_ATTR_VERIFY_it, const ASN1_ITEM *);
LIBSTUB(PKCS7_ctrl, long);
LIBSTUB(PKCS7_set_type, int);
LIBSTUB(PKCS7_set_content, int);
LIBSTUB(PKCS7_SIGNER_INFO_set, int);
LIBSTUB(PKCS7_add_signer, int);
LIBSTUB(PKCS7_add_certificate, int);
LIBSTUB(PKCS7_add_crl, int);
LIBSTUB(PKCS7_content_new, int);
LIBSTUB(PKCS7_dataVerify, int);
LIBSTUB(PKCS7_signatureVerify, int);
LIBSTUB(PKCS7_dataInit, BIO *);
LIBSTUB(PKCS7_dataFinal, int);
LIBSTUB(PKCS7_dataDecode, BIO *);
LIBSTUB(PKCS7_add_signature, PKCS7_SIGNER_INFO *);
LIBSTUB(PKCS7_cert_from_signer_info, X509 *);
LIBSTUB(PKCS7_get_signer_info, STACK_OF(PKCS7_SIGNER_INFO) *);
LIBSTUB(PKCS7_add_recipient, PKCS7_RECIP_INFO *);
LIBSTUB(PKCS7_add_recipient_info, int);
LIBSTUB(PKCS7_RECIP_INFO_set, int);
LIBSTUB(PKCS7_set_cipher, int);
LIBSTUB(PKCS7_get_issuer_and_serial, PKCS7_ISSUER_AND_SERIAL *);
LIBSTUB(PKCS7_digest_from_attributes, ASN1_OCTET_STRING *);
LIBSTUB(PKCS7_add_signed_attribute, int);
LIBSTUB(PKCS7_add_attribute, int);
LIBSTUB(PKCS7_get_attribute, ASN1_TYPE *);
LIBSTUB(PKCS7_get_signed_attribute, ASN1_TYPE *);
LIBSTUB(PKCS7_set_signed_attributes, int);
LIBSTUB(PKCS7_set_attributes, int);
LIBSTUB(PKCS7_sign, PKCS7 *);
LIBSTUB(PKCS7_verify, int);
LIBSTUB(PKCS7_get0_signers, STACK_OF(X509) *);
LIBSTUB(PKCS7_encrypt, PKCS7 *);
LIBSTUB(PKCS7_decrypt, int);
LIBSTUB(PKCS7_add_attrib_smimecap, int);
LIBSTUB(PKCS7_get_smimecap, STACK_OF(X509_ALGOR) *);
LIBSTUB(PKCS7_simple_smimecap, int);
LIBSTUB(SMIME_write_PKCS7, int);
LIBSTUB(SMIME_read_PKCS7, PKCS7 *);
LIBSTUB(SMIME_crlf_copy, int);
LIBSTUB(SMIME_text, int);
LIBSTUB(ERR_load_PKCS7_strings, int);
LIBSTUB(RAND_set_rand_method, int);
LIBSTUB(RAND_get_rand_method, const RAND_METHOD *);
LIBSTUB(RAND_bytes, int);
LIBSTUB(RAND_pseudo_bytes, int);
LIBSTUB(RAND_seed, void);
LIBSTUB(RAND_add, void);
LIBSTUB(RAND_load_file, int);
LIBSTUB(RAND_write_file, int);
LIBSTUB(RAND_file_name, const char *);
LIBSTUB(RAND_status, int);
LIBSTUB(RAND_poll, int);
LIBSTUB(ERR_load_RAND_strings, int);
LIBSTUB(SSL_CTX_set_msg_callback, void);
LIBSTUB(SSL_set_msg_callback, void);
LIBSTUB(SSL_CTX_sessions, LHASH_OF(SSL_SESSION) *);
LIBSTUB(SSL_get_finished, size_t);
LIBSTUB(SSL_get_peer_finished, size_t);
LIBSTUB(BIO_f_ssl, const BIO_METHOD *);
LIBSTUB(BIO_new_ssl, BIO *);
LIBSTUB(BIO_new_ssl_connect, BIO *);
LIBSTUB(BIO_new_buffer_ssl_connect, BIO *);
LIBSTUB(BIO_ssl_copy_session_id, int);
LIBSTUB(BIO_ssl_shutdown, void);
LIBSTUB(SSL_CTX_set_cipher_list, int);
LIBSTUB(SSL_CTX_new, SSL_CTX *);
LIBSTUB(SSL_CTX_free, void);
LIBSTUB(SSL_CTX_set_timeout, long);
LIBSTUB(SSL_CTX_get_timeout, long);
LIBSTUB(SSL_CTX_get_cert_store, X509_STORE *);
LIBSTUB(SSL_CTX_set_cert_store, void);
LIBSTUB(SSL_want, int);
LIBSTUB(SSL_clear, int);
LIBSTUB(SSL_CTX_flush_sessions, void);
LIBSTUB(SSL_get_current_cipher, const SSL_CIPHER *);
LIBSTUB(SSL_CIPHER_get_bits, int);
LIBSTUB(SSL_CIPHER_get_version, const char *);
LIBSTUB(SSL_CIPHER_get_name, const char *);
LIBSTUB(SSL_CIPHER_get_mac, const char *);
LIBSTUB(SSL_CIPHER_get_encryption, const char *);
LIBSTUB(SSL_CIPHER_get_authentication, const char *);
LIBSTUB(SSL_CIPHER_get_key_exchange, const char *);
LIBSTUB(SSL_get_fd, int);
LIBSTUB(SSL_get_rfd, int);
LIBSTUB(SSL_get_wfd, int);
LIBSTUB(SSL_get_cipher_list, const char *);
LIBSTUB(SSL_get_shared_ciphers, char *);
LIBSTUB(SSL_get_read_ahead, int);
LIBSTUB(SSL_pending, int);
LIBSTUB(SSL_set_fd, int);
LIBSTUB(SSL_set_rfd, int);
LIBSTUB(SSL_set_wfd, int);
LIBSTUB(SSL_set_bio, void);
LIBSTUB(SSL_get_rbio, BIO *);
LIBSTUB(SSL_get_wbio, BIO *);
LIBSTUB(SSL_set_cipher_list, int);
LIBSTUB(SSL_set_read_ahead, void);
LIBSTUB(SSL_get_verify_mode, int);
LIBSTUB(SSL_get_verify_depth, int);
LIBSTUB(SSL_get_verify_callback, void *);
LIBSTUB(SSL_set_verify, void);
LIBSTUB(SSL_set_verify_depth, void);
LIBSTUB(SSL_use_RSAPrivateKey, int);
LIBSTUB(SSL_use_RSAPrivateKey_ASN1, int);
LIBSTUB(SSL_use_PrivateKey, int);
LIBSTUB(SSL_use_PrivateKey_ASN1, int);
LIBSTUB(SSL_use_certificate, int);
LIBSTUB(SSL_use_certificate_ASN1, int);
LIBSTUB(SSL_use_RSAPrivateKey_file, int);
LIBSTUB(SSL_use_PrivateKey_file, int);
LIBSTUB(SSL_use_certificate_file, int);
LIBSTUB(SSL_CTX_use_RSAPrivateKey_file, int);
LIBSTUB(SSL_CTX_use_PrivateKey_file, int);
LIBSTUB(SSL_CTX_use_certificate_file, int);
LIBSTUB(SSL_CTX_use_certificate_chain_file, int);
LIBSTUB(SSL_load_client_CA_file, STACK_OF(X509_NAME) *);
LIBSTUB(SSL_add_file_cert_subjects_to_stack, int);
LIBSTUB(SSL_add_dir_cert_subjects_to_stack, int);
LIBSTUB(OBSOLETE_SSL_load_error_strings, void);
LIBSTUB(SSL_state_string, const char *);
LIBSTUB(SSL_rstate_string, const char *);
LIBSTUB(SSL_state_string_long, const char *);
LIBSTUB(SSL_rstate_string_long, const char *);
LIBSTUB(SSL_SESSION_get_time, long);
LIBSTUB(SSL_SESSION_set_time, long);
LIBSTUB(SSL_SESSION_get_timeout, long);
LIBSTUB(SSL_SESSION_set_timeout, long);
LIBSTUB(SSL_copy_session_id, int);
LIBSTUB(SSL_SESSION_new, SSL_SESSION *);
LIBSTUB(SSL_SESSION_print, int);
LIBSTUB(SSL_SESSION_free, void);
LIBSTUB(i2d_SSL_SESSION, int);
LIBSTUB(SSL_set_session, int);
LIBSTUB(SSL_CTX_add_session, int);
LIBSTUB(SSL_CTX_remove_session, int);
LIBSTUB(SSL_CTX_set_generate_session_id, int);
LIBSTUB(SSL_set_generate_session_id, int);
LIBSTUB(SSL_has_matching_session_id, int);
LIBSTUB(d2i_SSL_SESSION, SSL_SESSION *);
LIBSTUB(SSL_get1_peer_certificate, X509 *);
LIBSTUB(SSL_get_peer_cert_chain, STACK_OF(X509) *);
LIBSTUB(SSL_CTX_get_verify_mode, int);
LIBSTUB(SSL_CTX_get_verify_depth, int);
LIBSTUB(SSL_CTX_get_verify_callback, void *);
LIBSTUB(SSL_CTX_set_verify, void);
LIBSTUB(SSL_CTX_set_verify_depth, void);
LIBSTUB(SSL_CTX_set_cert_verify_callback, void);
LIBSTUB(SSL_CTX_use_RSAPrivateKey, int);
LIBSTUB(SSL_CTX_use_RSAPrivateKey_ASN1, int);
LIBSTUB(SSL_CTX_use_PrivateKey, int);
LIBSTUB(SSL_CTX_use_PrivateKey_ASN1, int);
LIBSTUB(SSL_CTX_use_certificate, int);
LIBSTUB(SSL_CTX_use_certificate_ASN1, int);
LIBSTUB(SSL_CTX_set_default_passwd_cb, void);
LIBSTUB(SSL_CTX_set_default_passwd_cb_userdata, void);
LIBSTUB(SSL_CTX_check_private_key, int);
LIBSTUB(SSL_check_private_key, int);
LIBSTUB(SSL_CTX_set_session_id_context, int);
LIBSTUB(SSL_new, SSL *);
LIBSTUB(SSL_set_session_id_context, int);
LIBSTUB(SSL_CTX_set_purpose, int);
LIBSTUB(SSL_set_purpose, int);
LIBSTUB(SSL_CTX_set_trust, int);
LIBSTUB(SSL_set_trust, int);
LIBSTUB(SSL_free, void);
LIBSTUB(SSL_accept, int);
LIBSTUB(SSL_connect, int);
LIBSTUB(SSL_read, int);
LIBSTUB(SSL_peek, int);
LIBSTUB(SSL_write, int);
LIBSTUB(SSL_ctrl, long);
LIBSTUB(SSL_callback_ctrl, long);
LIBSTUB(SSL_CTX_ctrl, long);
LIBSTUB(SSL_CTX_callback_ctrl, long);
LIBSTUB(SSL_get_error, int);
LIBSTUB(SSL_get_version, const char *);
LIBSTUB(SSL_CTX_set_ssl_version, int);
LIBSTUB(TLSv1_method, const SSL_METHOD *);
LIBSTUB(TLSv1_server_method, const SSL_METHOD *);
LIBSTUB(TLSv1_client_method, const SSL_METHOD *);
LIBSTUB(SSL_get_ciphers, STACK_OF(SSL_CIPHER) *);
LIBSTUB(SSL_do_handshake, int);
LIBSTUB(SSL_renegotiate, int);
LIBSTUB(SSL_renegotiate_pending, int);
LIBSTUB(SSL_shutdown, int);
LIBSTUB(SSL_get_ssl_method, const SSL_METHOD *);
LIBSTUB(SSL_set_ssl_method, int);
LIBSTUB(SSL_alert_type_string_long, const char *);
LIBSTUB(SSL_alert_type_string, const char *);
LIBSTUB(SSL_alert_desc_string_long, const char *);
LIBSTUB(SSL_alert_desc_string, const char *);
LIBSTUB(SSL_set_client_CA_list, void);
LIBSTUB(SSL_CTX_set_client_CA_list, void);
LIBSTUB(SSL_get_client_CA_list, STACK_OF(X509_NAME) *);
LIBSTUB(SSL_CTX_get_client_CA_list, STACK_OF(X509_NAME) *);
LIBSTUB(SSL_add_client_CA, int);
LIBSTUB(SSL_CTX_add_client_CA, int);
LIBSTUB(SSL_set_connect_state, void);
LIBSTUB(SSL_set_accept_state, void);
LIBSTUB(SSL_get_default_timeout, long);
LIBSTUB(OBSOLETE_SSL_library_init, int);
LIBSTUB(SSL_CIPHER_description, char *);
LIBSTUB(SSL_dup_CA_list, STACK_OF(X509_NAME) *);
LIBSTUB(SSL_dup, SSL *);
LIBSTUB(SSL_get_certificate, X509 *);
LIBSTUB(SSL_get_privatekey, struct evp_pkey_st *);
LIBSTUB(SSL_CTX_set_quiet_shutdown, void);
LIBSTUB(SSL_CTX_get_quiet_shutdown, int);
LIBSTUB(SSL_set_quiet_shutdown, void);
LIBSTUB(SSL_get_quiet_shutdown, int);
LIBSTUB(SSL_set_shutdown, void);
LIBSTUB(SSL_get_shutdown, int);
LIBSTUB(SSL_version, int);
LIBSTUB(SSL_CTX_set_default_verify_paths, int);
LIBSTUB(SSL_CTX_load_verify_locations, int);
LIBSTUB(SSL_get_session, SSL_SESSION *);
LIBSTUB(SSL_get1_session, SSL_SESSION *);
LIBSTUB(SSL_get_SSL_CTX, SSL_CTX *);
LIBSTUB(SSL_set_info_callback, void);
LIBSTUB(SSL_get_info_callback, void *);
LIBSTUB(SSL_set_verify_result, void);
LIBSTUB(SSL_get_verify_result, long);
LIBSTUB(SSL_set_ex_data, int);
LIBSTUB(SSL_get_ex_data, void *);
LIBSTUB(OBSOLETE_SSL_get_ex_new_index, int);
LIBSTUB(SSL_SESSION_set_ex_data, int);
LIBSTUB(SSL_SESSION_get_ex_data, void *);
LIBSTUB(OBSOLETE_SSL_SESSION_get_ex_new_index, int);
LIBSTUB(SSL_CTX_set_ex_data, int);
LIBSTUB(SSL_CTX_get_ex_data, void *);
LIBSTUB(OBSOLETE_SSL_CTX_get_ex_new_index, int);
LIBSTUB(SSL_get_ex_data_X509_STORE_CTX_idx, int);
LIBSTUB(SSL_CTX_set_tmp_dh_callback, void);
LIBSTUB(SSL_set_tmp_dh_callback, void);
LIBSTUB(SSL_COMP_add_compression_method, int);
LIBSTUB(ERR_load_SSL_strings, int);
LIBSTUB(OPENSSL_sk_num, int);
LIBSTUB(OPENSSL_sk_value, void *);
LIBSTUB(OPENSSL_sk_set, void *);
LIBSTUB(OPENSSL_sk_new, OPENSSL_STACK *);
LIBSTUB(OPENSSL_sk_new_null, OPENSSL_STACK *);
LIBSTUB(OPENSSL_sk_free, void);
LIBSTUB(OPENSSL_sk_pop_free, void);
LIBSTUB(OPENSSL_sk_insert, int);
LIBSTUB(OPENSSL_sk_delete, void *);
LIBSTUB(OPENSSL_sk_delete_ptr, void *);
LIBSTUB(OPENSSL_sk_find, int);
LIBSTUB(OPENSSL_sk_push, int);
LIBSTUB(OPENSSL_sk_unshift, int);
LIBSTUB(OPENSSL_sk_shift, void *);
LIBSTUB(OPENSSL_sk_pop, void *);
LIBSTUB(OPENSSL_sk_zero, void);
LIBSTUB(OPENSSL_sk_set_cmp_func, void *);
LIBSTUB(OPENSSL_sk_dup, OPENSSL_STACK *);
LIBSTUB(OPENSSL_sk_sort, void);
LIBSTUB(OPENSSL_sk_is_sorted, int);
LIBSTUB(TXT_DB_read, TXT_DB *);
LIBSTUB(TXT_DB_write, long);
LIBSTUB(TXT_DB_create_index, int);
LIBSTUB(TXT_DB_free, void);
LIBSTUB(TXT_DB_get_by_index, char **);
LIBSTUB(TXT_DB_insert, int);
LIBSTUB(UI_new, UI *);
LIBSTUB(UI_new_method, UI *);
LIBSTUB(UI_free, void);
LIBSTUB(UI_add_input_string, int);
LIBSTUB(UI_dup_input_string, int);
LIBSTUB(UI_add_verify_string, int);
LIBSTUB(UI_dup_verify_string, int);
LIBSTUB(UI_add_input_boolean, int);
LIBSTUB(UI_dup_input_boolean, int);
LIBSTUB(UI_add_info_string, int);
LIBSTUB(UI_dup_info_string, int);
LIBSTUB(UI_add_error_string, int);
LIBSTUB(UI_dup_error_string, int);
LIBSTUB(UI_construct_prompt, char *);
LIBSTUB(UI_add_user_data, void *);
LIBSTUB(UI_get0_user_data, void *);
LIBSTUB(UI_get0_result, const char *);
LIBSTUB(UI_process, int);
LIBSTUB(UI_ctrl, int);
LIBSTUB(OBSOLETE_UI_get_ex_new_index, int);
LIBSTUB(UI_set_ex_data, int);
LIBSTUB(UI_get_ex_data, void *);
LIBSTUB(UI_set_default_method, void);
LIBSTUB(UI_get_default_method, const UI_METHOD *);
LIBSTUB(UI_get_method, const UI_METHOD *);
LIBSTUB(UI_set_method, const UI_METHOD *);
LIBSTUB(UI_OpenSSL, UI_METHOD *);
LIBSTUB(UI_create_method, UI_METHOD *);
LIBSTUB(UI_destroy_method, void);
LIBSTUB(UI_method_set_opener, int);
LIBSTUB(UI_method_set_writer, int);
LIBSTUB(UI_method_set_flusher, int);
LIBSTUB(UI_method_set_reader, int);
LIBSTUB(UI_method_set_closer, int);
LIBSTUB(UI_method_get_opener, void *);
LIBSTUB(UI_method_get_writer, void *);
LIBSTUB(UI_method_get_flusher, void *);
LIBSTUB(UI_method_get_reader, void *);
LIBSTUB(UI_method_get_closer, void *);
LIBSTUB(UI_get_string_type, enum UI_string_types);
LIBSTUB(UI_get_input_flags, int);
LIBSTUB(UI_get0_output_string, const char *);
LIBSTUB(UI_get0_action_string, const char *);
LIBSTUB(UI_get0_result_string, const char *);
LIBSTUB(UI_get0_test_string, const char *);
LIBSTUB(UI_get_result_minsize, int);
LIBSTUB(UI_get_result_maxsize, int);
LIBSTUB(UI_set_result, int);
LIBSTUB(UI_UTIL_read_pw_string, int);
LIBSTUB(UI_UTIL_read_pw, int);
LIBSTUB(ERR_load_UI_strings, int);
LIBSTUB(X509_verify_cert_error_string, const char *);
LIBSTUB(X509_verify, int);
LIBSTUB(X509_REQ_verify, int);
LIBSTUB(X509_CRL_verify, int);
LIBSTUB(NETSCAPE_SPKI_verify, int);
LIBSTUB(NETSCAPE_SPKI_b64_decode, NETSCAPE_SPKI *);
LIBSTUB(NETSCAPE_SPKI_b64_encode, char *);
LIBSTUB(NETSCAPE_SPKI_get_pubkey, EVP_PKEY *);
LIBSTUB(NETSCAPE_SPKI_set_pubkey, int);
LIBSTUB(NETSCAPE_SPKI_print, int);
LIBSTUB(X509_signature_print, int);
LIBSTUB(X509_sign, int);
LIBSTUB(X509_REQ_sign, int);
LIBSTUB(X509_CRL_sign, int);
LIBSTUB(NETSCAPE_SPKI_sign, int);
LIBSTUB(X509_pubkey_digest, int);
LIBSTUB(X509_digest, int);
LIBSTUB(X509_CRL_digest, int);
LIBSTUB(X509_REQ_digest, int);
LIBSTUB(X509_NAME_digest, int);
LIBSTUB(d2i_X509_bio, X509 *);
LIBSTUB(i2d_X509_bio, int);
LIBSTUB(d2i_X509_CRL_bio, X509_CRL *);
LIBSTUB(i2d_X509_CRL_bio, int);
LIBSTUB(d2i_X509_REQ_bio, X509_REQ *);
LIBSTUB(i2d_X509_REQ_bio, int);
LIBSTUB(d2i_RSAPrivateKey_bio, RSA *);
LIBSTUB(i2d_RSAPrivateKey_bio, int);
LIBSTUB(d2i_RSAPublicKey_bio, RSA *);
LIBSTUB(i2d_RSAPublicKey_bio, int);
LIBSTUB(d2i_RSA_PUBKEY_bio, RSA *);
LIBSTUB(i2d_RSA_PUBKEY_bio, int);
LIBSTUB(d2i_DSA_PUBKEY_bio, DSA *);
LIBSTUB(i2d_DSA_PUBKEY_bio, int);
LIBSTUB(d2i_DSAPrivateKey_bio, DSA *);
LIBSTUB(i2d_DSAPrivateKey_bio, int);
LIBSTUB(d2i_PKCS8_bio, X509_SIG *);
LIBSTUB(i2d_PKCS8_bio, int);
LIBSTUB(d2i_PKCS8_PRIV_KEY_INFO_bio, PKCS8_PRIV_KEY_INFO *);
LIBSTUB(i2d_PKCS8_PRIV_KEY_INFO_bio, int);
LIBSTUB(i2d_PKCS8PrivateKeyInfo_bio, int);
LIBSTUB(i2d_PrivateKey_bio, int);
LIBSTUB(d2i_PrivateKey_bio, EVP_PKEY *);
LIBSTUB(i2d_PUBKEY_bio, int);
LIBSTUB(d2i_PUBKEY_bio, EVP_PKEY *);
LIBSTUB(X509_dup, X509 *);
LIBSTUB(X509_ATTRIBUTE_dup, X509_ATTRIBUTE *);
LIBSTUB(X509_EXTENSION_dup, X509_EXTENSION *);
LIBSTUB(X509_CRL_dup, X509_CRL *);
LIBSTUB(X509_REQ_dup, X509_REQ *);
LIBSTUB(X509_ALGOR_dup, X509_ALGOR *);
LIBSTUB(X509_NAME_dup, X509_NAME *);
LIBSTUB(X509_NAME_ENTRY_dup, X509_NAME_ENTRY *);
LIBSTUB(X509_cmp_time, int);
LIBSTUB(X509_cmp_current_time, int);
LIBSTUB(X509_time_adj, ASN1_TIME *);
LIBSTUB(X509_gmtime_adj, ASN1_TIME *);
LIBSTUB(X509_get_default_cert_area, const char *);
LIBSTUB(X509_get_default_cert_dir, const char *);
LIBSTUB(X509_get_default_cert_file, const char *);
LIBSTUB(X509_get_default_cert_dir_env, const char *);
LIBSTUB(X509_get_default_cert_file_env, const char *);
LIBSTUB(X509_get_default_private_dir, const char *);
LIBSTUB(X509_to_X509_REQ, X509_REQ *);
LIBSTUB(X509_REQ_to_X509, X509 *);
LIBSTUB(X509_ALGOR_new, X509_ALGOR *);
LIBSTUB(X509_ALGOR_free, void);
LIBSTUB(d2i_X509_ALGOR, X509_ALGOR *);
LIBSTUB(i2d_X509_ALGOR, int);
LIBSTUB(X509_ALGOR_it, const ASN1_ITEM *);
LIBSTUB(X509_VAL_new, X509_VAL *);
LIBSTUB(X509_VAL_free, void);
LIBSTUB(d2i_X509_VAL, X509_VAL *);
LIBSTUB(i2d_X509_VAL, int);
LIBSTUB(X509_VAL_it, const ASN1_ITEM *);
LIBSTUB(X509_PUBKEY_new, X509_PUBKEY *);
LIBSTUB(X509_PUBKEY_free, void);
LIBSTUB(d2i_X509_PUBKEY, X509_PUBKEY *);
LIBSTUB(i2d_X509_PUBKEY, int);
LIBSTUB(X509_PUBKEY_it, const ASN1_ITEM *);
LIBSTUB(X509_PUBKEY_set, int);
LIBSTUB(X509_PUBKEY_get, EVP_PKEY *);
LIBSTUB(X509_get_pubkey_parameters, int);
LIBSTUB(i2d_PUBKEY, int);
LIBSTUB(d2i_PUBKEY, EVP_PKEY *);
LIBSTUB(i2d_RSA_PUBKEY, int);
LIBSTUB(d2i_RSA_PUBKEY, RSA *);
LIBSTUB(i2d_DSA_PUBKEY, int);
LIBSTUB(d2i_DSA_PUBKEY, DSA *);
LIBSTUB(X509_SIG_new, X509_SIG *);
LIBSTUB(X509_SIG_free, void);
LIBSTUB(d2i_X509_SIG, X509_SIG *);
LIBSTUB(i2d_X509_SIG, int);
LIBSTUB(X509_SIG_it, const ASN1_ITEM *);
LIBSTUB(X509_REQ_INFO_new, X509_REQ_INFO *);
LIBSTUB(X509_REQ_INFO_free, void);
LIBSTUB(d2i_X509_REQ_INFO, X509_REQ_INFO *);
LIBSTUB(i2d_X509_REQ_INFO, int);
LIBSTUB(X509_REQ_INFO_it, const ASN1_ITEM *);
LIBSTUB(X509_REQ_new, X509_REQ *);
LIBSTUB(X509_REQ_free, void);
LIBSTUB(d2i_X509_REQ, X509_REQ *);
LIBSTUB(i2d_X509_REQ, int);
LIBSTUB(X509_REQ_it, const ASN1_ITEM *);
LIBSTUB(X509_ATTRIBUTE_new, X509_ATTRIBUTE *);
LIBSTUB(X509_ATTRIBUTE_free, void);
LIBSTUB(d2i_X509_ATTRIBUTE, X509_ATTRIBUTE *);
LIBSTUB(i2d_X509_ATTRIBUTE, int);
LIBSTUB(X509_ATTRIBUTE_it, const ASN1_ITEM *);
LIBSTUB(X509_ATTRIBUTE_create, X509_ATTRIBUTE *);
LIBSTUB(X509_EXTENSION_new, X509_EXTENSION *);
LIBSTUB(X509_EXTENSION_free, void);
LIBSTUB(d2i_X509_EXTENSION, X509_EXTENSION *);
LIBSTUB(i2d_X509_EXTENSION, int);
LIBSTUB(X509_EXTENSION_it, const ASN1_ITEM *);
LIBSTUB(X509_NAME_ENTRY_new, X509_NAME_ENTRY *);
LIBSTUB(X509_NAME_ENTRY_free, void);
LIBSTUB(d2i_X509_NAME_ENTRY, X509_NAME_ENTRY *);
LIBSTUB(i2d_X509_NAME_ENTRY, int);
LIBSTUB(X509_NAME_ENTRY_it, const ASN1_ITEM *);
LIBSTUB(X509_NAME_new, X509_NAME *);
LIBSTUB(X509_NAME_free, void);
LIBSTUB(d2i_X509_NAME, X509_NAME *);
LIBSTUB(i2d_X509_NAME, int);
LIBSTUB(X509_NAME_it, const ASN1_ITEM *);
LIBSTUB(X509_NAME_set, int);
LIBSTUB(X509_CINF_new, X509_CINF *);
LIBSTUB(X509_CINF_free, void);
LIBSTUB(d2i_X509_CINF, X509_CINF *);
LIBSTUB(i2d_X509_CINF, int);
LIBSTUB(X509_CINF_it, const ASN1_ITEM *);
LIBSTUB(X509_new, X509 *);
LIBSTUB(X509_free, void);
LIBSTUB(d2i_X509, X509 *);
LIBSTUB(i2d_X509, int);
LIBSTUB(X509_it, const ASN1_ITEM *);
LIBSTUB(X509_CERT_AUX_new, X509_CERT_AUX *);
LIBSTUB(X509_CERT_AUX_free, void);
LIBSTUB(d2i_X509_CERT_AUX, X509_CERT_AUX *);
LIBSTUB(i2d_X509_CERT_AUX, int);
LIBSTUB(X509_CERT_AUX_it, const ASN1_ITEM *);
LIBSTUB(OBSOLETE_X509_get_ex_new_index, int);
LIBSTUB(X509_set_ex_data, int);
LIBSTUB(X509_get_ex_data, void *);
LIBSTUB(i2d_X509_AUX, int);
LIBSTUB(d2i_X509_AUX, X509 *);
LIBSTUB(X509_alias_set1, int);
LIBSTUB(X509_keyid_set1, int);
LIBSTUB(X509_alias_get0, unsigned char *);
LIBSTUB(X509_TRUST_set_default, void *);
LIBSTUB(X509_TRUST_set, int);
LIBSTUB(X509_add1_trust_object, int);
LIBSTUB(X509_add1_reject_object, int);
LIBSTUB(X509_trust_clear, void);
LIBSTUB(X509_reject_clear, void);
LIBSTUB(X509_REVOKED_new, X509_REVOKED *);
LIBSTUB(X509_REVOKED_free, void);
LIBSTUB(d2i_X509_REVOKED, X509_REVOKED *);
LIBSTUB(i2d_X509_REVOKED, int);
LIBSTUB(X509_REVOKED_it, const ASN1_ITEM *);
LIBSTUB(X509_CRL_INFO_new, X509_CRL_INFO *);
LIBSTUB(X509_CRL_INFO_free, void);
LIBSTUB(d2i_X509_CRL_INFO, X509_CRL_INFO *);
LIBSTUB(i2d_X509_CRL_INFO, int);
LIBSTUB(X509_CRL_INFO_it, const ASN1_ITEM *);
LIBSTUB(X509_CRL_new, X509_CRL *);
LIBSTUB(X509_CRL_free, void);
LIBSTUB(d2i_X509_CRL, X509_CRL *);
LIBSTUB(i2d_X509_CRL, int);
LIBSTUB(X509_CRL_it, const ASN1_ITEM *);
LIBSTUB(X509_CRL_add0_revoked, int);
LIBSTUB(X509_PKEY_new, X509_PKEY *);
LIBSTUB(X509_PKEY_free, void);
LIBSTUB(NETSCAPE_SPKI_new, NETSCAPE_SPKI *);
LIBSTUB(NETSCAPE_SPKI_free, void);
LIBSTUB(d2i_NETSCAPE_SPKI, NETSCAPE_SPKI *);
LIBSTUB(i2d_NETSCAPE_SPKI, int);
LIBSTUB(NETSCAPE_SPKI_it, const ASN1_ITEM *);
LIBSTUB(NETSCAPE_SPKAC_new, NETSCAPE_SPKAC *);
LIBSTUB(NETSCAPE_SPKAC_free, void);
LIBSTUB(d2i_NETSCAPE_SPKAC, NETSCAPE_SPKAC *);
LIBSTUB(i2d_NETSCAPE_SPKAC, int);
LIBSTUB(NETSCAPE_SPKAC_it, const ASN1_ITEM *);
LIBSTUB(NETSCAPE_CERT_SEQUENCE_new, NETSCAPE_CERT_SEQUENCE *);
LIBSTUB(NETSCAPE_CERT_SEQUENCE_free, void);
LIBSTUB(d2i_NETSCAPE_CERT_SEQUENCE, NETSCAPE_CERT_SEQUENCE *);
LIBSTUB(i2d_NETSCAPE_CERT_SEQUENCE, int);
LIBSTUB(NETSCAPE_CERT_SEQUENCE_it, const ASN1_ITEM *);
LIBSTUB(X509_INFO_new, X509_INFO *);
LIBSTUB(X509_INFO_free, void);
LIBSTUB(X509_NAME_oneline, char *);
LIBSTUB(ASN1_verify, int);
LIBSTUB(ASN1_digest, int);
LIBSTUB(ASN1_sign, int);
LIBSTUB(ASN1_item_digest, int);
LIBSTUB(ASN1_item_verify, int);
LIBSTUB(ASN1_item_sign, int);
LIBSTUB(X509_set_version, int);
LIBSTUB(X509_set_serialNumber, int);
LIBSTUB(X509_get_serialNumber, ASN1_INTEGER *);
LIBSTUB(X509_set_issuer_name, int);
LIBSTUB(X509_get_issuer_name, X509_NAME *);
LIBSTUB(X509_set_subject_name, int);
LIBSTUB(X509_get_subject_name, X509_NAME *);
LIBSTUB(X509_set1_notBefore, int);
LIBSTUB(X509_set1_notAfter, int);
LIBSTUB(X509_set_pubkey, int);
LIBSTUB(X509_get_pubkey, EVP_PKEY *);
LIBSTUB(X509_get0_pubkey_bitstr, ASN1_BIT_STRING *);
LIBSTUB(X509_certificate_type, int);
LIBSTUB(X509_REQ_set_version, int);
LIBSTUB(X509_REQ_set_subject_name, int);
LIBSTUB(X509_REQ_set_pubkey, int);
LIBSTUB(X509_REQ_get_pubkey, EVP_PKEY *);
LIBSTUB(X509_REQ_extension_nid, int);
LIBSTUB(X509_REQ_get_extension_nids, int *);
LIBSTUB(X509_REQ_set_extension_nids, void);
LIBSTUB(X509_REQ_get_extensions, STACK_OF(X509_EXTENSION) *);
LIBSTUB(X509_REQ_add_extensions_nid, int);
LIBSTUB(X509_REQ_add_extensions, int);
LIBSTUB(X509_REQ_get_attr_count, int);
LIBSTUB(X509_REQ_get_attr_by_NID, int);
LIBSTUB(X509_REQ_get_attr_by_OBJ, int);
LIBSTUB(X509_REQ_get_attr, X509_ATTRIBUTE *);
LIBSTUB(X509_REQ_delete_attr, X509_ATTRIBUTE *);
LIBSTUB(X509_REQ_add1_attr, int);
LIBSTUB(X509_REQ_add1_attr_by_OBJ, int);
LIBSTUB(X509_REQ_add1_attr_by_NID, int);
LIBSTUB(X509_REQ_add1_attr_by_txt, int);
LIBSTUB(X509_CRL_set_version, int);
LIBSTUB(X509_CRL_set_issuer_name, int);
LIBSTUB(X509_CRL_set1_lastUpdate, int);
LIBSTUB(X509_CRL_set1_nextUpdate, int);
LIBSTUB(X509_CRL_sort, int);
LIBSTUB(X509_REVOKED_set_serialNumber, int);
LIBSTUB(X509_REVOKED_set_revocationDate, int);
LIBSTUB(X509_check_private_key, int);
LIBSTUB(X509_issuer_and_serial_cmp, int);
LIBSTUB(X509_issuer_and_serial_hash, unsigned long);
LIBSTUB(X509_issuer_name_cmp, int);
LIBSTUB(X509_issuer_name_hash, unsigned long);
LIBSTUB(X509_subject_name_cmp, int);
LIBSTUB(X509_subject_name_hash, unsigned long);
LIBSTUB(X509_cmp, int);
LIBSTUB(X509_NAME_cmp, int);
LIBSTUB(OBSOLETE_X509_NAME_hash, unsigned long);
LIBSTUB(X509_CRL_cmp, int);
LIBSTUB(X509_NAME_print, int);
LIBSTUB(X509_NAME_print_ex, int);
LIBSTUB(X509_print_ex, int);
LIBSTUB(X509_print, int);
LIBSTUB(X509_ocspid_print, int);
LIBSTUB(X509_CRL_print, int);
LIBSTUB(X509_REQ_print_ex, int);
LIBSTUB(X509_REQ_print, int);
LIBSTUB(X509_NAME_entry_count, int);
LIBSTUB(X509_NAME_get_text_by_NID, int);
LIBSTUB(X509_NAME_get_text_by_OBJ, int);
LIBSTUB(X509_NAME_get_index_by_NID, int);
LIBSTUB(X509_NAME_get_index_by_OBJ, int);
LIBSTUB(X509_NAME_get_entry, X509_NAME_ENTRY *);
LIBSTUB(X509_NAME_delete_entry, X509_NAME_ENTRY *);
LIBSTUB(X509_NAME_add_entry, int);
LIBSTUB(X509_NAME_add_entry_by_OBJ, int);
LIBSTUB(X509_NAME_add_entry_by_NID, int);
LIBSTUB(X509_NAME_ENTRY_create_by_txt, X509_NAME_ENTRY *);
LIBSTUB(X509_NAME_ENTRY_create_by_NID, X509_NAME_ENTRY *);
LIBSTUB(X509_NAME_add_entry_by_txt, int);
LIBSTUB(X509_NAME_ENTRY_create_by_OBJ, X509_NAME_ENTRY *);
LIBSTUB(X509_NAME_ENTRY_set_object, int);
LIBSTUB(X509_NAME_ENTRY_set_data, int);
LIBSTUB(X509_NAME_ENTRY_get_object, ASN1_OBJECT *);
LIBSTUB(X509_NAME_ENTRY_get_data, ASN1_STRING *);
LIBSTUB(X509v3_get_ext_count, int);
LIBSTUB(X509v3_get_ext_by_NID, int);
LIBSTUB(X509v3_get_ext_by_OBJ, int);
LIBSTUB(X509v3_get_ext_by_critical, int);
LIBSTUB(X509v3_get_ext, X509_EXTENSION *);
LIBSTUB(X509v3_delete_ext, X509_EXTENSION *);
LIBSTUB(X509v3_add_ext, STACK_OF(X509_EXTENSION) *);
LIBSTUB(X509_get_ext_count, int);
LIBSTUB(X509_get_ext_by_NID, int);
LIBSTUB(X509_get_ext_by_OBJ, int);
LIBSTUB(X509_get_ext_by_critical, int);
LIBSTUB(X509_get_ext, X509_EXTENSION *);
LIBSTUB(X509_delete_ext, X509_EXTENSION *);
LIBSTUB(X509_add_ext, int);
LIBSTUB(X509_get_ext_d2i, void *);
LIBSTUB(X509_add1_ext_i2d, int);
LIBSTUB(X509_CRL_get_ext_count, int);
LIBSTUB(X509_CRL_get_ext_by_NID, int);
LIBSTUB(X509_CRL_get_ext_by_OBJ, int);
LIBSTUB(X509_CRL_get_ext_by_critical, int);
LIBSTUB(X509_CRL_get_ext, X509_EXTENSION *);
LIBSTUB(X509_CRL_delete_ext, X509_EXTENSION *);
LIBSTUB(X509_CRL_add_ext, int);
LIBSTUB(X509_CRL_get_ext_d2i, void *);
LIBSTUB(X509_CRL_add1_ext_i2d, int);
LIBSTUB(X509_REVOKED_get_ext_count, int);
LIBSTUB(X509_REVOKED_get_ext_by_NID, int);
LIBSTUB(X509_REVOKED_get_ext_by_OBJ, int);
LIBSTUB(X509_REVOKED_get_ext_by_critical, int);
LIBSTUB(X509_REVOKED_get_ext, X509_EXTENSION *);
LIBSTUB(X509_REVOKED_delete_ext, X509_EXTENSION *);
LIBSTUB(X509_REVOKED_add_ext, int);
LIBSTUB(X509_REVOKED_get_ext_d2i, void *);
LIBSTUB(X509_REVOKED_add1_ext_i2d, int);
LIBSTUB(X509_EXTENSION_create_by_NID, X509_EXTENSION *);
LIBSTUB(X509_EXTENSION_create_by_OBJ, X509_EXTENSION *);
LIBSTUB(X509_EXTENSION_set_object, int);
LIBSTUB(X509_EXTENSION_set_critical, int);
LIBSTUB(X509_EXTENSION_set_data, int);
LIBSTUB(X509_EXTENSION_get_object, ASN1_OBJECT *);
LIBSTUB(X509_EXTENSION_get_data, ASN1_OCTET_STRING *);
LIBSTUB(X509_EXTENSION_get_critical, int);
LIBSTUB(X509at_get_attr_count, int);
LIBSTUB(X509at_get_attr_by_NID, int);
LIBSTUB(X509at_get_attr_by_OBJ, int);
LIBSTUB(X509at_get_attr, X509_ATTRIBUTE *);
LIBSTUB(X509at_delete_attr, X509_ATTRIBUTE *);
LIBSTUB(X509at_add1_attr, STACK_OF(X509_ATTRIBUTE) *);
LIBSTUB(X509at_add1_attr_by_OBJ, STACK_OF(X509_ATTRIBUTE) *);
LIBSTUB(X509at_add1_attr_by_NID, STACK_OF(X509_ATTRIBUTE) *);
LIBSTUB(X509at_add1_attr_by_txt, STACK_OF(X509_ATTRIBUTE) *);
LIBSTUB(X509_ATTRIBUTE_create_by_NID, X509_ATTRIBUTE *);
LIBSTUB(X509_ATTRIBUTE_create_by_OBJ, X509_ATTRIBUTE *);
LIBSTUB(X509_ATTRIBUTE_create_by_txt, X509_ATTRIBUTE *);
LIBSTUB(X509_ATTRIBUTE_set1_object, int);
LIBSTUB(X509_ATTRIBUTE_set1_data, int);
LIBSTUB(X509_ATTRIBUTE_get0_data, void *);
LIBSTUB(X509_ATTRIBUTE_count, int);
LIBSTUB(X509_ATTRIBUTE_get0_object, ASN1_OBJECT *);
LIBSTUB(X509_ATTRIBUTE_get0_type, ASN1_TYPE *);
LIBSTUB(X509_verify_cert, int);
LIBSTUB(X509_find_by_issuer_and_serial, X509 *);
LIBSTUB(X509_find_by_subject, X509 *);
LIBSTUB(PBEPARAM_new, PBEPARAM *);
LIBSTUB(PBEPARAM_free, void);
LIBSTUB(d2i_PBEPARAM, PBEPARAM *);
LIBSTUB(i2d_PBEPARAM, int);
LIBSTUB(PBEPARAM_it, const ASN1_ITEM *);
LIBSTUB(PBE2PARAM_new, PBE2PARAM *);
LIBSTUB(PBE2PARAM_free, void);
LIBSTUB(d2i_PBE2PARAM, PBE2PARAM *);
LIBSTUB(i2d_PBE2PARAM, int);
LIBSTUB(PBE2PARAM_it, const ASN1_ITEM *);
LIBSTUB(PBKDF2PARAM_new, PBKDF2PARAM *);
LIBSTUB(PBKDF2PARAM_free, void);
LIBSTUB(d2i_PBKDF2PARAM, PBKDF2PARAM *);
LIBSTUB(i2d_PBKDF2PARAM, int);
LIBSTUB(PBKDF2PARAM_it, const ASN1_ITEM *);
LIBSTUB(PKCS5_pbe_set, X509_ALGOR *);
LIBSTUB(PKCS5_pbe2_set, X509_ALGOR *);
LIBSTUB(PKCS8_PRIV_KEY_INFO_new, PKCS8_PRIV_KEY_INFO *);
LIBSTUB(PKCS8_PRIV_KEY_INFO_free, void);
LIBSTUB(d2i_PKCS8_PRIV_KEY_INFO, PKCS8_PRIV_KEY_INFO *);
LIBSTUB(i2d_PKCS8_PRIV_KEY_INFO, int);
LIBSTUB(PKCS8_PRIV_KEY_INFO_it, const ASN1_ITEM *);
LIBSTUB(EVP_PKCS82PKEY, EVP_PKEY *);
LIBSTUB(EVP_PKEY2PKCS8, PKCS8_PRIV_KEY_INFO *);
LIBSTUB(X509_check_trust, int);
LIBSTUB(X509_TRUST_get_count, int);
LIBSTUB(X509_TRUST_get0, X509_TRUST *);
LIBSTUB(X509_TRUST_get_by_id, int);
LIBSTUB(X509_TRUST_add, int);
LIBSTUB(X509_TRUST_cleanup, void);
LIBSTUB(X509_TRUST_get_flags, int);
LIBSTUB(X509_TRUST_get0_name, char *);
LIBSTUB(X509_TRUST_get_trust, int);
LIBSTUB(ERR_load_X509_strings, int);
LIBSTUB(X509_OBJECT_idx_by_subject, int);
LIBSTUB(X509_OBJECT_retrieve_by_subject, X509_OBJECT *);
LIBSTUB(X509_OBJECT_retrieve_match, X509_OBJECT *);
LIBSTUB(X509_OBJECT_up_ref_count, int);
LIBSTUB(X509_STORE_new, X509_STORE *);
LIBSTUB(X509_STORE_free, void);
LIBSTUB(X509_STORE_set_flags, int);
LIBSTUB(X509_STORE_set_purpose, int);
LIBSTUB(X509_STORE_set_trust, int);
LIBSTUB(X509_STORE_CTX_new, X509_STORE_CTX *);
LIBSTUB(X509_STORE_CTX_get1_issuer, int);
LIBSTUB(X509_STORE_CTX_free, void);
LIBSTUB(X509_STORE_CTX_init, int);
LIBSTUB(X509_STORE_CTX_set0_trusted_stack, void);
LIBSTUB(X509_STORE_CTX_cleanup, void);
LIBSTUB(X509_STORE_add_lookup, X509_LOOKUP *);
LIBSTUB(X509_LOOKUP_hash_dir, X509_LOOKUP_METHOD *);
LIBSTUB(X509_LOOKUP_file, X509_LOOKUP_METHOD *);
LIBSTUB(X509_STORE_add_cert, int);
LIBSTUB(X509_STORE_add_crl, int);
LIBSTUB(X509_STORE_CTX_get_by_subject, int);
LIBSTUB(X509_LOOKUP_ctrl, int);
LIBSTUB(X509_load_cert_file, int);
LIBSTUB(X509_load_crl_file, int);
LIBSTUB(X509_load_cert_crl_file, int);
LIBSTUB(X509_LOOKUP_new, X509_LOOKUP *);
LIBSTUB(X509_LOOKUP_free, void);
LIBSTUB(X509_LOOKUP_init, int);
LIBSTUB(X509_LOOKUP_by_subject, int);
LIBSTUB(X509_LOOKUP_by_issuer_serial, int);
LIBSTUB(X509_LOOKUP_by_fingerprint, int);
LIBSTUB(X509_LOOKUP_by_alias, int);
LIBSTUB(X509_LOOKUP_shutdown, int);
LIBSTUB(X509_STORE_load_locations, int);
LIBSTUB(X509_STORE_set_default_paths, int);
LIBSTUB(OBSOLETE_X509_STORE_CTX_get_ex_new_index, int);
LIBSTUB(X509_STORE_CTX_set_ex_data, int);
LIBSTUB(X509_STORE_CTX_get_ex_data, void *);
LIBSTUB(X509_STORE_CTX_get_error, int);
LIBSTUB(X509_STORE_CTX_set_error, void);
LIBSTUB(X509_STORE_CTX_get_error_depth, int);
LIBSTUB(X509_STORE_CTX_get_current_cert, X509 *);
LIBSTUB(X509_STORE_CTX_get0_chain, STACK_OF(X509) *);
LIBSTUB(X509_STORE_CTX_get1_chain, STACK_OF(X509) *);
LIBSTUB(X509_STORE_CTX_set_cert, void);
LIBSTUB(X509_STORE_CTX_set_purpose, int);
LIBSTUB(X509_STORE_CTX_set_trust, int);
LIBSTUB(X509_STORE_CTX_purpose_inherit, int);
LIBSTUB(X509_STORE_CTX_set_flags, void);
LIBSTUB(X509_STORE_CTX_set_time, void);
LIBSTUB(X509_STORE_CTX_set_verify_cb, void);
LIBSTUB(BASIC_CONSTRAINTS_new, BASIC_CONSTRAINTS *);
LIBSTUB(BASIC_CONSTRAINTS_free, void);
LIBSTUB(d2i_BASIC_CONSTRAINTS, BASIC_CONSTRAINTS *);
LIBSTUB(i2d_BASIC_CONSTRAINTS, int);
LIBSTUB(BASIC_CONSTRAINTS_it, const ASN1_ITEM *);
LIBSTUB(SXNET_new, SXNET *);
LIBSTUB(SXNET_free, void);
LIBSTUB(d2i_SXNET, SXNET *);
LIBSTUB(i2d_SXNET, int);
LIBSTUB(SXNET_it, const ASN1_ITEM *);
LIBSTUB(SXNETID_new, SXNETID *);
LIBSTUB(SXNETID_free, void);
LIBSTUB(d2i_SXNETID, SXNETID *);
LIBSTUB(i2d_SXNETID, int);
LIBSTUB(SXNETID_it, const ASN1_ITEM *);
LIBSTUB(SXNET_add_id_asc, int);
LIBSTUB(SXNET_add_id_ulong, int);
LIBSTUB(SXNET_add_id_INTEGER, int);
LIBSTUB(SXNET_get_id_asc, ASN1_OCTET_STRING *);
LIBSTUB(SXNET_get_id_ulong, ASN1_OCTET_STRING *);
LIBSTUB(SXNET_get_id_INTEGER, ASN1_OCTET_STRING *);
LIBSTUB(AUTHORITY_KEYID_new, AUTHORITY_KEYID *);
LIBSTUB(AUTHORITY_KEYID_free, void);
LIBSTUB(d2i_AUTHORITY_KEYID, AUTHORITY_KEYID *);
LIBSTUB(i2d_AUTHORITY_KEYID, int);
LIBSTUB(AUTHORITY_KEYID_it, const ASN1_ITEM *);
LIBSTUB(PKEY_USAGE_PERIOD_new, PKEY_USAGE_PERIOD *);
LIBSTUB(PKEY_USAGE_PERIOD_free, void);
LIBSTUB(d2i_PKEY_USAGE_PERIOD, PKEY_USAGE_PERIOD *);
LIBSTUB(i2d_PKEY_USAGE_PERIOD, int);
LIBSTUB(PKEY_USAGE_PERIOD_it, const ASN1_ITEM *);
LIBSTUB(GENERAL_NAME_new, GENERAL_NAME *);
LIBSTUB(GENERAL_NAME_free, void);
LIBSTUB(d2i_GENERAL_NAME, GENERAL_NAME *);
LIBSTUB(i2d_GENERAL_NAME, int);
LIBSTUB(GENERAL_NAME_it, const ASN1_ITEM *);
LIBSTUB(i2v_GENERAL_NAME, STACK_OF(CONF_VALUE) *);
LIBSTUB(GENERAL_NAME_print, int);
LIBSTUB(GENERAL_NAMES_new, GENERAL_NAMES *);
LIBSTUB(GENERAL_NAMES_free, void);
LIBSTUB(d2i_GENERAL_NAMES, GENERAL_NAMES *);
LIBSTUB(i2d_GENERAL_NAMES, int);
LIBSTUB(GENERAL_NAMES_it, const ASN1_ITEM *);
LIBSTUB(i2v_GENERAL_NAMES, STACK_OF(CONF_VALUE) *);
LIBSTUB(v2i_GENERAL_NAMES, GENERAL_NAMES *);
LIBSTUB(OTHERNAME_new, OTHERNAME *);
LIBSTUB(OTHERNAME_free, void);
LIBSTUB(d2i_OTHERNAME, OTHERNAME *);
LIBSTUB(i2d_OTHERNAME, int);
LIBSTUB(OTHERNAME_it, const ASN1_ITEM *);
LIBSTUB(EDIPARTYNAME_new, EDIPARTYNAME *);
LIBSTUB(EDIPARTYNAME_free, void);
LIBSTUB(d2i_EDIPARTYNAME, EDIPARTYNAME *);
LIBSTUB(i2d_EDIPARTYNAME, int);
LIBSTUB(EDIPARTYNAME_it, const ASN1_ITEM *);
LIBSTUB(i2s_ASN1_OCTET_STRING, char *);
LIBSTUB(s2i_ASN1_OCTET_STRING, ASN1_OCTET_STRING *);
LIBSTUB(EXTENDED_KEY_USAGE_new, EXTENDED_KEY_USAGE *);
LIBSTUB(EXTENDED_KEY_USAGE_free, void);
LIBSTUB(d2i_EXTENDED_KEY_USAGE, EXTENDED_KEY_USAGE *);
LIBSTUB(i2d_EXTENDED_KEY_USAGE, int);
LIBSTUB(EXTENDED_KEY_USAGE_it, const ASN1_ITEM *);
LIBSTUB(i2a_ACCESS_DESCRIPTION, int);
LIBSTUB(CERTIFICATEPOLICIES_new, CERTIFICATEPOLICIES *);
LIBSTUB(CERTIFICATEPOLICIES_free, void);
LIBSTUB(d2i_CERTIFICATEPOLICIES, CERTIFICATEPOLICIES *);
LIBSTUB(i2d_CERTIFICATEPOLICIES, int);
LIBSTUB(CERTIFICATEPOLICIES_it, const ASN1_ITEM *);
LIBSTUB(POLICYINFO_new, POLICYINFO *);
LIBSTUB(POLICYINFO_free, void);
LIBSTUB(d2i_POLICYINFO, POLICYINFO *);
LIBSTUB(i2d_POLICYINFO, int);
LIBSTUB(POLICYINFO_it, const ASN1_ITEM *);
LIBSTUB(POLICYQUALINFO_new, POLICYQUALINFO *);
LIBSTUB(POLICYQUALINFO_free, void);
LIBSTUB(d2i_POLICYQUALINFO, POLICYQUALINFO *);
LIBSTUB(i2d_POLICYQUALINFO, int);
LIBSTUB(POLICYQUALINFO_it, const ASN1_ITEM *);
LIBSTUB(USERNOTICE_new, USERNOTICE *);
LIBSTUB(USERNOTICE_free, void);
LIBSTUB(d2i_USERNOTICE, USERNOTICE *);
LIBSTUB(i2d_USERNOTICE, int);
LIBSTUB(USERNOTICE_it, const ASN1_ITEM *);
LIBSTUB(NOTICEREF_new, NOTICEREF *);
LIBSTUB(NOTICEREF_free, void);
LIBSTUB(d2i_NOTICEREF, NOTICEREF *);
LIBSTUB(i2d_NOTICEREF, int);
LIBSTUB(NOTICEREF_it, const ASN1_ITEM *);
LIBSTUB(CRL_DIST_POINTS_new, CRL_DIST_POINTS *);
LIBSTUB(CRL_DIST_POINTS_free, void);
LIBSTUB(d2i_CRL_DIST_POINTS, CRL_DIST_POINTS *);
LIBSTUB(i2d_CRL_DIST_POINTS, int);
LIBSTUB(CRL_DIST_POINTS_it, const ASN1_ITEM *);
LIBSTUB(DIST_POINT_new, DIST_POINT *);
LIBSTUB(DIST_POINT_free, void);
LIBSTUB(d2i_DIST_POINT, DIST_POINT *);
LIBSTUB(i2d_DIST_POINT, int);
LIBSTUB(DIST_POINT_it, const ASN1_ITEM *);
LIBSTUB(DIST_POINT_NAME_new, DIST_POINT_NAME *);
LIBSTUB(DIST_POINT_NAME_free, void);
LIBSTUB(d2i_DIST_POINT_NAME, DIST_POINT_NAME *);
LIBSTUB(i2d_DIST_POINT_NAME, int);
LIBSTUB(DIST_POINT_NAME_it, const ASN1_ITEM *);
LIBSTUB(ACCESS_DESCRIPTION_new, ACCESS_DESCRIPTION *);
LIBSTUB(ACCESS_DESCRIPTION_free, void);
LIBSTUB(d2i_ACCESS_DESCRIPTION, ACCESS_DESCRIPTION *);
LIBSTUB(i2d_ACCESS_DESCRIPTION, int);
LIBSTUB(ACCESS_DESCRIPTION_it, const ASN1_ITEM *);
LIBSTUB(AUTHORITY_INFO_ACCESS_new, AUTHORITY_INFO_ACCESS *);
LIBSTUB(AUTHORITY_INFO_ACCESS_free, void);
LIBSTUB(d2i_AUTHORITY_INFO_ACCESS, AUTHORITY_INFO_ACCESS *);
LIBSTUB(i2d_AUTHORITY_INFO_ACCESS, int);
LIBSTUB(AUTHORITY_INFO_ACCESS_it, const ASN1_ITEM *);
LIBSTUB(v2i_GENERAL_NAME, GENERAL_NAME *);
LIBSTUB(X509V3_conf_free, void);
LIBSTUB(X509V3_EXT_nconf_nid, X509_EXTENSION *);
LIBSTUB(X509V3_EXT_nconf, X509_EXTENSION *);
LIBSTUB(X509V3_EXT_add_nconf_sk, int);
LIBSTUB(X509V3_EXT_add_nconf, int);
LIBSTUB(X509V3_EXT_REQ_add_nconf, int);
LIBSTUB(X509V3_EXT_CRL_add_nconf, int);
LIBSTUB(X509V3_EXT_conf_nid, X509_EXTENSION *);
LIBSTUB(X509V3_EXT_conf, X509_EXTENSION *);
LIBSTUB(X509V3_EXT_add_conf, int);
LIBSTUB(X509V3_EXT_REQ_add_conf, int);
LIBSTUB(X509V3_EXT_CRL_add_conf, int);
LIBSTUB(X509V3_add_value_bool_nf, int);
LIBSTUB(X509V3_get_value_bool, int);
LIBSTUB(X509V3_get_value_int, int);
LIBSTUB(X509V3_set_nconf, void);
LIBSTUB(X509V3_set_conf_lhash, void);
LIBSTUB(X509V3_get_string, char *);
LIBSTUB(X509V3_get_section, STACK_OF(CONF_VALUE) *);
LIBSTUB(X509V3_string_free, void);
LIBSTUB(X509V3_section_free, void);
LIBSTUB(X509V3_set_ctx, void);
LIBSTUB(X509V3_add_value, int);
LIBSTUB(X509V3_add_value_uchar, int);
LIBSTUB(X509V3_add_value_bool, int);
LIBSTUB(X509V3_add_value_int, int);
LIBSTUB(i2s_ASN1_INTEGER, char *);
LIBSTUB(s2i_ASN1_INTEGER, ASN1_INTEGER *);
LIBSTUB(i2s_ASN1_ENUMERATED, char *);
LIBSTUB(i2s_ASN1_ENUMERATED_TABLE, char *);
LIBSTUB(X509V3_EXT_add, int);
LIBSTUB(X509V3_EXT_add_list, int);
LIBSTUB(X509V3_EXT_add_alias, int);
LIBSTUB(X509V3_EXT_cleanup, void);
LIBSTUB(X509V3_EXT_get, const X509V3_EXT_METHOD *);
LIBSTUB(X509V3_EXT_get_nid, const X509V3_EXT_METHOD *);
LIBSTUB(X509V3_add_standard_extensions, int);
LIBSTUB(X509V3_parse_list, STACK_OF(CONF_VALUE) *);
LIBSTUB(X509V3_EXT_d2i, void *);
LIBSTUB(X509V3_get_d2i, void *);
LIBSTUB(X509V3_EXT_i2d, X509_EXTENSION *);
LIBSTUB(X509V3_add1_i2d, int);
LIBSTUB(OPENSSL_buf2hexstr, char *);
LIBSTUB(OPENSSL_hexstr2buf, unsigned char *);
LIBSTUB(X509V3_EXT_val_prn, void);
LIBSTUB(X509V3_EXT_print, int);
LIBSTUB(X509V3_extensions_print, int);
LIBSTUB(X509_check_purpose, int);
LIBSTUB(X509_supported_extension, int);
LIBSTUB(X509_PURPOSE_set, int);
LIBSTUB(X509_check_issued, int);
LIBSTUB(X509_PURPOSE_get_count, int);
LIBSTUB(X509_PURPOSE_get0, X509_PURPOSE *);
LIBSTUB(X509_PURPOSE_get_by_sname, int);
LIBSTUB(X509_PURPOSE_get_by_id, int);
LIBSTUB(X509_PURPOSE_add, int);
LIBSTUB(X509_PURPOSE_get0_name, char *);
LIBSTUB(X509_PURPOSE_get0_sname, char *);
LIBSTUB(X509_PURPOSE_get_trust, int);
LIBSTUB(X509_PURPOSE_cleanup, void);
LIBSTUB(X509_PURPOSE_get_id, int);
LIBSTUB(X509_get1_email, STACK_OF(OPENSSL_STRING) *);
LIBSTUB(X509_REQ_get1_email, STACK_OF(OPENSSL_STRING) *);
LIBSTUB(X509_email_free, void);
LIBSTUB(ERR_load_X509V3_strings, int);
LIBSTUB(AES_options, const char *);
LIBSTUB(AES_set_encrypt_key, int);
LIBSTUB(AES_set_decrypt_key, int);
LIBSTUB(AES_encrypt, void);
LIBSTUB(AES_decrypt, void);
LIBSTUB(AES_ecb_encrypt, void);
LIBSTUB(AES_cbc_encrypt, void);
LIBSTUB(AES_cfb128_encrypt, void);
LIBSTUB(AES_cfb1_encrypt, void);
LIBSTUB(AES_cfb8_encrypt, void);
LIBSTUB(AES_ofb128_encrypt, void);
LIBSTUB(BF_set_key, void);
LIBSTUB(BF_encrypt, void);
LIBSTUB(BF_decrypt, void);
LIBSTUB(BF_ecb_encrypt, void);
LIBSTUB(BF_cbc_encrypt, void);
LIBSTUB(BF_cfb64_encrypt, void);
LIBSTUB(BF_ofb64_encrypt, void);
LIBSTUB(BF_options, const char *);
LIBSTUB(CAST_set_key, void);
LIBSTUB(CAST_ecb_encrypt, void);
LIBSTUB(CAST_encrypt, void);
LIBSTUB(CAST_decrypt, void);
LIBSTUB(CAST_cbc_encrypt, void);
LIBSTUB(CAST_cfb64_encrypt, void);
LIBSTUB(CAST_ofb64_encrypt, void);
LIBSTUB(DES_options, const char *);
LIBSTUB(DES_ecb3_encrypt, void);
LIBSTUB(DES_cbc_cksum, DES_LONG);
LIBSTUB(DES_cbc_encrypt, void);
LIBSTUB(DES_ncbc_encrypt, void);
LIBSTUB(DES_xcbc_encrypt, void);
LIBSTUB(DES_cfb_encrypt, void);
LIBSTUB(DES_ecb_encrypt, void);
LIBSTUB(DES_encrypt1, void);
LIBSTUB(DES_encrypt2, void);
LIBSTUB(DES_encrypt3, void);
LIBSTUB(DES_decrypt3, void);
LIBSTUB(DES_ede3_cbc_encrypt, void);
LIBSTUB(DES_ede3_cfb64_encrypt, void);
LIBSTUB(DES_ede3_cfb_encrypt, void);
LIBSTUB(DES_ede3_ofb64_encrypt, void);
LIBSTUB(DES_fcrypt, char *);
LIBSTUB(DES_crypt, char *);
LIBSTUB(DES_ofb_encrypt, void);
LIBSTUB(DES_pcbc_encrypt, void);
LIBSTUB(DES_quad_cksum, DES_LONG);
LIBSTUB(DES_random_key, int);
LIBSTUB(DES_set_odd_parity, void);
LIBSTUB(DES_check_key_parity, int);
LIBSTUB(DES_is_weak_key, int);
LIBSTUB(DES_set_key, int);
LIBSTUB(DES_key_sched, int);
LIBSTUB(DES_set_key_checked, int);
LIBSTUB(DES_set_key_unchecked, void);
LIBSTUB(DES_string_to_key, void);
LIBSTUB(DES_string_to_2keys, void);
LIBSTUB(DES_cfb64_encrypt, void);
LIBSTUB(DES_ofb64_encrypt, void);
LIBSTUB(DH_OpenSSL, const DH_METHOD *);
LIBSTUB(DH_set_default_method, void);
LIBSTUB(DH_get_default_method, const DH_METHOD *);
LIBSTUB(DH_set_method, int);
LIBSTUB(DH_new_method, DH *);
LIBSTUB(DH_new, DH *);
LIBSTUB(DH_free, void);
LIBSTUB(DH_up_ref, int);
LIBSTUB(DH_size, int);
LIBSTUB(OBSOLETE_DH_get_ex_new_index, int);
LIBSTUB(DH_set_ex_data, int);
LIBSTUB(DH_get_ex_data, void *);
LIBSTUB(DH_generate_parameters, DH *);
LIBSTUB(DH_check, int);
LIBSTUB(DH_generate_key, int);
LIBSTUB(DH_compute_key, int);
LIBSTUB(d2i_DHparams, DH *);
LIBSTUB(i2d_DHparams, int);
LIBSTUB(DHparams_print, int);
LIBSTUB(ERR_load_DH_strings, int);
LIBSTUB(DSA_SIG_new, DSA_SIG *);
LIBSTUB(DSA_SIG_free, void);
LIBSTUB(i2d_DSA_SIG, int);
LIBSTUB(d2i_DSA_SIG, DSA_SIG *);
LIBSTUB(DSA_do_sign, DSA_SIG *);
LIBSTUB(DSA_do_verify, int);
LIBSTUB(DSA_OpenSSL, const DSA_METHOD *);
LIBSTUB(DSA_set_default_method, void);
LIBSTUB(DSA_get_default_method, const DSA_METHOD *);
LIBSTUB(DSA_set_method, int);
LIBSTUB(DSA_new, DSA *);
LIBSTUB(DSA_new_method, DSA *);
LIBSTUB(DSA_free, void);
LIBSTUB(DSA_up_ref, int);
LIBSTUB(DSA_size, int);
LIBSTUB(DSA_sign_setup, int);
LIBSTUB(DSA_sign, int);
LIBSTUB(DSA_verify, int);
LIBSTUB(OBSOLETE_DSA_get_ex_new_index, int);
LIBSTUB(DSA_set_ex_data, int);
LIBSTUB(DSA_get_ex_data, void *);
LIBSTUB(d2i_DSAPublicKey, DSA *);
LIBSTUB(d2i_DSAPrivateKey, DSA *);
LIBSTUB(d2i_DSAparams, DSA *);
LIBSTUB(DSA_generate_parameters, DSA *);
LIBSTUB(DSA_generate_key, int);
LIBSTUB(i2d_DSAPublicKey, int);
LIBSTUB(i2d_DSAPrivateKey, int);
LIBSTUB(i2d_DSAparams, int);
LIBSTUB(DSAparams_print, int);
LIBSTUB(DSA_print, int);
LIBSTUB(DSA_dup_DH, DH *);
LIBSTUB(ERR_load_DSA_strings, int);
LIBSTUB(IDEA_options, const char *);
LIBSTUB(IDEA_ecb_encrypt, void);
LIBSTUB(IDEA_set_encrypt_key, void);
LIBSTUB(IDEA_set_decrypt_key, void);
LIBSTUB(IDEA_cbc_encrypt, void);
LIBSTUB(IDEA_cfb64_encrypt, void);
LIBSTUB(IDEA_ofb64_encrypt, void);
LIBSTUB(IDEA_encrypt, void);
LIBSTUB(MD2_options, const char *);
LIBSTUB(MD2_Init, int);
LIBSTUB(MD2_Update, int);
LIBSTUB(MD2_Final, int);
LIBSTUB(MD2, unsigned char *);
LIBSTUB(MD4_Init, int);
LIBSTUB(MD4_Update, int);
LIBSTUB(MD4_Final, int);
LIBSTUB(MD4, unsigned char *);
LIBSTUB(MD4_Transform, void);
LIBSTUB(MD5_Init, int);
LIBSTUB(MD5_Update, int);
LIBSTUB(MD5_Final, int);
LIBSTUB(MD5, unsigned char *);
LIBSTUB(MD5_Transform, void);
LIBSTUB(MDC2_Init, int);
LIBSTUB(MDC2_Update, int);
LIBSTUB(MDC2_Final, int);
LIBSTUB(MDC2, unsigned char *);
LIBSTUB(RC2_set_key, void);
LIBSTUB(RC2_ecb_encrypt, void);
LIBSTUB(RC2_encrypt, void);
LIBSTUB(RC2_decrypt, void);
LIBSTUB(RC2_cbc_encrypt, void);
LIBSTUB(RC2_cfb64_encrypt, void);
LIBSTUB(RC2_ofb64_encrypt, void);
LIBSTUB(RC4_options, const char *);
LIBSTUB(RC4_set_key, void);
LIBSTUB(RC4, void);
LIBSTUB(RC5_32_set_key, int);
LIBSTUB(RC5_32_ecb_encrypt, void);
LIBSTUB(RC5_32_encrypt, void);
LIBSTUB(RC5_32_decrypt, void);
LIBSTUB(RC5_32_cbc_encrypt, void);
LIBSTUB(RC5_32_cfb64_encrypt, void);
LIBSTUB(RC5_32_ofb64_encrypt, void);
LIBSTUB(RIPEMD160_Init, int);
LIBSTUB(RIPEMD160_Update, int);
LIBSTUB(RIPEMD160_Final, int);
LIBSTUB(RIPEMD160, unsigned char *);
LIBSTUB(RIPEMD160_Transform, void);
LIBSTUB(RSA_new, RSA *);
LIBSTUB(RSA_new_method, RSA *);
LIBSTUB(RSA_size, int);
LIBSTUB(RSA_generate_key, RSA *);
LIBSTUB(RSA_check_key, int);
LIBSTUB(RSA_public_encrypt, int);
LIBSTUB(RSA_private_encrypt, int);
LIBSTUB(RSA_public_decrypt, int);
LIBSTUB(RSA_private_decrypt, int);
LIBSTUB(RSA_free, void);
LIBSTUB(RSA_up_ref, int);
LIBSTUB(RSA_flags, int);
LIBSTUB(RSA_set_default_method, void);
LIBSTUB(RSA_get_default_method, const RSA_METHOD *);
LIBSTUB(RSA_get_method, const RSA_METHOD *);
LIBSTUB(RSA_set_method, int);
LIBSTUB(RSA_null_method, const RSA_METHOD *);
LIBSTUB(d2i_RSAPublicKey, RSA *);
LIBSTUB(i2d_RSAPublicKey, int);
LIBSTUB(RSAPublicKey_it, const ASN1_ITEM *);
LIBSTUB(d2i_RSAPrivateKey, RSA *);
LIBSTUB(i2d_RSAPrivateKey, int);
LIBSTUB(RSAPrivateKey_it, const ASN1_ITEM *);
LIBSTUB(RSA_print, int);
LIBSTUB(RSA_sign, int);
LIBSTUB(RSA_verify, int);
LIBSTUB(RSA_sign_ASN1_OCTET_STRING, int);
LIBSTUB(RSA_verify_ASN1_OCTET_STRING, int);
LIBSTUB(RSA_blinding_on, int);
LIBSTUB(RSA_blinding_off, void);
LIBSTUB(RSA_padding_add_PKCS1_type_1, int);
LIBSTUB(RSA_padding_check_PKCS1_type_1, int);
LIBSTUB(RSA_padding_add_PKCS1_type_2, int);
LIBSTUB(RSA_padding_check_PKCS1_type_2, int);
LIBSTUB(RSA_padding_add_PKCS1_OAEP, int);
LIBSTUB(RSA_padding_check_PKCS1_OAEP, int);
LIBSTUB(RSA_padding_add_none, int);
LIBSTUB(RSA_padding_check_none, int);
LIBSTUB(OBSOLETE_RSA_get_ex_new_index, int);
LIBSTUB(RSA_set_ex_data, int);
LIBSTUB(RSA_get_ex_data, void *);
LIBSTUB(RSAPublicKey_dup, RSA *);
LIBSTUB(RSAPrivateKey_dup, RSA *);
LIBSTUB(ERR_load_RSA_strings, int);
LIBSTUB(SHA1_Init, int);
LIBSTUB(SHA1_Update, int);
LIBSTUB(SHA1_Final, int);
LIBSTUB(SHA1, unsigned char *);
LIBSTUB(SHA1_Transform, void);
LIBSTUB(UI_read_string_lib, int);
LIBSTUB(UI_write_string_lib, int);
LIBSTUB(HMAC_CTX_set_flags, void);
LIBSTUB(X509_check_ca, int);
LIBSTUB(PROXY_POLICY_new, PROXY_POLICY *);
LIBSTUB(PROXY_POLICY_free, void);
LIBSTUB(d2i_PROXY_POLICY, PROXY_POLICY *);
LIBSTUB(i2d_PROXY_POLICY, int);
LIBSTUB(PROXY_POLICY_it, const ASN1_ITEM *);
LIBSTUB(PROXY_CERT_INFO_EXTENSION_new, PROXY_CERT_INFO_EXTENSION *);
LIBSTUB(PROXY_CERT_INFO_EXTENSION_free, void);
LIBSTUB(d2i_PROXY_CERT_INFO_EXTENSION, PROXY_CERT_INFO_EXTENSION *);
LIBSTUB(i2d_PROXY_CERT_INFO_EXTENSION, int);
LIBSTUB(PROXY_CERT_INFO_EXTENSION_it, const ASN1_ITEM *);
LIBSTUB(BN_mod_exp_mont_consttime, int);
LIBSTUB(BN_MONT_CTX_set_locked, BN_MONT_CTX *);
LIBSTUB(PKCS1_MGF1, int);
LIBSTUB(RSA_padding_add_X931, int);
LIBSTUB(RSA_padding_check_X931, int);
LIBSTUB(RSA_X931_hash_id, int);
LIBSTUB(RSA_verify_PKCS1_PSS, int);
LIBSTUB(RSA_padding_add_PKCS1_PSS, int);
LIBSTUB(EVP_sha224, const EVP_MD *);
LIBSTUB(EVP_sha256, const EVP_MD *);
LIBSTUB(EVP_sha384, const EVP_MD *);
LIBSTUB(EVP_sha512, const EVP_MD *);
LIBSTUB(BN_GF2m_add, int);
LIBSTUB(BN_GF2m_arr2poly, int);
LIBSTUB(BN_GF2m_mod, int);
LIBSTUB(BN_GF2m_mod_mul, int);
LIBSTUB(BN_GF2m_mod_sqr, int);
LIBSTUB(BN_GF2m_mod_inv, int);
LIBSTUB(BN_GF2m_mod_div, int);
LIBSTUB(BN_GF2m_mod_exp, int);
LIBSTUB(BN_GF2m_mod_sqrt, int);
LIBSTUB(BN_GF2m_mod_solve_quad, int);
LIBSTUB(BN_generate_prime_ex, int);
LIBSTUB(BN_is_prime_ex, int);
LIBSTUB(BN_set_negative, void);
LIBSTUB(EC_GROUP_get_degree, int);
LIBSTUB(EC_GF2m_simple_method, const EC_METHOD *);
LIBSTUB(EC_GROUP_set_curve_GF2m, int);
LIBSTUB(EC_GROUP_get_curve_GF2m, int);
LIBSTUB(EC_POINT_set_affine_coordinates_GF2m, int);
LIBSTUB(EC_POINT_get_affine_coordinates_GF2m, int);
LIBSTUB(EC_get_builtin_curves, size_t);
LIBSTUB(EC_GROUP_new_by_curve_name, EC_GROUP *);
LIBSTUB(EC_GROUP_check, int);
LIBSTUB(DSA_generate_parameters_ex, int);
LIBSTUB(EC_KEY_new_by_curve_name, EC_KEY *);
LIBSTUB(EC_KEY_generate_key, int);
LIBSTUB(EC_KEY_free, void);
LIBSTUB(ECDSA_SIG_free, void);
LIBSTUB(ECDSA_do_sign, ECDSA_SIG *);
LIBSTUB(ECDSA_do_verify, int);
LIBSTUB(EC_KEY_new, EC_KEY *);
LIBSTUB(EC_KEY_set_group, int);
LIBSTUB(EC_KEY_get0_group, const EC_GROUP *);
LIBSTUB(EC_KEY_check_key, int);
LIBSTUB(ECDSA_size, int);
LIBSTUB(ECDSA_sign, int);
LIBSTUB(ECDSA_verify, int);
LIBSTUB(d2i_ECDSA_SIG, ECDSA_SIG *);
LIBSTUB(i2d_ECDSA_SIG, int);
LIBSTUB(DH_generate_parameters_ex, int);
LIBSTUB(EC_METHOD_get_field_type, int);
LIBSTUB(EC_KEY_get0_public_key, const EC_POINT *);
LIBSTUB(ECDH_compute_key, int);
LIBSTUB(EC_KEY_get0_private_key, const BIGNUM *);
LIBSTUB(ENGINE_get_first, ENGINE *);
LIBSTUB(ENGINE_get_id, const char *);
LIBSTUB(ENGINE_get_name, const char *);
LIBSTUB(ENGINE_get_next, ENGINE *);
LIBSTUB(ENGINE_free, int);
LIBSTUB(ENGINE_new, ENGINE *);
LIBSTUB(ENGINE_set_id, int);
LIBSTUB(ENGINE_set_name, int);
LIBSTUB(ENGINE_add, int);
LIBSTUB(ENGINE_remove, int);
LIBSTUB(ENGINE_load_builtin_engines, void);
LIBSTUB(ENGINE_register_all_ciphers, void);
LIBSTUB(EVP_CIPHER_get_nid, int);
LIBSTUB(EVP_MD_get_type, int);
LIBSTUB(ENGINE_register_all_digests, void);
LIBSTUB(BIO_test_flags, int);
LIBSTUB(SSL_COMP_get_compression_methods, STACK_OF(SSL_COMP) *);
LIBSTUB(RSA_generate_key_ex, int);
LIBSTUB(X509_VERIFY_PARAM_free, void);
LIBSTUB(X509_STORE_set1_param, int);
LIBSTUB(ASN1_generate_nconf, ASN1_TYPE *);
LIBSTUB(PEM_read_bio_ECPKParameters, EC_GROUP *);
LIBSTUB(EC_KEY_dup, EC_KEY *);
LIBSTUB(BIO_set_callback, void);
LIBSTUB(BIO_set_callback_arg, void);
LIBSTUB(EVP_MD_CTX_set_flags, void);
LIBSTUB(BIO_set_flags, void);
LIBSTUB(EVP_CIPHER_CTX_set_flags, void);
LIBSTUB(EVP_CIPHER_get_iv_length, int);
LIBSTUB(X509_REQ_check_private_key, int);
LIBSTUB(PEM_read_bio_EC_PUBKEY, EC_KEY *);
LIBSTUB(PEM_read_bio_ECPrivateKey, EC_KEY *);
LIBSTUB(PEM_write_bio_EC_PUBKEY, int);
LIBSTUB(d2i_EC_PUBKEY_bio, EC_KEY *);
LIBSTUB(EC_KEY_set_asn1_flag, void);
LIBSTUB(EC_KEY_set_conv_form, void);
LIBSTUB(EC_KEY_print, int);
LIBSTUB(d2i_ECPrivateKey_bio, EC_KEY *);
LIBSTUB(i2d_EC_PUBKEY_bio, int);
LIBSTUB(PEM_write_bio_ECPrivateKey, int);
LIBSTUB(PEM_write_bio_ECPKParameters, int);
LIBSTUB(i2d_ECPrivateKey_bio, int);
LIBSTUB(i2d_ECPKParameters, int);
LIBSTUB(EC_GROUP_set_asn1_flag, void);
LIBSTUB(EC_GROUP_set_point_conversion_form, void);
LIBSTUB(EC_GROUP_get_point_conversion_form, point_conversion_form_t);
LIBSTUB(ECPKParameters_print, int);
LIBSTUB(EC_GROUP_set_seed, size_t);
LIBSTUB(d2i_ECPKParameters, EC_GROUP *);
LIBSTUB(EC_POINT_point2bn, BIGNUM *);
LIBSTUB(X509_get1_ocsp, STACK_OF(OPENSSL_STRING) *);
LIBSTUB(SSL_get_servername, const char *);
LIBSTUB(SSL_set_SSL_CTX, SSL_CTX *);
LIBSTUB(SSL_CTX_set_cookie_generate_cb, void);
LIBSTUB(SSL_CTX_set_cookie_verify_cb, void);
LIBSTUB(SSL_CTX_set_info_callback, void);
LIBSTUB(BIO_new_dgram, BIO *);
LIBSTUB(SSL_get_servername_type, int);
LIBSTUB(SSL_get_current_compression, const COMP_METHOD *);
LIBSTUB(SSL_get_current_expansion, const COMP_METHOD *);
LIBSTUB(SSL_COMP_get_name, const char *);
LIBSTUB(ENGINE_by_id, ENGINE *);
LIBSTUB(SSL_CTX_set_client_cert_engine, int);
LIBSTUB(SHA256, unsigned char *);
LIBSTUB(SHA512, unsigned char *);
LIBSTUB(AES_ige_encrypt, void);
LIBSTUB(EC_KEY_precompute_mult, int);
LIBSTUB(ENGINE_load_private_key, EVP_PKEY *);
LIBSTUB(ENGINE_load_public_key, EVP_PKEY *);
LIBSTUB(ENGINE_ctrl_cmd, int);
LIBSTUB(ENGINE_set_default, int);
LIBSTUB(ENGINE_ctrl, int);
LIBSTUB(ENGINE_register_all_complete, int);
LIBSTUB(ENGINE_ctrl_cmd_string, int);
LIBSTUB(X509_VERIFY_PARAM_add0_policy, int);
LIBSTUB(X509_VERIFY_PARAM_set_purpose, int);
LIBSTUB(X509_VERIFY_PARAM_set_flags, int);
LIBSTUB(X509_VERIFY_PARAM_new, X509_VERIFY_PARAM *);
LIBSTUB(X509_POLICY_NODE_print, void);
LIBSTUB(X509_STORE_CTX_get0_policy_tree, X509_POLICY_TREE *);
LIBSTUB(X509_STORE_CTX_get_explicit_policy, int);
LIBSTUB(X509_policy_tree_get0_policies, STACK_OF(X509_POLICY_NODE) *);
LIBSTUB(X509_policy_tree_get0_user_policies, STACK_OF(X509_POLICY_NODE) *);
LIBSTUB(BIO_get_callback_arg, char *);
LIBSTUB(EVP_PKEY_add1_attr_by_NID, int);
LIBSTUB(ENGINE_get_RSA, const RSA_METHOD *);
LIBSTUB(ENGINE_get_DSA, const DSA_METHOD *);
LIBSTUB(ENGINE_get_DH, const DH_METHOD *);
LIBSTUB(ENGINE_get_RAND, const RAND_METHOD *);
LIBSTUB(ENGINE_get_ciphers, ENGINE_CIPHERS_PTR);
LIBSTUB(ENGINE_get_digests, ENGINE_DIGESTS_PTR);
LIBSTUB(ENGINE_init, int);
LIBSTUB(ENGINE_finish, int);
LIBSTUB(OCSP_sendreq_new, OSSL_HTTP_REQ_CTX *);
LIBSTUB(OBSOLETE_OCSP_sendreq_nbio, int);
LIBSTUB(OSSL_HTTP_REQ_CTX_free, void);
LIBSTUB(SSL_CTX_use_psk_identity_hint, int);
LIBSTUB(SSL_CTX_set_psk_client_callback, void);
LIBSTUB(SSL_get_psk_identity_hint, const char *);
LIBSTUB(SSL_set_psk_server_callback, void);
LIBSTUB(SSL_use_psk_identity_hint, int);
LIBSTUB(SSL_set_psk_client_callback, void);
LIBSTUB(SSL_CTX_set_psk_server_callback, void);
LIBSTUB(SSL_get_psk_identity, const char *);
LIBSTUB(SSL_set_session_ticket_ext, int);
LIBSTUB(SSL_set_session_secret_cb, int);
LIBSTUB(SSL_set_session_ticket_ext_cb, int);
LIBSTUB(SSL_set1_param, int);
LIBSTUB(SSL_CTX_set1_param, int);
LIBSTUB(SSL_renegotiate_abbreviated, int);
LIBSTUB(SSL_CTX_set_srp_client_pwd_callback, int);
LIBSTUB(SSL_get_srp_g, BIGNUM *);
LIBSTUB(SSL_CTX_set_srp_username_callback, int);
LIBSTUB(SSL_get_srp_userinfo, char *);
LIBSTUB(SSL_set_srp_server_param, int);
LIBSTUB(SSL_set_srp_server_param_pw, int);
LIBSTUB(SSL_get_srp_N, BIGNUM *);
LIBSTUB(SSL_get_srp_username, char *);
LIBSTUB(SSL_CTX_set_srp_password, int);
LIBSTUB(SSL_CTX_set_srp_strength, int);
LIBSTUB(SSL_CTX_set_srp_verify_param_callback, int);
LIBSTUB(SSL_CTX_set_srp_cb_arg, int);
LIBSTUB(SSL_CTX_set_srp_username, int);
LIBSTUB(SSL_CTX_SRP_CTX_init, int);
LIBSTUB(SRP_Calc_A_param, int);
LIBSTUB(SSL_CTX_SRP_CTX_free, int);
LIBSTUB(SSL_srp_server_param_with_username, int);
LIBSTUB(SSL_SRP_CTX_free, int);
LIBSTUB(SSL_set_debug, void);
LIBSTUB(SSL_SESSION_get0_peer, X509 *);
LIBSTUB(SSL_SESSION_set1_id_context, int);
LIBSTUB(OBSOLETE_SSL_cache_hit, int);
LIBSTUB(SSL_CIPHER_get_id, uint32_t);
LIBSTUB(SSL_export_keying_material, int);
LIBSTUB(SSL_set_tlsext_use_srtp, int);
LIBSTUB(SSL_CTX_set_next_protos_advertised_cb, void);
LIBSTUB(SSL_get0_next_proto_negotiated, void);
LIBSTUB(SSL_get_selected_srtp_profile, SRTP_PROTECTION_PROFILE *);
LIBSTUB(SSL_CTX_set_tlsext_use_srtp, int);
LIBSTUB(SSL_select_next_proto, int);
LIBSTUB(SSL_get_srtp_profiles, STACK_OF(SRTP_PROTECTION_PROFILE) *);
LIBSTUB(SSL_CTX_set_next_proto_select_cb, void);
LIBSTUB(SSL_SESSION_get_compress_id, unsigned int);
LIBSTUB(SSL_SRP_CTX_init, int);
LIBSTUB(ERR_load_ENGINE_strings, int);
LIBSTUB(ENGINE_set_DSA, int);
LIBSTUB(ENGINE_get_finish_function, ENGINE_GEN_INT_FUNC_PTR);
LIBSTUB(ENGINE_get_default_RSA, ENGINE *);
LIBSTUB(ENGINE_set_DH, int);
LIBSTUB(ENGINE_get_init_function, ENGINE_GEN_INT_FUNC_PTR);
LIBSTUB(ENGINE_set_init_function, int);
LIBSTUB(ENGINE_set_default_DSA, int);
LIBSTUB(ENGINE_get_last, ENGINE *);
LIBSTUB(ENGINE_get_prev, ENGINE *);
LIBSTUB(ENGINE_get_default_DH, ENGINE *);
LIBSTUB(ENGINE_set_finish_function, int);
LIBSTUB(ENGINE_set_RSA, int);
LIBSTUB(ENGINE_set_default_RAND, int);
LIBSTUB(ENGINE_get_default_DSA, ENGINE *);
LIBSTUB(ENGINE_set_default_RSA, int);
LIBSTUB(ENGINE_get_default_RAND, ENGINE *);
LIBSTUB(ENGINE_set_RAND, int);
LIBSTUB(ENGINE_set_default_DH, int);
LIBSTUB(ENGINE_get_ctrl_function, ENGINE_CTRL_FUNC_PTR);
LIBSTUB(ENGINE_set_ctrl_function, int);
LIBSTUB(ENGINE_unregister_ciphers, void);
LIBSTUB(ENGINE_unregister_RSA, void);
LIBSTUB(ENGINE_register_all_RAND, void);
LIBSTUB(OBSOLETE_ENGINE_load_dynamic, void);
LIBSTUB(ENGINE_get_digest_engine, ENGINE *);
LIBSTUB(ENGINE_register_DH, int);
LIBSTUB(ENGINE_register_RAND, int);
LIBSTUB(OBSOLETE_ENGINE_load_cryptodev, void);
LIBSTUB(ENGINE_register_ciphers, int);
LIBSTUB(OBSOLETE_ENGINE_load_openssl, void);
LIBSTUB(ENGINE_get_cmd_defns, const ENGINE_CMD_DEFN *);
LIBSTUB(ENGINE_set_load_privkey_function, int);
LIBSTUB(ENGINE_set_default_digests, int);
LIBSTUB(ENGINE_register_RSA, int);
LIBSTUB(ENGINE_unregister_DSA, void);
LIBSTUB(ENGINE_set_ciphers, int);
LIBSTUB(RAND_set_rand_engine, int);
LIBSTUB(ENGINE_get_digest, const EVP_MD *);
LIBSTUB(ENGINE_get_cipher, const EVP_CIPHER *);
LIBSTUB(ENGINE_cmd_is_executable, int);
LIBSTUB(ENGINE_register_DSA, int);
LIBSTUB(ENGINE_set_load_pubkey_function, int);
LIBSTUB(ENGINE_get_load_pubkey_function, ENGINE_LOAD_KEY_PTR);
LIBSTUB(ENGINE_register_all_RSA, void);
LIBSTUB(ENGINE_unregister_digests, void);
LIBSTUB(OBSOLETE_ENGINE_get_ex_new_index, int);
LIBSTUB(ENGINE_get_ex_data, void *);
LIBSTUB(ENGINE_set_cmd_defns, int);
LIBSTUB(ENGINE_register_digests, int);
LIBSTUB(ENGINE_register_all_DH, void);
LIBSTUB(ENGINE_get_flags, int);
LIBSTUB(ENGINE_unregister_DH, void);
LIBSTUB(ENGINE_register_all_DSA, void);
LIBSTUB(ENGINE_set_digests, int);
LIBSTUB(ENGINE_register_complete, int);
LIBSTUB(ENGINE_set_ex_data, int);
LIBSTUB(ENGINE_set_destroy_function, int);
LIBSTUB(ENGINE_get_cipher_engine, ENGINE *);
LIBSTUB(ENGINE_set_default_ciphers, int);
LIBSTUB(ENGINE_unregister_RAND, void);
LIBSTUB(ENGINE_set_table_flags, void);
LIBSTUB(ENGINE_get_destroy_function, ENGINE_GEN_INT_FUNC_PTR);
LIBSTUB(ENGINE_get_table_flags, unsigned int);
LIBSTUB(ENGINE_set_flags, int);
LIBSTUB(ENGINE_get_load_privkey_function, ENGINE_LOAD_KEY_PTR);
LIBSTUB(ENGINE_set_default_string, int);
LIBSTUB(ENGINE_add_conf_module, void);
LIBSTUB(ENGINE_up_ref, int);
LIBSTUB(EC_GROUP_get_trinomial_basis, int);
LIBSTUB(SHA512_Update, int);
LIBSTUB(i2d_ECPrivateKey, int);
LIBSTUB(BN_GF2m_mod_exp_arr, int);
LIBSTUB(BN_GF2m_mod_mul_arr, int);
LIBSTUB(o2i_ECPublicKey, EC_KEY *);
LIBSTUB(EC_KEY_copy, EC_KEY *);
LIBSTUB(EC_GROUP_check_discriminant, int);
LIBSTUB(i2o_ECPublicKey, int);
LIBSTUB(EC_GROUP_new_curve_GF2m, EC_GROUP *);
LIBSTUB(EVP_PKEY_get1_EC_KEY, struct ec_key_st *);
LIBSTUB(EC_KEY_get_conv_form, point_conversion_form_t);
LIBSTUB(ENGINE_get_static_state, void *);
LIBSTUB(ECDSA_SIG_new, ECDSA_SIG *);
LIBSTUB(EC_POINT_bn2point, EC_POINT *);
LIBSTUB(ECDSA_sign_ex, int);
LIBSTUB(EC_GROUP_get_pentanomial_basis, int);
LIBSTUB(ECDSA_sign_setup, int);
LIBSTUB(BN_GF2m_mod_solve_quad_arr, int);
LIBSTUB(EC_KEY_up_ref, int);
LIBSTUB(d2i_EC_PUBKEY, EC_KEY *);
LIBSTUB(EC_GROUP_have_precompute_mult, int);
LIBSTUB(BN_GF2m_mod_arr, int);
LIBSTUB(EC_POINT_dup, EC_POINT *);
LIBSTUB(EVP_PKEY_set1_EC_KEY, int);
LIBSTUB(BN_GF2m_mod_sqrt_arr, int);
LIBSTUB(EC_KEY_set_private_key, int);
LIBSTUB(BN_GF2m_poly2arr, int);
LIBSTUB(i2d_ECParameters, int);
LIBSTUB(SHA256_Init, int);
LIBSTUB(SHA224, unsigned char *);
LIBSTUB(EC_GROUP_get_seed_len, size_t);
LIBSTUB(i2d_EC_PUBKEY, int);
LIBSTUB(EC_GFp_nist_method, const EC_METHOD *);
LIBSTUB(OBSOLETE_ENGINE_load_padlock, void);
LIBSTUB(EC_GROUP_set_curve_name, void);
LIBSTUB(BN_GF2m_mod_sqr_arr, int);
LIBSTUB(BIO_s_datagram, const BIO_METHOD *);
LIBSTUB(SHA384_Update, int);
LIBSTUB(SHA224_Final, int);
LIBSTUB(SHA224_Update, int);
LIBSTUB(d2i_ECPrivateKey, EC_KEY *);
LIBSTUB(SHA512_Final, int);
LIBSTUB(EC_GROUP_get_asn1_flag, int);
LIBSTUB(EC_GROUP_get0_seed, unsigned char *);
LIBSTUB(BN_GF2m_mod_div_arr, int);
LIBSTUB(EC_KEY_get_enc_flags, unsigned);
LIBSTUB(EC_POINT_set_compressed_coordinates_GF2m, int);
LIBSTUB(EC_GROUP_cmp, int);
LIBSTUB(SHA224_Init, int);
LIBSTUB(SHA512_Init, int);
LIBSTUB(EC_GROUP_get_basis_type, int);
LIBSTUB(EC_GROUP_dup, EC_GROUP *);
LIBSTUB(SHA256_Transform, void);
LIBSTUB(EC_KEY_set_enc_flags, void);
LIBSTUB(EC_POINT_point2hex, char *);
LIBSTUB(ECDSA_do_sign_ex, ECDSA_SIG *);
LIBSTUB(SHA512_Transform, void);
LIBSTUB(EC_KEY_set_public_key, int);
LIBSTUB(EC_GROUP_get_curve_name, int);
LIBSTUB(SHA256_Final, int);
LIBSTUB(d2i_ECParameters, EC_KEY *);
LIBSTUB(SHA384_Init, int);
LIBSTUB(SHA384_Final, int);
LIBSTUB(SHA384, unsigned char *);
LIBSTUB(EC_POINT_hex2point, EC_POINT *);
LIBSTUB(SHA256_Update, int);
LIBSTUB(BN_GF2m_mod_inv_arr, int);
LIBSTUB(DH_check_pub_key, int);
LIBSTUB(Camellia_cbc_encrypt, void);
LIBSTUB(Camellia_cfb128_encrypt, void);
LIBSTUB(Camellia_cfb1_encrypt, void);
LIBSTUB(Camellia_cfb8_encrypt, void);
LIBSTUB(Camellia_ctr128_encrypt, void);
LIBSTUB(Camellia_decrypt, void);
LIBSTUB(Camellia_ecb_encrypt, void);
LIBSTUB(Camellia_encrypt, void);
LIBSTUB(Camellia_ofb128_encrypt, void);
LIBSTUB(Camellia_set_key, int);
LIBSTUB(EVP_camellia_128_cbc, const EVP_CIPHER *);
LIBSTUB(EVP_camellia_128_cfb128, const EVP_CIPHER *);
LIBSTUB(EVP_camellia_128_cfb1, const EVP_CIPHER *);
LIBSTUB(EVP_camellia_128_cfb8, const EVP_CIPHER *);
LIBSTUB(EVP_camellia_128_ecb, const EVP_CIPHER *);
LIBSTUB(EVP_camellia_128_ofb, const EVP_CIPHER *);
LIBSTUB(EVP_camellia_192_cbc, const EVP_CIPHER *);
LIBSTUB(EVP_camellia_192_cfb128, const EVP_CIPHER *);
LIBSTUB(EVP_camellia_192_cfb1, const EVP_CIPHER *);
LIBSTUB(EVP_camellia_192_cfb8, const EVP_CIPHER *);
LIBSTUB(EVP_camellia_192_ecb, const EVP_CIPHER *);
LIBSTUB(EVP_camellia_192_ofb, const EVP_CIPHER *);
LIBSTUB(EVP_camellia_256_cbc, const EVP_CIPHER *);
LIBSTUB(EVP_camellia_256_cfb128, const EVP_CIPHER *);
LIBSTUB(EVP_camellia_256_cfb1, const EVP_CIPHER *);
LIBSTUB(EVP_camellia_256_cfb8, const EVP_CIPHER *);
LIBSTUB(EVP_camellia_256_ecb, const EVP_CIPHER *);
LIBSTUB(EVP_camellia_256_ofb, const EVP_CIPHER *);
LIBSTUB(AES_bi_ige_encrypt, void);
LIBSTUB(SEED_decrypt, void);
LIBSTUB(SEED_encrypt, void);
LIBSTUB(SEED_cbc_encrypt, void);
LIBSTUB(EVP_seed_ofb, const EVP_CIPHER *);
LIBSTUB(SEED_cfb128_encrypt, void);
LIBSTUB(SEED_ofb128_encrypt, void);
LIBSTUB(EVP_seed_cbc, const EVP_CIPHER *);
LIBSTUB(SEED_ecb_encrypt, void);
LIBSTUB(EVP_seed_ecb, const EVP_CIPHER *);
LIBSTUB(SEED_set_key, void);
LIBSTUB(EVP_seed_cfb128, const EVP_CIPHER *);
LIBSTUB(AES_unwrap_key, int);
LIBSTUB(AES_wrap_key, int);
LIBSTUB(CMS_ReceiptRequest_free, void);
LIBSTUB(CMS_add0_CertificateChoices, CMS_CertificateChoices *);
LIBSTUB(CMS_unsigned_add1_attr_by_OBJ, int);
LIBSTUB(ERR_load_CMS_strings, int);
LIBSTUB(CMS_sign_receipt, CMS_ContentInfo *);
LIBSTUB(i2d_CMS_ContentInfo, int);
LIBSTUB(CMS_signed_delete_attr, X509_ATTRIBUTE *);
LIBSTUB(d2i_CMS_bio, CMS_ContentInfo *);
LIBSTUB(CMS_unsigned_get_attr_by_NID, int);
LIBSTUB(CMS_verify, int);
LIBSTUB(SMIME_read_CMS, CMS_ContentInfo *);
LIBSTUB(CMS_decrypt_set1_key, int);
LIBSTUB(CMS_SignerInfo_get0_algs, void);
LIBSTUB(CMS_add1_cert, int);
LIBSTUB(CMS_set_detached, int);
LIBSTUB(CMS_encrypt, CMS_ContentInfo *);
LIBSTUB(CMS_EnvelopedData_create, CMS_ContentInfo *);
LIBSTUB(CMS_uncompress, int);
LIBSTUB(CMS_add0_crl, int);
LIBSTUB(CMS_SignerInfo_verify_content, int);
LIBSTUB(CMS_unsigned_get0_data_by_OBJ, void *);
LIBSTUB(PEM_write_bio_CMS, int);
LIBSTUB(CMS_unsigned_get_attr, X509_ATTRIBUTE *);
LIBSTUB(CMS_RecipientInfo_ktri_cert_cmp, int);
LIBSTUB(CMS_RecipientInfo_ktri_get0_algs, int);
LIBSTUB(CMS_ContentInfo_free, void);
LIBSTUB(CMS_final, int);
LIBSTUB(CMS_add_simple_smimecap, int);
LIBSTUB(CMS_SignerInfo_verify, int);
LIBSTUB(CMS_data, int);
LIBSTUB(d2i_CMS_ReceiptRequest, CMS_ReceiptRequest *);
LIBSTUB(CMS_compress, CMS_ContentInfo *);
LIBSTUB(CMS_digest_create, CMS_ContentInfo *);
LIBSTUB(CMS_SignerInfo_cert_cmp, int);
LIBSTUB(CMS_SignerInfo_sign, int);
LIBSTUB(CMS_data_create, CMS_ContentInfo *);
LIBSTUB(i2d_CMS_bio, int);
LIBSTUB(CMS_EncryptedData_set1_key, int);
LIBSTUB(CMS_decrypt, int);
LIBSTUB(CMS_unsigned_delete_attr, X509_ATTRIBUTE *);
LIBSTUB(CMS_unsigned_get_attr_count, int);
LIBSTUB(CMS_add_smimecap, int);
LIBSTUB(CMS_signed_get_attr_by_OBJ, int);
LIBSTUB(d2i_CMS_ContentInfo, CMS_ContentInfo *);
LIBSTUB(CMS_add_standard_smimecap, int);
LIBSTUB(CMS_ContentInfo_new, CMS_ContentInfo *);
LIBSTUB(CMS_RecipientInfo_type, int);
LIBSTUB(CMS_get0_type, const ASN1_OBJECT *);
LIBSTUB(CMS_is_detached, int);
LIBSTUB(CMS_sign, CMS_ContentInfo *);
LIBSTUB(CMS_signed_add1_attr, int);
LIBSTUB(CMS_unsigned_get_attr_by_OBJ, int);
LIBSTUB(SMIME_write_CMS, int);
LIBSTUB(CMS_EncryptedData_decrypt, int);
LIBSTUB(CMS_get0_RecipientInfos, STACK_OF(CMS_RecipientInfo) *);
LIBSTUB(CMS_add0_RevocationInfoChoice, CMS_RevocationInfoChoice *);
LIBSTUB(CMS_decrypt_set1_pkey, int);
LIBSTUB(CMS_SignerInfo_set1_signer_cert, void);
LIBSTUB(CMS_get0_signers, STACK_OF(X509) *);
LIBSTUB(CMS_ReceiptRequest_get0_values, void);
LIBSTUB(CMS_signed_get0_data_by_OBJ, void *);
LIBSTUB(CMS_get0_SignerInfos, STACK_OF(CMS_SignerInfo) *);
LIBSTUB(CMS_add0_cert, int);
LIBSTUB(CMS_EncryptedData_encrypt, CMS_ContentInfo *);
LIBSTUB(CMS_digest_verify, int);
LIBSTUB(CMS_set1_signers_certs, int);
LIBSTUB(CMS_signed_get_attr, X509_ATTRIBUTE *);
LIBSTUB(CMS_RecipientInfo_set0_key, int);
LIBSTUB(CMS_SignedData_init, int);
LIBSTUB(CMS_RecipientInfo_kekri_get0_id, int);
LIBSTUB(CMS_verify_receipt, int);
LIBSTUB(PEM_read_bio_CMS, CMS_ContentInfo *);
LIBSTUB(CMS_get1_crls, STACK_OF(X509_CRL) *);
LIBSTUB(CMS_add0_recipient_key, CMS_RecipientInfo *);
LIBSTUB(CMS_ReceiptRequest_new, CMS_ReceiptRequest *);
LIBSTUB(CMS_get0_content, ASN1_OCTET_STRING **);
LIBSTUB(CMS_get1_ReceiptRequest, int);
LIBSTUB(CMS_signed_add1_attr_by_OBJ, int);
LIBSTUB(CMS_RecipientInfo_kekri_id_cmp, int);
LIBSTUB(CMS_add1_ReceiptRequest, int);
LIBSTUB(CMS_SignerInfo_get0_signer_id, int);
LIBSTUB(CMS_unsigned_add1_attr_by_NID, int);
LIBSTUB(CMS_unsigned_add1_attr, int);
LIBSTUB(CMS_signed_get_attr_by_NID, int);
LIBSTUB(CMS_get1_certs, STACK_OF(X509) *);
LIBSTUB(CMS_signed_add1_attr_by_NID, int);
LIBSTUB(CMS_unsigned_add1_attr_by_txt, int);
LIBSTUB(CMS_dataFinal, int);
LIBSTUB(CMS_RecipientInfo_ktri_get0_signer_id, int);
LIBSTUB(i2d_CMS_ReceiptRequest, int);
LIBSTUB(CMS_add1_recipient_cert, CMS_RecipientInfo *);
LIBSTUB(CMS_dataInit, BIO *);
LIBSTUB(CMS_signed_add1_attr_by_txt, int);
LIBSTUB(CMS_RecipientInfo_decrypt, int);
LIBSTUB(CMS_signed_get_attr_count, int);
LIBSTUB(CMS_get0_eContentType, const ASN1_OBJECT *);
LIBSTUB(CMS_set1_eContentType, int);
LIBSTUB(CMS_ReceiptRequest_create0, CMS_ReceiptRequest *);
LIBSTUB(CMS_add1_signer, CMS_SignerInfo *);
LIBSTUB(CMS_RecipientInfo_set0_pkey, int);
LIBSTUB(ENGINE_set_load_ssl_client_cert_function, int);
LIBSTUB(ENGINE_get_ssl_client_cert_function, ENGINE_SSL_CLIENT_CERT_PTR);
LIBSTUB(ENGINE_load_ssl_client_cert, int);
LIBSTUB(OBSOLETE_ENGINE_load_capi, void);
LIBSTUB(ENGINE_register_pkey_meths, int);
LIBSTUB(ENGINE_get_pkey_asn1_meth_engine, ENGINE *);
LIBSTUB(WHIRLPOOL_Init, int);
LIBSTUB(WHIRLPOOL, unsigned char *);
LIBSTUB(ENGINE_get_pkey_asn1_meth, const EVP_PKEY_ASN1_METHOD *);
LIBSTUB(ENGINE_get_pkey_meth, const EVP_PKEY_METHOD *);
LIBSTUB(BIO_new_CMS, BIO *);
LIBSTUB(ENGINE_set_default_pkey_asn1_meths, int);
LIBSTUB(WHIRLPOOL_BitUpdate, void);
LIBSTUB(i2d_CMS_bio_stream, int);
LIBSTUB(CMS_stream, int);
LIBSTUB(ENGINE_pkey_asn1_find_str, const EVP_PKEY_ASN1_METHOD *);
LIBSTUB(ENGINE_get_pkey_meths, ENGINE_PKEY_METHS_PTR);
LIBSTUB(ENGINE_register_pkey_asn1_meths, int);
LIBSTUB(ENGINE_set_default_pkey_meths, int);
LIBSTUB(HMAC_CTX_copy, int);
LIBSTUB(ENGINE_get_pkey_asn1_meths, ENGINE_PKEY_ASN1_METHS_PTR);
LIBSTUB(EVP_whirlpool, const EVP_MD *);
LIBSTUB(ENGINE_register_all_pkey_meths, void);
LIBSTUB(WHIRLPOOL_Final, int);
LIBSTUB(ENGINE_get_pkey_asn1_meth_str, const EVP_PKEY_ASN1_METHOD *);
LIBSTUB(ENGINE_register_all_pkey_asn1_meths, void);
LIBSTUB(CMS_ContentInfo_print_ctx, int);
LIBSTUB(CMS_add1_crl, int);
LIBSTUB(ENGINE_set_pkey_asn1_meths, int);
LIBSTUB(ENGINE_get_pkey_meth_engine, ENGINE *);
LIBSTUB(WHIRLPOOL_Update, int);
LIBSTUB(PEM_write_bio_CMS_stream, int);
LIBSTUB(ENGINE_unregister_pkey_meths, void);
LIBSTUB(ENGINE_unregister_pkey_asn1_meths, void);
LIBSTUB(ENGINE_set_pkey_meths, int);
LIBSTUB(DSAparams_dup, DSA *);
LIBSTUB(DHparams_dup, DH *);
LIBSTUB(X509_issuer_name_hash_old, unsigned long);
LIBSTUB(X509_subject_name_hash_old, unsigned long);
LIBSTUB(SRP_VBASE_get_by_user, SRP_user_pwd *);
LIBSTUB(SRP_Calc_server_key, BIGNUM *);
LIBSTUB(SRP_create_verifier, char *);
LIBSTUB(SRP_create_verifier_BN, int);
LIBSTUB(SRP_Calc_u, BIGNUM *);
LIBSTUB(SRP_VBASE_free, void);
LIBSTUB(SRP_Calc_client_key, BIGNUM *);
LIBSTUB(SRP_get_default_gN, SRP_gN *);
LIBSTUB(SRP_Calc_x, BIGNUM *);
LIBSTUB(SRP_Calc_B, BIGNUM *);
LIBSTUB(SRP_VBASE_new, SRP_VBASE *);
LIBSTUB(SRP_check_known_gN_param, char *);
LIBSTUB(SRP_Calc_A, BIGNUM *);
LIBSTUB(SRP_Verify_A_mod_N, int);
LIBSTUB(SRP_VBASE_init, int);
LIBSTUB(SRP_Verify_B_mod_N, int);
LIBSTUB(EC_KEY_set_public_key_affine_coordinates, int);
LIBSTUB(EVP_aes_192_ctr, const EVP_CIPHER *);
LIBSTUB(EVP_aes_128_ctr, const EVP_CIPHER *);
LIBSTUB(EVP_aes_256_ctr, const EVP_CIPHER *);
LIBSTUB(EC_KEY_get_flags, int);
LIBSTUB(EVP_aes_128_xts, const EVP_CIPHER *);
LIBSTUB(EVP_aes_256_xts, const EVP_CIPHER *);
LIBSTUB(EVP_aes_128_gcm, const EVP_CIPHER *);
LIBSTUB(EC_KEY_clear_flags, void);
LIBSTUB(EC_KEY_set_flags, void);
LIBSTUB(EVP_aes_256_ccm, const EVP_CIPHER *);
LIBSTUB(EVP_aes_128_ccm, const EVP_CIPHER *);
LIBSTUB(EVP_aes_192_gcm, const EVP_CIPHER *);
LIBSTUB(EVP_aes_256_gcm, const EVP_CIPHER *);
LIBSTUB(EVP_aes_192_ccm, const EVP_CIPHER *);
LIBSTUB(EVP_rc4_hmac_md5, const EVP_CIPHER *);
LIBSTUB(EVP_aes_128_cbc_hmac_sha1, const EVP_CIPHER *);
LIBSTUB(OBSOLETE_ENGINE_load_rdrand, void);
LIBSTUB(EVP_aes_256_cbc_hmac_sha1, const EVP_CIPHER *);
LIBSTUB(CMS_add0_recipient_password, CMS_RecipientInfo *);
LIBSTUB(CMS_decrypt_set1_password, int);
LIBSTUB(CMS_RecipientInfo_set0_password, int);
LIBSTUB(X509_REQ_sign_ctx, int);
LIBSTUB(X509_CRL_sign_ctx, int);
LIBSTUB(X509_signature_dump, int);
LIBSTUB(X509_sign_ctx, int);
LIBSTUB(ASN1_item_sign_ctx, int);
LIBSTUB(X509_STORE_CTX_set0_crls, void);
LIBSTUB(SSL_SESSION_get_id, const unsigned char *);
LIBSTUB(SSL_CTX_sess_set_new_cb, void);
LIBSTUB(SSL_CTX_sess_get_get_cb, void *);
LIBSTUB(SSL_CTX_sess_set_get_cb, void);
LIBSTUB(SSL_CTX_get_info_callback, void *);
LIBSTUB(SSL_CTX_set_client_cert_cb, void);
LIBSTUB(SSL_CTX_sess_set_remove_cb, void);
LIBSTUB(SSL_CTX_sess_get_new_cb, void *);
LIBSTUB(SSL_CTX_get_client_cert_cb, void *);
LIBSTUB(SSL_CTX_sess_get_remove_cb, void *);
LIBSTUB(PEM_write_bio_SSL_SESSION, int);
LIBSTUB(PEM_read_bio_SSL_SESSION, SSL_SESSION *);
LIBSTUB(BN_X931_generate_Xpq, int);
LIBSTUB(BN_get0_nist_prime_384, const BIGNUM *);
LIBSTUB(ERR_set_mark, int);
LIBSTUB(BN_BLINDING_invert_ex, int);
LIBSTUB(NAME_CONSTRAINTS_free, void);
LIBSTUB(X509_STORE_CTX_set0_param, void);
LIBSTUB(POLICY_CONSTRAINTS_free, void);
LIBSTUB(BN_nist_mod_192, int);
LIBSTUB(GENERAL_SUBTREE_free, void);
LIBSTUB(PKCS12_add_safe, int);
LIBSTUB(BN_get0_nist_prime_192, const BIGNUM *);
LIBSTUB(X509_keyid_get0, unsigned char *);
LIBSTUB(X509_policy_node_get0_parent, const X509_POLICY_NODE *);
LIBSTUB(a2i_IPADDRESS, ASN1_OCTET_STRING *);
LIBSTUB(X509_STORE_CTX_set_depth, void);
LIBSTUB(X509_VERIFY_PARAM_inherit, int);
LIBSTUB(X509_VERIFY_PARAM_set_depth, void);
LIBSTUB(EVP_PKEY_add1_attr_by_txt, int);
LIBSTUB(BN_BLINDING_set_flags, void);
LIBSTUB(X509_VERIFY_PARAM_set1_policies, int);
LIBSTUB(X509_VERIFY_PARAM_set1_name, int);
LIBSTUB(POLICY_MAPPING_free, void);
LIBSTUB(EVP_PKEY_cmp, int);
LIBSTUB(X509_policy_level_node_count, int);
LIBSTUB(EVP_PKEY_get_attr, X509_ATTRIBUTE *);
LIBSTUB(GENERAL_SUBTREE_new, GENERAL_SUBTREE *);
LIBSTUB(X509_policy_node_get0_qualifiers, STACK_OF(POLICYQUALINFO) *);
LIBSTUB(X509_policy_node_get0_policy, const ASN1_OBJECT *);
LIBSTUB(PKCS12_add_safes, PKCS12 *);
LIBSTUB(BN_BLINDING_convert_ex, int);
LIBSTUB(X509_policy_tree_free, void);
LIBSTUB(BN_get0_nist_prime_224, const BIGNUM *);
LIBSTUB(BN_GENCB_call, int);
LIBSTUB(NAME_CONSTRAINTS_new, NAME_CONSTRAINTS *);
LIBSTUB(ECParameters_print, int);
LIBSTUB(OBSOLETE_BUF_memdup, void *);
LIBSTUB(X509_VERIFY_PARAM_set_trust, int);
LIBSTUB(EVP_PKEY_get_attr_count, int);
LIBSTUB(X509_STORE_CTX_get0_param, X509_VERIFY_PARAM *);
LIBSTUB(X509_STORE_set_depth, int);
LIBSTUB(OBSOLETE_BUF_strndup, char *);
LIBSTUB(ASN1_put_eoc, int);
LIBSTUB(X509_VERIFY_PARAM_table_cleanup, void);
LIBSTUB(RSA_setup_blinding, BN_BLINDING *);
LIBSTUB(OPENSSL_sk_find_ex, int);
LIBSTUB(POLICY_CONSTRAINTS_new, POLICY_CONSTRAINTS *);
LIBSTUB(X509_VERIFY_PARAM_get_depth, int);
LIBSTUB(ASN1_item_ndef_i2d, int);
LIBSTUB(ERR_pop_to_mark, int);
LIBSTUB(X509_policy_level_get0_node, X509_POLICY_NODE *);
LIBSTUB(i2d_PKCS7_NDEF, int);
LIBSTUB(ASN1_generate_v3, ASN1_TYPE *);
LIBSTUB(X509_policy_tree_level_count, int);
LIBSTUB(BN_nist_mod_224, int);
LIBSTUB(BIO_dgram_non_fatal_error, int);
LIBSTUB(v2i_ASN1_BIT_STRING, ASN1_BIT_STRING *);
LIBSTUB(X509_STORE_CTX_set_default, int);
LIBSTUB(X509_VERIFY_PARAM_set1, int);
LIBSTUB(v2i_GENERAL_NAME_ex, GENERAL_NAME *);
LIBSTUB(BN_nist_mod_521, int);
LIBSTUB(X509_policy_tree_get0_level, X509_POLICY_LEVEL *);
LIBSTUB(ASN1_const_check_infinite_end, int);
LIBSTUB(EVP_PKEY_delete_attr, X509_ATTRIBUTE *);
LIBSTUB(BN_get0_nist_prime_256, const BIGNUM *);
LIBSTUB(i2v_ASN1_BIT_STRING, STACK_OF(CONF_VALUE) *);
LIBSTUB(BN_nist_mod_384, int);
LIBSTUB(EVP_PKEY_get_attr_by_OBJ, int);
LIBSTUB(X509_VERIFY_PARAM_lookup, const X509_VERIFY_PARAM *);
LIBSTUB(X509V3_NAME_from_section, int);
LIBSTUB(EVP_PKEY_add1_attr, int);
LIBSTUB(BIO_dump_indent_cb, int);
LIBSTUB(BN_nist_mod_256, int);
LIBSTUB(X509_VERIFY_PARAM_add0_table, int);
LIBSTUB(BN_BLINDING_create_param, BN_BLINDING *);
LIBSTUB(BN_get0_nist_prime_521, const BIGNUM *);
LIBSTUB(BN_is_prime_fasttest_ex, int);
LIBSTUB(X509_policy_check, int);
LIBSTUB(EVP_PKEY_get_attr_by_NID, int);
LIBSTUB(BN_BLINDING_get_flags, unsigned long);
LIBSTUB(PKCS12_add_cert, PKCS12_SAFEBAG *);
LIBSTUB(EVP_CIPHER_CTX_rand_key, int);
LIBSTUB(a2i_IPADDRESS_NC, ASN1_OCTET_STRING *);
LIBSTUB(PKCS7_set_digest, int);
LIBSTUB(POLICY_MAPPING_new, POLICY_MAPPING *);
LIBSTUB(PKCS7_set0_type_other, int);
LIBSTUB(EVP_PKEY_add1_attr_by_OBJ, int);
LIBSTUB(X509_VERIFY_PARAM_set_time, void);
LIBSTUB(PKCS12_add_key, PKCS12_SAFEBAG *);
LIBSTUB(BIO_dump_cb, int);
LIBSTUB(BN_get_rfc3526_prime_8192, BIGNUM *);
LIBSTUB(X509_VERIFY_PARAM_clear_flags, int);
LIBSTUB(BN_get_rfc2409_prime_1024, BIGNUM *);
LIBSTUB(BN_get_rfc3526_prime_2048, BIGNUM *);
LIBSTUB(BN_get_rfc3526_prime_6144, BIGNUM *);
LIBSTUB(BN_get_rfc3526_prime_1536, BIGNUM *);
LIBSTUB(BN_get_rfc3526_prime_3072, BIGNUM *);
LIBSTUB(BN_get_rfc3526_prime_4096, BIGNUM *);
LIBSTUB(BN_get_rfc2409_prime_768, BIGNUM *);
LIBSTUB(X509_VERIFY_PARAM_get_flags, unsigned long);
LIBSTUB(EVP_CIPHER_CTX_new, EVP_CIPHER_CTX *);
LIBSTUB(EVP_CIPHER_CTX_free, void);
LIBSTUB(EVP_CIPHER_get_block_size, int);
LIBSTUB(EVP_CIPHER_CTX_set_app_data, void);
LIBSTUB(BIO_method_type, int);
LIBSTUB(EVP_CIPHER_CTX_get_nid, int);
LIBSTUB(EVP_CIPHER_CTX_get_key_length, int);
LIBSTUB(EVP_MD_get_size, int);
LIBSTUB(EVP_MD_CTX_test_flags, int);
LIBSTUB(BIO_clear_flags, void);
LIBSTUB(EVP_MD_get_pkey_type, int);
LIBSTUB(EVP_MD_CTX_clear_flags, void);
LIBSTUB(EVP_CIPHER_get_flags, unsigned long);
LIBSTUB(BIO_get_callback, BIO_callback_fn);
LIBSTUB(EVP_CIPHER_get_key_length, int);
LIBSTUB(EVP_Cipher, int);
LIBSTUB(EVP_CIPHER_CTX_get_block_size, int);
LIBSTUB(EVP_CIPHER_CTX_cipher, const EVP_CIPHER *);
LIBSTUB(EVP_CIPHER_CTX_get_app_data, void *);
LIBSTUB(EVP_MD_get_block_size, int);
LIBSTUB(OBSOLETE_EVP_CIPHER_CTX_flags, unsigned long);
LIBSTUB(EVP_MD_CTX_md, const EVP_MD *);
LIBSTUB(BIO_method_name, const char *);
LIBSTUB(EVP_CIPHER_CTX_get_iv_length, int);
LIBSTUB(CRYPTO_memcmp, int);
LIBSTUB(BN_consttime_swap, void);
LIBSTUB(i2d_X509_EXTENSIONS, int);
LIBSTUB(d2i_X509_EXTENSIONS, X509_EXTENSIONS *);
LIBSTUB(X509_ALGOR_get0, void);
LIBSTUB(X509_ALGOR_set0, int);
LIBSTUB(X509at_get0_data_by_OBJ, void *);
LIBSTUB(ASN1_TYPE_set1, int);
LIBSTUB(ASN1_STRING_set0, void);
LIBSTUB(i2d_X509_ALGORS, int);
LIBSTUB(d2i_X509_ALGORS, X509_ALGORS *);
LIBSTUB(SMIME_read_ASN1, ASN1_VALUE *);
LIBSTUB(OPENSSL_isservice, int);
LIBSTUB(EVP_CIPHER_CTX_clear_flags, void);
LIBSTUB(BN_X931_generate_prime_ex, int);
LIBSTUB(EVP_CIPHER_CTX_test_flags, int);
LIBSTUB(EVP_add_alg_module, void);
LIBSTUB(BN_X931_derive_prime_ex, int);
LIBSTUB(OPENSSL_init, void);
LIBSTUB(CRYPTO_strdup, char *);
LIBSTUB(i2d_TS_ACCURACY, int);
LIBSTUB(i2d_TS_MSG_IMPRINT, int);
LIBSTUB(EVP_PKEY_print_public, int);
LIBSTUB(EVP_PKEY_CTX_new, EVP_PKEY_CTX *);
LIBSTUB(i2d_TS_TST_INFO, int);
LIBSTUB(EVP_PKEY_asn1_find, const EVP_PKEY_ASN1_METHOD *);
LIBSTUB(TS_CONF_load_cert, X509 *);
LIBSTUB(TS_REQ_get_ext, X509_EXTENSION *);
LIBSTUB(EVP_PKEY_sign_init, int);
LIBSTUB(ASN1_item_print, int);
LIBSTUB(TS_TST_INFO_set_nonce, int);
LIBSTUB(TS_RESP_dup, TS_RESP *);
LIBSTUB(EVP_PKEY_asn1_add0, int);
LIBSTUB(PKCS7_add0_attrib_signing_time, int);
LIBSTUB(BIO_asn1_get_prefix, int);
LIBSTUB(TS_TST_INFO_set_time, int);
LIBSTUB(EVP_PKEY_meth_set_decrypt, void);
LIBSTUB(EVP_PKEY_set_type_str, int);
LIBSTUB(EVP_PKEY_CTX_get_keygen_info, int);
LIBSTUB(TS_REQ_set_policy_id, int);
LIBSTUB(TS_RESP_set_status_info, int);
LIBSTUB(EVP_PKEY_keygen, int);
LIBSTUB(EVP_DigestSignInit, int);
LIBSTUB(TS_ACCURACY_set_millis, int);
LIBSTUB(TS_REQ_dup, TS_REQ *);
LIBSTUB(GENERAL_NAME_dup, GENERAL_NAME *);
LIBSTUB(X509_STORE_CTX_get1_crls, STACK_OF(X509_CRL) *);
LIBSTUB(EVP_PKEY_asn1_new, EVP_PKEY_ASN1_METHOD *);
LIBSTUB(BIO_new_NDEF, BIO *);
LIBSTUB(TS_MSG_IMPRINT_set_algo, int);
LIBSTUB(i2d_TS_TST_INFO_bio, int);
LIBSTUB(TS_TST_INFO_set_ordering, int);
LIBSTUB(TS_TST_INFO_get_ext_by_OBJ, int);
LIBSTUB(TS_CONF_get_tsa_section, const char *);
LIBSTUB(SMIME_write_ASN1, int);
LIBSTUB(TS_RESP_CTX_set_signer_key, int);
LIBSTUB(EVP_PKEY_encrypt_old, int);
LIBSTUB(EVP_PKEY_encrypt_init, int);
LIBSTUB(ASN1_PCTX_get_cert_flags, unsigned long);
LIBSTUB(i2d_ESS_SIGNING_CERT, int);
LIBSTUB(TS_CONF_load_key, EVP_PKEY *);
LIBSTUB(i2d_ASN1_SEQUENCE_ANY, int);
LIBSTUB(d2i_TS_MSG_IMPRINT_bio, TS_MSG_IMPRINT *);
LIBSTUB(EVP_PKEY_asn1_set_public, void);
LIBSTUB(b2i_PublicKey_bio, EVP_PKEY *);
LIBSTUB(BIO_asn1_set_prefix, int);
LIBSTUB(EVP_PKEY_new_mac_key, EVP_PKEY *);
LIBSTUB(TS_REQ_ext_free, void);
LIBSTUB(EVP_PKEY_asn1_set_free, void);
LIBSTUB(EVP_PKEY_get0_asn1, const EVP_PKEY_ASN1_METHOD *);
LIBSTUB(EVP_PKEY_verify_recover_init, int);
LIBSTUB(EVP_PKEY_CTX_set_data, void);
LIBSTUB(EVP_PKEY_keygen_init, int);
LIBSTUB(TS_RESP_CTX_set_status_info, int);
LIBSTUB(TS_MSG_IMPRINT_get_algo, X509_ALGOR *);
LIBSTUB(TS_REQ_print_bio, int);
LIBSTUB(EVP_PKEY_CTX_ctrl_str, int);
LIBSTUB(EVP_PKEY_get_default_digest_nid, int);
LIBSTUB(PEM_write_bio_PKCS7_stream, int);
LIBSTUB(TS_MSG_IMPRINT_print_bio, int);
LIBSTUB(BN_asc2bn, int);
LIBSTUB(TS_REQ_get_policy_id, ASN1_OBJECT *);
LIBSTUB(d2i_TS_ACCURACY, TS_ACCURACY *);
LIBSTUB(DSO_global_lookup, void *);
LIBSTUB(TS_CONF_set_tsa_name, int);
LIBSTUB(i2d_ASN1_SET_ANY, int);
LIBSTUB(ASN1_PCTX_get_flags, unsigned long);
LIBSTUB(TS_TST_INFO_get_ext_by_NID, int);
LIBSTUB(TS_RESP_new, TS_RESP *);
LIBSTUB(ESS_CERT_ID_dup, ESS_CERT_ID *);
LIBSTUB(TS_STATUS_INFO_dup, TS_STATUS_INFO *);
LIBSTUB(TS_REQ_delete_ext, X509_EXTENSION *);
LIBSTUB(EVP_DigestVerifyFinal, int);
LIBSTUB(EVP_PKEY_print_params, int);
LIBSTUB(TS_REQ_get_msg_imprint, TS_MSG_IMPRINT *);
LIBSTUB(OBJ_find_sigid_by_algs, int);
LIBSTUB(TS_TST_INFO_get_serial, const ASN1_INTEGER *);
LIBSTUB(TS_REQ_get_nonce, const ASN1_INTEGER *);
LIBSTUB(X509_PUBKEY_set0_param, int);
LIBSTUB(EVP_PKEY_CTX_set0_keygen_info, void);
LIBSTUB(DIST_POINT_set_dpname, int);
LIBSTUB(i2d_ISSUING_DIST_POINT, int);
LIBSTUB(EVP_PKEY_CTX_get_data, void *);
LIBSTUB(TS_STATUS_INFO_print_bio, int);
LIBSTUB(EVP_PKEY_derive_init, int);
LIBSTUB(d2i_TS_TST_INFO, TS_TST_INFO *);
LIBSTUB(EVP_PKEY_asn1_add_alias, int);
LIBSTUB(d2i_TS_RESP_bio, TS_RESP *);
LIBSTUB(OTHERNAME_cmp, int);
LIBSTUB(GENERAL_NAME_set0_value, void);
LIBSTUB(PKCS7_RECIP_INFO_get0_alg, void);
LIBSTUB(TS_RESP_CTX_new, TS_RESP_CTX *);
LIBSTUB(TS_RESP_set_tst_info, void);
LIBSTUB(PKCS7_final, int);
LIBSTUB(EVP_PKEY_get_base_id, int);
LIBSTUB(TS_RESP_CTX_set_signer_cert, int);
LIBSTUB(TS_REQ_set_msg_imprint, int);
LIBSTUB(EVP_PKEY_CTX_ctrl, int);
LIBSTUB(TS_CONF_set_digests, int);
LIBSTUB(d2i_TS_MSG_IMPRINT, TS_MSG_IMPRINT *);
LIBSTUB(EVP_PKEY_meth_set_ctrl, void);
LIBSTUB(TS_REQ_get_ext_by_NID, int);
LIBSTUB(PKCS5_pbe_set0_algor, int);
LIBSTUB(TS_ACCURACY_new, TS_ACCURACY *);
LIBSTUB(X509_CRL_METHOD_free, void);
LIBSTUB(ASN1_PCTX_get_nm_flags, unsigned long);
LIBSTUB(EVP_PKEY_meth_set_sign, void);
LIBSTUB(EVP_PKEY_decrypt_init, int);
LIBSTUB(i2b_PVK_bio, int);
LIBSTUB(EVP_PKEY_print_private, int);
LIBSTUB(GENERAL_NAME_get0_value, void *);
LIBSTUB(b2i_PVK_bio, EVP_PKEY *);
LIBSTUB(ASN1_UTCTIME_adj, ASN1_UTCTIME *);
LIBSTUB(TS_TST_INFO_new, TS_TST_INFO *);
LIBSTUB(EVP_MD_do_all_sorted, void);
LIBSTUB(TS_CONF_set_default_engine, int);
LIBSTUB(TS_ACCURACY_set_seconds, int);
LIBSTUB(TS_TST_INFO_get_time, const ASN1_GENERALIZEDTIME *);
LIBSTUB(PKCS8_pkey_get0, int);
LIBSTUB(EVP_PKEY_asn1_get0, const EVP_PKEY_ASN1_METHOD *);
LIBSTUB(OBJ_add_sigid, int);
LIBSTUB(PKCS7_SIGNER_INFO_sign, int);
LIBSTUB(EVP_PKEY_paramgen_init, int);
LIBSTUB(EVP_PKEY_sign, int);
LIBSTUB(OBJ_sigid_free, void);
LIBSTUB(EVP_PKEY_meth_set_init, void);
LIBSTUB(d2i_ESS_ISSUER_SERIAL, ESS_ISSUER_SERIAL *);
LIBSTUB(ISSUING_DIST_POINT_new, ISSUING_DIST_POINT *);
LIBSTUB(ASN1_TIME_adj, ASN1_TIME *);
LIBSTUB(TS_OBJ_print_bio, int);
LIBSTUB(EVP_PKEY_meth_set_verify_recover, void);
LIBSTUB(TS_RESP_get_status_info, TS_STATUS_INFO *);
LIBSTUB(EVP_PKEY_CTX_set_cb, void);
LIBSTUB(PKCS7_to_TS_TST_INFO, TS_TST_INFO *);
LIBSTUB(ASN1_PCTX_get_oid_flags, unsigned long);
LIBSTUB(TS_TST_INFO_add_ext, int);
LIBSTUB(EVP_PKEY_meth_set_derive, void);
LIBSTUB(i2d_TS_MSG_IMPRINT_bio, int);
LIBSTUB(TS_RESP_CTX_set_accuracy, int);
LIBSTUB(TS_REQ_set_nonce, int);
LIBSTUB(ESS_CERT_ID_new, ESS_CERT_ID *);
LIBSTUB(TS_REQ_get_ext_count, int);
LIBSTUB(BUF_reverse, void);
LIBSTUB(TS_TST_INFO_print_bio, int);
LIBSTUB(d2i_ISSUING_DIST_POINT, ISSUING_DIST_POINT *);
LIBSTUB(i2b_PrivateKey_bio, int);
LIBSTUB(i2d_TS_RESP, int);
LIBSTUB(b2i_PublicKey, EVP_PKEY *);
LIBSTUB(TS_VERIFY_CTX_cleanup, void);
LIBSTUB(TS_STATUS_INFO_free, void);
LIBSTUB(TS_RESP_verify_token, int);
LIBSTUB(OBJ_bsearch_ex_, const void *);
LIBSTUB(ASN1_bn_print, int);
LIBSTUB(EVP_PKEY_asn1_get_count, int);
LIBSTUB(ASN1_PCTX_set_nm_flags, void);
LIBSTUB(EVP_DigestVerifyInit, int);
LIBSTUB(TS_TST_INFO_get_policy_id, ASN1_OBJECT *);
LIBSTUB(TS_REQ_get_cert_req, int);
LIBSTUB(X509_CRL_set_meth_data, void);
LIBSTUB(PKCS8_pkey_set0, int);
LIBSTUB(ASN1_STRING_copy, int);
LIBSTUB(X509_CRL_match, int);
LIBSTUB(EVP_PKEY_asn1_set_private, void);
LIBSTUB(TS_TST_INFO_get_ext_d2i, void *);
LIBSTUB(TS_RESP_CTX_add_policy, int);
LIBSTUB(d2i_TS_RESP, TS_RESP *);
LIBSTUB(TS_CONF_load_certs, STACK_OF(X509) *);
LIBSTUB(TS_TST_INFO_get_msg_imprint, TS_MSG_IMPRINT *);
LIBSTUB(ERR_load_TS_strings, int);
LIBSTUB(TS_TST_INFO_get_version, long);
LIBSTUB(EVP_PKEY_CTX_dup, EVP_PKEY_CTX *);
LIBSTUB(EVP_PKEY_meth_set_verify, void);
LIBSTUB(i2b_PublicKey_bio, int);
LIBSTUB(TS_CONF_set_certs, int);
LIBSTUB(EVP_PKEY_asn1_get0_info, int);
LIBSTUB(TS_VERIFY_CTX_free, void);
LIBSTUB(TS_REQ_get_ext_by_critical, int);
LIBSTUB(TS_RESP_CTX_set_serial_cb, void);
LIBSTUB(X509_CRL_get_meth_data, void *);
LIBSTUB(TS_RESP_CTX_set_time_cb, void);
LIBSTUB(TS_MSG_IMPRINT_get_msg, ASN1_OCTET_STRING *);
LIBSTUB(TS_TST_INFO_ext_free, void);
LIBSTUB(TS_REQ_get_version, long);
LIBSTUB(TS_REQ_add_ext, int);
LIBSTUB(EVP_PKEY_CTX_set_app_data, void);
LIBSTUB(OBJ_bsearch_, const void *);
LIBSTUB(EVP_PKEY_meth_set_verifyctx, void);
LIBSTUB(i2d_PKCS7_bio_stream, int);
LIBSTUB(PKCS7_sign_add_signer, PKCS7_SIGNER_INFO *);
LIBSTUB(d2i_TS_TST_INFO_bio, TS_TST_INFO *);
LIBSTUB(TS_TST_INFO_get_ordering, int);
LIBSTUB(TS_RESP_print_bio, int);
LIBSTUB(TS_TST_INFO_get_exts, STACK_OF(X509_EXTENSION) *);
LIBSTUB(PKCS5_pbe2_set_iv, X509_ALGOR *);
LIBSTUB(b2i_PrivateKey, EVP_PKEY *);
LIBSTUB(EVP_PKEY_CTX_get_app_data, void *);
LIBSTUB(TS_REQ_set_cert_req, int);
LIBSTUB(TS_CONF_set_serial, int);
LIBSTUB(TS_TST_INFO_free, void);
LIBSTUB(TS_RESP_verify_response, int);
LIBSTUB(i2d_ESS_ISSUER_SERIAL, int);
LIBSTUB(TS_ACCURACY_get_seconds, const ASN1_INTEGER *);
LIBSTUB(EVP_CIPHER_do_all, void);
LIBSTUB(b2i_PrivateKey_bio, EVP_PKEY *);
LIBSTUB(OCSP_CERTID_dup, OCSP_CERTID *);
LIBSTUB(X509_PUBKEY_get0_param, int);
LIBSTUB(TS_MSG_IMPRINT_dup, TS_MSG_IMPRINT *);
LIBSTUB(PKCS7_print_ctx, int);
LIBSTUB(i2d_TS_REQ_bio, int);
LIBSTUB(EVP_PKEY_asn1_set_param, void);
LIBSTUB(EVP_PKEY_meth_set_encrypt, void);
LIBSTUB(ASN1_PCTX_set_flags, void);
LIBSTUB(i2d_ESS_CERT_ID, int);
LIBSTUB(TS_VERIFY_CTX_new, TS_VERIFY_CTX *);
LIBSTUB(TS_RESP_CTX_set_extension_cb, void);
LIBSTUB(TS_RESP_CTX_set_status_info_cond, int);
LIBSTUB(EVP_PKEY_verify, int);
LIBSTUB(X509_CRL_METHOD_new, X509_CRL_METHOD *);
LIBSTUB(EVP_DigestSignFinal, int);
LIBSTUB(TS_RESP_CTX_set_def_policy, int);
LIBSTUB(TS_RESP_create_response, TS_RESP *);
LIBSTUB(PKCS7_SIGNER_INFO_get0_algs, void);
LIBSTUB(TS_TST_INFO_get_nonce, const ASN1_INTEGER *);
LIBSTUB(EVP_PKEY_decrypt_old, int);
LIBSTUB(TS_TST_INFO_set_policy_id, int);
LIBSTUB(TS_CONF_set_ess_cert_id_chain, int);
LIBSTUB(EVP_PKEY_CTX_get0_pkey, EVP_PKEY *);
LIBSTUB(d2i_TS_REQ, TS_REQ *);
LIBSTUB(EVP_PKEY_asn1_find_str, const EVP_PKEY_ASN1_METHOD *);
LIBSTUB(BIO_f_asn1, const BIO_METHOD *);
LIBSTUB(ESS_SIGNING_CERT_new, ESS_SIGNING_CERT *);
LIBSTUB(EVP_PBE_find, int);
LIBSTUB(X509_CRL_get0_by_cert, int);
LIBSTUB(EVP_PKEY_derive, int);
LIBSTUB(i2d_TS_REQ, int);
LIBSTUB(TS_TST_INFO_delete_ext, X509_EXTENSION *);
LIBSTUB(ESS_ISSUER_SERIAL_free, void);
LIBSTUB(ASN1_PCTX_set_str_flags, void);
LIBSTUB(TS_CONF_set_signer_key, int);
LIBSTUB(TS_ACCURACY_get_millis, const ASN1_INTEGER *);
LIBSTUB(TS_RESP_get_token, PKCS7 *);
LIBSTUB(TS_ACCURACY_dup, TS_ACCURACY *);
LIBSTUB(X509_CRL_set_default_method, void);
LIBSTUB(TS_RESP_free, void);
LIBSTUB(ISSUING_DIST_POINT_free, void);
LIBSTUB(ESS_ISSUER_SERIAL_new, ESS_ISSUER_SERIAL *);
LIBSTUB(PKCS7_add1_attrib_digest, int);
LIBSTUB(TS_RESP_CTX_add_md, int);
LIBSTUB(TS_TST_INFO_dup, TS_TST_INFO *);
LIBSTUB(PEM_write_bio_Parameters, int);
LIBSTUB(TS_TST_INFO_get_accuracy, TS_ACCURACY *);
LIBSTUB(X509_CRL_get0_by_serial, int);
LIBSTUB(TS_TST_INFO_set_version, int);
LIBSTUB(TS_RESP_CTX_get_tst_info, TS_TST_INFO *);
LIBSTUB(TS_RESP_verify_signature, int);
LIBSTUB(TS_TST_INFO_get_tsa, GENERAL_NAME *);
LIBSTUB(TS_STATUS_INFO_new, TS_STATUS_INFO *);
LIBSTUB(EVP_PKEY_CTX_get_cb, void *);
LIBSTUB(TS_REQ_get_ext_d2i, void *);
LIBSTUB(GENERAL_NAME_set0_othername, int);
LIBSTUB(TS_TST_INFO_get_ext_count, int);
LIBSTUB(TS_RESP_CTX_get_request, TS_REQ *);
LIBSTUB(EVP_PKEY_meth_set_signctx, void);
LIBSTUB(EVP_PKEY_asn1_copy, void);
LIBSTUB(ASN1_TYPE_cmp, int);
LIBSTUB(EVP_CIPHER_do_all_sorted, void);
LIBSTUB(EVP_PKEY_CTX_free, void);
LIBSTUB(X509_STORE_CTX_get1_certs, STACK_OF(X509) *);
LIBSTUB(EVP_PKEY_CTX_get_operation, int);
LIBSTUB(d2i_ESS_SIGNING_CERT, ESS_SIGNING_CERT *);
LIBSTUB(TS_CONF_set_ordering, int);
LIBSTUB(EVP_PBE_alg_add_type, int);
LIBSTUB(TS_REQ_set_version, int);
LIBSTUB(EVP_PKEY_get0, void *);
LIBSTUB(BIO_asn1_set_suffix, int);
LIBSTUB(i2d_TS_STATUS_INFO, int);
LIBSTUB(EVP_MD_do_all, void);
LIBSTUB(TS_TST_INFO_set_accuracy, int);
LIBSTUB(PKCS7_add_attrib_content_type, int);
LIBSTUB(EVP_PKEY_meth_add0, int);
LIBSTUB(TS_TST_INFO_set_tsa, int);
LIBSTUB(EVP_PKEY_meth_new, EVP_PKEY_METHOD *);
LIBSTUB(TS_CONF_set_accuracy, int);
LIBSTUB(ASN1_PCTX_set_oid_flags, void);
LIBSTUB(ESS_SIGNING_CERT_dup, ESS_SIGNING_CERT *);
LIBSTUB(d2i_TS_REQ_bio, TS_REQ *);
LIBSTUB(X509_time_adj_ex, ASN1_TIME *);
LIBSTUB(TS_RESP_CTX_add_flags, void);
LIBSTUB(d2i_TS_STATUS_INFO, TS_STATUS_INFO *);
LIBSTUB(TS_MSG_IMPRINT_set_msg, int);
LIBSTUB(BIO_asn1_get_suffix, int);
LIBSTUB(TS_REQ_free, void);
LIBSTUB(EVP_PKEY_meth_free, void);
LIBSTUB(TS_REQ_get_exts, STACK_OF(X509_EXTENSION) *);
LIBSTUB(TS_RESP_CTX_set_clock_precision_digits, int);
LIBSTUB(TS_RESP_CTX_add_failure_info, int);
LIBSTUB(i2d_TS_RESP_bio, int);
LIBSTUB(EVP_PKEY_CTX_get0_peerkey, EVP_PKEY *);
LIBSTUB(TS_REQ_new, TS_REQ *);
LIBSTUB(TS_MSG_IMPRINT_new, TS_MSG_IMPRINT *);
LIBSTUB(EVP_PKEY_meth_find, const EVP_PKEY_METHOD *);
LIBSTUB(EVP_PKEY_get_id, int);
LIBSTUB(TS_TST_INFO_set_serial, int);
LIBSTUB(a2i_GENERAL_NAME, GENERAL_NAME *);
LIBSTUB(TS_CONF_set_crypto_device, int);
LIBSTUB(EVP_PKEY_verify_init, int);
LIBSTUB(TS_CONF_set_policies, int);
LIBSTUB(ASN1_PCTX_new, ASN1_PCTX *);
LIBSTUB(ESS_CERT_ID_free, void);
LIBSTUB(TS_MSG_IMPRINT_free, void);
LIBSTUB(TS_VERIFY_CTX_init, void);
LIBSTUB(PKCS7_stream, int);
LIBSTUB(TS_RESP_CTX_set_certs, int);
LIBSTUB(TS_CONF_set_def_policy, int);
LIBSTUB(ASN1_GENERALIZEDTIME_adj, ASN1_GENERALIZEDTIME *);
LIBSTUB(TS_ACCURACY_free, void);
LIBSTUB(TS_RESP_get_tst_info, TS_TST_INFO *);
LIBSTUB(EVP_PKEY_derive_set_peer, int);
LIBSTUB(PEM_read_bio_Parameters, EVP_PKEY *);
LIBSTUB(TS_CONF_set_clock_precision_digits, int);
LIBSTUB(ESS_ISSUER_SERIAL_dup, ESS_ISSUER_SERIAL *);
LIBSTUB(TS_ACCURACY_get_micros, const ASN1_INTEGER *);
LIBSTUB(ASN1_PCTX_get_str_flags, unsigned long);
LIBSTUB(NAME_CONSTRAINTS_check, int);
LIBSTUB(ASN1_BIT_STRING_check, int);
LIBSTUB(X509_check_akid, int);
LIBSTUB(ASN1_PCTX_free, void);
LIBSTUB(PEM_write_bio_ASN1_stream, int);
LIBSTUB(i2d_ASN1_bio_stream, int);
LIBSTUB(TS_X509_ALGOR_print_bio, int);
LIBSTUB(EVP_PKEY_meth_set_cleanup, void);
LIBSTUB(EVP_PKEY_asn1_free, void);
LIBSTUB(ESS_SIGNING_CERT_free, void);
LIBSTUB(TS_TST_INFO_set_msg_imprint, int);
LIBSTUB(GENERAL_NAME_cmp, int);
LIBSTUB(d2i_ASN1_SET_ANY, ASN1_SEQUENCE_ANY *);
LIBSTUB(d2i_ASN1_SEQUENCE_ANY, ASN1_SEQUENCE_ANY *);
LIBSTUB(GENERAL_NAME_get0_otherName, int);
LIBSTUB(d2i_ESS_CERT_ID, ESS_CERT_ID *);
LIBSTUB(OBJ_find_sigid_algs, int);
LIBSTUB(EVP_PKEY_meth_set_keygen, void);
LIBSTUB(PKCS5_PBKDF2_HMAC, int);
LIBSTUB(EVP_PKEY_paramgen, int);
LIBSTUB(EVP_PKEY_meth_set_paramgen, void);
LIBSTUB(BIO_new_PKCS7, BIO *);
LIBSTUB(EVP_PKEY_verify_recover, int);
LIBSTUB(TS_ext_print_bio, int);
LIBSTUB(TS_ASN1_INTEGER_print_bio, int);
LIBSTUB(EVP_PKEY_set_type, int);
LIBSTUB(TS_ACCURACY_set_micros, int);
LIBSTUB(TS_REQ_to_TS_VERIFY_CTX, TS_VERIFY_CTX *);
LIBSTUB(EVP_PKEY_meth_set_copy, void);
LIBSTUB(ASN1_PCTX_set_cert_flags, void);
LIBSTUB(TS_TST_INFO_get_ext, X509_EXTENSION *);
LIBSTUB(EVP_PKEY_asn1_set_ctrl, void);
LIBSTUB(TS_TST_INFO_get_ext_by_critical, int);
LIBSTUB(EVP_PKEY_CTX_new_id, EVP_PKEY_CTX *);
LIBSTUB(TS_REQ_get_ext_by_OBJ, int);
LIBSTUB(TS_CONF_set_signer_cert, int);
LIBSTUB(X509_NAME_hash_old, unsigned long);
LIBSTUB(ASN1_TIME_set_string, int);
LIBSTUB(EVP_MD_get_flags, unsigned long);
LIBSTUB(TS_RESP_CTX_free, void);
LIBSTUB(OSSL_HTTP_REQ_CTX_add1_header, int);
LIBSTUB(OBSOLETE_OCSP_REQ_CTX_set1_req, int);
LIBSTUB(X509_STORE_set_verify_cb, void);
LIBSTUB(X509_STORE_CTX_get0_current_crl, X509_CRL *);
LIBSTUB(X509_STORE_CTX_get0_parent_ctx, X509_STORE_CTX *);
LIBSTUB(X509_STORE_CTX_get0_current_issuer, X509 *);
LIBSTUB(EVP_CIPHER_CTX_copy, int);
LIBSTUB(UI_method_get_prompt_constructor, void *);
LIBSTUB(UI_method_set_prompt_constructor, int);
LIBSTUB(EVP_read_pw_string_min, int);
LIBSTUB(CRYPTO_cts128_encrypt, size_t);
LIBSTUB(CRYPTO_cts128_decrypt_block, size_t);
LIBSTUB(CRYPTO_cfb128_1_encrypt, void);
LIBSTUB(CRYPTO_cbc128_encrypt, void);
LIBSTUB(CRYPTO_ctr128_encrypt, void);
LIBSTUB(CRYPTO_ofb128_encrypt, void);
LIBSTUB(CRYPTO_cts128_decrypt, size_t);
LIBSTUB(CRYPTO_cts128_encrypt_block, size_t);
LIBSTUB(CRYPTO_cbc128_decrypt, void);
LIBSTUB(CRYPTO_cfb128_encrypt, void);
LIBSTUB(CRYPTO_cfb128_8_encrypt, void);
LIBSTUB(OPENSSL_gmtime, struct tm *);
LIBSTUB(OPENSSL_gmtime_adj, int);
LIBSTUB(OPENSSL_gmtime_diff, int);
LIBSTUB(EVP_PKEY_meth_get0_info, void);
LIBSTUB(EVP_PKEY_meth_copy, void);
LIBSTUB(RSA_padding_add_PKCS1_PSS_mgf1, int);
LIBSTUB(RSA_verify_PKCS1_PSS_mgf1, int);
LIBSTUB(X509_ALGOR_set_md, void);
LIBSTUB(CMAC_CTX_copy, int);
LIBSTUB(CMAC_CTX_free, void);
LIBSTUB(CMAC_CTX_get0_cipher_ctx, EVP_CIPHER_CTX *);
LIBSTUB(CMAC_CTX_cleanup, void);
LIBSTUB(CMAC_Init, int);
LIBSTUB(CMAC_Update, int);
LIBSTUB(CMAC_resume, int);
LIBSTUB(CMAC_CTX_new, CMAC_CTX *);
LIBSTUB(CMAC_Final, int);
LIBSTUB(CRYPTO_ctr128_encrypt_ctr32, void);
LIBSTUB(CRYPTO_gcm128_release, void);
LIBSTUB(CRYPTO_ccm128_decrypt_ccm64, int);
LIBSTUB(CRYPTO_ccm128_encrypt, int);
LIBSTUB(CRYPTO_gcm128_encrypt, int);
LIBSTUB(CRYPTO_xts128_encrypt, int);
LIBSTUB(CRYPTO_nistcts128_decrypt_block, size_t);
LIBSTUB(CRYPTO_gcm128_setiv, void);
LIBSTUB(CRYPTO_nistcts128_encrypt, size_t);
LIBSTUB(CRYPTO_gcm128_tag, void);
LIBSTUB(CRYPTO_ccm128_encrypt_ccm64, int);
LIBSTUB(CRYPTO_ccm128_setiv, int);
LIBSTUB(CRYPTO_nistcts128_encrypt_block, size_t);
LIBSTUB(CRYPTO_gcm128_aad, int);
LIBSTUB(CRYPTO_ccm128_init, void);
LIBSTUB(CRYPTO_nistcts128_decrypt, size_t);
LIBSTUB(CRYPTO_gcm128_new, GCM128_CONTEXT *);
LIBSTUB(CRYPTO_ccm128_tag, size_t);
LIBSTUB(CRYPTO_ccm128_decrypt, int);
LIBSTUB(CRYPTO_ccm128_aad, void);
LIBSTUB(CRYPTO_gcm128_init, void);
LIBSTUB(CRYPTO_gcm128_decrypt, int);
LIBSTUB(CRYPTO_gcm128_decrypt_ctr32, int);
LIBSTUB(CRYPTO_gcm128_encrypt_ctr32, int);
LIBSTUB(CRYPTO_gcm128_finish, int);
LIBSTUB(PKCS5_pbkdf2_set, X509_ALGOR *);
LIBSTUB(RSA_PSS_PARAMS_new, RSA_PSS_PARAMS *);
LIBSTUB(d2i_RSA_PSS_PARAMS, RSA_PSS_PARAMS *);
LIBSTUB(RSA_PSS_PARAMS_free, void);
LIBSTUB(i2d_RSA_PSS_PARAMS, int);
LIBSTUB(POLICY_MAPPING_it, const ASN1_ITEM *);
LIBSTUB(NAME_CONSTRAINTS_it, const ASN1_ITEM *);
LIBSTUB(ASN1_OCTET_STRING_NDEF_it, const ASN1_ITEM *);
LIBSTUB(POLICY_CONSTRAINTS_it, const ASN1_ITEM *);
LIBSTUB(POLICY_MAPPINGS_it, const ASN1_ITEM *);
LIBSTUB(GENERAL_SUBTREE_it, const ASN1_ITEM *);
LIBSTUB(X509_EXTENSIONS_it, const ASN1_ITEM *);
LIBSTUB(X509_ALGORS_it, const ASN1_ITEM *);
LIBSTUB(CMS_ContentInfo_it, const ASN1_ITEM *);
LIBSTUB(CMS_ReceiptRequest_it, const ASN1_ITEM *);
LIBSTUB(ASN1_SEQUENCE_ANY_it, const ASN1_ITEM *);
LIBSTUB(ASN1_SET_ANY_it, const ASN1_ITEM *);
LIBSTUB(ISSUING_DIST_POINT_it, const ASN1_ITEM *);
LIBSTUB(RSA_PSS_PARAMS_it, const ASN1_ITEM *);
LIBSTUB(PEM_write_bio_DHxparams, int);
LIBSTUB(X509_ALGOR_cmp, int);
LIBSTUB(ASN1_STRING_clear_free, void);
LIBSTUB(ASN1_TIME_diff, int);
LIBSTUB(BIO_hex_string, int);
LIBSTUB(OBSOLETE_BUF_strnlen, size_t);
LIBSTUB(CMS_RecipientEncryptedKey_cert_cmp, int);
LIBSTUB(CMS_RecipientEncryptedKey_get0_id, int);
LIBSTUB(CMS_RecipientInfo_encrypt, int);
LIBSTUB(CMS_RecipientInfo_get0_pkey_ctx, EVP_PKEY_CTX *);
LIBSTUB(CMS_RecipientInfo_kari_decrypt, int);
LIBSTUB(CMS_RecipientInfo_kari_get0_alg, int);
LIBSTUB(CMS_RecipientInfo_kari_get0_ctx, EVP_CIPHER_CTX *);
LIBSTUB(CMS_RecipientInfo_kari_get0_orig_id, int);
LIBSTUB(CMS_RecipientInfo_kari_get0_reks, STACK_OF(CMS_RecipientEncryptedKey) *);
LIBSTUB(CMS_RecipientInfo_kari_orig_id_cmp, int);
LIBSTUB(CMS_RecipientInfo_kari_set0_pkey, int);
LIBSTUB(CMS_SharedInfo_encode, int);
LIBSTUB(CMS_SignerInfo_get0_md_ctx, EVP_MD_CTX *);
LIBSTUB(CMS_SignerInfo_get0_pkey_ctx, EVP_PKEY_CTX *);
LIBSTUB(CMS_SignerInfo_get0_signature, ASN1_OCTET_STRING *);
LIBSTUB(d2i_DHxparams, DH *);
LIBSTUB(i2d_DHxparams, int);
LIBSTUB(DH_compute_key_padded, int);
LIBSTUB(DH_get_1024_160, DH *);
LIBSTUB(DH_get_2048_224, DH *);
LIBSTUB(DH_get_2048_256, DH *);
LIBSTUB(DH_KDF_X9_42, int);
LIBSTUB(EC_curve_nid2nist, const char *);
LIBSTUB(EC_curve_nist2nid, int);
LIBSTUB(EC_GROUP_get_mont_data, BN_MONT_CTX *);
LIBSTUB(ECDH_KDF_X9_62, int);
LIBSTUB(EVP_aes_128_cbc_hmac_sha256, const EVP_CIPHER *);
LIBSTUB(EVP_aes_128_wrap, const EVP_CIPHER *);
LIBSTUB(EVP_aes_192_wrap, const EVP_CIPHER *);
LIBSTUB(EVP_aes_256_cbc_hmac_sha256, const EVP_CIPHER *);
LIBSTUB(EVP_aes_256_wrap, const EVP_CIPHER *);
LIBSTUB(EVP_des_ede3_wrap, const EVP_CIPHER *);
LIBSTUB(CRYPTO_128_unwrap, size_t);
LIBSTUB(CRYPTO_128_wrap, size_t);
LIBSTUB(OSSL_HTTP_REQ_CTX_get0_mem_bio, BIO *);
LIBSTUB(OBSOLETE_OCSP_REQ_CTX_http, int);
LIBSTUB(OBSOLETE_OCSP_REQ_CTX_i2d, int);
LIBSTUB(OSSL_HTTP_REQ_CTX_nbio, int);
LIBSTUB(OSSL_HTTP_REQ_CTX_nbio_d2i, int);
LIBSTUB(OBSOLETE_OCSP_REQ_CTX_new, OSSL_HTTP_REQ_CTX *);
LIBSTUB(OSSL_HTTP_REQ_CTX_set_max_response_length, void);
LIBSTUB(d2i_RSA_OAEP_PARAMS, RSA_OAEP_PARAMS *);
LIBSTUB(RSA_OAEP_PARAMS_free, void);
LIBSTUB(RSA_OAEP_PARAMS_it, const ASN1_ITEM *);
LIBSTUB(RSA_OAEP_PARAMS_new, RSA_OAEP_PARAMS *);
LIBSTUB(RSA_padding_add_PKCS1_OAEP_mgf1, int);
LIBSTUB(RSA_padding_check_PKCS1_OAEP_mgf1, int);
LIBSTUB(OPENSSL_sk_deep_copy, OPENSSL_STACK *);
LIBSTUB(i2d_re_X509_tbs, int);
LIBSTUB(X509_chain_check_suiteb, int);
LIBSTUB(X509_chain_up_ref, STACK_OF(X509) *);
LIBSTUB(X509_CRL_check_suiteb, int);
LIBSTUB(X509_CRL_diff, X509_CRL *);
LIBSTUB(OBSOLETE_X509_CRL_http_nbio, int);
LIBSTUB(X509_get0_signature, void);
LIBSTUB(X509_get_signature_nid, int);
LIBSTUB(OBSOLETE_X509_http_nbio, int);
LIBSTUB(X509_REVOKED_dup, X509_REVOKED *);
LIBSTUB(X509_STORE_CTX_get0_store, X509_STORE *);
LIBSTUB(X509_VERIFY_PARAM_add1_host, int);
LIBSTUB(X509_VERIFY_PARAM_get0, const X509_VERIFY_PARAM *);
LIBSTUB(X509_VERIFY_PARAM_get0_name, const char *);
LIBSTUB(X509_VERIFY_PARAM_get0_peername, char *);
LIBSTUB(X509_VERIFY_PARAM_get_count, int);
LIBSTUB(X509_VERIFY_PARAM_set1_email, int);
LIBSTUB(X509_VERIFY_PARAM_set1_host, int);
LIBSTUB(X509_VERIFY_PARAM_set1_ip, int);
LIBSTUB(X509_VERIFY_PARAM_set1_ip_asc, int);
LIBSTUB(X509_VERIFY_PARAM_set_hostflags, void);
LIBSTUB(X509_check_email, int);
LIBSTUB(X509_check_host, int);
LIBSTUB(X509_check_ip, int);
LIBSTUB(X509_check_ip_asc, int);
LIBSTUB(EVP_PKEY_asn1_set_item, void);
LIBSTUB(DTLS_client_method, const SSL_METHOD *);
LIBSTUB(DTLS_method, const SSL_METHOD *);
LIBSTUB(DTLS_server_method, const SSL_METHOD *);
LIBSTUB(SSL_certs_clear, void);
LIBSTUB(SSL_CIPHER_find, const SSL_CIPHER *);
LIBSTUB(SSL_CONF_cmd, int);
LIBSTUB(SSL_CONF_cmd_argv, int);
LIBSTUB(SSL_CONF_cmd_value_type, int);
LIBSTUB(SSL_CONF_CTX_clear_flags, unsigned int);
LIBSTUB(SSL_CONF_CTX_finish, int);
LIBSTUB(SSL_CONF_CTX_free, void);
LIBSTUB(SSL_CONF_CTX_new, SSL_CONF_CTX *);
LIBSTUB(SSL_CONF_CTX_set1_prefix, int);
LIBSTUB(SSL_CONF_CTX_set_flags, unsigned int);
LIBSTUB(SSL_CONF_CTX_set_ssl, void);
LIBSTUB(SSL_CONF_CTX_set_ssl_ctx, void);
LIBSTUB(SSL_CTX_add_client_custom_ext, int);
LIBSTUB(SSL_CTX_add_server_custom_ext, int);
LIBSTUB(SSL_CTX_get0_certificate, X509 *);
LIBSTUB(SSL_CTX_get0_param, X509_VERIFY_PARAM *);
LIBSTUB(SSL_CTX_get0_privatekey, EVP_PKEY *);
LIBSTUB(SSL_CTX_get_ssl_method, const SSL_METHOD *);
LIBSTUB(SSL_CTX_set_alpn_protos, int);
LIBSTUB(SSL_CTX_set_alpn_select_cb, void);
LIBSTUB(SSL_CTX_set_cert_cb, void);
LIBSTUB(SSL_CTX_use_serverinfo, int);
LIBSTUB(SSL_CTX_use_serverinfo_file, int);
LIBSTUB(SSL_extension_supported, int);
LIBSTUB(SSL_get0_alpn_selected, void);
LIBSTUB(SSL_get0_param, X509_VERIFY_PARAM *);
LIBSTUB(SSL_is_server, int);
LIBSTUB(SSL_set_alpn_protos, int);
LIBSTUB(SSL_set_cert_cb, void);
LIBSTUB(SSL_check_chain, int);
LIBSTUB(SSL_get_shared_sigalgs, int);
LIBSTUB(SSL_get_sigalgs, int);
LIBSTUB(ASN1_add_stable_module, void);
LIBSTUB(ASN1_buf_print, int);
LIBSTUB(ASN1_ENUMERATED_get_int64, int);
LIBSTUB(ASN1_ENUMERATED_set_int64, int);
LIBSTUB(ASN1_INTEGER_get_int64, int);
LIBSTUB(ASN1_INTEGER_get_uint64, int);
LIBSTUB(ASN1_INTEGER_set_int64, int);
LIBSTUB(ASN1_INTEGER_set_uint64, int);
LIBSTUB(ASN1_SCTX_free, void);
LIBSTUB(ASN1_SCTX_get_app_data, void *);
LIBSTUB(ASN1_SCTX_get_flags, unsigned long);
LIBSTUB(ASN1_SCTX_get_item, const ASN1_ITEM *);
LIBSTUB(ASN1_SCTX_get_template, const ASN1_TEMPLATE *);
LIBSTUB(ASN1_SCTX_new, ASN1_SCTX *);
LIBSTUB(ASN1_SCTX_set_app_data, void);
LIBSTUB(ASN1_str2mask, int);
LIBSTUB(ASN1_TYPE_pack_sequence, ASN1_TYPE *);
LIBSTUB(ASN1_TYPE_unpack_sequence, void *);
LIBSTUB(ASYNC_block_pause, void);
LIBSTUB(ASYNC_cleanup_thread, void);
LIBSTUB(ASYNC_get_current_job, ASYNC_JOB *);
LIBSTUB(ASYNC_init_thread, int);
LIBSTUB(ASYNC_pause_job, int);
LIBSTUB(ASYNC_start_job, int);
LIBSTUB(ASYNC_unblock_pause, void);
LIBSTUB(ERR_load_ASYNC_strings, int);
LIBSTUB(BIO_accept_ex, int);
LIBSTUB(BIO_ADDR_clear, void);
LIBSTUB(BIO_ADDR_family, int);
LIBSTUB(BIO_ADDR_free, void);
LIBSTUB(BIO_ADDR_hostname_string, char *);
LIBSTUB(BIO_ADDR_new, BIO_ADDR *);
LIBSTUB(BIO_ADDR_path_string, char *);
LIBSTUB(BIO_ADDR_rawaddress, int);
LIBSTUB(BIO_ADDR_rawmake, int);
LIBSTUB(BIO_ADDR_rawport, unsigned short);
LIBSTUB(BIO_ADDR_service_string, char *);
LIBSTUB(BIO_ADDRINFO_address, const BIO_ADDR *);
LIBSTUB(BIO_ADDRINFO_family, int);
LIBSTUB(BIO_ADDRINFO_free, void);
LIBSTUB(BIO_ADDRINFO_next, const BIO_ADDRINFO *);
LIBSTUB(BIO_ADDRINFO_protocol, int);
LIBSTUB(BIO_ADDRINFO_socktype, int);
LIBSTUB(BIO_closesocket, int);
LIBSTUB(BIO_connect, int);
LIBSTUB(BIO_listen, int);
LIBSTUB(BIO_lookup, int);
LIBSTUB(BIO_parse_hostserv, int);
LIBSTUB(BIO_s_secmem, const BIO_METHOD *);
LIBSTUB(BIO_sock_info, int);
LIBSTUB(BIO_socket, int);
LIBSTUB(BN_abs_is_word, int);
LIBSTUB(BN_bn2binpad, int);
LIBSTUB(BN_bn2lebinpad, int);
LIBSTUB(BN_CTX_secure_new, BN_CTX *);
LIBSTUB(BN_GENCB_free, void);
LIBSTUB(BN_GENCB_get_arg, void *);
LIBSTUB(BN_GENCB_new, BN_GENCB *);
LIBSTUB(BN_GENCB_set, void);
LIBSTUB(BN_GENCB_set_old, void);
LIBSTUB(BN_generate_dsa_nonce, int);
LIBSTUB(BN_get_flags, int);
LIBSTUB(BN_is_negative, int);
LIBSTUB(BN_is_odd, int);
LIBSTUB(BN_is_one, int);
LIBSTUB(BN_is_word, int);
LIBSTUB(BN_is_zero, int);
LIBSTUB(BN_lebin2bn, BIGNUM *);
LIBSTUB(BN_nist_mod_func, void *);
LIBSTUB(BN_secure_new, BIGNUM *);
LIBSTUB(BN_security_bits, int);
LIBSTUB(BN_set_flags, void);
LIBSTUB(BN_to_montgomery, int);
LIBSTUB(BN_with_flags, void);
LIBSTUB(BN_zero_ex, void);
LIBSTUB(BUF_MEM_new_ex, BUF_MEM *);
LIBSTUB(COMP_CTX_get_method, const COMP_METHOD *);
LIBSTUB(COMP_CTX_get_type, int);
LIBSTUB(COMP_get_name, const char *);
LIBSTUB(COMP_get_type, int);
LIBSTUB(CRYPTO_clear_free, void);
LIBSTUB(CRYPTO_clear_realloc, void *);
LIBSTUB(CRYPTO_free_ex_index, int);
LIBSTUB(CRYPTO_memdup, void *);
LIBSTUB(CRYPTO_secure_actual_size, size_t);
LIBSTUB(CRYPTO_secure_allocated, int);
LIBSTUB(CRYPTO_secure_free, void);
LIBSTUB(CRYPTO_secure_malloc, void *);
LIBSTUB(CRYPTO_secure_malloc_done, int);
LIBSTUB(CRYPTO_secure_malloc_init, int);
LIBSTUB(CRYPTO_secure_malloc_initialized, int);
LIBSTUB(CRYPTO_secure_used, size_t);
LIBSTUB(CRYPTO_secure_zalloc, void *);
LIBSTUB(CRYPTO_strndup, char *);
LIBSTUB(CRYPTO_zalloc, void *);
LIBSTUB(OPENSSL_atexit, int);
LIBSTUB(OPENSSL_cleanup, void);
LIBSTUB(OPENSSL_init_crypto, int);
LIBSTUB(OPENSSL_INIT_free, void);
LIBSTUB(OPENSSL_INIT_new, OPENSSL_INIT_SETTINGS *);
LIBSTUB(OPENSSL_strlcat, size_t);
LIBSTUB(OPENSSL_strlcpy, size_t);
LIBSTUB(OPENSSL_strnlen, size_t);
LIBSTUB(OPENSSL_thread_stop, void);
LIBSTUB(OpenSSL_version, const char *);
LIBSTUB(OpenSSL_version_num, unsigned long);
LIBSTUB(DH_bits, int);
LIBSTUB(DH_security_bits, int);
LIBSTUB(DSA_security_bits, int);
LIBSTUB(EC_GROUP_get0_cofactor, const BIGNUM *);
LIBSTUB(EC_GROUP_get0_order, const BIGNUM *);
LIBSTUB(EC_GROUP_order_bits, int);
LIBSTUB(EC_KEY_get_default_method, const EC_KEY_METHOD *);
LIBSTUB(EC_KEY_get_ex_data, void *);
LIBSTUB(EC_KEY_get_method, const EC_KEY_METHOD *);
LIBSTUB(EC_KEY_key2buf, size_t);
LIBSTUB(EC_KEY_METHOD_free, void);
LIBSTUB(EC_KEY_METHOD_get_compute_key, void);
LIBSTUB(EC_KEY_METHOD_get_init, void);
LIBSTUB(EC_KEY_METHOD_get_keygen, void);
LIBSTUB(EC_KEY_METHOD_get_sign, void);
LIBSTUB(EC_KEY_METHOD_get_verify, void);
LIBSTUB(EC_KEY_METHOD_new, EC_KEY_METHOD *);
LIBSTUB(EC_KEY_METHOD_set_compute_key, void);
LIBSTUB(EC_KEY_METHOD_set_init, void);
LIBSTUB(EC_KEY_METHOD_set_keygen, void);
LIBSTUB(EC_KEY_METHOD_set_sign, void);
LIBSTUB(EC_KEY_METHOD_set_verify, void);
LIBSTUB(EC_KEY_new_method, EC_KEY *);
LIBSTUB(EC_KEY_oct2key, int);
LIBSTUB(EC_KEY_oct2priv, int);
LIBSTUB(EC_KEY_OpenSSL, const EC_KEY_METHOD *);
LIBSTUB(EC_KEY_priv2buf, size_t);
LIBSTUB(EC_KEY_priv2oct, size_t);
LIBSTUB(EC_KEY_set_default_method, void);
LIBSTUB(EC_KEY_set_ex_data, int);
LIBSTUB(EC_KEY_set_method, int);
LIBSTUB(EC_POINT_point2buf, size_t);
LIBSTUB(ECDSA_SIG_get0, void);
LIBSTUB(ENGINE_get_default_EC, ENGINE *);
LIBSTUB(ENGINE_get_EC, const EC_KEY_METHOD *);
LIBSTUB(ENGINE_register_all_EC, void);
LIBSTUB(ENGINE_register_EC, int);
LIBSTUB(ENGINE_set_default_EC, int);
LIBSTUB(ENGINE_set_EC, int);
LIBSTUB(ENGINE_unregister_EC, void);
LIBSTUB(EVP_aes_128_ocb, const EVP_CIPHER *);
LIBSTUB(EVP_aes_128_wrap_pad, const EVP_CIPHER *);
LIBSTUB(EVP_aes_192_ocb, const EVP_CIPHER *);
LIBSTUB(EVP_aes_192_wrap_pad, const EVP_CIPHER *);
LIBSTUB(EVP_aes_256_ocb, const EVP_CIPHER *);
LIBSTUB(EVP_aes_256_wrap_pad, const EVP_CIPHER *);
LIBSTUB(EVP_camellia_128_ctr, const EVP_CIPHER *);
LIBSTUB(EVP_camellia_192_ctr, const EVP_CIPHER *);
LIBSTUB(EVP_camellia_256_ctr, const EVP_CIPHER *);
LIBSTUB(EVP_chacha20, const EVP_CIPHER *);
LIBSTUB(EVP_chacha20_poly1305, const EVP_CIPHER *);
LIBSTUB(EVP_CIPHER_CTX_buf_noconst, unsigned char *);
LIBSTUB(EVP_CIPHER_CTX_get_cipher_data, void *);
LIBSTUB(EVP_CIPHER_CTX_set_cipher_data, void *);
LIBSTUB(EVP_CIPHER_CTX_is_encrypting, int);
LIBSTUB(EVP_CIPHER_CTX_iv, const unsigned char *);
LIBSTUB(EVP_CIPHER_CTX_iv_noconst, unsigned char *);
LIBSTUB(EVP_CIPHER_CTX_get_num, int);
LIBSTUB(EVP_CIPHER_CTX_original_iv, const unsigned char *);
LIBSTUB(EVP_CIPHER_CTX_reset, int);
LIBSTUB(EVP_CIPHER_CTX_set_num, int);
LIBSTUB(EVP_CIPHER_impl_ctx_size, int);
LIBSTUB(EVP_CIPHER_meth_dup, EVP_CIPHER *);
LIBSTUB(EVP_CIPHER_meth_free, void);
LIBSTUB(EVP_CIPHER_meth_get_cleanup, void *);
LIBSTUB(EVP_CIPHER_meth_get_ctrl, void *);
LIBSTUB(EVP_CIPHER_meth_get_do_cipher, void *);
LIBSTUB(EVP_CIPHER_meth_get_get_asn1_params, void *);
LIBSTUB(EVP_CIPHER_meth_get_init, void *);
LIBSTUB(EVP_CIPHER_meth_get_set_asn1_params, void *);
LIBSTUB(EVP_CIPHER_meth_new, EVP_CIPHER *);
LIBSTUB(EVP_CIPHER_meth_set_cleanup, int);
LIBSTUB(EVP_CIPHER_meth_set_ctrl, int);
LIBSTUB(EVP_CIPHER_meth_set_do_cipher, int);
LIBSTUB(EVP_CIPHER_meth_set_flags, int);
LIBSTUB(EVP_CIPHER_meth_set_get_asn1_params, int);
LIBSTUB(EVP_CIPHER_meth_set_impl_ctx_size, int);
LIBSTUB(EVP_CIPHER_meth_set_init, int);
LIBSTUB(EVP_CIPHER_meth_set_iv_length, int);
LIBSTUB(EVP_CIPHER_meth_set_set_asn1_params, int);
LIBSTUB(EVP_ENCODE_CTX_free, void);
LIBSTUB(EVP_ENCODE_CTX_new, EVP_ENCODE_CTX *);
LIBSTUB(EVP_ENCODE_CTX_num, int);
LIBSTUB(EVP_md5_sha1, const EVP_MD *);
LIBSTUB(EVP_MD_CTX_ctrl, int);
LIBSTUB(EVP_MD_CTX_free, void);
LIBSTUB(EVP_MD_CTX_get0_md_data, void *);
LIBSTUB(EVP_MD_CTX_new, EVP_MD_CTX *);
LIBSTUB(EVP_MD_CTX_get_pkey_ctx, EVP_PKEY_CTX *);
LIBSTUB(EVP_MD_CTX_reset, int);
LIBSTUB(EVP_MD_CTX_set_update_fn, void);
LIBSTUB(EVP_MD_CTX_update_fn, void *);
LIBSTUB(EVP_MD_meth_dup, EVP_MD *);
LIBSTUB(EVP_MD_meth_free, void);
LIBSTUB(EVP_MD_meth_get_app_datasize, int);
LIBSTUB(EVP_MD_meth_get_cleanup, void *);
LIBSTUB(EVP_MD_meth_get_copy, void *);
LIBSTUB(EVP_MD_meth_get_ctrl, void *);
LIBSTUB(EVP_MD_meth_get_final, void *);
LIBSTUB(EVP_MD_meth_get_flags, unsigned long);
LIBSTUB(EVP_MD_meth_get_init, void *);
LIBSTUB(EVP_MD_meth_get_input_blocksize, int);
LIBSTUB(EVP_MD_meth_get_result_size, int);
LIBSTUB(EVP_MD_meth_get_update, void *);
LIBSTUB(EVP_MD_meth_new, EVP_MD *);
LIBSTUB(EVP_MD_meth_set_app_datasize, int);
LIBSTUB(EVP_MD_meth_set_cleanup, int);
LIBSTUB(EVP_MD_meth_set_copy, int);
LIBSTUB(EVP_MD_meth_set_ctrl, int);
LIBSTUB(EVP_MD_meth_set_final, int);
LIBSTUB(EVP_MD_meth_set_flags, int);
LIBSTUB(EVP_MD_meth_set_init, int);
LIBSTUB(EVP_MD_meth_set_input_blocksize, int);
LIBSTUB(EVP_MD_meth_set_result_size, int);
LIBSTUB(EVP_MD_meth_set_update, int);
LIBSTUB(EVP_PBE_get, int);
LIBSTUB(OBSOLETE_EVP_PBE_scrypt, int);
LIBSTUB(EVP_PKEY_asn1_set_security_bits, void);
LIBSTUB(EVP_PKEY_get0_DH, const DH *);
LIBSTUB(EVP_PKEY_get0_DSA, const DSA *);
LIBSTUB(EVP_PKEY_get0_EC_KEY, const EC_KEY *);
LIBSTUB(EVP_PKEY_get0_RSA, const RSA *);
LIBSTUB(EVP_PKEY_meth_get_cleanup, void);
LIBSTUB(EVP_PKEY_meth_get_copy, void);
LIBSTUB(EVP_PKEY_meth_get_ctrl, void);
LIBSTUB(EVP_PKEY_meth_get_decrypt, void);
LIBSTUB(EVP_PKEY_meth_get_derive, void);
LIBSTUB(EVP_PKEY_meth_get_encrypt, void);
LIBSTUB(EVP_PKEY_meth_get_init, void);
LIBSTUB(EVP_PKEY_meth_get_keygen, void);
LIBSTUB(EVP_PKEY_meth_get_paramgen, void);
LIBSTUB(EVP_PKEY_meth_get_sign, void);
LIBSTUB(EVP_PKEY_meth_get_signctx, void);
LIBSTUB(EVP_PKEY_meth_get_verify, void);
LIBSTUB(EVP_PKEY_meth_get_verify_recover, void);
LIBSTUB(EVP_PKEY_meth_get_verifyctx, void);
LIBSTUB(EVP_PKEY_get_security_bits, int);
LIBSTUB(EVP_PKEY_up_ref, int);
LIBSTUB(PKCS5_v2_scrypt_keyivgen, int);
LIBSTUB(HMAC_CTX_free, void);
LIBSTUB(HMAC_CTX_new, HMAC_CTX *);
LIBSTUB(HMAC_CTX_reset, int);
LIBSTUB(HMAC_size, size_t);
LIBSTUB(OPENSSL_LH_error, int);
LIBSTUB(OPENSSL_LH_get_down_load, unsigned long);
LIBSTUB(OPENSSL_LH_set_down_load, void);
LIBSTUB(CRYPTO_128_unwrap_pad, size_t);
LIBSTUB(CRYPTO_128_wrap_pad, size_t);
LIBSTUB(CRYPTO_ocb128_aad, int);
LIBSTUB(CRYPTO_ocb128_cleanup, void);
LIBSTUB(CRYPTO_ocb128_copy_ctx, int);
LIBSTUB(CRYPTO_ocb128_decrypt, int);
LIBSTUB(CRYPTO_ocb128_encrypt, int);
LIBSTUB(CRYPTO_ocb128_finish, int);
LIBSTUB(CRYPTO_ocb128_init, int);
LIBSTUB(CRYPTO_ocb128_new, OCB128_CONTEXT *);
LIBSTUB(CRYPTO_ocb128_setiv, int);
LIBSTUB(CRYPTO_ocb128_tag, int);
LIBSTUB(OBJ_get0_data, const unsigned char *);
LIBSTUB(OBJ_length, size_t);
LIBSTUB(OCSP_resp_get0_produced_at, const ASN1_GENERALIZEDTIME *);
LIBSTUB(OCSP_resp_get0_signature, const ASN1_OCTET_STRING *);
LIBSTUB(OCSP_SINGLERESP_get0_id, const OCSP_CERTID *);
LIBSTUB(PKCS12_get0_mac, void);
LIBSTUB(PKCS12_mac_present, int);
LIBSTUB(PKCS12_SAFEBAG_create0_p8inf, PKCS12_SAFEBAG *);
LIBSTUB(PKCS12_SAFEBAG_create0_pkcs8, PKCS12_SAFEBAG *);
LIBSTUB(PKCS12_SAFEBAG_create_cert, PKCS12_SAFEBAG *);
LIBSTUB(PKCS12_SAFEBAG_create_crl, PKCS12_SAFEBAG *);
LIBSTUB(PKCS12_SAFEBAG_create_pkcs8_encrypt, PKCS12_SAFEBAG *);
LIBSTUB(PKCS12_SAFEBAG_get0_attr, const ASN1_TYPE *);
LIBSTUB(PKCS12_SAFEBAG_get0_attrs, const STACK_OF(X509_ATTRIBUTE) *);
LIBSTUB(PKCS12_SAFEBAG_get0_p8inf, const PKCS8_PRIV_KEY_INFO *);
LIBSTUB(PKCS12_SAFEBAG_get0_pkcs8, const X509_SIG *);
LIBSTUB(PKCS12_SAFEBAG_get0_safes, const STACK_OF(PKCS12_SAFEBAG) *);
LIBSTUB(PKCS12_SAFEBAG_get0_type, const ASN1_OBJECT *);
LIBSTUB(PKCS12_SAFEBAG_get1_cert, X509 *);
LIBSTUB(PKCS12_SAFEBAG_get1_crl, X509_CRL *);
LIBSTUB(PKCS12_SAFEBAG_get_bag_nid, int);
LIBSTUB(PKCS12_SAFEBAG_get_nid, int);
LIBSTUB(PKCS8_get_attr, ASN1_TYPE *);
LIBSTUB(PKCS8_set0_pbe, X509_SIG *);
LIBSTUB(RAND_OpenSSL, RAND_METHOD *);
LIBSTUB(RSA_bits, int);
LIBSTUB(RSA_check_key_ex, int);
LIBSTUB(RSA_PKCS1_OpenSSL, const RSA_METHOD *);
LIBSTUB(RSA_security_bits, int);
LIBSTUB(OBSOLETE_RSA_X931_derive_ex, int);
LIBSTUB(RSA_X931_generate_key_ex, int);
LIBSTUB(TS_CONF_set_signer_digest, int);
LIBSTUB(TS_RESP_CTX_set_signer_digest, int);
LIBSTUB(TS_STATUS_INFO_get0_failure_info, const ASN1_BIT_STRING *);
LIBSTUB(TS_STATUS_INFO_get0_status, const ASN1_INTEGER *);
LIBSTUB(TS_STATUS_INFO_set_status, int);
LIBSTUB(TS_VERIFY_CTX_add_flags, int);
LIBSTUB(TS_VERIFY_CTX_set_data, BIO *);
LIBSTUB(TS_VERIFY_CTX_set_flags, int);
LIBSTUB(TS_VERIFY_CTX_set_imprint, unsigned char *);
LIBSTUB(TS_VERIFY_CTX_set_store, X509_STORE *);
LIBSTUB(TS_VERIFY_CTX_set_certs, STACK_OF(X509) *);
LIBSTUB(i2d_re_X509_CRL_tbs, int);
LIBSTUB(i2d_re_X509_REQ_tbs, int);
LIBSTUB(PKCS5_pbe2_set_scrypt, X509_ALGOR *);
LIBSTUB(X509_CRL_get0_extensions, const STACK_OF(X509_EXTENSION) *);
LIBSTUB(X509_CRL_get0_signature, void);
LIBSTUB(X509_CRL_get_issuer, X509_NAME *);
LIBSTUB(X509_CRL_get_lastUpdate, ASN1_TIME *);
LIBSTUB(X509_CRL_get_nextUpdate, ASN1_TIME *);
LIBSTUB(X509_CRL_get_REVOKED, STACK_OF(X509_REVOKED) *);
LIBSTUB(X509_CRL_get_signature_nid, int);
LIBSTUB(X509_CRL_get_version, long);
LIBSTUB(X509_CRL_up_ref, int);
LIBSTUB(X509_get0_extensions, const STACK_OF(X509_EXTENSION) *);
LIBSTUB(X509_get0_pubkey, EVP_PKEY *);
LIBSTUB(X509_get0_reject_objects, STACK_OF(ASN1_OBJECT) *);
LIBSTUB(X509_get0_tbs_sigalg, const X509_ALGOR *);
LIBSTUB(X509_get0_trust_objects, STACK_OF(ASN1_OBJECT) *);
LIBSTUB(X509_get0_uids, void);
LIBSTUB(X509_getm_notAfter, ASN1_TIME *);
LIBSTUB(X509_getm_notBefore, ASN1_TIME *);
LIBSTUB(X509_get_signature_type, int);
LIBSTUB(X509_get_version, long);
LIBSTUB(X509_get_X509_PUBKEY, X509_PUBKEY *);
LIBSTUB(X509_NAME_ENTRY_set, int);
LIBSTUB(X509_NAME_get0_der, int);
LIBSTUB(X509_PUBKEY_get0, EVP_PKEY *);
LIBSTUB(X509_REQ_get0_signature, void);
LIBSTUB(X509_REQ_get_signature_nid, int);
LIBSTUB(X509_REQ_get_subject_name, X509_NAME *);
LIBSTUB(X509_REQ_get_version, long);
LIBSTUB(X509_REQ_get_X509_PUBKEY, X509_PUBKEY *);
LIBSTUB(X509_REVOKED_get0_extensions, const STACK_OF(X509_EXTENSION) *);
LIBSTUB(X509_REVOKED_get0_revocationDate, const ASN1_TIME *);
LIBSTUB(X509_REVOKED_get0_serialNumber, const ASN1_INTEGER *);
LIBSTUB(X509_trusted, int);
LIBSTUB(X509_up_ref, int);
LIBSTUB(X509_STORE_CTX_get_num_untrusted, int);
LIBSTUB(X509_STORE_CTX_set0_dane, void);
LIBSTUB(X509_VERIFY_PARAM_move_peername, void);
LIBSTUB(i2s_ASN1_IA5STRING, char *);
LIBSTUB(s2i_ASN1_IA5STRING, ASN1_IA5STRING *);
LIBSTUB(X509v3_addr_add_inherit, int);
LIBSTUB(X509v3_addr_add_prefix, int);
LIBSTUB(X509v3_addr_add_range, int);
LIBSTUB(X509v3_addr_canonize, int);
LIBSTUB(X509v3_addr_get_afi, unsigned);
LIBSTUB(X509v3_addr_get_range, int);
LIBSTUB(X509v3_addr_inherits, int);
LIBSTUB(X509v3_addr_is_canonical, int);
LIBSTUB(X509v3_addr_subset, int);
LIBSTUB(X509v3_addr_validate_path, int);
LIBSTUB(X509v3_addr_validate_resource_set, int);
LIBSTUB(X509v3_asid_add_inherit, int);
LIBSTUB(X509v3_asid_add_id_or_range, int);
LIBSTUB(X509v3_asid_canonize, int);
LIBSTUB(X509v3_asid_inherits, int);
LIBSTUB(X509v3_asid_is_canonical, int);
LIBSTUB(X509v3_asid_subset, int);
LIBSTUB(X509v3_asid_validate_path, int);
LIBSTUB(X509v3_asid_validate_resource_set, int);
LIBSTUB(X509_get0_subject_key_id, const ASN1_OCTET_STRING *);
LIBSTUB(X509_get_extended_key_usage, uint32_t);
LIBSTUB(X509_get_extension_flags, uint32_t);
LIBSTUB(X509_get_key_usage, uint32_t);
LIBSTUB(DTLSv1_listen, int);
LIBSTUB(OPENSSL_init_ssl, int);
LIBSTUB(SSL_add1_host, int);
LIBSTUB(SSL_add_ssl_module, void);
LIBSTUB(SSL_CIPHER_get_cipher_nid, int);
LIBSTUB(SSL_CIPHER_get_digest_nid, int);
LIBSTUB(SSL_clear_options, uint64_t);
LIBSTUB(SSL_config, int);
LIBSTUB(SSL_CTX_clear_options, uint64_t);
LIBSTUB(SSL_CTX_config, int);
LIBSTUB(SSL_CTX_dane_enable, int);
LIBSTUB(SSL_CTX_dane_mtype_set, int);
LIBSTUB(SSL_CTX_get0_security_ex_data, void *);
LIBSTUB(SSL_CTX_get_options, uint64_t);
LIBSTUB(SSL_CTX_get_security_callback, void *);
LIBSTUB(SSL_CTX_get_security_level, int);
LIBSTUB(SSL_CTX_set0_security_ex_data, void);
LIBSTUB(SSL_CTX_set_default_verify_dir, int);
LIBSTUB(SSL_CTX_set_default_verify_file, int);
LIBSTUB(SSL_CTX_set_not_resumable_session_callback, void);
LIBSTUB(SSL_CTX_set_options, uint64_t);
LIBSTUB(SSL_CTX_set_security_callback, void);
LIBSTUB(SSL_CTX_set_security_level, void);
LIBSTUB(SSL_CTX_up_ref, int);
LIBSTUB(SSL_dane_enable, int);
LIBSTUB(SSL_dane_tlsa_add, int);
LIBSTUB(SSL_get0_dane, SSL_DANE *);
LIBSTUB(SSL_get0_dane_authority, int);
LIBSTUB(SSL_get0_dane_tlsa, int);
LIBSTUB(SSL_get0_peername, const char *);
LIBSTUB(SSL_get0_security_ex_data, void *);
LIBSTUB(SSL_get1_supported_ciphers, STACK_OF(SSL_CIPHER) *);
LIBSTUB(SSL_get_client_random, size_t);
LIBSTUB(SSL_get_options, uint64_t);
LIBSTUB(SSL_get_security_callback, void *);
LIBSTUB(SSL_get_security_level, int);
LIBSTUB(SSL_get_server_random, size_t);
LIBSTUB(SSL_get_state, OSSL_HANDSHAKE_STATE);
LIBSTUB(SSL_in_before, int);
LIBSTUB(SSL_in_init, int);
LIBSTUB(SSL_is_init_finished, int);
LIBSTUB(SSL_SESSION_get0_ticket, void);
LIBSTUB(SSL_SESSION_get_master_key, size_t);
LIBSTUB(SSL_SESSION_get_ticket_lifetime_hint, unsigned long);
LIBSTUB(SSL_SESSION_has_ticket, int);
LIBSTUB(SSL_SESSION_print_keylog, int);
LIBSTUB(SSL_session_reused, int);
LIBSTUB(SSL_set0_security_ex_data, void);
LIBSTUB(SSL_set1_host, int);
LIBSTUB(SSL_set_default_passwd_cb, void);
LIBSTUB(SSL_set_default_passwd_cb_userdata, void);
LIBSTUB(SSL_set_hostflags, void);
LIBSTUB(SSL_set_not_resumable_session_callback, void);
LIBSTUB(SSL_set_options, uint64_t);
LIBSTUB(SSL_set0_rbio, void);
LIBSTUB(SSL_set_security_callback, void);
LIBSTUB(SSL_set_security_level, void);
LIBSTUB(SSL_set0_wbio, void);
LIBSTUB(SSL_up_ref, int);
LIBSTUB(SSL_use_certificate_chain_file, int);
LIBSTUB(SSL_waiting_for_async, int);
LIBSTUB(TLS_client_method, const SSL_METHOD *);
LIBSTUB(TLS_method, const SSL_METHOD *);
LIBSTUB(TLS_server_method, const SSL_METHOD *);
LIBSTUB(ASYNC_WAIT_CTX_new, ASYNC_WAIT_CTX *);
LIBSTUB(ASYNC_WAIT_CTX_free, void);
LIBSTUB(ASYNC_WAIT_CTX_set_wait_fd, int);
LIBSTUB(ASYNC_WAIT_CTX_get_fd, int);
LIBSTUB(ASYNC_WAIT_CTX_get_all_fds, int);
LIBSTUB(ASYNC_WAIT_CTX_get_changed_fds, int);
LIBSTUB(ASYNC_WAIT_CTX_clear_fd, int);
LIBSTUB(ASYNC_is_capable, int);
LIBSTUB(ASYNC_get_wait_ctx, ASYNC_WAIT_CTX *);
LIBSTUB(BIO_up_ref, int);
LIBSTUB(BN_BLINDING_is_current_thread, int);
LIBSTUB(BN_BLINDING_set_current_thread, void);
LIBSTUB(BN_BLINDING_lock, int);
LIBSTUB(BN_BLINDING_unlock, int);
LIBSTUB(CRYPTO_THREAD_run_once, int);
LIBSTUB(CRYPTO_THREAD_init_local, int);
LIBSTUB(CRYPTO_THREAD_get_local, void *);
LIBSTUB(CRYPTO_THREAD_set_local, int);
LIBSTUB(CRYPTO_THREAD_cleanup_local, int);
LIBSTUB(CRYPTO_THREAD_get_current_id, CRYPTO_THREAD_ID);
LIBSTUB(CRYPTO_THREAD_compare_id, int);
LIBSTUB(CRYPTO_THREAD_lock_new, CRYPTO_RWLOCK *);
LIBSTUB(CRYPTO_THREAD_read_lock, int);
LIBSTUB(CRYPTO_THREAD_write_lock, int);
LIBSTUB(CRYPTO_THREAD_unlock, int);
LIBSTUB(CRYPTO_THREAD_lock_free, void);
LIBSTUB(CRYPTO_atomic_add, int);
LIBSTUB(OPENSSL_die, void);
LIBSTUB(CT_POLICY_EVAL_CTX_new, CT_POLICY_EVAL_CTX *);
LIBSTUB(CT_POLICY_EVAL_CTX_free, void);
LIBSTUB(CT_POLICY_EVAL_CTX_get0_cert, X509 *);
LIBSTUB(CT_POLICY_EVAL_CTX_get0_issuer, X509 *);
LIBSTUB(CT_POLICY_EVAL_CTX_get0_log_store, const CTLOG_STORE *);
LIBSTUB(SCT_new, SCT *);
LIBSTUB(SCT_new_from_base64, SCT *);
LIBSTUB(SCT_free, void);
LIBSTUB(SCT_LIST_free, void);
LIBSTUB(SCT_get_version, sct_version_t);
LIBSTUB(SCT_set_version, int);
LIBSTUB(SCT_get_log_entry_type, ct_log_entry_type_t);
LIBSTUB(SCT_set_log_entry_type, int);
LIBSTUB(SCT_get0_log_id, size_t);
LIBSTUB(SCT_set0_log_id, int);
LIBSTUB(SCT_set1_log_id, int);
LIBSTUB(SCT_get_timestamp, uint64_t);
LIBSTUB(SCT_set_timestamp, void);
LIBSTUB(SCT_get_signature_nid, int);
LIBSTUB(SCT_set_signature_nid, int);
LIBSTUB(SCT_get0_extensions, size_t);
LIBSTUB(SCT_set0_extensions, void);
LIBSTUB(SCT_set1_extensions, int);
LIBSTUB(SCT_get0_signature, size_t);
LIBSTUB(SCT_set0_signature, void);
LIBSTUB(SCT_set1_signature, int);
LIBSTUB(SCT_get_source, sct_source_t);
LIBSTUB(SCT_set_source, int);
LIBSTUB(SCT_print, void);
LIBSTUB(SCT_LIST_print, void);
LIBSTUB(SCT_get_validation_status, sct_validation_status_t);
LIBSTUB(SCT_validate, int);
LIBSTUB(SCT_LIST_validate, int);
LIBSTUB(i2o_SCT_LIST, int);
LIBSTUB(o2i_SCT_LIST, STACK_OF(SCT) *);
LIBSTUB(i2d_SCT_LIST, int);
LIBSTUB(d2i_SCT_LIST, STACK_OF(SCT) *);
LIBSTUB(i2o_SCT, int);
LIBSTUB(o2i_SCT, SCT *);
LIBSTUB(CTLOG_new, CTLOG *);
LIBSTUB(CTLOG_new_from_base64, int);
LIBSTUB(CTLOG_free, void);
LIBSTUB(CTLOG_get0_name, const char *);
LIBSTUB(CTLOG_get0_log_id, void);
LIBSTUB(CTLOG_get0_public_key, EVP_PKEY *);
LIBSTUB(CTLOG_STORE_new, CTLOG_STORE *);
LIBSTUB(CTLOG_STORE_free, void);
LIBSTUB(CTLOG_STORE_get0_log_by_id, const CTLOG *);
LIBSTUB(CTLOG_STORE_load_file, int);
LIBSTUB(CTLOG_STORE_load_default_file, int);
LIBSTUB(ERR_load_CT_strings, int);
LIBSTUB(DHparams_it, const ASN1_ITEM *);
LIBSTUB(DSA_SIG_get0, void);
LIBSTUB(EC_GROUP_new_from_ecparameters, EC_GROUP *);
LIBSTUB(EC_GROUP_get_ecparameters, ECPARAMETERS *);
LIBSTUB(EC_GROUP_new_from_ecpkparameters, EC_GROUP *);
LIBSTUB(EC_GROUP_get_ecpkparameters, ECPKPARAMETERS *);
LIBSTUB(ECPKPARAMETERS_it, const ASN1_ITEM *);
LIBSTUB(ECPARAMETERS_it, const ASN1_ITEM *);
LIBSTUB(EC_KEY_can_sign, int);
LIBSTUB(EVP_blake2b512, const EVP_MD *);
LIBSTUB(EVP_blake2s256, const EVP_MD *);
LIBSTUB(EVP_PKEY_CTX_str2ctrl, int);
LIBSTUB(EVP_PKEY_CTX_hex2ctrl, int);
LIBSTUB(ERR_load_KDF_strings, int);
LIBSTUB(SRP_user_pwd_free, void);
LIBSTUB(SRP_VBASE_get1_by_user, SRP_user_pwd *);
LIBSTUB(SSL_CTX_has_client_custom_ext, int);
LIBSTUB(SSL_CIPHER_get_kx_nid, int);
LIBSTUB(SSL_CIPHER_get_auth_nid, int);
LIBSTUB(SSL_CIPHER_is_aead, int);
LIBSTUB(SSL_has_pending, int);
LIBSTUB(SSL_SESSION_up_ref, int);
LIBSTUB(SSL_CTX_get_default_passwd_cb, void *);
LIBSTUB(SSL_CTX_get_default_passwd_cb_userdata, void *);
LIBSTUB(SSL_get_default_passwd_cb, void *);
LIBSTUB(SSL_get_default_passwd_cb_userdata, void *);
LIBSTUB(SSL_get_all_async_fds, int);
LIBSTUB(SSL_get_changed_async_fds, int);
LIBSTUB(SSL_CTX_set_default_read_buffer_len, void);
LIBSTUB(SSL_set_default_read_buffer_len, void);
LIBSTUB(SSL_set_ct_validation_callback, int);
LIBSTUB(SSL_CTX_set_ct_validation_callback, int);
LIBSTUB(SSL_ct_is_enabled, int);
LIBSTUB(SSL_CTX_ct_is_enabled, int);
LIBSTUB(SSL_get0_peer_scts, const STACK_OF(SCT) *);
LIBSTUB(SSL_CTX_set_default_ctlog_list_file, int);
LIBSTUB(SSL_CTX_set_ctlog_list_file, int);
LIBSTUB(SSL_CTX_set0_ctlog_store, void);
LIBSTUB(SSL_CTX_get0_ctlog_store, const CTLOG_STORE *);
LIBSTUB(X509_SIG_get0, void);
LIBSTUB(PKCS8_pkey_get0_attrs, const STACK_OF(X509_ATTRIBUTE) *);
LIBSTUB(PKCS8_pkey_add1_attr_by_NID, int);
LIBSTUB(X509_STORE_up_ref, int);
LIBSTUB(SSL_enable_ct, int);
LIBSTUB(SSL_CTX_enable_ct, int);
LIBSTUB(SSL_CTX_get_ciphers, STACK_OF(SSL_CIPHER) *);
LIBSTUB(SSL_SESSION_get0_hostname, const char *);
LIBSTUB(SCT_validation_status_string, const char *);
LIBSTUB(BIO_meth_new, BIO_METHOD *);
LIBSTUB(BIO_meth_get_puts, void *);
LIBSTUB(BIO_meth_get_ctrl, void *);
LIBSTUB(BIO_meth_get_gets, void *);
LIBSTUB(BIO_get_data, void *);
LIBSTUB(BIO_set_init, void);
LIBSTUB(BIO_meth_set_puts, int);
LIBSTUB(BIO_get_shutdown, int);
LIBSTUB(BIO_get_init, int);
LIBSTUB(BIO_meth_set_ctrl, int);
LIBSTUB(BIO_meth_set_read, int);
LIBSTUB(BIO_set_shutdown, void);
LIBSTUB(BIO_meth_set_create, int);
LIBSTUB(BIO_meth_get_write, void *);
LIBSTUB(BIO_meth_set_callback_ctrl, int);
LIBSTUB(BIO_meth_get_create, void *);
LIBSTUB(BIO_set_next, void);
LIBSTUB(BIO_set_data, void);
LIBSTUB(BIO_meth_set_write, int);
LIBSTUB(BIO_meth_set_destroy, int);
LIBSTUB(BIO_meth_set_gets, int);
LIBSTUB(BIO_meth_get_callback_ctrl, void *);
LIBSTUB(BIO_meth_get_destroy, void *);
LIBSTUB(BIO_meth_get_read, void *);
LIBSTUB(BIO_set_retry_reason, void);
LIBSTUB(BIO_meth_free, void);
LIBSTUB(DSA_meth_set_bn_mod_exp, int);
LIBSTUB(DSA_meth_set_init, int);
LIBSTUB(DSA_meth_free, void);
LIBSTUB(DSA_meth_set_mod_exp, int);
LIBSTUB(DSA_meth_set_sign, int);
LIBSTUB(DSA_meth_get_finish, void *);
LIBSTUB(DSA_set_flags, void);
LIBSTUB(DSA_get0_pqg, void);
LIBSTUB(DSA_meth_get0_app_data, void *);
LIBSTUB(DSA_meth_get_keygen, void *);
LIBSTUB(DSA_clear_flags, void);
LIBSTUB(DSA_meth_get0_name, const char *);
LIBSTUB(DSA_meth_get_paramgen, void *);
LIBSTUB(DSA_meth_get_sign, void *);
LIBSTUB(DSA_meth_set_paramgen, int);
LIBSTUB(DSA_test_flags, int);
LIBSTUB(DSA_meth_set0_app_data, int);
LIBSTUB(DSA_meth_set1_name, int);
LIBSTUB(DSA_get0_key, void);
LIBSTUB(DSA_meth_get_mod_exp, void *);
LIBSTUB(DSA_set0_pqg, int);
LIBSTUB(DSA_meth_get_flags, int);
LIBSTUB(DSA_meth_get_verify, void *);
LIBSTUB(DSA_meth_set_verify, int);
LIBSTUB(DSA_meth_set_finish, int);
LIBSTUB(DSA_meth_set_keygen, int);
LIBSTUB(DSA_meth_dup, DSA_METHOD *);
LIBSTUB(DSA_set0_key, int);
LIBSTUB(DSA_meth_get_init, void *);
LIBSTUB(DSA_meth_set_sign_setup, int);
LIBSTUB(DSA_meth_get_bn_mod_exp, void *);
LIBSTUB(DSA_get_method, const DSA_METHOD *);
LIBSTUB(DSA_meth_new, DSA_METHOD *);
LIBSTUB(DSA_meth_set_flags, int);
LIBSTUB(DSA_meth_get_sign_setup, void *);
LIBSTUB(DSA_get0_engine, ENGINE *);
LIBSTUB(X509_VERIFY_PARAM_set_auth_level, void);
LIBSTUB(X509_VERIFY_PARAM_get_auth_level, int);
LIBSTUB(X509_REQ_get0_pubkey, EVP_PKEY *);
LIBSTUB(RSA_set0_key, int);
LIBSTUB(RSA_meth_get_flags, int);
LIBSTUB(RSA_meth_set_finish, int);
LIBSTUB(RSA_meth_get_priv_dec, void *);
LIBSTUB(RSA_meth_get_sign, void *);
LIBSTUB(RSA_meth_get_bn_mod_exp, void *);
LIBSTUB(RSA_test_flags, int);
LIBSTUB(RSA_meth_new, RSA_METHOD *);
LIBSTUB(RSA_meth_get0_app_data, void *);
LIBSTUB(RSA_meth_dup, RSA_METHOD *);
LIBSTUB(RSA_meth_set1_name, int);
LIBSTUB(RSA_meth_set0_app_data, int);
LIBSTUB(RSA_set_flags, void);
LIBSTUB(RSA_meth_set_sign, int);
LIBSTUB(RSA_clear_flags, void);
LIBSTUB(RSA_meth_get_keygen, void *);
LIBSTUB(RSA_meth_set_keygen, int);
LIBSTUB(RSA_meth_set_pub_dec, int);
LIBSTUB(RSA_meth_get_finish, void *);
LIBSTUB(RSA_get0_key, void);
LIBSTUB(RSA_get0_engine, ENGINE *);
LIBSTUB(RSA_meth_set_priv_enc, int);
LIBSTUB(RSA_meth_set_verify, int);
LIBSTUB(RSA_get0_factors, void);
LIBSTUB(RSA_meth_get0_name, const char *);
LIBSTUB(RSA_meth_get_mod_exp, void *);
LIBSTUB(RSA_meth_set_flags, int);
LIBSTUB(RSA_meth_get_pub_dec, void *);
LIBSTUB(RSA_meth_set_bn_mod_exp, int);
LIBSTUB(RSA_meth_get_init, void *);
LIBSTUB(RSA_meth_free, void);
LIBSTUB(RSA_meth_get_pub_enc, void *);
LIBSTUB(RSA_meth_set_mod_exp, int);
LIBSTUB(RSA_set0_factors, int);
LIBSTUB(RSA_meth_set_pub_enc, int);
LIBSTUB(RSA_meth_set_priv_dec, int);
LIBSTUB(RSA_meth_get_verify, void *);
LIBSTUB(RSA_meth_set_init, int);
LIBSTUB(RSA_meth_get_priv_enc, void *);
LIBSTUB(RSA_set0_crt_params, int);
LIBSTUB(RSA_get0_crt_params, void);
LIBSTUB(DH_set0_pqg, int);
LIBSTUB(DH_clear_flags, void);
LIBSTUB(DH_get0_key, void);
LIBSTUB(DH_get0_engine, ENGINE *);
LIBSTUB(DH_set0_key, int);
LIBSTUB(DH_set_length, int);
LIBSTUB(DH_test_flags, int);
LIBSTUB(DH_get_length, long);
LIBSTUB(DH_get0_pqg, void);
LIBSTUB(DH_meth_get_compute_key, void *);
LIBSTUB(DH_meth_set1_name, int);
LIBSTUB(DH_meth_set_init, int);
LIBSTUB(DH_meth_get_finish, void *);
LIBSTUB(DH_meth_get0_name, const char *);
LIBSTUB(DH_meth_set_generate_params, int);
LIBSTUB(DH_meth_set_compute_key, int);
LIBSTUB(DH_meth_set_flags, int);
LIBSTUB(DH_meth_get_generate_params, void *);
LIBSTUB(DH_meth_get_flags, int);
LIBSTUB(DH_meth_set_finish, int);
LIBSTUB(DH_meth_get0_app_data, void *);
LIBSTUB(DH_meth_set0_app_data, int);
LIBSTUB(DH_meth_get_init, void *);
LIBSTUB(DH_meth_get_bn_mod_exp, void *);
LIBSTUB(DH_meth_new, DH_METHOD *);
LIBSTUB(DH_meth_dup, DH_METHOD *);
LIBSTUB(DH_meth_set_bn_mod_exp, int);
LIBSTUB(DH_meth_set_generate_key, int);
LIBSTUB(DH_meth_free, void);
LIBSTUB(DH_meth_get_generate_key, void *);
LIBSTUB(DH_set_flags, void);
LIBSTUB(X509_STORE_CTX_get_obj_by_subject, X509_OBJECT *);
LIBSTUB(X509_OBJECT_free, void);
LIBSTUB(X509_OBJECT_get0_X509, X509 *);
LIBSTUB(X509_STORE_CTX_get0_untrusted, STACK_OF(X509) *);
LIBSTUB(X509_STORE_CTX_get0_cert, X509 *);
LIBSTUB(X509_STORE_CTX_set_verify, void);
LIBSTUB(X509_STORE_CTX_get_verify, X509_STORE_CTX_verify_fn);
LIBSTUB(X509_STORE_CTX_get_verify_cb, X509_STORE_CTX_verify_cb);
LIBSTUB(X509_STORE_CTX_set0_verified_chain, void);
LIBSTUB(X509_STORE_CTX_set0_untrusted, void);
LIBSTUB(OPENSSL_hexchar2int, int);
LIBSTUB(DSA_SIG_set0, int);
LIBSTUB(DSA_bits, int);
LIBSTUB(ECDSA_SIG_set0, int);
LIBSTUB(EVP_ENCODE_CTX_copy, int);
LIBSTUB(EVP_PKEY_get0_hmac, const unsigned char *);
LIBSTUB(HMAC_CTX_get_md, const EVP_MD *);
LIBSTUB(OCSP_resp_get0_certs, const STACK_OF(X509) *);
LIBSTUB(OCSP_resp_get0_id, int);
LIBSTUB(PEM_write_bio_PrivateKey_traditional, int);
LIBSTUB(SSL_SESSION_get_protocol_version, int);
LIBSTUB(SSL_is_dtls, int);
LIBSTUB(SSL_CTX_dane_set_flags, unsigned long);
LIBSTUB(SSL_CTX_dane_clear_flags, unsigned long);
LIBSTUB(SSL_dane_set_flags, unsigned long);
LIBSTUB(SSL_dane_clear_flags, unsigned long);
LIBSTUB(SSL_client_version, int);
LIBSTUB(X509_get_pathlen, long);
LIBSTUB(X509_OBJECT_get_type, X509_LOOKUP_TYPE);
LIBSTUB(X509_OBJECT_get0_X509_CRL, X509_CRL *);
LIBSTUB(X509_STORE_lock, int);
LIBSTUB(X509_STORE_unlock, int);
LIBSTUB(X509_STORE_get0_objects, STACK_OF(X509_OBJECT) *);
LIBSTUB(X509_STORE_get0_param, X509_VERIFY_PARAM *);
LIBSTUB(X509_STORE_set_verify, void);
LIBSTUB(X509_STORE_get_verify, X509_STORE_CTX_verify_fn);
LIBSTUB(X509_STORE_get_verify_cb, X509_STORE_CTX_verify_cb);
LIBSTUB(X509_STORE_set_get_issuer, void);
LIBSTUB(X509_STORE_get_get_issuer, X509_STORE_CTX_get_issuer_fn);
LIBSTUB(X509_STORE_set_check_issued, void);
LIBSTUB(X509_STORE_get_check_issued, X509_STORE_CTX_check_issued_fn);
LIBSTUB(X509_STORE_set_check_revocation, void);
LIBSTUB(X509_STORE_get_check_revocation, X509_STORE_CTX_check_revocation_fn);
LIBSTUB(X509_STORE_set_get_crl, void);
LIBSTUB(X509_STORE_get_get_crl, X509_STORE_CTX_get_crl_fn);
LIBSTUB(X509_STORE_set_check_crl, void);
LIBSTUB(X509_STORE_get_check_crl, X509_STORE_CTX_check_crl_fn);
LIBSTUB(X509_STORE_set_cert_crl, void);
LIBSTUB(X509_STORE_get_cert_crl, X509_STORE_CTX_cert_crl_fn);
LIBSTUB(X509_STORE_set_check_policy, void);
LIBSTUB(X509_STORE_get_check_policy, X509_STORE_CTX_check_policy_fn);
LIBSTUB(X509_STORE_set_lookup_certs, void);
LIBSTUB(X509_STORE_get_lookup_certs, X509_STORE_CTX_lookup_certs_fn);
LIBSTUB(X509_STORE_set_lookup_crls, void);
LIBSTUB(X509_STORE_get_lookup_crls, X509_STORE_CTX_lookup_crls_fn);
LIBSTUB(X509_STORE_set_cleanup, void);
LIBSTUB(X509_STORE_get_cleanup, X509_STORE_CTX_cleanup_fn);
LIBSTUB(X509_STORE_set_ex_data, int);
LIBSTUB(X509_STORE_get_ex_data, void *);
LIBSTUB(X509_STORE_CTX_get_get_issuer, X509_STORE_CTX_get_issuer_fn);
LIBSTUB(X509_STORE_CTX_get_check_issued, X509_STORE_CTX_check_issued_fn);
LIBSTUB(X509_STORE_CTX_get_check_revocation, X509_STORE_CTX_check_revocation_fn);
LIBSTUB(X509_STORE_CTX_get_get_crl, X509_STORE_CTX_get_crl_fn);
LIBSTUB(X509_STORE_CTX_get_check_crl, X509_STORE_CTX_check_crl_fn);
LIBSTUB(X509_STORE_CTX_get_cert_crl, X509_STORE_CTX_cert_crl_fn);
LIBSTUB(X509_STORE_CTX_get_check_policy, X509_STORE_CTX_check_policy_fn);
LIBSTUB(X509_STORE_CTX_get_lookup_certs, X509_STORE_CTX_lookup_certs_fn);
LIBSTUB(X509_STORE_CTX_get_lookup_crls, X509_STORE_CTX_lookup_crls_fn);
LIBSTUB(X509_STORE_CTX_get_cleanup, X509_STORE_CTX_cleanup_fn);
LIBSTUB(X509_STORE_CTX_set_error_depth, void);
LIBSTUB(X509_STORE_CTX_set_current_cert, void);
LIBSTUB(NAME_CONSTRAINTS_check_CN, int);
LIBSTUB(X509_set_proxy_flag, void);
LIBSTUB(X509_set_proxy_pathlen, void);
LIBSTUB(X509_get_proxy_pathlen, long);
LIBSTUB(ASIdentifierChoice_new, ASIdentifierChoice *);
LIBSTUB(ASIdentifierChoice_free, void);
LIBSTUB(d2i_ASIdentifierChoice, ASIdentifierChoice *);
LIBSTUB(i2d_ASIdentifierChoice, int);
LIBSTUB(ASIdentifierChoice_it, const ASN1_ITEM *);
LIBSTUB(ASIdentifiers_new, ASIdentifiers *);
LIBSTUB(ASIdentifiers_free, void);
LIBSTUB(d2i_ASIdentifiers, ASIdentifiers *);
LIBSTUB(i2d_ASIdentifiers, int);
LIBSTUB(ASIdentifiers_it, const ASN1_ITEM *);
LIBSTUB(ASIdOrRange_new, ASIdOrRange *);
LIBSTUB(ASIdOrRange_free, void);
LIBSTUB(d2i_ASIdOrRange, ASIdOrRange *);
LIBSTUB(i2d_ASIdOrRange, int);
LIBSTUB(ASIdOrRange_it, const ASN1_ITEM *);
LIBSTUB(ASRange_new, ASRange *);
LIBSTUB(ASRange_free, void);
LIBSTUB(d2i_ASRange, ASRange *);
LIBSTUB(i2d_ASRange, int);
LIBSTUB(ASRange_it, const ASN1_ITEM *);
LIBSTUB(IPAddressChoice_new, IPAddressChoice *);
LIBSTUB(IPAddressChoice_free, void);
LIBSTUB(d2i_IPAddressChoice, IPAddressChoice *);
LIBSTUB(i2d_IPAddressChoice, int);
LIBSTUB(IPAddressChoice_it, const ASN1_ITEM *);
LIBSTUB(IPAddressFamily_new, IPAddressFamily *);
LIBSTUB(IPAddressFamily_free, void);
LIBSTUB(d2i_IPAddressFamily, IPAddressFamily *);
LIBSTUB(i2d_IPAddressFamily, int);
LIBSTUB(IPAddressFamily_it, const ASN1_ITEM *);
LIBSTUB(IPAddressOrRange_new, IPAddressOrRange *);
LIBSTUB(IPAddressOrRange_free, void);
LIBSTUB(d2i_IPAddressOrRange, IPAddressOrRange *);
LIBSTUB(i2d_IPAddressOrRange, int);
LIBSTUB(IPAddressOrRange_it, const ASN1_ITEM *);
LIBSTUB(ASN1_STRING_get0_data, const unsigned char *);
LIBSTUB(X509_get0_notBefore, const ASN1_TIME *);
LIBSTUB(X509_get0_notAfter, const ASN1_TIME *);
LIBSTUB(X509_CRL_get0_lastUpdate, const ASN1_TIME *);
LIBSTUB(X509_CRL_get0_nextUpdate, const ASN1_TIME *);
LIBSTUB(OPENSSL_uni2utf8, char *);
LIBSTUB(CT_POLICY_EVAL_CTX_set_shared_CTLOG_STORE, void);
LIBSTUB(CT_POLICY_EVAL_CTX_set1_cert, int);
LIBSTUB(CT_POLICY_EVAL_CTX_set1_issuer, int);
LIBSTUB(ECPARAMETERS_new, ECPARAMETERS *);
LIBSTUB(ECPARAMETERS_free, void);
LIBSTUB(BIO_get_new_index, int);
LIBSTUB(EVP_PKEY_set1_encoded_public_key, int);
LIBSTUB(EVP_PKEY_get1_encoded_public_key, size_t);
LIBSTUB(OCSP_RESPID_set_by_name, int);
LIBSTUB(OCSP_RESPID_set_by_key, int);
LIBSTUB(OCSP_RESPID_match, int);
LIBSTUB(PKCS12_add_friendlyname_utf8, int);
LIBSTUB(PKCS12_key_gen_utf8, int);
LIBSTUB(OPENSSL_utf82uni, unsigned char *);
LIBSTUB(SSL_SESSION_get0_cipher, const SSL_CIPHER *);
LIBSTUB(SSL_SESSION_set1_id, int);
LIBSTUB(SSL_SESSION_get0_id_context, const unsigned char *);
LIBSTUB(TS_STATUS_INFO_get0_text, const STACK_OF(ASN1_UTF8STRING) *);
LIBSTUB(X509_SIG_getm, void);
LIBSTUB(X509_get0_serialNumber, const ASN1_INTEGER *);
LIBSTUB(CT_POLICY_EVAL_CTX_get_time, uint64_t);
LIBSTUB(CT_POLICY_EVAL_CTX_set_time, void);
LIBSTUB(DH_check_params, int);
LIBSTUB(SSL_COMP_get0_name, const char *);
LIBSTUB(SSL_COMP_get_id, int);
LIBSTUB(X509_VERIFY_PARAM_get_time, time_t);
LIBSTUB(X509_VERIFY_PARAM_set_inh_flags, int);
LIBSTUB(X509_VERIFY_PARAM_get_inh_flags, uint32_t);
LIBSTUB(CRYPTO_secure_clear_free, void);
LIBSTUB(EVP_PKEY_set1_engine, int);
LIBSTUB(SSL_get_client_ciphers, STACK_OF(SSL_CIPHER) *);
LIBSTUB(SSL_CIPHER_standard_name, const char *);
LIBSTUB(SSL_get0_verified_chain, STACK_OF(X509) *);
LIBSTUB(SSL_COMP_set0_compression_methods, STACK_OF(SSL_COMP) *);
LIBSTUB(SSL_CTX_set1_cert_store, void);
LIBSTUB(DTLS_get_data_mtu, size_t);
LIBSTUB(SSL_read_ex, int);
LIBSTUB(SSL_peek_ex, int);
LIBSTUB(SSL_write_ex, int);
LIBSTUB(SSL_CTX_set_keylog_callback, void);
LIBSTUB(SSL_CTX_get_keylog_callback, SSL_CTX_keylog_cb_func);
LIBSTUB(SSL_get_peer_signature_type_nid, int);
LIBSTUB(SSL_key_update, int);
LIBSTUB(SSL_get_key_update_type, int);
LIBSTUB(SSL_bytes_to_cipher_list, int);
LIBSTUB(SSL_client_hello_get0_compression_methods, size_t);
LIBSTUB(SSL_client_hello_get0_ciphers, size_t);
LIBSTUB(SSL_client_hello_get0_ext, int);
LIBSTUB(SSL_client_hello_get0_session_id, size_t);
LIBSTUB(SSL_client_hello_get0_random, size_t);
LIBSTUB(SSL_CTX_set_client_hello_cb, void);
LIBSTUB(SSL_client_hello_get0_legacy_version, unsigned int);
LIBSTUB(SSL_client_hello_isv2, int);
LIBSTUB(SSL_set_max_early_data, int);
LIBSTUB(SSL_CTX_set_max_early_data, int);
LIBSTUB(SSL_get_max_early_data, uint32_t);
LIBSTUB(SSL_CTX_get_max_early_data, uint32_t);
LIBSTUB(SSL_write_early_data, int);
LIBSTUB(SSL_read_early_data, int);
LIBSTUB(SSL_get_early_data_status, int);
LIBSTUB(SSL_SESSION_get_max_early_data, uint32_t);
LIBSTUB(SSL_add1_to_CA_list, int);
LIBSTUB(SSL_set0_CA_list, void);
LIBSTUB(SSL_CTX_set0_CA_list, void);
LIBSTUB(SSL_get0_CA_list, const STACK_OF(X509_NAME) *);
LIBSTUB(SSL_get0_peer_CA_list, const STACK_OF(X509_NAME) *);
LIBSTUB(SSL_CTX_add1_to_CA_list, int);
LIBSTUB(SSL_CTX_get0_CA_list, const STACK_OF(X509_NAME) *);
LIBSTUB(SSL_CTX_add_custom_ext, int);
LIBSTUB(SSL_SESSION_is_resumable, int);
LIBSTUB(SSL_CTX_set_record_padding_callback, void);
LIBSTUB(SSL_set_record_padding_callback, int);
LIBSTUB(SSL_CTX_set_block_padding, int);
LIBSTUB(SSL_CTX_get_record_padding_callback_arg, void *);
LIBSTUB(SSL_get_record_padding_callback_arg, void *);
LIBSTUB(SSL_set_block_padding, int);
LIBSTUB(SSL_set_record_padding_callback_arg, void);
LIBSTUB(SSL_CTX_set_record_padding_callback_arg, void);
LIBSTUB(SSL_CTX_use_serverinfo_ex, int);
LIBSTUB(SSL_client_hello_get1_extensions_present, int);
LIBSTUB(SSL_set_psk_find_session_callback, void);
LIBSTUB(SSL_set_psk_use_session_callback, void);
LIBSTUB(SSL_CTX_set_psk_use_session_callback, void);
LIBSTUB(SSL_CTX_set_psk_find_session_callback, void);
LIBSTUB(SSL_CIPHER_get_handshake_digest, const EVP_MD *);
LIBSTUB(SSL_SESSION_set1_master_key, int);
LIBSTUB(SSL_SESSION_set_cipher, int);
LIBSTUB(SSL_SESSION_set_protocol_version, int);
LIBSTUB(OPENSSL_cipher_name, const char *);
LIBSTUB(SSL_alloc_buffers, int);
LIBSTUB(SSL_free_buffers, int);
LIBSTUB(SSL_SESSION_dup, SSL_SESSION *);
LIBSTUB(SSL_get_pending_cipher, const SSL_CIPHER *);
LIBSTUB(SSL_CIPHER_get_protocol_id, uint16_t);
LIBSTUB(SSL_SESSION_set_max_early_data, int);
LIBSTUB(SSL_SESSION_set1_alpn_selected, int);
LIBSTUB(SSL_SESSION_set1_hostname, int);
LIBSTUB(SSL_SESSION_get0_alpn_selected, void);
LIBSTUB(DTLS_set_timer_cb, void);
LIBSTUB(SSL_CTX_set_tlsext_max_fragment_length, int);
LIBSTUB(SSL_set_tlsext_max_fragment_length, int);
LIBSTUB(SSL_SESSION_get_max_fragment_length, uint8_t);
LIBSTUB(SSL_stateless, int);
LIBSTUB(SSL_verify_client_post_handshake, int);
LIBSTUB(SSL_set_post_handshake_auth, void);
LIBSTUB(SSL_export_keying_material_early, int);
LIBSTUB(SSL_CTX_use_cert_and_key, int);
LIBSTUB(SSL_use_cert_and_key, int);
LIBSTUB(SSL_SESSION_get0_ticket_appdata, int);
LIBSTUB(SSL_SESSION_set1_ticket_appdata, int);
LIBSTUB(SSL_CTX_set_session_ticket_cb, int);
LIBSTUB(SSL_CTX_set_stateless_cookie_generate_cb, void);
LIBSTUB(SSL_CTX_set_stateless_cookie_verify_cb, void);
LIBSTUB(SSL_CTX_set_ciphersuites, int);
LIBSTUB(SSL_set_ciphersuites, int);
LIBSTUB(SSL_set_num_tickets, int);
LIBSTUB(SSL_CTX_get_num_tickets, size_t);
LIBSTUB(SSL_get_num_tickets, size_t);
LIBSTUB(SSL_CTX_set_num_tickets, int);
LIBSTUB(SSL_CTX_set_allow_early_data_cb, void);
LIBSTUB(SSL_set_allow_early_data_cb, void);
LIBSTUB(SSL_set_recv_max_early_data, int);
LIBSTUB(SSL_get_recv_max_early_data, uint32_t);
LIBSTUB(SSL_CTX_get_recv_max_early_data, uint32_t);
LIBSTUB(SSL_CTX_set_recv_max_early_data, int);
LIBSTUB(SSL_CTX_set_post_handshake_auth, void);
LIBSTUB(SSL_get_signature_type_nid, int);
LIBSTUB(IPAddressRange_free, void);
LIBSTUB(TLS_FEATURE_new, TLS_FEATURE *);
LIBSTUB(BIO_f_linebuffer, const BIO_METHOD *);
LIBSTUB(IPAddressRange_new, IPAddressRange *);
LIBSTUB(IPAddressRange_it, const ASN1_ITEM *);
LIBSTUB(d2i_IPAddressRange, IPAddressRange *);
LIBSTUB(TLS_FEATURE_free, void);
LIBSTUB(i2d_RSA_OAEP_PARAMS, int);
LIBSTUB(i2d_IPAddressRange, int);
LIBSTUB(X509_OBJECT_new, X509_OBJECT *);
LIBSTUB(PKCS12_get_attr, ASN1_TYPE *);
LIBSTUB(ECPKPARAMETERS_free, void);
LIBSTUB(ECPKPARAMETERS_new, ECPKPARAMETERS *);
LIBSTUB(ASN1_ITEM_lookup, const ASN1_ITEM *);
LIBSTUB(ASN1_ITEM_get, const ASN1_ITEM *);
LIBSTUB(BIO_read_ex, int);
LIBSTUB(BIO_set_callback_ex, void);
LIBSTUB(BIO_get_callback_ex, BIO_callback_fn_ex);
LIBSTUB(BIO_meth_set_read_ex, int);
LIBSTUB(BIO_meth_get_read_ex, void *);
LIBSTUB(BIO_write_ex, int);
LIBSTUB(BIO_meth_get_write_ex, void *);
LIBSTUB(BIO_meth_set_write_ex, int);
LIBSTUB(EVP_PKEY_CTX_md, int);
LIBSTUB(RSA_pkey_ctx_ctrl, int);
LIBSTUB(UI_method_set_ex_data, int);
LIBSTUB(UI_method_get_ex_data, const void *);
LIBSTUB(UI_UTIL_wrap_read_pem_callback, UI_METHOD *);
LIBSTUB(EVP_PKEY_get0_poly1305, const unsigned char *);
LIBSTUB(EVP_PKEY_get0_siphash, const unsigned char *);
LIBSTUB(EVP_aria_256_ofb, const EVP_CIPHER *);
LIBSTUB(EVP_aria_256_cfb128, const EVP_CIPHER *);
LIBSTUB(EVP_aria_128_cfb1, const EVP_CIPHER *);
LIBSTUB(EVP_aria_128_ecb, const EVP_CIPHER *);
LIBSTUB(EVP_aria_128_cfb128, const EVP_CIPHER *);
LIBSTUB(EVP_aria_192_ecb, const EVP_CIPHER *);
LIBSTUB(EVP_aria_128_cbc, const EVP_CIPHER *);
LIBSTUB(EVP_aria_192_ofb, const EVP_CIPHER *);
LIBSTUB(EVP_aria_192_cbc, const EVP_CIPHER *);
LIBSTUB(EVP_aria_192_cfb1, const EVP_CIPHER *);
LIBSTUB(EVP_aria_128_cfb8, const EVP_CIPHER *);
LIBSTUB(EVP_aria_256_cfb1, const EVP_CIPHER *);
LIBSTUB(EVP_aria_192_cfb8, const EVP_CIPHER *);
LIBSTUB(EVP_aria_256_cfb8, const EVP_CIPHER *);
LIBSTUB(EVP_aria_256_cbc, const EVP_CIPHER *);
LIBSTUB(EVP_aria_128_ofb, const EVP_CIPHER *);
LIBSTUB(EVP_aria_192_cfb128, const EVP_CIPHER *);
LIBSTUB(EVP_aria_256_ecb, const EVP_CIPHER *);
LIBSTUB(EVP_aria_256_ctr, const EVP_CIPHER *);
LIBSTUB(EVP_aria_128_ctr, const EVP_CIPHER *);
LIBSTUB(EVP_aria_192_ctr, const EVP_CIPHER *);
LIBSTUB(UI_null, const UI_METHOD *);
LIBSTUB(EC_KEY_get0_engine, ENGINE *);
LIBSTUB(INT32_it, const ASN1_ITEM *);
LIBSTUB(UINT64_it, const ASN1_ITEM *);
LIBSTUB(ZINT32_it, const ASN1_ITEM *);
LIBSTUB(ZUINT64_it, const ASN1_ITEM *);
LIBSTUB(INT64_it, const ASN1_ITEM *);
LIBSTUB(ZUINT32_it, const ASN1_ITEM *);
LIBSTUB(UINT32_it, const ASN1_ITEM *);
LIBSTUB(ZINT64_it, const ASN1_ITEM *);
LIBSTUB(BIO_lookup_ex, int);
LIBSTUB(X509_CRL_print_ex, int);
LIBSTUB(X509_SIG_INFO_get, int);
LIBSTUB(X509_get_signature_info, int);
LIBSTUB(X509_SIG_INFO_set, void);
LIBSTUB(ESS_CERT_ID_V2_free, void);
LIBSTUB(ESS_SIGNING_CERT_V2_new, ESS_SIGNING_CERT_V2 *);
LIBSTUB(d2i_ESS_SIGNING_CERT_V2, ESS_SIGNING_CERT_V2 *);
LIBSTUB(i2d_ESS_CERT_ID_V2, int);
LIBSTUB(ESS_CERT_ID_V2_dup, ESS_CERT_ID_V2 *);
LIBSTUB(TS_RESP_CTX_set_ess_cert_id_digest, int);
LIBSTUB(d2i_ESS_CERT_ID_V2, ESS_CERT_ID_V2 *);
LIBSTUB(i2d_ESS_SIGNING_CERT_V2, int);
LIBSTUB(TS_CONF_set_ess_cert_id_digest, int);
LIBSTUB(ESS_SIGNING_CERT_V2_free, void);
LIBSTUB(ESS_SIGNING_CERT_V2_dup, ESS_SIGNING_CERT_V2 *);
LIBSTUB(ESS_CERT_ID_V2_new, ESS_CERT_ID_V2 *);
LIBSTUB(PEM_read_bio_ex, int);
LIBSTUB(PEM_bytes_read_bio_secmem, int);
LIBSTUB(EVP_DigestSign, int);
LIBSTUB(EVP_DigestVerify, int);
LIBSTUB(UI_method_get_data_duplicator, void *);
LIBSTUB(UI_method_set_data_duplicator, int);
LIBSTUB(UI_dup_user_data, int);
LIBSTUB(UI_method_get_data_destructor, void *);
LIBSTUB(ERR_load_strings_const, int);
LIBSTUB(ASN1_TIME_to_tm, int);
LIBSTUB(ASN1_TIME_set_string_X509, int);
LIBSTUB(OCSP_resp_get1_id, int);
LIBSTUB(OSSL_STORE_register_loader, int);
LIBSTUB(OSSL_STORE_LOADER_set_error, int);
LIBSTUB(OSSL_STORE_INFO_get0_PKEY, EVP_PKEY *);
LIBSTUB(OSSL_STORE_INFO_get_type, int);
LIBSTUB(ERR_load_OSSL_STORE_strings, int);
LIBSTUB(OSSL_STORE_LOADER_free, void);
LIBSTUB(OSSL_STORE_INFO_get1_PKEY, EVP_PKEY *);
LIBSTUB(OSSL_STORE_INFO_free, void);
LIBSTUB(OSSL_STORE_LOADER_set_eof, int);
LIBSTUB(OSSL_STORE_LOADER_new, OSSL_STORE_LOADER *);
LIBSTUB(OSSL_STORE_INFO_get0_CERT, X509 *);
LIBSTUB(OSSL_STORE_LOADER_set_close, int);
LIBSTUB(OSSL_STORE_INFO_new_PARAMS, OSSL_STORE_INFO *);
LIBSTUB(OSSL_STORE_INFO_new_PKEY, OSSL_STORE_INFO *);
LIBSTUB(OSSL_STORE_INFO_get1_PARAMS, EVP_PKEY *);
LIBSTUB(OSSL_STORE_INFO_get1_CRL, X509_CRL *);
LIBSTUB(OSSL_STORE_error, int);
LIBSTUB(OSSL_STORE_INFO_get1_CERT, X509 *);
LIBSTUB(OSSL_STORE_INFO_get0_PARAMS, EVP_PKEY *);
LIBSTUB(OSSL_STORE_INFO_type_string, const char *);
LIBSTUB(OSSL_STORE_INFO_get1_NAME, char *);
LIBSTUB(OSSL_STORE_LOADER_set_load, int);
LIBSTUB(OSSL_STORE_LOADER_get0_scheme, const char *);
LIBSTUB(OSSL_STORE_open, OSSL_STORE_CTX *);
LIBSTUB(OSSL_STORE_close, int);
LIBSTUB(OSSL_STORE_INFO_new_CERT, OSSL_STORE_INFO *);
LIBSTUB(OSSL_STORE_INFO_get0_CRL, X509_CRL *);
LIBSTUB(OSSL_STORE_load, OSSL_STORE_INFO *);
LIBSTUB(OSSL_STORE_INFO_get0_NAME, const char *);
LIBSTUB(OSSL_STORE_unregister_loader, OSSL_STORE_LOADER *);
LIBSTUB(OSSL_STORE_INFO_new_CRL, OSSL_STORE_INFO *);
LIBSTUB(OSSL_STORE_INFO_new_NAME, OSSL_STORE_INFO *);
LIBSTUB(OSSL_STORE_eof, int);
LIBSTUB(OSSL_STORE_LOADER_set_open, int);
LIBSTUB(OSSL_STORE_LOADER_set_ctrl, int);
LIBSTUB(OSSL_STORE_vctrl, int);
LIBSTUB(OSSL_STORE_INFO_get0_NAME_description, const char *);
LIBSTUB(OSSL_STORE_INFO_set0_NAME_description, int);
LIBSTUB(OSSL_STORE_INFO_get1_NAME_description, char *);
LIBSTUB(OSSL_STORE_do_all_loaders, int);
LIBSTUB(OSSL_STORE_LOADER_get0_engine, const ENGINE *);
LIBSTUB(EVP_sha3_224, const EVP_MD *);
LIBSTUB(EVP_sha3_256, const EVP_MD *);
LIBSTUB(EVP_sha3_384, const EVP_MD *);
LIBSTUB(EVP_sha3_512, const EVP_MD *);
LIBSTUB(EVP_shake128, const EVP_MD *);
LIBSTUB(EVP_shake256, const EVP_MD *);
LIBSTUB(SCRYPT_PARAMS_new, SCRYPT_PARAMS *);
LIBSTUB(SCRYPT_PARAMS_free, void);
LIBSTUB(i2d_SCRYPT_PARAMS, int);
LIBSTUB(d2i_SCRYPT_PARAMS, SCRYPT_PARAMS *);
LIBSTUB(SCRYPT_PARAMS_it, const ASN1_ITEM *);
LIBSTUB(EVP_PKEY_meth_get0, const EVP_PKEY_METHOD *);
LIBSTUB(EVP_PKEY_meth_get_count, size_t);
LIBSTUB(RAND_priv_bytes, int);
LIBSTUB(BN_priv_rand, int);
LIBSTUB(BN_priv_rand_range, int);
LIBSTUB(ASN1_TIME_normalize, int);
LIBSTUB(ASN1_TIME_cmp_time_t, int);
LIBSTUB(ASN1_TIME_compare, int);
LIBSTUB(EVP_PKEY_CTX_ctrl_uint64, int);
LIBSTUB(EVP_DigestFinalXOF, int);
LIBSTUB(ERR_clear_last_mark, int);
LIBSTUB(EVP_aria_192_ccm, const EVP_CIPHER *);
LIBSTUB(EVP_aria_256_gcm, const EVP_CIPHER *);
LIBSTUB(EVP_aria_256_ccm, const EVP_CIPHER *);
LIBSTUB(EVP_aria_128_gcm, const EVP_CIPHER *);
LIBSTUB(EVP_aria_128_ccm, const EVP_CIPHER *);
LIBSTUB(EVP_aria_192_gcm, const EVP_CIPHER *);
LIBSTUB(UI_get_result_length, int);
LIBSTUB(UI_set_result_ex, int);
LIBSTUB(UI_get_result_string_length, int);
LIBSTUB(EVP_PKEY_check, int);
LIBSTUB(EVP_PKEY_meth_set_check, void);
LIBSTUB(EVP_PKEY_meth_get_check, void);
LIBSTUB(EVP_PKEY_meth_remove, int);
LIBSTUB(OPENSSL_sk_reserve, int);
LIBSTUB(DH_new_by_nid, DH *);
LIBSTUB(DH_get_nid, int);
LIBSTUB(OPENSSL_sk_new_reserve, OPENSSL_STACK *);
LIBSTUB(EVP_PKEY_asn1_set_check, void);
LIBSTUB(EVP_PKEY_asn1_set_siginf, void);
LIBSTUB(EVP_sm4_ctr, const EVP_CIPHER *);
LIBSTUB(EVP_sm4_cbc, const EVP_CIPHER *);
LIBSTUB(EVP_sm4_ofb, const EVP_CIPHER *);
LIBSTUB(EVP_sm4_ecb, const EVP_CIPHER *);
LIBSTUB(EVP_sm4_cfb128, const EVP_CIPHER *);
LIBSTUB(EVP_sm3, const EVP_MD *);
LIBSTUB(RSA_get0_multi_prime_factors, int);
LIBSTUB(EVP_PKEY_public_check, int);
LIBSTUB(EVP_PKEY_param_check, int);
LIBSTUB(EVP_PKEY_meth_set_public_check, void);
LIBSTUB(EVP_PKEY_meth_set_param_check, void);
LIBSTUB(EVP_PKEY_meth_get_public_check, void);
LIBSTUB(EVP_PKEY_meth_get_param_check, void);
LIBSTUB(EVP_PKEY_asn1_set_public_check, void);
LIBSTUB(EVP_PKEY_asn1_set_param_check, void);
LIBSTUB(DH_check_ex, int);
LIBSTUB(DH_check_pub_key_ex, int);
LIBSTUB(DH_check_params_ex, int);
LIBSTUB(RSA_generate_multi_prime_key, int);
LIBSTUB(RSA_get_multi_prime_extra_count, int);
LIBSTUB(OCSP_resp_get0_signer, int);
LIBSTUB(RSA_get0_multi_prime_crt_params, int);
LIBSTUB(RSA_set0_multi_prime_params, int);
LIBSTUB(RSA_get_version, int);
LIBSTUB(RSA_meth_get_multi_prime_keygen, void *);
LIBSTUB(RSA_meth_set_multi_prime_keygen, int);
LIBSTUB(PROFESSION_INFO_get0_addProfessionInfo, const ASN1_OCTET_STRING *);
LIBSTUB(ADMISSION_SYNTAX_free, void);
LIBSTUB(d2i_ADMISSION_SYNTAX, ADMISSION_SYNTAX *);
LIBSTUB(NAMING_AUTHORITY_set0_authorityId, void);
LIBSTUB(NAMING_AUTHORITY_set0_authorityURL, void);
LIBSTUB(d2i_PROFESSION_INFO, PROFESSION_INFO *);
LIBSTUB(NAMING_AUTHORITY_it, const ASN1_ITEM *);
LIBSTUB(ADMISSION_SYNTAX_get0_contentsOfAdmissions, const STACK_OF(ADMISSIONS) *);
LIBSTUB(PROFESSION_INFO_set0_professionItems, void);
LIBSTUB(NAMING_AUTHORITY_new, NAMING_AUTHORITY *);
LIBSTUB(NAMING_AUTHORITY_get0_authorityURL, const ASN1_IA5STRING *);
LIBSTUB(ADMISSION_SYNTAX_get0_admissionAuthority, const GENERAL_NAME *);
LIBSTUB(PROFESSION_INFO_new, PROFESSION_INFO *);
LIBSTUB(ADMISSIONS_new, ADMISSIONS *);
LIBSTUB(ADMISSION_SYNTAX_set0_admissionAuthority, void);
LIBSTUB(PROFESSION_INFO_get0_professionOIDs, const STACK_OF(ASN1_OBJECT) *);
LIBSTUB(PROFESSION_INFO_it, const ASN1_ITEM *);
LIBSTUB(i2d_PROFESSION_INFO, int);
LIBSTUB(ADMISSIONS_set0_professionInfos, void);
LIBSTUB(PROFESSION_INFO_get0_namingAuthority, const NAMING_AUTHORITY *);
LIBSTUB(PROFESSION_INFO_free, void);
LIBSTUB(PROFESSION_INFO_set0_addProfessionInfo, void);
LIBSTUB(PROFESSION_INFO_set0_registrationNumber, void);
LIBSTUB(ADMISSION_SYNTAX_set0_contentsOfAdmissions, void);
LIBSTUB(NAMING_AUTHORITY_get0_authorityId, const ASN1_OBJECT *);
LIBSTUB(ADMISSION_SYNTAX_it, const ASN1_ITEM *);
LIBSTUB(i2d_ADMISSION_SYNTAX, int);
LIBSTUB(NAMING_AUTHORITY_get0_authorityText, const ASN1_STRING *);
LIBSTUB(PROFESSION_INFO_set0_namingAuthority, void);
LIBSTUB(i2d_NAMING_AUTHORITY, int);
LIBSTUB(NAMING_AUTHORITY_free, void);
LIBSTUB(ADMISSIONS_set0_admissionAuthority, void);
LIBSTUB(ADMISSIONS_free, void);
LIBSTUB(PROFESSION_INFO_get0_registrationNumber, const ASN1_PRINTABLESTRING *);
LIBSTUB(d2i_ADMISSIONS, ADMISSIONS *);
LIBSTUB(i2d_ADMISSIONS, int);
LIBSTUB(PROFESSION_INFO_get0_professionItems, const STACK_OF(ASN1_STRING) *);
LIBSTUB(ADMISSIONS_get0_admissionAuthority, const GENERAL_NAME *);
LIBSTUB(PROFESSION_INFO_set0_professionOIDs, void);
LIBSTUB(d2i_NAMING_AUTHORITY, NAMING_AUTHORITY *);
LIBSTUB(ADMISSIONS_it, const ASN1_ITEM *);
LIBSTUB(ADMISSIONS_get0_namingAuthority, const NAMING_AUTHORITY *);
LIBSTUB(NAMING_AUTHORITY_set0_authorityText, void);
LIBSTUB(ADMISSIONS_set0_namingAuthority, void);
LIBSTUB(ADMISSIONS_get0_professionInfos, const PROFESSION_INFOS *);
LIBSTUB(ADMISSION_SYNTAX_new, ADMISSION_SYNTAX *);
LIBSTUB(EVP_sha512_256, const EVP_MD *);
LIBSTUB(EVP_sha512_224, const EVP_MD *);
LIBSTUB(OCSP_basic_sign_ctx, int);
LIBSTUB(OSSL_STORE_SEARCH_by_alias, OSSL_STORE_SEARCH *);
LIBSTUB(BIO_bind, int);
LIBSTUB(OSSL_STORE_LOADER_set_expect, int);
LIBSTUB(OSSL_STORE_expect, int);
LIBSTUB(OSSL_STORE_SEARCH_by_key_fingerprint, OSSL_STORE_SEARCH *);
LIBSTUB(OSSL_STORE_SEARCH_get0_serial, const ASN1_INTEGER *);
LIBSTUB(OSSL_STORE_SEARCH_by_name, OSSL_STORE_SEARCH *);
LIBSTUB(OSSL_STORE_supports_search, int);
LIBSTUB(OSSL_STORE_find, int);
LIBSTUB(OSSL_STORE_SEARCH_get_type, int);
LIBSTUB(OSSL_STORE_SEARCH_get0_bytes, const unsigned char *);
LIBSTUB(OSSL_STORE_SEARCH_get0_string, const char *);
LIBSTUB(OSSL_STORE_SEARCH_by_issuer_serial, OSSL_STORE_SEARCH *);
LIBSTUB(OSSL_STORE_SEARCH_get0_name, X509_NAME *);
LIBSTUB(X509_get0_authority_key_id, const ASN1_OCTET_STRING *);
LIBSTUB(OSSL_STORE_LOADER_set_find, int);
LIBSTUB(OSSL_STORE_SEARCH_free, void);
LIBSTUB(OSSL_STORE_SEARCH_get0_digest, const EVP_MD *);
LIBSTUB(EVP_PKEY_new_raw_private_key, EVP_PKEY *);
LIBSTUB(EVP_PKEY_new_raw_public_key, EVP_PKEY *);
LIBSTUB(EVP_PKEY_new_CMAC_key, EVP_PKEY *);
LIBSTUB(EVP_PKEY_asn1_set_set_priv_key, void);
LIBSTUB(EVP_PKEY_asn1_set_set_pub_key, void);
LIBSTUB(X509_VERIFY_PARAM_get_hostflags, unsigned int);
LIBSTUB(DH_get0_p, const BIGNUM *);
LIBSTUB(DH_get0_q, const BIGNUM *);
LIBSTUB(DH_get0_g, const BIGNUM *);
LIBSTUB(DH_get0_priv_key, const BIGNUM *);
LIBSTUB(DH_get0_pub_key, const BIGNUM *);
LIBSTUB(DSA_get0_priv_key, const BIGNUM *);
LIBSTUB(DSA_get0_pub_key, const BIGNUM *);
LIBSTUB(DSA_get0_q, const BIGNUM *);
LIBSTUB(DSA_get0_p, const BIGNUM *);
LIBSTUB(DSA_get0_g, const BIGNUM *);
LIBSTUB(RSA_get0_dmp1, const BIGNUM *);
LIBSTUB(RSA_get0_d, const BIGNUM *);
LIBSTUB(RSA_get0_n, const BIGNUM *);
LIBSTUB(RSA_get0_dmq1, const BIGNUM *);
LIBSTUB(RSA_get0_e, const BIGNUM *);
LIBSTUB(RSA_get0_q, const BIGNUM *);
LIBSTUB(RSA_get0_p, const BIGNUM *);
LIBSTUB(RSA_get0_iqmp, const BIGNUM *);
LIBSTUB(ECDSA_SIG_get0_r, const BIGNUM *);
LIBSTUB(ECDSA_SIG_get0_s, const BIGNUM *);
LIBSTUB(X509_LOOKUP_meth_get_get_by_fingerprint, X509_LOOKUP_get_by_fingerprint_fn);
LIBSTUB(X509_LOOKUP_meth_new, X509_LOOKUP_METHOD *);
LIBSTUB(X509_LOOKUP_meth_get_init, void *);
LIBSTUB(X509_LOOKUP_meth_get_get_by_alias, X509_LOOKUP_get_by_alias_fn);
LIBSTUB(X509_LOOKUP_meth_set_new_item, int);
LIBSTUB(X509_LOOKUP_meth_set_shutdown, int);
LIBSTUB(X509_LOOKUP_meth_get_new_item, void *);
LIBSTUB(X509_LOOKUP_meth_set_ctrl, int);
LIBSTUB(X509_LOOKUP_meth_set_get_by_issuer_serial, int);
LIBSTUB(X509_LOOKUP_get_store, X509_STORE *);
LIBSTUB(X509_LOOKUP_meth_get_ctrl, X509_LOOKUP_ctrl_fn);
LIBSTUB(X509_LOOKUP_meth_set_get_by_alias, int);
LIBSTUB(X509_LOOKUP_meth_get_get_by_subject, X509_LOOKUP_get_by_subject_fn);
LIBSTUB(X509_LOOKUP_meth_get_free, void *);
LIBSTUB(X509_LOOKUP_meth_set_get_by_subject, int);
LIBSTUB(X509_LOOKUP_meth_set_free, int);
LIBSTUB(X509_LOOKUP_meth_get_shutdown, void *);
LIBSTUB(X509_LOOKUP_set_method_data, int);
LIBSTUB(X509_LOOKUP_get_method_data, void *);
LIBSTUB(X509_LOOKUP_meth_set_get_by_fingerprint, int);
LIBSTUB(X509_LOOKUP_meth_free, void);
LIBSTUB(X509_OBJECT_set1_X509, int);
LIBSTUB(X509_LOOKUP_meth_get_get_by_issuer_serial, X509_LOOKUP_get_by_issuer_serial_fn);
LIBSTUB(X509_LOOKUP_meth_set_init, int);
LIBSTUB(X509_OBJECT_set1_X509_CRL, int);
LIBSTUB(EVP_PKEY_get_raw_public_key, int);
LIBSTUB(EVP_PKEY_get_raw_private_key, int);
LIBSTUB(EVP_PKEY_asn1_set_get_priv_key, void);
LIBSTUB(EVP_PKEY_asn1_set_get_pub_key, void);
LIBSTUB(RAND_keep_random_devices_open, void);
LIBSTUB(EC_POINT_set_compressed_coordinates, int);
LIBSTUB(EC_POINT_set_affine_coordinates, int);
LIBSTUB(EC_POINT_get_affine_coordinates, int);
LIBSTUB(EC_GROUP_set_curve, int);
LIBSTUB(EC_GROUP_get_curve, int);
LIBSTUB(OCSP_resp_get0_tbs_sigalg, const X509_ALGOR *);
LIBSTUB(OCSP_resp_get0_respdata, const OCSP_RESPDATA *);
LIBSTUB(EVP_MD_CTX_set_pkey_ctx, void);
LIBSTUB(EVP_PKEY_meth_set_digest_custom, void);
LIBSTUB(EVP_PKEY_meth_get_digest_custom, void);
LIBSTUB(OPENSSL_DIR_read, const char *);
LIBSTUB(OPENSSL_DIR_end, int);
LIBSTUB(EVP_PKEY_get0_engine, ENGINE *);
LIBSTUB(X509_get0_authority_serial, const ASN1_INTEGER *);
LIBSTUB(X509_get0_authority_issuer, const GENERAL_NAMES *);
LIBSTUB(EVP_PKEY_meth_set_digestsign, void);
LIBSTUB(EVP_PKEY_meth_set_digestverify, void);
LIBSTUB(EVP_PKEY_meth_get_digestverify, void);
LIBSTUB(EVP_PKEY_meth_get_digestsign, void);
LIBSTUB(RSA_get0_pss_params, const RSA_PSS_PARAMS *);
LIBSTUB(X509_ALGOR_copy, int);
LIBSTUB(X509_REQ_set0_signature, void);
LIBSTUB(X509_REQ_set1_signature_algo, int);
LIBSTUB(EC_KEY_decoded_from_explicit_params, int);
LIBSTUB(RSA_X931_derive_ex_amiga_1, int);
LIBSTUB(RSA_X931_derive_ex_amiga_2, void *);
LIBSTUB(SSL_CTX_set_async_callback, int);
LIBSTUB(SSL_CTX_set_async_callback_arg, int);
LIBSTUB(SSL_set_async_callback, int);
LIBSTUB(SSL_set_async_callback_arg, int);
LIBSTUB(SSL_get_async_status, int);
LIBSTUB(SSL_sendfile, int);
LIBSTUB(OSSL_default_cipher_list, const char *);
LIBSTUB(OSSL_default_ciphersuites, const char *);
LIBSTUB(SSL_add_store_cert_subjects_to_stack, int);
LIBSTUB(SSL_CTX_set_default_verify_store, int);
LIBSTUB(SSL_CTX_load_verify_file, int);
LIBSTUB(SSL_CTX_load_verify_dir, int);
LIBSTUB(SSL_CTX_load_verify_store, int);
LIBSTUB(SSL_CTX_set_tlsext_ticket_key_evp_cb, int);
LIBSTUB(SSL_CTX_new_ex, SSL_CTX *);
LIBSTUB(SSL_new_session_ticket, int);
LIBSTUB(SSL_get0_peer_certificate, X509 *);
LIBSTUB(SSL_load_client_CA_file_ex, STACK_OF(X509_NAME) *);
LIBSTUB(SSL_set0_tmp_dh_pkey, int);
LIBSTUB(SSL_CTX_set0_tmp_dh_pkey, int);
LIBSTUB(SSL_group_to_name, const char *);
LIBSTUB(X509_CRL_load_http, X509_CRL *);
LIBSTUB(OSSL_HTTP_parse_url, int);
LIBSTUB(OSSL_HTTP_REQ_CTX_exchange, BIO *);
LIBSTUB(OSSL_HTTP_REQ_CTX_new, OSSL_HTTP_REQ_CTX *);
LIBSTUB(X509_load_http, X509 *);
LIBSTUB(X509_NAME_hash_ex, unsigned long);
LIBSTUB(OSSL_HTTP_REQ_CTX_set_request_line, int);
LIBSTUB(OSSL_HTTP_REQ_CTX_set1_req, int);
LIBSTUB(EVP_MAC_CTX_new, EVP_MAC_CTX *);
LIBSTUB(EVP_MAC_CTX_free, void);
LIBSTUB(EVP_MAC_CTX_dup, EVP_MAC_CTX *);
LIBSTUB(EVP_MAC_CTX_get0_mac, EVP_MAC *);
LIBSTUB(EVP_MAC_CTX_get_mac_size, size_t);
LIBSTUB(EVP_Q_mac, unsigned char *);
LIBSTUB(EVP_MAC_init, int);
LIBSTUB(EVP_MAC_update, int);
LIBSTUB(EVP_MAC_final, int);
LIBSTUB(EVP_MAC_finalXOF, int);
LIBSTUB(OSSL_EC_curve_nid2name, const char *);
LIBSTUB(EVP_PKEY_digestsign_supports_digest, int);
LIBSTUB(SRP_VBASE_add0_user, int);
LIBSTUB(SRP_user_pwd_new, SRP_user_pwd *);
LIBSTUB(SRP_user_pwd_set_gN, void);
LIBSTUB(SRP_user_pwd_set1_ids, int);
LIBSTUB(SRP_user_pwd_set0_sv, int);
LIBSTUB(OPENSSL_version_major, unsigned int);
LIBSTUB(OPENSSL_version_minor, unsigned int);
LIBSTUB(OPENSSL_version_patch, unsigned int);
LIBSTUB(OPENSSL_version_pre_release, const char *);
LIBSTUB(OPENSSL_version_build_metadata, const char *);
LIBSTUB(ASYNC_WAIT_CTX_get_callback, int);
LIBSTUB(ASYNC_WAIT_CTX_set_callback, int);
LIBSTUB(ASYNC_WAIT_CTX_set_status, int);
LIBSTUB(ASYNC_WAIT_CTX_get_status, int);
LIBSTUB(EVP_KDF_CTX_free, void);
LIBSTUB(EVP_KDF_CTX_reset, void);
LIBSTUB(EVP_KDF_CTX_get_kdf_size, size_t);
LIBSTUB(EVP_KDF_derive, int);
LIBSTUB(EVP_KDF_get0_name, const char *);
LIBSTUB(EC_GROUP_get0_field, const BIGNUM *);
LIBSTUB(CRYPTO_alloc_ex_data, int);
LIBSTUB(OSSL_LIB_CTX_new, OSSL_LIB_CTX *);
LIBSTUB(OSSL_LIB_CTX_free, void);
LIBSTUB(OPENSSL_LH_flush, void);
LIBSTUB(BN_native2bn, BIGNUM *);
LIBSTUB(BN_bn2nativepad, int);
LIBSTUB(OSSL_trace_get_category_num, int);
LIBSTUB(OSSL_trace_get_category_name, const char *);
LIBSTUB(OSSL_trace_set_channel, int);
LIBSTUB(OSSL_trace_set_prefix, int);
LIBSTUB(OSSL_trace_set_suffix, int);
LIBSTUB(OSSL_trace_set_callback, int);

#ifdef __cplusplus
}
#endif /* __cplusplus */

#endif /* _GATEPROTO_AMISSL_H */
