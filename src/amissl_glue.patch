--- amissl_glue.c	2016-02-11 22:45:36.494679920 +0100
+++ amissl_glue.c_new	2016-02-11 22:47:21.116221958 +0100
@@ -14,33 +14,40 @@
 #undef SAVEDS
 #define SAVEDS __attribute__((baserel_restore)) __attribute__ ((noinline))
 #elif defined(__amigaos3__)
-#error insert the correct offset to let the __restore_a4 function restore the correct base relative data segment below and remove this warning
+//#error insert the correct offset to let the __restore_a4 function restore the correct base relative data segment below and remove this warning
 // restore the base relative data segment from the library base address in register a6
 // this function will be called from all non-static functions in this module if it is built with -mrestore-a4
+#include "amissl_base.h"
 static const USED_VAR unsigned short __restore_a4[] = { 0x286e, OFFSET(LibraryHeader, dataSeg), 0x4e75 }; // "move.l a6@(dataSeg:w),a4;rts"
 #endif // __amigaos3__
 #endif // BASEREL
 
 /***************************************************************************/
 
+#if 0
 void SAVEDS ASM LIB_InternalInitAmiSSL(REG(a6, UNUSED __IFACE_OR_BASE), REG(a0, void * amisslinit))
 {
 	InternalInitAmiSSL(amisslinit);
 }
+#endif
 
 // ---
 
+#if 0
 long SAVEDS ASM LIB_InitAmiSSLA(REG(a6, UNUSED __IFACE_OR_BASE), REG(a0, struct TagItem * tagList))
 {
 	return InitAmiSSLA(tagList);
 }
+#endif
 
 // ---
 
+#if 0
 long SAVEDS ASM LIB_CleanupAmiSSLA(REG(a6, UNUSED __IFACE_OR_BASE), REG(a0, struct TagItem * tagList))
 {
 	return CleanupAmiSSLA(tagList);
 }
+#endif
 
 // ---
 
